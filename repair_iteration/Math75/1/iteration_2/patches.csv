bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).getPct(this.freqTable,  v);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).getPct(this.freqTable,  v);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).getPct(this.freqTable,  v);	  ((    NaturalComparator    <?>)v).getPct(this.freqTable);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
2	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).getPct(this,  v);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).getPct(this,  v);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).getPct(this,  v);	  ((    NaturalComparator    <?>)v).getPct(this.freqTable);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
3	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).getPct(this.freqTable,  this.fig);  [CE]  cannot  find  symbol  fig  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).getPct(this.freqTable,  this.fig);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).getPct(this.freqTable,  this.fig);	  ((    NaturalComparator    <?>)v).getPct(this.freqTable);    	non-compiled	[CE]  cannot  find  symbol  fig	94	None	replace
4	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v),  true,  null);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  new  Double(v),  true,  null);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v),  true,  null);	  this.freqTable.put(v,    new    Double(v),    true);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	19	None	replace
5	[BUG]  [BUGGY]  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=?>)  {  return  getCumPct((  Comparable  <?>)v);  }	          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    >=?>)    {    return    getCumPct((    Comparable    <?>)v);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
6	[BUG]  [BUGGY]  return  getPct((  Pair  <?>)v),  true);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Pair  <?>)v),  true);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Pair  <?>)v),  true);	  return    getPct((    Pair    <?>)v,    false);    	non-compiled	[CE]  ';'  expected	63	None	replace
7	[BUG]  [BUGGY]  return  getPct((  Pair  <?>)v,  null,  false);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Pair  <?>)v,  null,  false);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Pair  <?>)v,  null,  false);	  return    getPct((    Pair    <?>)v,    false);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
8	[BUG]  [BUGGY]  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=  null)  {  return  getCumPct((  Comparable  <?>)v);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=  null)  {  return  getCumPct((  Comparable  <?>)v);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=  null)  {  return  getCumPct((  Comparable  <?>)v);  }	          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    >>    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	11	None	replace
9	[BUG]  [BUGGY]  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=  null)  {  return  getCumPct((  Comparable  <?>)v);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=  null)  {  return  getCumPct((  Comparable  <?>)v);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=  null)  {  return  getCumPct((  Comparable  <?>)v);  }	          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    >>    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	11	None	replace
10	[BUG]  [BUGGY]  if(v  instanceof  Comparable  >=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  instanceof  Comparable  >=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  instanceof  Comparable  >=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }	          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    >>    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	11	None	replace
11	[BUG]  [BUGGY]  if(v!=  null)Return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v!=  null)Return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v!=  null)Return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }	  if(v    ==    null)Return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getPct();    }    	non-compiled	[CE]  not  a  statement	66	None	replace
12	[BUG]  [BUGGY]  this.freqTable.put(v,  getPct(v),  null,  v);  [CE]  no  suitable  method  found  for  put(Object,double,<null>,Object)  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  getPct(v),  null,  v);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  getPct(v),  null,  v);	  this.freqTable.put(v,    getPct(v),    null);    	non-compiled	[CE]  no  suitable  method  found  for  put(Object,double,<null>,Object)	32	None	replace
13	[BUG]  [BUGGY]  this.freqTable.put(v,  getPct(v),  null,  0);  [CE]  no  suitable  method  found  for  put(Object,double,<null>,int)  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  getPct(v),  null,  0);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  getPct(v),  null,  0);	  this.freqTable.put(v,    getPct(v),    null);    	non-compiled	[CE]  no  suitable  method  found  for  put(Object,double,<null>,int)	32	None	replace
14	[BUG]  [BUGGY]  if(v  instanceof  Comparable  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=  null)  {  return  getCumPct((  Comparable  <?>)  v);  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  instanceof  Comparable  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=  null)  {  return  getCumPct((  Comparable  <?>)  v);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  instanceof  Comparable  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=  null)  {  return  getCumPct((  Comparable  <?>)  v);  }	          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    >=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	70	None	replace
15	[BUG]  [BUGGY]  if(v  instanceof  Comparable  >=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  instanceof  Comparable  >=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  instanceof  Comparable  >=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <  }	          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    >=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
16	[BUG]  [BUGGY]  if(v  instanceof  Comparable  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  instanceof  Comparable  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  instanceof  Comparable  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <  }	          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    >=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
17	[BUG]  [BUGGY]  if(v!=  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v!=  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v!=  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }	  if(v    ==    null)Result.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getComparable();    }    	non-compiled	[CE]  not  a  statement	81	None	replace
18	[BUG]  [BUGGY]  ||  v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ||  v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	||  v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }	  if(v    ==    null)Result.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getComparable();    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v!=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }	  	compilable	  [FE]  AssertionFailedError  	68	1	add
20	[BUG]  [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v!=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }	  	compilable	  [FE]  AssertionFailedError  	68	1	add
21	[BUG]  [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  get  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  get  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v!=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  get	  	non-compiled	[CE]  ';'  expected	68	None	add
22	[BUG]  [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getC  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getC  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v!=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getC	  	non-compiled	[CE]  ';'  expected	68	None	add
23	[BUG]  [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getCum  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getCum  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v!=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getCum	  	non-compiled	[CE]  ';'  expected	68	None	add
24	[BUG]  [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getCumP  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getCumP  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v!=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getCumP	  	non-compiled	[CE]  ';'  expected	68	None	add
25	[BUG]  [BUGGY]  while(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  while(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	while(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }	  if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getPct();    }    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
26	[BUG]  [BUGGY]  if(!(v  instanceof  Comparable  <?>))  {  return((  Comparable  <?>)v).getPct();  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(!(v  instanceof  Comparable  <?>))  {  return((  Comparable  <?>)v).getPct();  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(!(v  instanceof  Comparable  <?>))  {  return((  Comparable  <?>)v).getPct();  }	  if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getPct();    }    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
27	[BUG]  [BUGGY]  if(v  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)  {  throw  new  IllegalStateException( " ");  }	  [Delete]    	non-compiled	[CE]  missing  return  statement	74	None	replace
28	[BUG]  [BUGGY]  if(v  ==  null)  {  for(int  i  =  0;  i  <  v.getItemCount();  i++)  {  return  getPct(i);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null)  {  for(int  i  =  0;  i  <  v.getItemCount();  i++)  {  return  getPct(i);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)  {  for(int  i  =  0;  i  <  v.getItemCount();  i++)  {  return  getPct(i);  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
29	[BUG]  [BUGGY]  if(v  ==  null)  {  for(int  i  =  0;  i  <  v.getItemCount();  i++)  {  return  getPct(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null)  {  for(int  i  =  0;  i  <  v.getItemCount();  i++)  {  return  getPct(i  +  1);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)  {  for(int  i  =  0;  i  <  v.getItemCount();  i++)  {  return  getPct(i  +  1);  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
30	[BUG]  [BUGGY]  Parchet.checkState(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  Parchet.checkState(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	Parchet.checkState(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }	  if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getComparable();    }    	non-compiled	[CE]  ';'  expected	99	None	replace
31	[BUG]  [BUGGY]  return((  Comparable  <?>)v).getComparable();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return((  Comparable  <?>)v).getComparable();  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return((  Comparable  <?>)v).getComparable();	  if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getComparable();    }    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
32	[BUG]  [BUGGY]  if(v  ==  null)Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null)Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }	  if(v    ==    null)Return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).doubleValue();    }    	non-compiled	[CE]  not  a  statement	108	None	replace
33	[BUG]  [BUGGY]  if(v!=  null)Return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v!=  null)Return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v!=  null)Return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }	  if(v    ==    null)Return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).doubleValue();    }    	non-compiled	[CE]  not  a  statement	108	None	replace
34	[BUG]  [BUGGY]  return  getPct((  SortedComparator  <?>)v,  this,  freqTable);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  SortedComparator  <?>)v,  this,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  SortedComparator  <?>)v,  this,  freqTable);	  return    getPct((    SortedComparator    <?>)v,    this);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
35	[BUG]  [BUGGY]  return  getPct((  SortedComparator  <?>)v,  this,  v);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  SortedComparator  <?>)v,  this,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  SortedComparator  <?>)v,  this,  v);	  return    getPct((    SortedComparator    <?>)v,    this);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
36	[BUG]  [BUGGY]  return  getPct((  SortedComparator  <?>)v,  this,  null);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  SortedComparator  <?>)v,  this,  null);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  SortedComparator  <?>)v,  this,  null);	  return    getPct((    SortedComparator    <?>)v,    this);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
37	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  0);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  0);	  return    getPct((    Parser    <?>)v,    v);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
38	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  Math.pow(10,  v));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  Math.pow(10,  v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  Math.pow(10,  v));	  return    getPct((    Parser    <?>)v,    v);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
39	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  v,  null);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  v,  null);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  v,  null);	  return    getPct((    Parser    <?>)v,    v);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
40	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  false);  [CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,double,boolean)  [FE]        ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  false);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  false);	  return    getPct((    Class    <?>)v,    false);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,double,boolean)	67	None	replace
41	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  null,  false);  [CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,<null>,boolean)  [FE]          ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Class  <?>)v,  null,  false);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  null,  false);	  return    getPct((    Class    <?>)v,    false);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,<null>,boolean)	67	None	replace
42	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  this.result,  false);  [CE]  cannot  find  symbol  result  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Class  <?>)v,  this.result,  false);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  this.result,  false);	  return    getPct((    Class    <?>)v,    false);    	non-compiled	[CE]  cannot  find  symbol  result	67	None	replace
43	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  this.freqTable,  null);  [CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,TreeMap<Comparable<?>,Long>,<null>)  [FE]        ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Class  <?>)v,  this.freqTable,  null);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  this.freqTable,  null);	  return    getPct((    Class    <?>)v,    null);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,TreeMap<Comparable<?>,Long>,<null>)	90	None	replace
44	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  null,  freqTable);  [CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,<null>,TreeMap<Comparable<?>,Long>)  [FE]          ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Class  <?>)v,  null,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  null,  freqTable);	  return    getPct((    Class    <?>)v,    null);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,<null>,TreeMap<Comparable<?>,Long>)	90	None	replace
45	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  this.result,  null);  [CE]  cannot  find  symbol  result  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Class  <?>)v,  this.result,  null);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  this.result,  null);	  return    getPct((    Class    <?>)v,    null);    	non-compiled	[CE]  cannot  find  symbol  result	90	None	replace
46	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  null,  v);  [CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,<null>,Object)  [FE]              ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Class  <?>)v,  null,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  null,  v);	  return    getPct((    Class    <?>)v,    null);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,<null>,Object)	90	None	replace
47	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	throw  new  IllegalArgumentException( " ");	  try    {    [Delete]    catch(NumberFormatException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	3	1	replace
48	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [FE]  IllegalArgumentException  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	throw  new  IllegalArgumentException( " ");	  try    {    [Delete]    catch(NumberFormatException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	3	1	replace
49	[BUG]  [BUGGY]  catch(NumberFormatException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  catch(NumberFormatException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	catch(NumberFormatException  e)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    [Delete]    catch(NumberFormatException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	3	None	replace
50	[BUG]  [BUGGY]  catch(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  catch(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	catch(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    [Delete]    catch(NumberFormatException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	3	None	replace
51	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(v));  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(v));  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	throw  new  IllegalArgumentException( " ".equals(v));	  try    {    [Delete]    catch(NumberFormatException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	3	None	replace
52	[BUG]  [BUGGY]  this.freqTable.put(new  Double(v),  v);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(new  Double(v),  v);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(new  Double(v),  v);	  this.freqTable.put(new    Double(v));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	97	None	replace
53	[BUG]  [BUGGY]  this.freqTable.put(new  Double(v)+  1);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(new  Double(v)+  1);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(new  Double(v)+  1);	  this.freqTable.put(new    Double(v));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	97	None	replace
54	[BUG]  [BUGGY]  this.freqTable.put(new  Double(v),  this.serialVersionUID);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(new  Double(v),  this.serialVersionUID);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(new  Double(v),  this.serialVersionUID);	  this.freqTable.put(new    Double(v));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	97	None	replace
55	[BUG]  [BUGGY]  catch(Throwable  npe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  catch(Throwable  npe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	catch(Throwable  npe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    [Delete]    catch(NullPointerException    npe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	75	None	replace
56	[BUG]  [BUGGY]  try  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  try  {  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	try  {	  try    {    [Delete]    catch(NullPointerException    npe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	75	None	replace
57	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(v.getClass()));  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(v.getClass()));  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	throw  new  IllegalArgumentException( " ".equals(v.getClass()));	  try    {    [Delete]    catch(NullPointerException    npe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	75	None	replace
58	[BUG]  [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  get  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  get  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  get	  	non-compiled	[CE]  ';'  expected	6	None	add
59	[BUG]  [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getC  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getC  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getC	  	non-compiled	[CE]  ';'  expected	6	None	add
60	[BUG]  [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getCum  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getCum  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getCum	  	non-compiled	[CE]  ';'  expected	6	None	add
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
62	[BUG]  [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
63	[BUG]  [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getCumP  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getCumP  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getCumP	  	non-compiled	[CE]  ';'  expected	6	None	add
64	[BUG]  [BUGGY]  }  [CE]  class,  interface,  or  enum  expected  [FE]    IllegalArgumentException    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	}	          if(v    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(v!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
65	[BUG]  [BUGGY]  >>  [Delete]  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  >>  [Delete]  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	>>  [Delete]	          if(v    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(v!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
66	[BUG]  [BUGGY]  {  [Delete]  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  {  [Delete]  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	{  [Delete]	          if(v    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(v!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
67	[BUG]  [BUGGY]  catch(NoClassCastException  ne)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  catch(NoClassCastException  ne)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	catch(NoClassCastException  ne)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    [Delete]    catch(NoClassCastException    ne)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	76	None	replace
68	[BUG]  [BUGGY]  catch(NoClassCastException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  catch(NoClassCastException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	catch(NoClassCastException  e)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    [Delete]    catch(NoClassCastException    ne)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	76	None	replace
69	[BUG]  [BUGGY]  if(v!=  null)Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v!=  null)Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v!=  null)Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }	  if(v    ==    null)Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getPct();    }    	non-compiled	[CE]  not  a  statement	102	None	replace
70	[BUG]  [BUGGY]  catch(NoClassDefFoundError  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  catch(NoClassDefFoundError  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	catch(NoClassDefFoundError  e)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    [Delete]    catch(NoClassDefFoundError    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	1	None	replace
71	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ", ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ", ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }	  	compilable	  [FE]  AssertionFailedError  	87	1	add
72	[BUG]  [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ", ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ", ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ", ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }	  	compilable	  [FE]  AssertionFailedError  	87	1	add
73	[BUG]  [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ", ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  if(v  ==  nu  [CE]  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ", ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  if(v  ==  nu  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ", ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  if(v  ==  nu	  	non-compiled	[CE]  	87	None	add
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v!=    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
75	[BUG]  [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v!=    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
76	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v!=    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v!=  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
77	[BUG]  [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v!=  null)  {  return  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v!=    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v!=  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
78	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v!=  null)  {  return  0.0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v!=    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v!=  null)  {  return  0.0;  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
79	[BUG]  [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v!=  null)  {  return  0.0;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v!=  null)  {  return  0.0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v!=    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v!=  null)  {  return  0.0;  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
80	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v!=    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
81	[BUG]  [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)  {  return  0;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v!=    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
82	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v),  this.freqTable);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  new  Double(v),  this.freqTable);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v),  this.freqTable);	  this.freqTable.put(v,    new    Double(v),    freqTable);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	96	None	replace
83	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v),  super.getPct(v);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  new  Double(v),  super.getPct(v);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v),  super.getPct(v);	  this.freqTable.put(v,    new    Double(v),    freqTable);    	non-compiled	[CE]  ')'  expected	96	None	replace
84	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v),  super.getPct());  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  new  Double(v),  super.getPct());  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v),  super.getPct());	  this.freqTable.put(v,    new    Double(v),    freqTable);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	96	None	replace
85	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v),  freqTable,  this.serialVersionUID);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  new  Double(v),  freqTable,  this.serialVersionUID);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v),  freqTable,  this.serialVersionUID);	  this.freqTable.put(v,    new    Double(v),    freqTable);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	96	None	replace
86	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).getPct(this);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).getPct(this);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).getPct(this);	  ((    NaturalComparator    <?>)v).getPct(null);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
87	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).getPct(null,  null);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).getPct(null,  null);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).getPct(null,  null);	  ((    NaturalComparator    <?>)v).getPct(null);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
88	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).getPct(null,  v);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).getPct(null,  v);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).getPct(null,  v);	  ((    NaturalComparator    <?>)v).getPct(null);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
89	[BUG]  [BUGGY]  this.freqTable.put(v,  getCumPct(v),  v);  [CE]  no  suitable  method  found  for  put(Object,double,Object)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  getCumPct(v),  v);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  getCumPct(v),  v);	  this.freqTable.put(v,    getCumPct(v));    	non-compiled	[CE]  no  suitable  method  found  for  put(Object,double,Object)	31	None	replace
90	[BUG]  [BUGGY]  this.freqTable.put(v,  getSerialVersionUID(v));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  getSerialVersionUID(v));  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  getSerialVersionUID(v));	  this.freqTable.put(v,    getCumPct(v));    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
91	[BUG]  [BUGGY]  while(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  while(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	while(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }	  if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).doubleValue();    }    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
92	[BUG]  [BUGGY]  return((  Comparable  <?>)v).doubleValue();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return((  Comparable  <?>)v).doubleValue();  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return((  Comparable  <?>)v).doubleValue();	  if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).doubleValue();    }    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
93	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v),  false,  null);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  new  Double(v),  false,  null);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v),  false,  null);	  this.freqTable.put(v,    new    Double(v),    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	18	None	replace
94	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v),  false,  true);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  new  Double(v),  false,  true);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v),  false,  true);	  this.freqTable.put(v,    new    Double(v),    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	18	None	replace
95	[BUG]  [BUGGY]  if(v!=  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v!=  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v!=  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }	  if(v    ==    null)Result.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).doubleValue();    }    	non-compiled	[CE]  not  a  statement	84	None	replace
96	[BUG]  [BUGGY]  if(v  ==  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=?>)  {  return((  Comparable  <?>)v).doubleValue();  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=?>)  {  return((  Comparable  <?>)v).doubleValue();  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=?>)  {  return((  Comparable  <?>)v).doubleValue();  }	  if(v    ==    null)Result.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).doubleValue();    }    	non-compiled	[CE]  not  a  statement	84	None	replace
97	[BUG]  [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new	  	non-compiled	[CE]  <identifier>  expected	12	None	add
98	[BUG]  [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  nu  [CE]  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  nu  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  nu	  	non-compiled	[CE]  	12	None	add
99	[BUG]  [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  Il  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  Il	  	non-compiled	[CE]  '('  or  '['  expected	12	None	add
100	[BUG]  [BUGGY]  return  getPct((  Pair  <?>)v,  Double.POSITIVE_INFINITY);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Pair  <?>)v,  Double.POSITIVE_INFINITY);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Pair  <?>)v,  Double.POSITIVE_INFINITY);	  return    getPct((    Pair    <?>)v,    v);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
101	[BUG]  [BUGGY]  return  getPct((  Pair  <?>)v,  0);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Pair  <?>)v,  0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Pair  <?>)v,  0);	  return    getPct((    Pair    <?>)v,    v);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
102	[BUG]  [BUGGY]  return  getPct((  Pair  <?>)v,  Double.NaN);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Pair  <?>)v,  Double.NaN);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Pair  <?>)v,  Double.NaN);	  return    getPct((    Pair    <?>)v,    v);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
103	[BUG]  [BUGGY]  return  getPct((  Pair  <?>)v,  this.freqTable);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Pair  <?>)v,  this.freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Pair  <?>)v,  this.freqTable);	  return    getPct((    Pair    <?>)v,    v);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
104	[BUG]  [BUGGY]  if(v  ==  null)  return  0.0;  if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null)  return  0.0;  if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)  return  0.0;  if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }	          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    	non-compiled	[CE]  missing  return  statement	41	None	replace
105	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v),  0,  0);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  new  Double(v),  0,  0);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v),  0,  0);	  this.freqTable.put(v,    new    Double(v),    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	20	None	replace
106	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v),  true);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v),  true);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v),  true);	  return    getPct((    Parser    <?>)v,    false);    	non-compiled	[CE]  ';'  expected	51	None	replace
107	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  null,  false);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  null,  false);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  null,  false);	  return    getPct((    Parser    <?>)v,    false);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
108	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v),  this.pct);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  new  Double(v),  this.pct);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v),  this.pct);	  this.freqTable.put(v,    new    Double(v),    v);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	86	None	replace
109	[BUG]  [BUGGY]  if(v  ==  null  ||  v!=  null)return  0.0;  if(v  ==  null)  {  return  0;  }  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null  ||  v!=  null)return  0.0;  if(v  ==  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null  ||  v!=  null)return  0.0;  if(v  ==  null)  {  return  0;  }	  if(v    ==    null    ||    v!=    null)return    0.0;    if(v!=    null)    {    return    0;    }    	non-compiled	[CE]  missing  return  statement	106	None	replace
110	[BUG]  [BUGGY]  if(v  ==  null  ||  v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null  ||  v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null  ||  v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }	  if(v    ==    null    ||    v!=    null)return    0.0;    if(v!=    null)    {    return    0;    }    	non-compiled	[CE]  missing  return  statement	106	None	replace
111	[BUG]  [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  get  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  get  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v!=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  get	  	non-compiled	[CE]  ';'  expected	9	None	add
112	[BUG]  [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getC  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getC  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v!=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getC	  	non-compiled	[CE]  ';'  expected	9	None	add
113	[BUG]  [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getCum  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getCum  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v!=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getCum	  	non-compiled	[CE]  ';'  expected	9	None	add
114	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v!=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }	  	compilable	  [FE]  AssertionFailedError  	9	1	add
115	[BUG]  [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v!=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }	  	compilable	  [FE]  AssertionFailedError  	9	1	add
116	[BUG]  [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getCumP  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getCumP  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v!=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getCumP	  	non-compiled	[CE]  ';'  expected	9	None	add
117	[BUG]  [BUGGY]  this.freqTable.put(v,  Double.POSITIVE_INFINITY);  [CE]  no  suitable  method  found  for  put(Object,double)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  Double.POSITIVE_INFINITY);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  Double.POSITIVE_INFINITY);	  this.freqTable.put(v,    p);    	non-compiled	[CE]  no  suitable  method  found  for  put(Object,double)	47	None	replace
118	[BUG]  [BUGGY]  return  getPct((  Pair  <  Object>)v,  false);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Pair  <  Object>)v,  false);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Pair  <  Object>)v,  false);	  return    getPct((    Pair    <?>)v,    true);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
119	[BUG]  [BUGGY]  return  getPct((  Pair  <?>)v),  false);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Pair  <?>)v),  false);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Pair  <?>)v),  false);	  return    getPct((    Pair    <?>)v,    true);    	non-compiled	[CE]  ';'  expected	61	None	replace
120	[BUG]  [BUGGY]  return  getPct((  SortedComparator  <?>)v,  null,  freqTable);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  SortedComparator  <?>)v,  null,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  SortedComparator  <?>)v,  null,  freqTable);	  return    getPct((    SortedComparator    <?>)v,    null);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
121	[BUG]  [BUGGY]  return  getPct((  SortedComparator  <?>)v,  this.result);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  SortedComparator  <?>)v,  this.result);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  SortedComparator  <?>)v,  this.result);	  return    getPct((    SortedComparator    <?>)v,    null);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
122	[BUG]  [BUGGY]  return  getPct((  SortedComparator  <?>)v,  this.freqTable);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  SortedComparator  <?>)v,  this.freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  SortedComparator  <?>)v,  this.freqTable);	  return    getPct((    SortedComparator    <?>)v,    null);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
123	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).getPct(freqTable,  v);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).getPct(freqTable,  v);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).getPct(freqTable,  v);	  ((    NaturalComparator    <?>)v).getPct(freqTable);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
124	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).getPct(freqTable,  null);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).getPct(freqTable,  null);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).getPct(freqTable,  null);	  ((    NaturalComparator    <?>)v).getPct(freqTable);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
125	[BUG]  [BUGGY]  return  getPct((  SortedComparator  <?>)v,  0);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  SortedComparator  <?>)v,  0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  SortedComparator  <?>)v,  0);	  return    getPct((    SortedComparator    <?>)v,    v);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
126	[BUG]  [BUGGY]  return  getPct((  SortedComparator  <?>)v,  this.v);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  SortedComparator  <?>)v,  this.v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  SortedComparator  <?>)v,  this.v);	  return    getPct((    SortedComparator    <?>)v,    v);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
127	[BUG]  [BUGGY]  return  getPct((  SortedComparator  <?>)v,  v,  null);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  SortedComparator  <?>)v,  v,  null);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  SortedComparator  <?>)v,  v,  null);	  return    getPct((    SortedComparator    <?>)v,    v);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
128	[BUG]  [BUGGY]  return  getPct((  SortedComparator  <?>)v,  v,  this.freqTable);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  SortedComparator  <?>)v,  v,  this.freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  SortedComparator  <?>)v,  v,  this.freqTable);	  return    getPct((    SortedComparator    <?>)v,    v);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
129	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  null,  true);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  null,  true);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  null,  true);	  return    getPct((    Parser    <?>)v,    true);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
130	[BUG]  [BUGGY]  return  getPct((  Parser  <  Object>)v,  false);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <  Object>)v,  false);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <  Object>)v,  false);	  return    getPct((    Parser    <?>)v,    true);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
131	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).getFrequency();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).getFrequency();  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).getFrequency();	  ((    NaturalComparator    <?>)v).getCumPct();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
132	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).getCumPct(null);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).getCumPct(null);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).getCumPct(null);	  ((    NaturalComparator    <?>)v).getCumPct();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
133	[BUG]  [BUGGY]  if(v  instanceof  Class  <?>)  {  return  getPct((  Class  <?>)v);  }  [CE]  missing  return  statement  [FE]              ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  instanceof  Class  <?>)  {  return  getPct((  Class  <?>)v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  instanceof  Class  <?>)  {  return  getPct((  Class  <?>)v);  }	  return    getPct((    Class    <?>)v);    if(v!=    null)    {    return    getPct((    Class    <?>)v);    }    	non-compiled	[CE]  missing  return  statement	56	None	replace
134	[BUG]  [BUGGY]  if(v  ==  null)  {  return  getPct((  Class  <?>)v);  }  [CE]  missing  return  statement  [FE]                ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null)  {  return  getPct((  Class  <?>)v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)  {  return  getPct((  Class  <?>)v);  }	  return    getPct((    Class    <?>)v);    if(v!=    null)    {    return    getPct((    Class    <?>)v);    }    	non-compiled	[CE]  missing  return  statement	56	None	replace
135	[BUG]  [BUGGY]  if(v!=  null)  {  return  getPct((  Class  <?>)v);  }  [CE]  missing  return  statement  [FE]                  ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v!=  null)  {  return  getPct((  Class  <?>)v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v!=  null)  {  return  getPct((  Class  <?>)v);  }	  return    getPct((    Class    <?>)v);    if(v!=    null)    {    return    getPct((    Class    <?>)v);    }    	non-compiled	[CE]  missing  return  statement	56	None	replace
136	[BUG]  [BUGGY]  return  getPct((  SortedComparator  <?>)v,  this.frequencyTable);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  SortedComparator  <?>)v,  this.frequencyTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  SortedComparator  <?>)v,  this.frequencyTable);	  return    getPct((    SortedComparator    <?>)v,    freqTable);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
137	[BUG]  [BUGGY]  return  getPct((  SortedComparator  <?>)v,  naturalComparator,  freqTable);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  SortedComparator  <?>)v,  naturalComparator,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  SortedComparator  <?>)v,  naturalComparator,  freqTable);	  return    getPct((    SortedComparator    <?>)v,    freqTable);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
138	[BUG]  [BUGGY]  return  getPct((  SortedComparator  <?>)v,  NaturalComparator.NONE);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  SortedComparator  <?>)v,  NaturalComparator.NONE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  SortedComparator  <?>)v,  NaturalComparator.NONE);	  return    getPct((    SortedComparator    <?>)v,    freqTable);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
139	[BUG]  [BUGGY]  ((  NormalComparator  <?>)v).doubleValue()  +  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NormalComparator  <?>)v).doubleValue()  +  1;  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NormalComparator  <?>)v).doubleValue()  +  1;	  ((    NormalComparator    <?>)v).doubleValue();    	non-compiled	[CE]  not  a  statement	37	None	replace
140	[BUG]  [BUGGY]  ((  StandardComparator  <?>)v).doubleValue();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  StandardComparator  <?>)v).doubleValue();  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  StandardComparator  <?>)v).doubleValue();	  ((    NormalComparator    <?>)v).doubleValue();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
141	[BUG]  [BUGGY]  getPct((  Class  <?>)v);  [CE]  missing  return  statement  [FE]        ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  getPct((  Class  <?>)v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	getPct((  Class  <?>)v);	  return    getPct((    Class    <?>)v);    getPct((    Class    <?>)v);    	non-compiled	[CE]  missing  return  statement	53	None	replace
142	[BUG]  [BUGGY]  if(v  ==  null)  {  return  getPct((  Class  <?>)v);  }  else  {  getPct((  Class  <?>)v);  }  [CE]  missing  return  statement  [FE]          ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null)  {  return  getPct((  Class  <?>)v);  }  else  {  getPct((  Class  <?>)v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)  {  return  getPct((  Class  <?>)v);  }  else  {  getPct((  Class  <?>)v);  }	  return    getPct((    Class    <?>)v);    getPct((    Class    <?>)v);    	non-compiled	[CE]  missing  return  statement	53	None	replace
143	[BUG]  [BUGGY]  if(v!=  null)  {  return  getPct((  Class  <?>)v);  }  else  {  getPct((  Class  <?>)v);  }  [CE]  missing  return  statement  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v!=  null)  {  return  getPct((  Class  <?>)v);  }  else  {  getPct((  Class  <?>)v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v!=  null)  {  return  getPct((  Class  <?>)v);  }  else  {  getPct((  Class  <?>)v);  }	  return    getPct((    Class    <?>)v);    getPct((    Class    <?>)v);    	non-compiled	[CE]  missing  return  statement	53	None	replace
144	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  instanceof  Class  <?>)  {  return  getPct((  Class  <?>)v);  }  else  {  return  getPct((  Class  <?>)v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	if(v  instanceof  Class  <?>)  {  return  getPct((  Class  <?>)v);  }  else  {  return  getPct((  Class  <?>)v);  }	  return    getPct((    Class    <?>)v);    return    getPct((    Class    <?>)v);    	compilable	  [FE]  ClassCastException  	57	1	replace
145	[BUG]  [BUGGY]  if(v  instanceof  Class  <?>)  {  return  getPct((  Class  <?>)v);  }  else  {  return  getPct((  Class  <?>)v);  }  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  instanceof  Class  <?>)  {  return  getPct((  Class  <?>)v);  }  else  {  return  getPct((  Class  <?>)v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  instanceof  Class  <?>)  {  return  getPct((  Class  <?>)v);  }  else  {  return  getPct((  Class  <?>)v);  }	  return    getPct((    Class    <?>)v);    return    getPct((    Class    <?>)v);    	compilable	  [FE]  ClassCastException  	57	1	replace
146	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                  ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  instanceof  Class  <?>)  {  return  getPct((  Class  <?>)v);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	if(v  instanceof  Class  <?>)  {  return  getPct((  Class  <?>)v);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    getPct((    Class    <?>)v);    return    getPct((    Class    <?>)v);    	compilable	  [FE]  IllegalArgumentException  	57	1	replace
147	[BUG]  [BUGGY]  if(v  instanceof  Class  <?>)  {  return  getPct((  Class  <?>)v);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]                  ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  instanceof  Class  <?>)  {  return  getPct((  Class  <?>)v);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  instanceof  Class  <?>)  {  return  getPct((  Class  <?>)v);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    getPct((    Class    <?>)v);    return    getPct((    Class    <?>)v);    	compilable	  [FE]  IllegalArgumentException  	57	1	replace
148	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null)  {  return  getPct((  Class  <?>)v);  }  else  {  return  getPct((  Class  <?>)v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	if(v  ==  null)  {  return  getPct((  Class  <?>)v);  }  else  {  return  getPct((  Class  <?>)v);  }	  return    getPct((    Class    <?>)v);    return    getPct((    Class    <?>)v);    	compilable	  [FE]  ClassCastException  	57	1	replace
149	[BUG]  [BUGGY]  if(v  ==  null)  {  return  getPct((  Class  <?>)v);  }  else  {  return  getPct((  Class  <?>)v);  }  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null)  {  return  getPct((  Class  <?>)v);  }  else  {  return  getPct((  Class  <?>)v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)  {  return  getPct((  Class  <?>)v);  }  else  {  return  getPct((  Class  <?>)v);  }	  return    getPct((    Class    <?>)v);    return    getPct((    Class    <?>)v);    	compilable	  [FE]  ClassCastException  	57	1	replace
150	[BUG]  [BUGGY]  if(v  instanceof  Class  <?>)  {  return  getPct((  Class  <?>)v);  }  else  {  return  super.getPct((  Class  <?>)v);  }  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  instanceof  Class  <?>)  {  return  getPct((  Class  <?>)v);  }  else  {  return  super.getPct((  Class  <?>)v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  instanceof  Class  <?>)  {  return  getPct((  Class  <?>)v);  }  else  {  return  super.getPct((  Class  <?>)v);  }	  return    getPct((    Class    <?>)v);    if(v    instanceof    Class    <?>)    {    return    getPct((    Class    <?>)v);    }    else    {    return    getPct((    Class    <?>)v);    }    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
151	[BUG]  [BUGGY]  ((  CharacterComparator  <?>)v).doubleValue()  +  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  CharacterComparator  <?>)v).doubleValue()  +  1;  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  CharacterComparator  <?>)v).doubleValue()  +  1;	  ((    CharacterComparator    <?>)v).doubleValue();    	non-compiled	[CE]  not  a  statement	36	None	replace
152	[BUG]  [BUGGY]  ((  CharacterComparator  <?>)v).doubleValue().doubleValue();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  CharacterComparator  <?>)v).doubleValue().doubleValue();  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  CharacterComparator  <?>)v).doubleValue().doubleValue();	  ((    CharacterComparator    <?>)v).doubleValue();    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
153	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).doubleValue()  *  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).doubleValue()  *  1;  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).doubleValue()  *  1;	  ((    NaturalComparator    <?>)v).doubleValue()    +    1;    	non-compiled	[CE]  not  a  statement	35	None	replace
154	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).doubleValue().doubleValue();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).doubleValue().doubleValue();  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).doubleValue().doubleValue();	  ((    NaturalComparator    <?>)v).doubleValue()    +    1;    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
155	[BUG]  [BUGGY]  return  getPct((  Pair  <?>)v,  this);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Pair  <?>)v,  this);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Pair  <?>)v,  this);	  return    getPct((    Pair    <?>)v,    null);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
156	[BUG]  [BUGGY]  return  getPct((  Pair  <?>)v,  null,  freqTable);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Pair  <?>)v,  null,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Pair  <?>)v,  null,  freqTable);	  return    getPct((    Pair    <?>)v,    null);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
157	[BUG]  [BUGGY]  return  getPct((  Pair  <?>)v,  this.result);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Pair  <?>)v,  this.result);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Pair  <?>)v,  this.result);	  return    getPct((    Pair    <?>)v,    null);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
158	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  freqTable);  [CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,double,TreeMap<Comparable<?>,Long>)  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  freqTable);	  return    getPct((    Class    <?>)v,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,double,TreeMap<Comparable<?>,Long>)	25	None	replace
159	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  0);  [CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,double,int)  [FE]              ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  0);	  return    getPct((    Class    <?>)v,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,double,int)	25	None	replace
160	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  v);  [CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,double,Object)  [FE]                ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  v);	  return    getPct((    Class    <?>)v,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,double,Object)	25	None	replace
161	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  double);  [CE]  '.class'  expected  [FE]                  ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  double);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  double);	  return    getPct((    Class    <?>)v,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  '.class'  expected	25	None	replace
162	[BUG]  [BUGGY]  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	catch(IOException  e)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    [Delete]    catch(NullPointerException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	91	None	replace
163	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  this.frequencyTable);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  this.frequencyTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  this.frequencyTable);	  return    getPct((    Parser    <?>)v,    freqTable);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
164	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  this.result);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  this.result);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  this.result);	  return    getPct((    Parser    <?>)v,    freqTable);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
165	[BUG]  [BUGGY]  ==  [Delete]  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ==  [Delete]  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	==  [Delete]	          if(v    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(v    ==    null)    {    throw    new    IllegalArgumentException(   ",       ");    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
166	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  null,  freqTable);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  null,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  null,  freqTable);	  return    getPct((    Parser    <?>)v,    null);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
167	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v),  null,  0);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  new  Double(v),  null,  0);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v),  null,  0);	  this.freqTable.put(v,    new    Double(v),    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	85	None	replace
168	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v),  null,  true);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  new  Double(v),  null,  true);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v),  null,  true);	  this.freqTable.put(v,    new    Double(v),    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	85	None	replace
169	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).getPct((  NaturalComparator  <?>)v);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).getPct((  NaturalComparator  <?>)v);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).getPct((  NaturalComparator  <?>)v);	  ((    NaturalComparator    <?>)v).getCumPct((    NaturalComparator    <?>)v);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
170	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).getCumPct((  NaturalComparator  <?>)v,  true);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).getCumPct((  NaturalComparator  <?>)v,  true);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).getCumPct((  NaturalComparator  <?>)v,  true);	  ((    NaturalComparator    <?>)v).getCumPct((    NaturalComparator    <?>)v);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
171	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).getCumPct((  NaturalComparator  <?>)v,  false);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).getCumPct((  NaturalComparator  <?>)v,  false);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).getCumPct((  NaturalComparator  <?>)v,  false);	  ((    NaturalComparator    <?>)v).getCumPct((    NaturalComparator    <?>)v);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
172	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  true);  [CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,double,boolean)  [FE]        ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  true);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  true);	  return    getPct((    Class    <?>)v,    true);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,double,boolean)	23	None	replace
173	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  null,  true);  [CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,<null>,boolean)  [FE]          ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Class  <?>)v,  null,  true);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  null,  true);	  return    getPct((    Class    <?>)v,    true);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,<null>,boolean)	23	None	replace
174	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  true,  freqTable);  [CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,boolean,TreeMap<Comparable<?>,Long>)  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Class  <?>)v,  true,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  true,  freqTable);	  return    getPct((    Class    <?>)v,    true);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,boolean,TreeMap<Comparable<?>,Long>)	23	None	replace
175	[BUG]  [BUGGY]  this.freqTable.put(v,  getPct());  [CE]  no  suitable  method  found  for  getPct()  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  getPct());  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  getPct());	  this.freqTable.put(v,    pct);    	non-compiled	[CE]  no  suitable  method  found  for  getPct()	77	None	replace
176	[BUG]  [BUGGY]  tryFrequency(v)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  tryFrequency(v)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	tryFrequency(v)  {  throw  new  IllegalStateException( " ");  }	  tryFrequency(v)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	4	None	replace
177	[BUG]  [BUGGY]  tryFrequency(v)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  tryFrequency(v)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	tryFrequency(v)  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  tryFrequency(v)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	4	None	replace
178	[BUG]  [BUGGY]  Parchet.checkState(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  Parchet.checkState(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	Parchet.checkState(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }	  if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    	non-compiled	[CE]  ';'  expected	39	None	replace
179	[BUG]  [BUGGY]  Parchet.checkState(v  instanceof  Comparable  <?>)  {  return  getPct((  Comparable  <?>)v);  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  Parchet.checkState(v  instanceof  Comparable  <?>)  {  return  getPct((  Comparable  <?>)v);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	Parchet.checkState(v  instanceof  Comparable  <?>)  {  return  getPct((  Comparable  <?>)v);  }	  if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    	non-compiled	[CE]  ';'  expected	39	None	replace
180	[BUG]  [BUGGY]  Parchet.checkState(v  instanceof  Comparable  <?>);  [CE]  cannot  find  symbol  Parchet  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  Parchet.checkState(v  instanceof  Comparable  <?>);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	Parchet.checkState(v  instanceof  Comparable  <?>);	  if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    	non-compiled	[CE]  cannot  find  symbol  Parchet	39	None	replace
181	[BUG]  [BUGGY]  if(v  ==  null)return  1.0;  if(v  ==  null)  {  return  0;  }  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null)return  1.0;  if(v  ==  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)return  1.0;  if(v  ==  null)  {  return  0;  }	  if(v    ==    null)return    1.0;    if(v!=    null)    {    return    0;    }    	non-compiled	[CE]  missing  return  statement	73	None	replace
182	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  this,  freqTable);  [CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,Frequency,TreeMap<Comparable<?>,Long>)  [FE]          ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Class  <?>)v,  this,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  this,  freqTable);	  return    getPct((    Class    <?>)v,    this);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,Frequency,TreeMap<Comparable<?>,Long>)	24	None	replace
183	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  null,  this);  [CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,<null>,Frequency)  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Class  <?>)v,  null,  this);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  null,  this);	  return    getPct((    Class    <?>)v,    this);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,<null>,Frequency)	24	None	replace
184	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  this,  null);  [CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,Frequency,<null>)  [FE]              ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Class  <?>)v,  this,  null);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  this,  null);	  return    getPct((    Class    <?>)v,    this);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,Frequency,<null>)	24	None	replace
185	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  this,  v);  [CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,Frequency,Object)  [FE]                ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Class  <?>)v,  this,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  this,  v);	  return    getPct((    Class    <?>)v,    this);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,Frequency,Object)	24	None	replace
186	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
187	[BUG]  [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
188	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
189	[BUG]  [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)  {  return  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
190	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)  {  return  0.0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)  {  return  0.0;  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
191	[BUG]  [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)  {  return  0.0;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)  {  return  0.0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)  {  return  0.0;  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
192	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
193	[BUG]  [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
194	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v    ==    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
195	[BUG]  [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v    ==    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
196	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v    ==    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
197	[BUG]  [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v    ==    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
198	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v    ==    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
199	[BUG]  [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)  {  return  0;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v    ==    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
200	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v    ==    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
201	[BUG]  [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)  {  return  0;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v    ==    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
202	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)  {  return  0.0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v    ==    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)  {  return  0.0;  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
203	[BUG]  [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)  {  return  0.0;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)  {  return  0.0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v    ==    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)  {  return  0.0;  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
204	[BUG]  [BUGGY]  catch(NoClassDefFoundError  ncdfe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  catch(NoClassDefFoundError  ncdfe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	catch(NoClassDefFoundError  ncdfe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    [Delete]    catch(NoClassDefFoundError    ncdfe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	2	None	replace
205	[BUG]  [BUGGY]  catch(NoClassDefFoundError  v)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  catch(NoClassDefFoundError  v)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	catch(NoClassDefFoundError  v)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    [Delete]    catch(NoClassDefFoundError    ncdfe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	2	None	replace
206	[BUG]  [BUGGY]  catch(NoClassDefFoundError  nct)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  catch(NoClassDefFoundError  nct)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	catch(NoClassDefFoundError  nct)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    [Delete]    catch(NoClassDefFoundError    ncdfe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	2	None	replace
207	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  this,  freqTable);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  this,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  this,  freqTable);	  return    getPct((    Parser    <?>)v,    this);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
208	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  this,  null);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  this,  null);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  this,  null);	  return    getPct((    Parser    <?>)v,    this);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
209	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  this,  v);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  this,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  this,  v);	  return    getPct((    Parser    <?>)v,    this);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
210	[BUG]  [BUGGY]  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    [Delete]    catch(Throwable    t)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	92	None	replace
211	[BUG]  [BUGGY]  catch(Throwable  t)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  catch(Throwable  t)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	catch(Throwable  t)  {  throw  new  IllegalStateException( " ");  }	  try    {    [Delete]    catch(Throwable    t)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	92	None	replace
212	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  this.freqTable,  this.result);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  this.freqTable,  this.result);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  this.freqTable,  this.result);	  return    getPct((    Parser    <?>)v,    this.freqTable);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
213	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  this.freqTable,  v);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  this.freqTable,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  this.freqTable,  v);	  return    getPct((    Parser    <?>)v,    this.freqTable);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
214	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  this.freqTable,  null);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  this.freqTable,  null);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  this.freqTable,  null);	  return    getPct((    Parser    <?>)v,    this.freqTable);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
215	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  this.freqTable,  this.data);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  this.freqTable,  this.data);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  this.freqTable,  this.data);	  return    getPct((    Parser    <?>)v,    this.freqTable);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
216	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).clone();  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).clone();	  ((    NaturalComparator    <?>)v).get();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	95	None	replace
217	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).set();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).set();  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).set();	  ((    NaturalComparator    <?>)v).get();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
218	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  AssertionFailedError  	16	1	add
219	[BUG]  [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  AssertionFailedError  	16	1	add
220	[BUG]  [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(v  ==  nu  [CE]  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(v  ==  nu  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(v  ==  nu	  	non-compiled	[CE]  	16	None	add
221	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  AssertionFailedError  	16	1	add
222	[BUG]  [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( ". ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  AssertionFailedError  	16	1	add
223	[BUG]  [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]    IllegalArgumentException    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  Il  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  Il	  	non-compiled	[CE]  '('  or  '['  expected	14	None	add
224	[BUG]  [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  [CE]  <identifier>  expected  [FE]      IllegalArgumentException    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new	  	non-compiled	[CE]  <identifier>  expected	14	None	add
225	[BUG]  [BUGGY]  if(v!=  null)Return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v!=  null)Return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v!=  null)Return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }	  if(v    ==    null)Return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getComparable();    }    	non-compiled	[CE]  not  a  statement	100	None	replace
226	[BUG]  [BUGGY]  if(v  ==  null)Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null)Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }	  if(v    ==    null)Return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getComparable();    }    	non-compiled	[CE]  not  a  statement	100	None	replace
227	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).floatValue()  +  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).floatValue()  +  1;  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).floatValue()  +  1;	  ((    NaturalComparator    <?>)v).floatValue();    	non-compiled	[CE]  not  a  statement	103	None	replace
228	[BUG]  [BUGGY]  this.freqTable.put(v,  getPct(v),  freqTable);  [CE]  no  suitable  method  found  for  put(Object,double,TreeMap<Comparable<?>,Long>)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  getPct(v),  freqTable);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  getPct(v),  freqTable);	  this.freqTable.put(v,    getPct(v),    v);    	non-compiled	[CE]  no  suitable  method  found  for  put(Object,double,TreeMap<Comparable<?>,Long>)	30	None	replace
229	[BUG]  [BUGGY]  this.freqTable.put(v,  getPct(v),  this.pct);  [CE]  cannot  find  symbol  pct  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  getPct(v),  this.pct);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  getPct(v),  this.pct);	  this.freqTable.put(v,    getPct(v),    v);    	non-compiled	[CE]  cannot  find  symbol  pct	30	None	replace
230	[BUG]  [BUGGY]  return  getPct((  SortedComparator  <?>)v,  false);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  SortedComparator  <?>)v,  false);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  SortedComparator  <?>)v,  false);	  return    getPct((    SortedComparator    <?>)v,    true);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
231	[BUG]  [BUGGY]  return  getPct((  SortedComparator  <?>)v,  null,  true);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  SortedComparator  <?>)v,  null,  true);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  SortedComparator  <?>)v,  null,  true);	  return    getPct((    SortedComparator    <?>)v,    true);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
232	[BUG]  [BUGGY]  return  getPct((  SortedComparator  <?>)v,  true,  v);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  SortedComparator  <?>)v,  true,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  SortedComparator  <?>)v,  true,  v);	  return    getPct((    SortedComparator    <?>)v,    true);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
233	[BUG]  [BUGGY]  this.freqTable.put(v,  null,  freqTable,  v);  [CE]  no  suitable  method  found  for  put(Object,<null>,TreeMap<Comparable<?>,Long>,Object)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  null,  freqTable,  v);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  null,  freqTable,  v);	  this.freqTable.put(v,    null,    v);    	non-compiled	[CE]  no  suitable  method  found  for  put(Object,<null>,TreeMap<Comparable<?>,Long>,Object)	5	None	replace
234	[BUG]  [BUGGY]  this.freqTable.put(v,  null,  getCumPct(v));  [CE]  no  suitable  method  found  for  put(Object,<null>,double)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  null,  getCumPct(v));  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  null,  getCumPct(v));	  this.freqTable.put(v,    null,    v);    	non-compiled	[CE]  no  suitable  method  found  for  put(Object,<null>,double)	5	None	replace
235	[BUG]  [BUGGY]  this.freqTable.put(v,  null,  getPct(v));  [CE]  no  suitable  method  found  for  put(Object,<null>,double)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  null,  getPct(v));  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  null,  getPct(v));	  this.freqTable.put(v,    null,    v);    	non-compiled	[CE]  no  suitable  method  found  for  put(Object,<null>,double)	5	None	replace
236	[BUG]  [BUGGY]  if(v!=  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v!=  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v!=  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }	  if(v    ==    null)Result.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getPct();    }    	non-compiled	[CE]  not  a  statement	65	None	replace
237	[BUG]  [BUGGY]  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0.0;  }  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0.0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0.0;  }	          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    If(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    	non-compiled	[CE]  missing  return  statement	46	None	replace
238	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  NaturalComparator  <?>)v);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	return  getPct((  NaturalComparator  <?>)v);	  [Delete]    	compilable	  [FE]  ClassCastException  	74	1	replace
239	[BUG]  [BUGGY]  return  getPct((  NaturalComparator  <?>)v);  [FE]  ClassCastException  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  NaturalComparator  <?>)v);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  NaturalComparator  <?>)v);	  [Delete]    	compilable	  [FE]  ClassCastException  	74	1	replace
240	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getCumPct((  NaturalComparator  <?>)v);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	return  getCumPct((  NaturalComparator  <?>)v);	  try    {    [Delete]    catch(NumberFormatException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ClassCastException  	3	1	replace
241	[BUG]  [BUGGY]  return  getCumPct((  NaturalComparator  <?>)v);  [FE]  ClassCastException  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getCumPct((  NaturalComparator  <?>)v);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getCumPct((  NaturalComparator  <?>)v);	  try    {    [Delete]    catch(NumberFormatException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ClassCastException  	3	1	replace
242	[BUG]  [BUGGY]  return  getCumPct((  Number  <?>)v);  [CE]  type  Number  does  not  take  parameters  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getCumPct((  Number  <?>)v);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getCumPct((  Number  <?>)v);	  try    {    [Delete]    catch(NumberFormatException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  type  Number  does  not  take  parameters	3	None	replace
243	[BUG]  [BUGGY]  return  getPct((  SortedComparator  <?>)v,  v,  freqTable);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  SortedComparator  <?>)v,  v,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  SortedComparator  <?>)v,  v,  freqTable);	  return    getPct((    SortedComparator    <?>)v,    v);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
244	[BUG]  [BUGGY]  return  getPct((  SortedComparator  <?>)v,  v,  this);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  SortedComparator  <?>)v,  v,  this);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  SortedComparator  <?>)v,  v,  this);	  return    getPct((    SortedComparator    <?>)v,    v);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
245	[BUG]  [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v!=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY	  	non-compiled	[CE]  ';'  expected	9	None	add
246	[BUG]  [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v!=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
247	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY;  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v!=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionFailedError  	9	1	add
248	[BUG]  [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY;  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v!=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionFailedError  	9	1	add
249	[BUG]  [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY;  if  [CE]  '('  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY;  if  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v!=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY;  if	  	non-compiled	[CE]  '('  expected	9	None	add
250	[BUG]  [BUGGY]  if(v  ==  null  ||  v  ==  null)return  1.0;  if(v!=  null)  {  return  0;  }  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null  ||  v  ==  null)return  1.0;  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null  ||  v  ==  null)return  1.0;  if(v!=  null)  {  return  0;  }	  if(v    ==    null    ||    v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    	non-compiled	[CE]  missing  return  statement	105	None	replace
251	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).getPct(null,  freqTable);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).getPct(null,  freqTable);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).getPct(null,  freqTable);	  ((    NaturalComparator    <?>)v).getPct(freqTable);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
252	[BUG]  [BUGGY]  if(v  ==  null)Result.PRECATED_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null)Result.PRECATED_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)Result.PRECATED_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }	  if(v    ==    null)Result.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).doubleValue();    }    	non-compiled	[CE]  not  a  statement	84	None	replace
253	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v),  true,  v);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  new  Double(v),  true,  v);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v),  true,  v);	  this.freqTable.put(v,    new    Double(v),    true);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	19	None	replace
254	[BUG]  [BUGGY]  if(v  ==  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=?>)  {  return((  Comparable  <?>)v).getComparable();  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=?>)  {  return((  Comparable  <?>)v).getComparable();  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=?>)  {  return((  Comparable  <?>)v).getComparable();  }	  if(v    ==    null)Result.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getComparable();    }    	non-compiled	[CE]  not  a  statement	81	None	replace
255	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v),  null,  v);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  new  Double(v),  null,  v);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v),  null,  v);	  this.freqTable.put(v,    new    Double(v),    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	85	None	replace
256	[BUG]  [BUGGY]  this.freqTable.put(v,  getPct(v),  new  Double(v));  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  getPct(v),  new  Double(v));  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  getPct(v),  new  Double(v));	  this.freqTable.put(v,    getPct(v),    v);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	30	None	replace
257	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).getPct(this,  null);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).getPct(this,  null);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).getPct(this,  null);	  ((    NaturalComparator    <?>)v).getPct(null);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
258	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  true,  freqTable);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  true,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  true,  freqTable);	  return    getPct((    Parser    <?>)v,    true);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
259	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  v,  freqTable);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  v,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  v,  freqTable);	  return    getPct((    Parser    <?>)v,    v);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
260	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  v,  this.freqTable);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  v,  this.freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  v,  this.freqTable);	  return    getPct((    Parser    <?>)v,    v);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
261	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v),  dataArea,  freqTable);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  new  Double(v),  dataArea,  freqTable);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v),  dataArea,  freqTable);	  this.freqTable.put(v,    new    Double(v),    freqTable);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	96	None	replace
262	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v),  freqTable,  null);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  new  Double(v),  freqTable,  null);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v),  freqTable,  null);	  this.freqTable.put(v,    new    Double(v),    freqTable);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	96	None	replace
263	[BUG]  [BUGGY]  if(!(v  instanceof  Comparable  <?>))  {  return((  Comparable  <?>)v).doubleValue();  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(!(v  instanceof  Comparable  <?>))  {  return((  Comparable  <?>)v).doubleValue();  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(!(v  instanceof  Comparable  <?>))  {  return((  Comparable  <?>)v).doubleValue();  }	  if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).doubleValue();    }    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
264	[BUG]  [BUGGY]  return  getPct((  Pair  <?>)v,  this.freqTable,  null);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Pair  <?>)v,  this.freqTable,  null);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Pair  <?>)v,  this.freqTable,  null);	  return    getPct((    Pair    <?>)v,    null);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
265	[BUG]  [BUGGY]  if(v  ==  this)return  0.0;  if(v!=  null)  {  return  0.0;  }  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  this)return  0.0;  if(v!=  null)  {  return  0.0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  this)return  0.0;  if(v!=  null)  {  return  0.0;  }	          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    If(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    	non-compiled	[CE]  missing  return  statement	46	None	replace
266	[BUG]  [BUGGY]  if(v  ==  this)return  0.0;  if(v!=  null)  {  return  0;  }  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  this)return  0.0;  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  this)return  0.0;  if(v!=  null)  {  return  0;  }	          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=    null)return    0.0;    if(v!=    null)    {    return    0;    }    	non-compiled	[CE]  missing  return  statement	43	None	replace
267	[BUG]  [BUGGY]  tryFrequency(v)  {  return  getCumPct((  NaturalComparator  <?>)v);  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  tryFrequency(v)  {  return  getCumPct((  NaturalComparator  <?>)v);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	tryFrequency(v)  {  return  getCumPct((  NaturalComparator  <?>)v);  }	  tryFrequency(v)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	4	None	replace
268	[BUG]  [BUGGY]  return  getPct((  SortedComparator  <?>)v,  this.freqTable,  null);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  SortedComparator  <?>)v,  this.freqTable,  null);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  SortedComparator  <?>)v,  this.freqTable,  null);	  return    getPct((    SortedComparator    <?>)v,    null);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
269	[BUG]  [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  If(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  If(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v!=    null)return    0.0;    if(v!=    null)    {    return    0;    }    If(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }	  	non-compiled	[CE]  ';'  expected	42	None	add
270	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0.0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v!=    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0.0;  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
271	[BUG]  [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0.0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0.0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v!=    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0.0;  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
272	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v!=    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
273	[BUG]  [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v!=    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
274	[BUG]  [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  If(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  If(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    If(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }	  	non-compiled	[CE]  ';'  expected	40	None	add
275	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
276	[BUG]  [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
277	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0.0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0.0;  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
278	[BUG]  [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0.0;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0.0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0.0;  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
279	[BUG]  [BUGGY]  if(v  instanceof  Comparable  >=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=  null)  {  return  getCumPct((  Comparable  <?>)  v);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  instanceof  Comparable  >=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=  null)  {  return  getCumPct((  Comparable  <?>)  v);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  instanceof  Comparable  >=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=  null)  {  return  getCumPct((  Comparable  <?>)  v);  }	          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    >=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	70	None	replace
280	[BUG]  [BUGGY]  if(v  instanceof  Comparable  >=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <  >>  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  instanceof  Comparable  >=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <  >>  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  instanceof  Comparable  >=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <  >>	          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    >=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
281	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).getPct(this,  freqTable);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).getPct(this,  freqTable);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).getPct(this,  freqTable);	  ((    NaturalComparator    <?>)v).getPct(this.freqTable);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
282	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).getPct(this.freqTable,  this.sourceName);  [CE]  cannot  find  symbol  sourceName  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).getPct(this.freqTable,  this.sourceName);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).getPct(this.freqTable,  this.sourceName);	  ((    NaturalComparator    <?>)v).getPct(this.freqTable);    	non-compiled	[CE]  cannot  find  symbol  sourceName	94	None	replace
283	[BUG]  [BUGGY]  return  getPct((  Pair  <?>)v,  v,  freqTable);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Pair  <?>)v,  v,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Pair  <?>)v,  v,  freqTable);	  return    getPct((    Pair    <?>)v,    v);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
284	[BUG]  [BUGGY]  return  getPct((  Pair  <?>)v,  v,  null);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Pair  <?>)v,  v,  null);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Pair  <?>)v,  v,  null);	  return    getPct((    Pair    <?>)v,    v);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
285	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  this.freqTable,  this.fig);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  this.freqTable,  this.fig);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  this.freqTable,  this.fig);	  return    getPct((    Parser    <?>)v,    this.freqTable);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
286	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  this.freqTable,  this.sourceVersion);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  this.freqTable,  this.sourceVersion);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  this.freqTable,  this.sourceVersion);	  return    getPct((    Parser    <?>)v,    this.freqTable);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
287	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  this.freqTable,  this.dataLength);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  this.freqTable,  this.dataLength);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  this.freqTable,  this.dataLength);	  return    getPct((    Parser    <?>)v,    this.freqTable);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
288	[BUG]  [BUGGY]  ((  CharacterComparator  <?>)v),  freqTable).doubleValue();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  CharacterComparator  <?>)v),  freqTable).doubleValue();  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  CharacterComparator  <?>)v),  freqTable).doubleValue();	  ((    CharacterComparator    <?>)v).doubleValue();    	non-compiled	[CE]  not  a  statement	36	None	replace
289	[BUG]  [BUGGY]  ((  CharacterComparator  <?>)v),  v.doubleValue();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  CharacterComparator  <?>)v),  v.doubleValue();  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  CharacterComparator  <?>)v),  v.doubleValue();	  ((    CharacterComparator    <?>)v).doubleValue();    	non-compiled	[CE]  not  a  statement	36	None	replace
290	[BUG]  [BUGGY]  if(v  ==  null)Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=?>)  {  return((  Comparable  <?>)v).getPct();  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null)Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=?>)  {  return((  Comparable  <?>)v).getPct();  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=?>)  {  return((  Comparable  <?>)v).getPct();  }	  if(v    ==    null)Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getPct();    }    	non-compiled	[CE]  not  a  statement	102	None	replace
291	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  FreqTable.DEFAULT);  [CE]  cannot  find  symbol  FreqTable  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  FreqTable.DEFAULT);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  FreqTable.DEFAULT);	  return    getPct((    Class    <?>)v,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  cannot  find  symbol  FreqTable	25	None	replace
292	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  FreqTable);  [CE]  cannot  find  symbol  FreqTable  [FE]              ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  FreqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  FreqTable);	  return    getPct((    Class    <?>)v,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  cannot  find  symbol  FreqTable	25	None	replace
293	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  freqTable,  this);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  freqTable,  this);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  freqTable,  this);	  return    getPct((    Parser    <?>)v,    freqTable);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
294	[BUG]  [BUGGY]  safeGetCumPct((  NaturalComparator  <?>)v);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  safeGetCumPct((  NaturalComparator  <?>)v);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	safeGetCumPct((  NaturalComparator  <?>)v);	          if(v    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(v    ==    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
295	[BUG]  [BUGGY]  safeGetCumPct(v);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  safeGetCumPct(v);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	safeGetCumPct(v);	          if(v    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(v    ==    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
296	[BUG]  [BUGGY]  safeGetCumPct(null,  v);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  safeGetCumPct(null,  v);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	safeGetCumPct(null,  v);	          if(v    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(v    ==    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
297	[BUG]  [BUGGY]  luate(v)  {  return  getCumPct((  Comparable  <?>)v);  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  luate(v)  {  return  getCumPct((  Comparable  <?>)v);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	luate(v)  {  return  getCumPct((  Comparable  <?>)v);  }	  if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    	non-compiled	[CE]  ';'  expected	39	None	replace
298	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  0);  [CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,int)  [FE]          ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Class  <?>)v,  0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  0);	  return    getPct((    Class    <?>)v);    if(v    instanceof    Class    <?>)    {    return    getPct((    Class    <?>)v);    }    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,int)	54	None	replace
299	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Object)v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	return  getPct((  Object)v);	  return    getPct((    Class    <?>)v);    if(v    instanceof    Class    <?>)    {    return    getPct((    Class    <?>)v);    }    	compilable	  [FE]  StackOverflowError  	54	1	replace
300	[BUG]  [BUGGY]  return  getPct((  Object)v);  [FE]  StackOverflowError  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Object)v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Object)v);	  return    getPct((    Class    <?>)v);    if(v    instanceof    Class    <?>)    {    return    getPct((    Class    <?>)v);    }    	compilable	  [FE]  StackOverflowError  	54	1	replace
301	[BUG]  [BUGGY]  return  getPct((  Pair  <?>)v,  false,  null);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Pair  <?>)v,  false,  null);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Pair  <?>)v,  false,  null);	  return    getPct((    Pair    <?>)v,    false);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
302	[BUG]  [BUGGY]  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getCumPct();  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getCumPct();  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getCumPct();  }	  if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getPct();    }    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
303	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
304	[BUG]  [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
305	[BUG]  [BUGGY]  if(!(v  instanceof  Comparable  <?>))  {  return((  Comparable  <?>)v).getComparable();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(!(v  instanceof  Comparable  <?>))  {  return((  Comparable  <?>)v).getComparable();  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(!(v  instanceof  Comparable  <?>))  {  return((  Comparable  <?>)v).getComparable();  }	  if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getComparable();    }    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
306	[BUG]  [BUGGY]  while(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  while(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	while(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }	  if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getComparable();    }    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
307	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v),  v.floatValue();  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v),  v.floatValue();  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v),  v.floatValue();	  ((    NaturalComparator    <?>)v).floatValue();    	non-compiled	[CE]  not  a  statement	103	None	replace
308	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v),  freqTable).floatValue();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v),  freqTable).floatValue();  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v),  freqTable).floatValue();	  ((    NaturalComparator    <?>)v).floatValue();    	non-compiled	[CE]  not  a  statement	103	None	replace
309	[BUG]  [BUGGY]  return  getCumPct((  NaturalComparator  <?>)v).doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getCumPct((  NaturalComparator  <?>)v).doubleValue();  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getCumPct((  NaturalComparator  <?>)v).doubleValue();	  try    {    [Delete]    catch(NullPointerException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  double  cannot  be  dereferenced	91	None	replace
310	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  freqTable,  this);  [CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,TreeMap<Comparable<?>,Long>,Frequency)  [FE]          ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Class  <?>)v,  freqTable,  this);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  freqTable,  this);	  return    getPct((    Class    <?>)v,    this);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,TreeMap<Comparable<?>,Long>,Frequency)	24	None	replace
311	[BUG]  [BUGGY]  (NoClassCastException  ne)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  (NoClassCastException  ne)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	(NoClassCastException  ne)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    [Delete]    catch(NoClassCastException    ne)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	76	None	replace
312	[BUG]  [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getCumPct  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getCumPct  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getCumPct	  	non-compiled	[CE]  ';'  expected	6	None	add
313	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).getCumPct((  NaturalComparator  <?>)v,  this);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).getCumPct((  NaturalComparator  <?>)v,  this);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).getCumPct((  NaturalComparator  <?>)v,  this);	  ((    NaturalComparator    <?>)v).getCumPct((    NaturalComparator    <?>)v);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
314	[BUG]  [BUGGY]  this.freqTable.put(new  Double(v),  0);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(new  Double(v),  0);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(new  Double(v),  0);	  this.freqTable.put(new    Double(v));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	97	None	replace
315	[BUG]  [BUGGY]  (NullPointerException)npe).throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  (NullPointerException)npe).throw  new  IllegalArgumentException( " ");  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	(NullPointerException)npe).throw  new  IllegalArgumentException( " ");	  try    {    [Delete]    catch(NullPointerException    npe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	75	None	replace
316	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).doubleValue());  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).doubleValue());  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).doubleValue());	  ((    NaturalComparator    <?>)v).doubleValue()    +    1;    	non-compiled	[CE]  ';'  expected	35	None	replace
317	[BUG]  [BUGGY]  if(v  ==  this)return  0.0;  if(v  ==  null)  {  return  0;  }  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  this)return  0.0;  if(v  ==  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  this)return  0.0;  if(v  ==  null)  {  return  0;  }	  if(v    ==    null)return    0.0;    if(v    ==    null)    {    return    0;    }    	non-compiled	[CE]  missing  return  statement	33	None	replace
318	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v).doubleValue());  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  new  Double(v).doubleValue());  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v).doubleValue());	  this.freqTable.put(v,    pct);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	77	None	replace
319	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v),  v,  null);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  new  Double(v),  v,  null);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v),  v,  null);	  this.freqTable.put(v,    new    Double(v),    v);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	86	None	replace
320	[BUG]  [BUGGY]  safeGetCumPct((  Composite  <?>)v);  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  safeGetCumPct((  Composite  <?>)v);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	safeGetCumPct((  Composite  <?>)v);	          if(v    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(v!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
321	[BUG]  [BUGGY]  (NoClassDefFoundError)this.freqTable.get(v);  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  (NoClassDefFoundError)this.freqTable.get(v);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	(NoClassDefFoundError)this.freqTable.get(v);	  try    {    [Delete]    catch(NoClassDefFoundError    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	1	None	replace
322	[BUG]  [BUGGY]  return  getCumPct((  Class  <?>)v).doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getCumPct((  Class  <?>)v).doubleValue();  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getCumPct((  Class  <?>)v).doubleValue();	  try    {    [Delete]    catch(NoClassDefFoundError    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  double  cannot  be  dereferenced	1	None	replace
323	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getCumPct((  NoClassDefFoundError)v);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	return  getCumPct((  NoClassDefFoundError)v);	  try    {    [Delete]    catch(NoClassDefFoundError    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ClassCastException  	1	1	replace
324	[BUG]  [BUGGY]  return  getCumPct((  NoClassDefFoundError)v);  [FE]  ClassCastException  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getCumPct((  NoClassDefFoundError)v);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getCumPct((  NoClassDefFoundError)v);	  try    {    [Delete]    catch(NoClassDefFoundError    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ClassCastException  	1	1	replace
325	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  AssertionFailedError  	16	1	add
326	[BUG]  [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  AssertionFailedError  	16	1	add
327	[BUG]  [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( " ".   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( " ".   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( " ".   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	non-compiled	[CE]  <identifier>  expected	16	None	add
328	[BUG]  [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  If(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  If(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v    ==    null)    {    return    0;    }    If(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }	  	non-compiled	[CE]  ';'  expected	44	None	add
329	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v    ==    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
330	[BUG]  [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v    ==    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
331	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0.0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v    ==    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0.0;  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
332	[BUG]  [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0.0;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0.0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v    ==    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0.0;  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
333	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v!=  null)  {  return  getPct((  Class  <?>)v);  }  else  {  return  getPct((  Class  <?>)v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	if(v!=  null)  {  return  getPct((  Class  <?>)v);  }  else  {  return  getPct((  Class  <?>)v);  }	  return    getPct((    Class    <?>)v);    return    getPct((    Class    <?>)v);    	compilable	  [FE]  ClassCastException  	57	1	replace
334	[BUG]  [BUGGY]  if(v!=  null)  {  return  getPct((  Class  <?>)v);  }  else  {  return  getPct((  Class  <?>)v);  }  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v!=  null)  {  return  getPct((  Class  <?>)v);  }  else  {  return  getPct((  Class  <?>)v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v!=  null)  {  return  getPct((  Class  <?>)v);  }  else  {  return  getPct((  Class  <?>)v);  }	  return    getPct((    Class    <?>)v);    return    getPct((    Class    <?>)v);    	compilable	  [FE]  ClassCastException  	57	1	replace
335	[BUG]  [BUGGY]  return  getPct((  Pair  <?>)v,  null,  true);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Pair  <?>)v,  null,  true);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Pair  <?>)v,  null,  true);	  return    getPct((    Pair    <?>)v,    true);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
336	[BUG]  [BUGGY]  return  getPct((  Pair  <?>)v,  true,  false);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Pair  <?>)v,  true,  false);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Pair  <?>)v,  true,  false);	  return    getPct((    Pair    <?>)v,    true);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
337	[BUG]  [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  nu  [CE]  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  nu  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  nu	  	non-compiled	[CE]  	87	None	add
338	[BUG]  [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	87	None	add
339	[BUG]  [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ", ");  }  if(v  ==  nu  [CE]  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ", ");  }  if(v  ==  nu  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ", ");  }  if(v  ==  nu	  	non-compiled	[CE]  	87	None	add
340	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }	  	compilable	  [FE]  AssertionFailedError  	87	1	add
341	[BUG]  [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }	  	compilable	  [FE]  AssertionFailedError  	87	1	add
342	[BUG]  [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new	  	non-compiled	[CE]  <identifier>  expected	87	None	add
343	[BUG]  [BUGGY]  if(v  ==  null)return  1.0;  if(v!=  null)  {  return  0.0;  }  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null)return  1.0;  if(v!=  null)  {  return  0.0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)return  1.0;  if(v!=  null)  {  return  0.0;  }	  if(v    ==    null)return    1.0;    if(v!=    null)    {    return    0;    }    	non-compiled	[CE]  missing  return  statement	73	None	replace
344	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	14	1	add
345	[BUG]  [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	14	1	add
346	[BUG]  [BUGGY]  if(v  instanceof  Comparable  <?>)  {  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)  {  return  getCumPct((  Comparable  <?>)  v);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  instanceof  Comparable  <?>)  {  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)  {  return  getCumPct((  Comparable  <?>)  v);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  instanceof  Comparable  <?>)  {  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)  {  return  getCumPct((  Comparable  <?>)  v);  }	          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v!=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
347	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  this.freqTable,  false);  [CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,TreeMap<Comparable<?>,Long>,boolean)  [FE]        ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Class  <?>)v,  this.freqTable,  false);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  this.freqTable,  false);	  return    getPct((    Class    <?>)v,    false);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,TreeMap<Comparable<?>,Long>,boolean)	67	None	replace
348	[BUG]  [BUGGY]  this.freqTable.put(v,  getCumPct(v),  false);  [CE]  no  suitable  method  found  for  put(Object,double,boolean)  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  getCumPct(v),  false);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  getCumPct(v),  false);	  this.freqTable.put(v,    getCumPct(v));    	non-compiled	[CE]  no  suitable  method  found  for  put(Object,double,boolean)	31	None	replace
349	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).getCumPct(freqTable);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).getCumPct(freqTable);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).getCumPct(freqTable);	  ((    NaturalComparator    <?>)v).getCumPct();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
350	[BUG]  [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)  v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)  v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v!=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)  v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY	  	non-compiled	[CE]  ';'  expected	68	None	add
351	[BUG]  [BUGGY]  if(v  instanceof  Class  <?>)  {  return  getPct((  Class  <?>)v);  }  else  {  getPct((  Class  <?>)v);  }  [CE]  missing  return  statement  [FE]        ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  instanceof  Class  <?>)  {  return  getPct((  Class  <?>)v);  }  else  {  getPct((  Class  <?>)v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  instanceof  Class  <?>)  {  return  getPct((  Class  <?>)v);  }  else  {  getPct((  Class  <?>)v);  }	  return    getPct((    Class    <?>)v);    getPct((    Class    <?>)v);    	non-compiled	[CE]  missing  return  statement	53	None	replace
352	[BUG]  [BUGGY]  if(v  ==  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=?>)  {  return((  Comparable  <?>)v).getPct();  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=?>)  {  return((  Comparable  <?>)v).getPct();  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=?>)  {  return((  Comparable  <?>)v).getPct();  }	  if(v    ==    null)Result.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getPct();    }    	non-compiled	[CE]  not  a  statement	65	None	replace
353	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
354	[BUG]  [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
355	[BUG]  [BUGGY]  if(v!=  null)return  Double.POSITIVE_INFINITY;  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v!=  null)return  Double.POSITIVE_INFINITY;  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v!=  null)return  Double.POSITIVE_INFINITY;	  if(v!=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    	non-compiled	[CE]  missing  return  statement	38	None	replace
356	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v),  freqTable,  v);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  new  Double(v),  freqTable,  v);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v),  freqTable,  v);	  this.freqTable.put(v,    new    Double(v),    freqTable);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	96	None	replace
357	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v),  v,  freqTable);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  new  Double(v),  v,  freqTable);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v),  v,  freqTable);	  this.freqTable.put(v,    new    Double(v),    freqTable);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	96	None	replace
358	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0;  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0;  if(v!=  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
359	[BUG]  [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0;  if(v!=  null)  {  return  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0;  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0;  if(v!=  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
360	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v)/  2.0,  0);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  new  Double(v)/  2.0,  0);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v)/  2.0,  0);	  this.freqTable.put(v,    new    Double(v),    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	20	None	replace
361	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v)/  2,  0);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  new  Double(v)/  2,  0);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v)/  2,  0);	  this.freqTable.put(v,    new    Double(v),    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	20	None	replace
362	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	14	1	add
363	[BUG]  [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	14	1	add
364	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  freqTable,  v);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  freqTable,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  freqTable,  v);	  return    getPct((    Parser    <?>)v,    freqTable);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
365	[BUG]  [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getCumPct(  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getCumPct(  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  instanceof  Comparable  <?>)  {  return  getCumPct(	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
366	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }	  	compilable	  [FE]  AssertionFailedError  	87	1	add
367	[BUG]  [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ",     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   ",       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }	  	compilable	  [FE]  AssertionFailedError  	87	1	add
368	[BUG]  [BUGGY]  }  else  if(v  instanceof  Comparable  <?>)  {  try  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  }  else  if(v  instanceof  Comparable  <?>)  {  try  {  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	}  else  if(v  instanceof  Comparable  <?>)  {  try  {	  try    {    [Delete]    catch(Throwable    t)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
369	[BUG]  [BUGGY]  if(v  ==  null  ||  v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null  ||  v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null  ||  v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }	  if(v    ==    null)Result.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getComparable();    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
370	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  AssertionFailedError  	16	1	add
371	[BUG]  [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  AssertionFailedError  	16	1	add
372	[BUG]  [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( " ".   ");  }  [CE]  unclosed  string  literal  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( " ".   ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(v    ==    null)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( " ".   ");  }	  	non-compiled	[CE]  unclosed  string  literal	16	None	add
373	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)return  0;  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v    ==    null)    {    return    0;    }    if(v  ==  null)return  0;  if(v!=  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
374	[BUG]  [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)return  0;  if(v!=  null)  {  return  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  if(v  ==  null)return  0;  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        0.0;        if(v!=        null)        {        return        0;        }        if(v    ==    null)return    0.0;    if(v    ==    null)    {    return    0;    }    if(v  ==  null)return  0;  if(v!=  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
375	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  Math.pow(10,  this);  [CE]  ')'  expected  [FE]          ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Class  <?>)v,  Math.pow(10,  this);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  Math.pow(10,  this);	  return    getPct((    Class    <?>)v,    this);    	non-compiled	[CE]  ')'  expected	24	None	replace
376	[BUG]  [BUGGY]  catch(NullPointerException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  catch(NullPointerException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	catch(NullPointerException  e)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    [Delete]    catch(NullPointerException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	91	None	replace
377	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).getCumPct((  Composite  <?>)v);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).getCumPct((  Composite  <?>)v);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).getCumPct((  Composite  <?>)v);	  ((    NaturalComparator    <?>)v).getCumPct();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
378	[BUG]  [BUGGY]  if(v  instanceof  Comparable  >=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable!=  null)  {  return  getCumPct((  Comparable  <?>)  v);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  instanceof  Comparable  >=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable!=  null)  {  return  getCumPct((  Comparable  <?>)  v);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  instanceof  Comparable  >=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable!=  null)  {  return  getCumPct((  Comparable  <?>)  v);  }	          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    >>    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	11	None	replace
379	[BUG]  [BUGGY]  if(v!=  null)  {  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v!=  null)  {  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v!=  null)  {  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }	          if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
380	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).getPct(this,  this.freqTable);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).getPct(this,  this.freqTable);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).getPct(this,  this.freqTable);	  ((    NaturalComparator    <?>)v).getPct(this.freqTable);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
381	[BUG]  [BUGGY]  catch(NoClassCastException  ne)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  catch(NoClassCastException  ne)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	catch(NoClassCastException  ne)  {  throw  new  IllegalStateException( " ");  }	  try    {    [Delete]    catch(NoClassCastException    ne)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	76	None	replace
382	[BUG]  [BUGGY]  return  getPct((  Pair  <?>)v,  true,  freqTable);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Pair  <?>)v,  true,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Pair  <?>)v,  true,  freqTable);	  return    getPct((    Pair    <?>)v,    true);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
383	[BUG]  [BUGGY]  ParchetUtilities.checkState(v  instanceof  Comparable  <?>)  {  return  getPct((  Comparable  <?>)v);  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ParchetUtilities.checkState(v  instanceof  Comparable  <?>)  {  return  getPct((  Comparable  <?>)v);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	ParchetUtilities.checkState(v  instanceof  Comparable  <?>)  {  return  getPct((  Comparable  <?>)v);  }	  if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    	non-compiled	[CE]  ';'  expected	39	None	replace
384	[BUG]  [BUGGY]  ParchetUtilities.checkState(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ParchetUtilities.checkState(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	ParchetUtilities.checkState(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }	  if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    	non-compiled	[CE]  ';'  expected	39	None	replace
385	[BUG]  [BUGGY]  if(v  ==  null  ||  v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null  ||  v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null  ||  v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }	  if(v    ==    null)Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getPct();    }    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
386	[BUG]  [BUGGY]  this.freqTable.put(v,  null,  new  Double(v));  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(v,  null,  new  Double(v));  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  null,  new  Double(v));	  this.freqTable.put(v,    null,    v);    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	5	None	replace
387	[BUG]  [BUGGY]  if(v  instanceof  Class  <?>)  {  return  getPct(new  Class  <?>((  Class  <?>)v));  }  [CE]  unexpected  type  [FE]          ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  instanceof  Class  <?>)  {  return  getPct(new  Class  <?>((  Class  <?>)v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  instanceof  Class  <?>)  {  return  getPct(new  Class  <?>((  Class  <?>)v));  }	  return    getPct((    Class    <?>)v);    if(v    instanceof    Class    <?>)    {    return    getPct((    Class    <?>)v);    }    	non-compiled	[CE]  unexpected  type	54	None	replace
388	[BUG]  [BUGGY]  catch(NoClassDefFoundError  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  catch(NoClassDefFoundError  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	catch(NoClassDefFoundError  e)  {  throw  new  IllegalStateException( " ");  }	  try    {    [Delete]    catch(NoClassDefFoundError    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	1	None	replace
389	[BUG]  [BUGGY]  if(v  instanceof  Comparable  <?>)  {  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=?>)  {  return  getCumPct((  Comparable  <?>)  v);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  instanceof  Comparable  <?>)  {  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=?>)  {  return  getCumPct((  Comparable  <?>)  v);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  instanceof  Comparable  <?>)  {  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=?>)  {  return  getCumPct((  Comparable  <?>)  v);  }	          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    >=?>)    {    return    getCumPct((    Comparable    <?>)v);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
390	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  false,  v);  [CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,boolean,Object)  [FE]        ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Class  <?>)v,  false,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  false,  v);	  return    getPct((    Class    <?>)v,    false);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,boolean,Object)	67	None	replace
391	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  FreqTable.class);  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  FreqTable.class);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY,  FreqTable.class);	  return    getPct((    Class    <?>)v,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
392	[BUG]  [BUGGY]  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)  v);  }  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)  v);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)  v);  }	          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v!=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    	non-compiled	[CE]  missing  return  statement	69	None	replace
393	[BUG]  [BUGGY]  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)	          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v!=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
394	[BUG]  [BUGGY]  if(v  ==  null  ||  v!=  null)return  1.0;  if(v!=  null)  {  return  0;  }  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null  ||  v!=  null)return  1.0;  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null  ||  v!=  null)return  1.0;  if(v!=  null)  {  return  0;  }	  if(v    ==    null)return    1.0;    if(v!=    null)    {    return    0;    }    	non-compiled	[CE]  missing  return  statement	73	None	replace
395	[BUG]  [BUGGY]  if(v  ==  null)  {  return  getPct((  NaturalComparator  <?>)v);  }  else  {  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0,  len  =  freqTable.size();  i  <  len;  ++i)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null)  {  return  getPct((  NaturalComparator  <?>)v);  }  else  {  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0,  len  =  freqTable.size();  i  <  len;  ++i)  {  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)  {  return  getPct((  NaturalComparator  <?>)v);  }  else  {  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0,  len  =  freqTable.size();  i  <  len;  ++i)  {	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
396	[BUG]  [BUGGY]  if(v  ==  null)  {  return  getPct((  NaturalComparator  <?>)v);  }  else  {  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  return  freqTable.get(  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null)  {  return  getPct((  NaturalComparator  <?>)v);  }  else  {  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  return  freqTable.get(  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)  {  return  getPct((  NaturalComparator  <?>)v);  }  else  {  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  return  freqTable.get(	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
397	[BUG]  [BUGGY]  }  else  if(v  instanceof  Comparable  <?>)  {  catch(NumberFormatException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  }  else  if(v  instanceof  Comparable  <?>)  {  catch(NumberFormatException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	}  else  if(v  instanceof  Comparable  <?>)  {  catch(NumberFormatException  e)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    [Delete]    catch(NumberFormatException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
398	[BUG]  [BUGGY]  }  else  if(v  ==  null)  {  catch(NumberFormatException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  }  else  if(v  ==  null)  {  catch(NumberFormatException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	}  else  if(v  ==  null)  {  catch(NumberFormatException  e)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    [Delete]    catch(NumberFormatException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
399	[BUG]  [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)  v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)  v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v!=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)  v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
400	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)  v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY;  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v!=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)  v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionFailedError  	68	1	add
401	[BUG]  [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)  v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)  v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY;  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v!=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)  v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionFailedError  	68	1	add
402	[BUG]  [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)  v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY;  if  [CE]  '('  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)  v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY;  if  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	                if(v        ==        null)return        Double.POSITIVE_INFINITY;        if(v        instanceof        Comparable        <?>)        {        return        getCumPct((        Comparable        <?>)v);        }        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v!=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)  v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY;  if	  	non-compiled	[CE]  '('  expected	68	None	add
403	[BUG]  [BUGGY]  catch(NullPointerException  npe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  catch(NullPointerException  npe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	catch(NullPointerException  npe)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    [Delete]    catch(NullPointerException    npe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	75	None	replace
404	[BUG]  [BUGGY]  catch(NullPointerException  v)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  catch(NullPointerException  v)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	catch(NullPointerException  v)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    [Delete]    catch(NullPointerException    npe)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	75	None	replace
405	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  null,  this);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  null,  this);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  null,  this);	  return    getPct((    Parser    <?>)v,    this);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
406	[BUG]  [BUGGY]  if(v  ==  null  ||  v  ==  null)return  0;  if(v!=  null)  {  return  0;  }  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null  ||  v  ==  null)return  0;  if(v!=  null)  {  return  0;  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null  ||  v  ==  null)return  0;  if(v!=  null)  {  return  0;  }	  if(v    ==    null    ||    v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    	non-compiled	[CE]  missing  return  statement	105	None	replace
407	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).longValue();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  NaturalComparator  <?>)v).longValue();  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).longValue();	  ((    NaturalComparator    <?>)v).floatValue();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
408	[BUG]  [BUGGY]  if(v  ==  this)  {  return  getPct((  Class  <?>)v);  }  [CE]  missing  return  statement  [FE]            ClassCastException      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  this)  {  return  getPct((  Class  <?>)v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  this)  {  return  getPct((  Class  <?>)v);  }	  return    getPct((    Class    <?>)v);    if(v    ==    null)    {    return    getPct((    Class    <?>)v);    }    	non-compiled	[CE]  missing  return  statement	55	None	replace
409	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  this.freqTable,  this.parser);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  this.freqTable,  this.parser);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  this.freqTable,  this.parser);	  return    getPct((    Parser    <?>)v,    this.freqTable);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
410	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  this.freqTable,  this.generator);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  this.freqTable,  this.generator);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  this.freqTable,  this.generator);	  return    getPct((    Parser    <?>)v,    this.freqTable);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
411	[BUG]  [BUGGY]  return  getPct((  SortedComparator  <?>)v,  Math.pow(10,  v);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  SortedComparator  <?>)v,  Math.pow(10,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  SortedComparator  <?>)v,  Math.pow(10,  v);	  return    getPct((    SortedComparator    <?>)v,    v);    	non-compiled	[CE]  ')'  expected	26	None	replace
412	[BUG]  [BUGGY]  this.freqTable.put(new  Double(v),  freqTable);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(new  Double(v),  freqTable);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(new  Double(v),  freqTable);	  this.freqTable.put(new    Double(v));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	97	None	replace
413	[BUG]  [BUGGY]  this.freqTable.put(new  Double(v),  null);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  this.freqTable.put(new  Double(v),  null);  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(new  Double(v),  null);	  this.freqTable.put(new    Double(v));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	97	None	replace
414	[BUG]  [BUGGY]  if(v  instanceof  Comparable  >=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <  [Delete]  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  instanceof  Comparable  >=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <  [Delete]  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  instanceof  Comparable  >=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <  [Delete]	          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    >=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
415	[BUG]  [BUGGY]  if(v  instanceof  Comparable  >=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <  >>  )  v);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  instanceof  Comparable  >=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <  >>  )  v);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  instanceof  Comparable  >=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <  >>  )  v);  }	          if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    >=    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
416	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  new  Double(v));  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Parser  <?>)v,  new  Double(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  new  Double(v));	  return    getPct((    Parser    <?>)v,    v);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
417	[BUG]  [BUGGY]  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getCumPct((  Comparable  <?>)v);  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getCumPct((  Comparable  <?>)v);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getCumPct((  Comparable  <?>)v);  }	  if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getPct();    }    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
418	[BUG]  [BUGGY]  return  getPct((  Pair  <?>)v,  null,  FreqTable.DEFAULT);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  Pair  <?>)v,  null,  FreqTable.DEFAULT);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Pair  <?>)v,  null,  FreqTable.DEFAULT);	  return    getPct((    Pair    <?>)v,    null);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
419	[BUG]  [BUGGY]  if(v  ==  null  ||  v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  if(v  ==  null  ||  v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null  ||  v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }	  if(v    ==    null)Result.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).doubleValue();    }    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
420	[BUG]  [BUGGY]  ((  CharacterComparator  <?>)v).floatValue();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  ((  CharacterComparator  <?>)v).floatValue();  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  CharacterComparator  <?>)v).floatValue();	  ((    CharacterComparator    <?>)v).doubleValue();    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
421	[BUG]  [BUGGY]  return  getPct((  SortedComparator  <?>)v,  freqTable,  v);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  getPct((  SortedComparator  <?>)v,  freqTable,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  SortedComparator  <?>)v,  freqTable,  v);	  return    getPct((    SortedComparator    <?>)v,    freqTable);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
422	[BUG]  [BUGGY]  return  tryFrequency(v)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  return  tryFrequency(v)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  tryFrequency(v)  {  throw  new  IllegalArgumentException( " ");  }	  tryFrequency(v)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	4	None	replace
423	[BUG]  [BUGGY]  tryFrequency(v)  {  return  getCumPct((  Composite  <?>)v);  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  getPct(Object  v)  {      [BUGGY]  tryFrequency(v)  {  return  getCumPct((  Composite  <?>)v);  }  [BUGGY]      return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	tryFrequency(v)  {  return  getCumPct((  Composite  <?>)v);  }	  tryFrequency(v)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	4	None	replace
