bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	try  {  [Delete]  catch(NoClassDefFoundError  e)  {  throw  new  IllegalArgumentException( " ");  }	      if(v    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  ncdfe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  ncdfe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	try  {  [Delete]  catch(NoClassDefFoundError  ncdfe)  {  throw  new  IllegalArgumentException( " ");  }	      if(v    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
3	[BUG]  [BUGGY]  try  {  [Delete]  catch(NumberFormatException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  try  {  [Delete]  catch(NumberFormatException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	try  {  [Delete]  catch(NumberFormatException  e)  {  throw  new  IllegalArgumentException( " ");  }	      if(v    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
4	[BUG]  [BUGGY]  tryFrequency(v)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  tryFrequency(v)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	tryFrequency(v)  {  throw  new  IllegalArgumentException( " ");  }	      if(v    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	11	None	replace
5	[BUG]  [BUGGY]  this.freqTable.put(v,  null,  v);  [CE]  no  suitable  method  found  for  put(Object,<null>,Object)  [FE]            AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  this.freqTable.put(v,  null,  v);  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  null,  v);	      this.freqTable.put(v,    null);    	non-compiled	[CE]  no  suitable  method  found  for  put(Object,<null>,Object)	20	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]      if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
7	[BUG]  [BUGGY]      if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]      if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
8	[BUG]  [BUGGY]      if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]      if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=?>)  {  return  getCumPct((  Comparable  <?>)v);  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]      if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
10	[BUG]  [BUGGY]      if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]      if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
11	[BUG]  [BUGGY]      if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >>  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [CE]  cannot  find  symbol  Comparable  [FE]          AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]      if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >>  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >>  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }	  	non-compiled	[CE]  cannot  find  symbol  Comparable	3	None	add
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]      if(v  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	        if(v    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
13	[BUG]  [BUGGY]      if(v  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]      if(v  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	        if(v    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
14	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]      if(v  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	        if(v    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(v!=  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	10	1	add
15	[BUG]  [BUGGY]      if(v  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]      if(v  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(v!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	        if(v    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(v!=  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	10	1	add
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]      if(v  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	        if(v    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
17	[BUG]  [BUGGY]      if(v  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]      if(v  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	        if(v    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
18	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v),  false);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]        AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  this.freqTable.put(v,  new  Double(v),  false);  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v),  false);	      this.freqTable.put(v,    new    Double(v));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	18	None	replace
19	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v),  true);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]          AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  this.freqTable.put(v,  new  Double(v),  true);  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v),  true);	      this.freqTable.put(v,    new    Double(v));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	18	None	replace
20	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v),  0);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]            AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  this.freqTable.put(v,  new  Double(v),  0);  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v),  0);	      this.freqTable.put(v,    new    Double(v));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	18	None	replace
21	[BUG]  [BUGGY]  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }	      if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getComparable();    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
22	[BUG]  [BUGGY]  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }	      if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getPct();    }    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
23	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  true);  [CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,boolean)  [FE]    ClassCastException    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  Class  <?>)v,  true);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  true);	  return    getPct((    Class    <?>)v);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,boolean)	17	None	replace
24	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  this);  [CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,Frequency)  [FE]      ClassCastException    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  Class  <?>)v,  this);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  this);	  return    getPct((    Class    <?>)v);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,Frequency)	17	None	replace
25	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY);  [CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,double)  [FE]        ClassCastException    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  Double.POSITIVE_INFINITY);	  return    getPct((    Class    <?>)v);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,double)	17	None	replace
26	[BUG]  [BUGGY]  return  getPct((  SortedComparator  <?>)v,  v);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  SortedComparator  <?>)v,  v);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  SortedComparator  <?>)v,  v);	  return    getPct((    SortedComparator    <?>)v);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
27	[BUG]  [BUGGY]  return  getPct((  SortedComparator  <?>)v,  true);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  SortedComparator  <?>)v,  true);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  SortedComparator  <?>)v,  true);	  return    getPct((    SortedComparator    <?>)v);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
28	[BUG]  [BUGGY]  return  getPct((  SortedComparator  <?>)v,  this);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  SortedComparator  <?>)v,  this);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  SortedComparator  <?>)v,  this);	  return    getPct((    SortedComparator    <?>)v);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
29	[BUG]  [BUGGY]  return  getPct((  SortedComparator  <?>)v,  null);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  SortedComparator  <?>)v,  null);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  SortedComparator  <?>)v,  null);	  return    getPct((    SortedComparator    <?>)v);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
30	[BUG]  [BUGGY]  this.freqTable.put(v,  getPct(v),  v);  [CE]  no  suitable  method  found  for  put(Object,double,Object)  [FE]              AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  this.freqTable.put(v,  getPct(v),  v);  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  getPct(v),  v);	      this.freqTable.put(v,    getPct(v));    	non-compiled	[CE]  no  suitable  method  found  for  put(Object,double,Object)	21	None	replace
31	[BUG]  [BUGGY]  this.freqTable.put(v,  getCumPct(v));  [CE]  no  suitable  method  found  for  put(Object,double)  [FE]                AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  this.freqTable.put(v,  getCumPct(v));  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  getCumPct(v));	      this.freqTable.put(v,    getPct(v));    	non-compiled	[CE]  no  suitable  method  found  for  put(Object,double)	21	None	replace
32	[BUG]  [BUGGY]  this.freqTable.put(v,  getPct(v),  null);  [CE]  no  suitable  method  found  for  put(Object,double,<null>)  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  this.freqTable.put(v,  getPct(v),  null);  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  getPct(v),  null);	      this.freqTable.put(v,    getPct(v));    	non-compiled	[CE]  no  suitable  method  found  for  put(Object,double,<null>)	21	None	replace
33	[BUG]  [BUGGY]  if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }	      if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    	non-compiled	[CE]  missing  return  statement	15	None	replace
34	[BUG]  [BUGGY]  if(v!=  null)return  0.0;  if(v  ==  null)  {  return  0;  }  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  if(v!=  null)return  0.0;  if(v  ==  null)  {  return  0;  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v!=  null)return  0.0;  if(v  ==  null)  {  return  0;  }	      if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    	non-compiled	[CE]  missing  return  statement	15	None	replace
35	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).doubleValue()  +  1;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  ((  NaturalComparator  <?>)v).doubleValue()  +  1;  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).doubleValue()  +  1;	      ((    NaturalComparator    <?>)v).doubleValue();    	non-compiled	[CE]  not  a  statement	9	None	replace
36	[BUG]  [BUGGY]  ((  CharacterComparator  <?>)v).doubleValue();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  ((  CharacterComparator  <?>)v).doubleValue();  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  CharacterComparator  <?>)v).doubleValue();	      ((    NaturalComparator    <?>)v).doubleValue();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
37	[BUG]  [BUGGY]  ((  NormalComparator  <?>)v).doubleValue();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  ((  NormalComparator  <?>)v).doubleValue();  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NormalComparator  <?>)v).doubleValue();	      ((    NaturalComparator    <?>)v).doubleValue();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
38	[BUG]  [BUGGY]  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }	      if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    	non-compiled	[CE]  missing  return  statement	4	None	replace
39	[BUG]  [BUGGY]  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }	      if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    	non-compiled	[CE]  missing  return  statement	4	None	replace
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]      if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	        if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
41	[BUG]  [BUGGY]      if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]      if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	        if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]      if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	        if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
43	[BUG]  [BUGGY]      if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]      if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	        if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]      if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	        if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
45	[BUG]  [BUGGY]      if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]      if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	        if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    if(v  ==  null)return  0.0;  if(v  ==  null)  {  return  0;  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
46	[BUG]  [BUGGY]      if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  If(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]      if(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  If(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	        if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    If(v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }	  	non-compiled	[CE]  ';'  expected	14	None	add
47	[BUG]  [BUGGY]  this.freqTable.put(v,  p);  [CE]  cannot  find  symbol  p  [FE]          AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  this.freqTable.put(v,  p);  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  p);	      this.freqTable.put(v,    v);    	non-compiled	[CE]  cannot  find  symbol  p	19	None	replace
48	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  true);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  Parser  <?>)v,  true);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  true);	  return    getPct((    Parser    <?>)v);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
49	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  this);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  Parser  <?>)v,  this);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  this);	  return    getPct((    Parser    <?>)v);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
50	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  null);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  Parser  <?>)v,  null);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  null);	  return    getPct((    Parser    <?>)v);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
51	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  false);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  Parser  <?>)v,  false);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  false);	  return    getPct((    Parser    <?>)v);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
52	[BUG]  [BUGGY]  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }	      if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).doubleValue();    }    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
53	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v);  getPct((  Class  <?>)v);  [CE]  unreachable  statement  [FE]    ClassCastException    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  Class  <?>)v);  getPct((  Class  <?>)v);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return    getPct((    Class    <?>)v);    getPct((  Class  <?>)v);	  	non-compiled	[CE]  unreachable  statement	16	None	add
54	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v);  if(v  instanceof  Class  <?>)  {  return  getPct((  Class  <?>)v);  }  [CE]  unreachable  statement  [FE]      ClassCastException    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  Class  <?>)v);  if(v  instanceof  Class  <?>)  {  return  getPct((  Class  <?>)v);  }  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return    getPct((    Class    <?>)v);    if(v  instanceof  Class  <?>)  {  return  getPct((  Class  <?>)v);  }	  	non-compiled	[CE]  unreachable  statement	16	None	add
55	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v);  if(v  ==  null)  {  return  getPct((  Class  <?>)v);  }  [CE]  unreachable  statement  [FE]        ClassCastException    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  Class  <?>)v);  if(v  ==  null)  {  return  getPct((  Class  <?>)v);  }  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return    getPct((    Class    <?>)v);    if(v  ==  null)  {  return  getPct((  Class  <?>)v);  }	  	non-compiled	[CE]  unreachable  statement	16	None	add
56	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v);  if(v!=  null)  {  return  getPct((  Class  <?>)v);  }  [CE]  unreachable  statement  [FE]          ClassCastException    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  Class  <?>)v);  if(v!=  null)  {  return  getPct((  Class  <?>)v);  }  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return    getPct((    Class    <?>)v);    if(v!=  null)  {  return  getPct((  Class  <?>)v);  }	  	non-compiled	[CE]  unreachable  statement	16	None	add
57	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v);  return  getPct((  Class  <?>)v);  [CE]  unreachable  statement  [FE]            ClassCastException    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  Class  <?>)v);  return  getPct((  Class  <?>)v);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return    getPct((    Class    <?>)v);    return  getPct((  Class  <?>)v);	  	non-compiled	[CE]  unreachable  statement	16	None	add
58	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).getCumPct();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  ((  NaturalComparator  <?>)v).getCumPct();  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).getCumPct();	      ((    NaturalComparator    <?>)v).reset();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
59	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).getPct(null);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  ((  NaturalComparator  <?>)v).getPct(null);  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).getPct(null);	      ((    NaturalComparator    <?>)v).getPct();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
60	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).getPct(freqTable);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  ((  NaturalComparator  <?>)v).getPct(freqTable);  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).getPct(freqTable);	      ((    NaturalComparator    <?>)v).getPct();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
61	[BUG]  [BUGGY]  return  getPct((  Pair  <?>)v,  true);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  Pair  <?>)v,  true);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Pair  <?>)v,  true);	  return    getPct((    Pair    <?>)v);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
62	[BUG]  [BUGGY]  return  getPct((  Pair  <?>)v,  null);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  Pair  <?>)v,  null);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Pair  <?>)v,  null);	  return    getPct((    Pair    <?>)v);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
63	[BUG]  [BUGGY]  return  getPct((  Pair  <?>)v,  false);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  Pair  <?>)v,  false);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Pair  <?>)v,  false);	  return    getPct((    Pair    <?>)v);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
64	[BUG]  [BUGGY]  return  getPct((  SortedComparator  <?>)v,  freqTable);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  SortedComparator  <?>)v,  freqTable);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  SortedComparator  <?>)v,  freqTable);	  return    getPct((    SortedComparator    <?>)v);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
65	[BUG]  [BUGGY]  if(v  ==  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  if(v  ==  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }	      if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getPct();    }    	non-compiled	[CE]  not  a  statement	1	None	replace
66	[BUG]  [BUGGY]  if(v  ==  null)Return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  if(v  ==  null)Return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)Return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }	      if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getPct();    }    	non-compiled	[CE]  not  a  statement	1	None	replace
67	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  false);  [CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,boolean)  [FE]    ClassCastException    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  Class  <?>)v,  false);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  false);	  return    getPct((    Class    <?>)v);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,boolean)	17	None	replace
68	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]      if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
69	[BUG]  [BUGGY]      if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]      if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v!=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
70	[BUG]  [BUGGY]      if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]      if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <  	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
71	[BUG]  [BUGGY]      if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=  null)  {  return  getCumPct((  Comparable  <?>)v);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]      if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=  null)  {  return  getCumPct((  Comparable  <?>)v);  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  >=  null)  {  return  getCumPct((  Comparable  <?>)v);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	3	None	add
72	[BUG]  [BUGGY]  if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }	      if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    	non-compiled	[CE]  missing  return  statement	15	None	replace
73	[BUG]  [BUGGY]  if(v  ==  null)return  1.0;  if(v!=  null)  {  return  0;  }  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  if(v  ==  null)return  1.0;  if(v!=  null)  {  return  0;  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)return  1.0;  if(v!=  null)  {  return  0;  }	      if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    	non-compiled	[CE]  missing  return  statement	15	None	replace
74	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  [Delete]  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	[Delete]	      if(v    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
75	[BUG]  [BUGGY]  try  {  [Delete]  catch(NullPointerException  npe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  try  {  [Delete]  catch(NullPointerException  npe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	try  {  [Delete]  catch(NullPointerException  npe)  {  throw  new  IllegalArgumentException( " ");  }	      if(v    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
76	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoClassCastException  ne)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  try  {  [Delete]  catch(NoClassCastException  ne)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	try  {  [Delete]  catch(NoClassCastException  ne)  {  throw  new  IllegalArgumentException( " ");  }	      if(v    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
77	[BUG]  [BUGGY]  this.freqTable.put(v,  pct);  [CE]  cannot  find  symbol  pct  [FE]          AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  this.freqTable.put(v,  pct);  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  pct);	      this.freqTable.put(v,    v);    	non-compiled	[CE]  cannot  find  symbol  pct	19	None	replace
78	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  freqTable);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  Parser  <?>)v,  freqTable);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  freqTable);	  return    getPct((    Parser    <?>)v);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
79	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  this.freqTable);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  Parser  <?>)v,  this.freqTable);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  this.freqTable);	  return    getPct((    Parser    <?>)v);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
80	[BUG]  [BUGGY]  return  getPct((  Parser  <?>)v,  v);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  Parser  <?>)v,  v);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Parser  <?>)v,  v);	  return    getPct((    Parser    <?>)v);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
81	[BUG]  [BUGGY]  if(v  ==  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  if(v  ==  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }	      if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getComparable();    }    	non-compiled	[CE]  not  a  statement	5	None	replace
82	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v);  if(v  instanceof  Class  <?>)  {  return  getPct((  Class  <?>)v);  }  else  {  return  getPct((  Class  <?>)v);  }  [CE]  unreachable  statement  [FE]    ClassCastException    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  Class  <?>)v);  if(v  instanceof  Class  <?>)  {  return  getPct((  Class  <?>)v);  }  else  {  return  getPct((  Class  <?>)v);  }  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return    getPct((    Class    <?>)v);    if(v  instanceof  Class  <?>)  {  return  getPct((  Class  <?>)v);  }  else  {  return  getPct((  Class  <?>)v);  }	  	non-compiled	[CE]  unreachable  statement	16	None	add
83	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v);  if(v  ==  null)  {  return  getPct((  Class  <?>)v);  }  else  {  return  getPct((  Class  <?>)v);  }  [CE]  unreachable  statement  [FE]      ClassCastException    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  Class  <?>)v);  if(v  ==  null)  {  return  getPct((  Class  <?>)v);  }  else  {  return  getPct((  Class  <?>)v);  }  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return    getPct((    Class    <?>)v);    if(v  ==  null)  {  return  getPct((  Class  <?>)v);  }  else  {  return  getPct((  Class  <?>)v);  }	  	non-compiled	[CE]  unreachable  statement	16	None	add
84	[BUG]  [BUGGY]  if(v  ==  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  if(v  ==  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)Result.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }	      if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).doubleValue();    }    	non-compiled	[CE]  not  a  statement	2	None	replace
85	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v),  null);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]        AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  this.freqTable.put(v,  new  Double(v),  null);  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v),  null);	      this.freqTable.put(v,    new    Double(v));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	18	None	replace
86	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v),  v);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]          AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  this.freqTable.put(v,  new  Double(v),  v);  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v),  v);	      this.freqTable.put(v,    new    Double(v));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	18	None	replace
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]      if(v  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	add	        if(v    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
88	[BUG]  [BUGGY]      if(v  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]      if(v  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(v  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	        if(v    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(v  ==  null)  {  throw  new  IllegalArgumentException( ",   ");  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
89	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v);  if(v!=  null)  {  return  getPct((  Class  <?>)v);  }  else  {  return  getPct((  Class  <?>)v);  }  [CE]  unreachable  statement  [FE]    ClassCastException    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  Class  <?>)v);  if(v!=  null)  {  return  getPct((  Class  <?>)v);  }  else  {  return  getPct((  Class  <?>)v);  }  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return    getPct((    Class    <?>)v);    if(v!=  null)  {  return  getPct((  Class  <?>)v);  }  else  {  return  getPct((  Class  <?>)v);  }	  	non-compiled	[CE]  unreachable  statement	16	None	add
90	[BUG]  [BUGGY]  return  getPct((  Class  <?>)v,  null);  [CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,<null>)  [FE]    ClassCastException    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  Class  <?>)v,  null);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Class  <?>)v,  null);	  return    getPct((    Class    <?>)v);    	non-compiled	[CE]  no  suitable  method  found  for  getPct(Class<CAP#1>,<null>)	17	None	replace
91	[BUG]  [BUGGY]  try  {  [Delete]  catch(NullPointerException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  try  {  [Delete]  catch(NullPointerException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	try  {  [Delete]  catch(NullPointerException  e)  {  throw  new  IllegalArgumentException( " ");  }	      if(v    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
92	[BUG]  [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	try  {  [Delete]  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }	      if(v    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
93	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).getCumPct((  NaturalComparator  <?>)v);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  ((  NaturalComparator  <?>)v).getCumPct((  NaturalComparator  <?>)v);  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).getCumPct((  NaturalComparator  <?>)v);	      ((    NaturalComparator    <?>)v).getPct();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
94	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).getPct(this.freqTable);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  ((  NaturalComparator  <?>)v).getPct(this.freqTable);  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).getPct(this.freqTable);	      ((    NaturalComparator    <?>)v).getPct();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
95	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).get();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  ((  NaturalComparator  <?>)v).get();  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).get();	      ((    NaturalComparator    <?>)v).reset();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
96	[BUG]  [BUGGY]  this.freqTable.put(v,  new  Double(v),  freqTable);  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]        AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  this.freqTable.put(v,  new  Double(v),  freqTable);  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(v,  new  Double(v),  freqTable);	      this.freqTable.put(v,    new    Double(v));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	18	None	replace
97	[BUG]  [BUGGY]  this.freqTable.put(new  Double(v));  [CE]  no  suitable  constructor  found  for  Double(Object)  [FE]          AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  this.freqTable.put(new  Double(v));  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	this.freqTable.put(new  Double(v));	      this.freqTable.put(v,    new    Double(v));    	non-compiled	[CE]  no  suitable  constructor  found  for  Double(Object)	18	None	replace
98	[BUG]  [BUGGY]      if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  If(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]      if(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  If(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	        if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return    getCumPct((    Comparable    <?>)v);    }    If(v  ==  null)return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return  getCumPct((  Comparable  <?>)v);  }	  	non-compiled	[CE]  ';'  expected	3	None	add
99	[BUG]  [BUGGY]  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }	      if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getComparable();    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
100	[BUG]  [BUGGY]  if(v  ==  null)Return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  if(v  ==  null)Return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)Return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getComparable();  }	      if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getComparable();    }    	non-compiled	[CE]  not  a  statement	5	None	replace
101	[BUG]  [BUGGY]  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }	      if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getPct();    }    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
102	[BUG]  [BUGGY]  if(v  ==  null)Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  if(v  ==  null)Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).getPct();  }	      if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).getPct();    }    	non-compiled	[CE]  not  a  statement	1	None	replace
103	[BUG]  [BUGGY]  ((  NaturalComparator  <?>)v).floatValue();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  ((  NaturalComparator  <?>)v).floatValue();  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	((  NaturalComparator  <?>)v).floatValue();	      ((    NaturalComparator    <?>)v).doubleValue();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
104	[BUG]  [BUGGY]  return  getPct((  Pair  <?>)v,  v);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  return  getPct((  Pair  <?>)v,  v);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	return  getPct((  Pair  <?>)v,  v);	  return    getPct((    Pair    <?>)v);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
105	[BUG]  [BUGGY]  if(v  ==  null  ||  v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  [CE]  missing  return  statement  [FE]    AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  if(v  ==  null  ||  v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null  ||  v  ==  null)return  0.0;  if(v!=  null)  {  return  0;  }	      if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    	non-compiled	[CE]  missing  return  statement	15	None	replace
106	[BUG]  [BUGGY]  if(v  ==  null  ||  v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  [CE]  missing  return  statement  [FE]      AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  if(v  ==  null  ||  v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null  ||  v!=  null)return  0.0;  if(v!=  null)  {  return  0;  }	      if(v    ==    null)return    0.0;    if(v!=    null)    {    return    0;    }    	non-compiled	[CE]  missing  return  statement	15	None	replace
107	[BUG]  [BUGGY]  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }	      if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).doubleValue();    }    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
108	[BUG]  [BUGGY]  if(v  ==  null)Return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  double  getPct(Object  v)  {    [BUGGY]  if(v  ==  null)Return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }  [BUGGY]    return  getCumPct((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	1.0	303	303	1	replace	if(v  ==  null)Return  Double.POSITIVE_INFINITY;  if(v  instanceof  Comparable  <?>)  {  return((  Comparable  <?>)v).doubleValue();  }	      if(v    ==    null)return    Double.POSITIVE_INFINITY;    if(v    instanceof    Comparable    <?>)    {    return((    Comparable    <?>)v).doubleValue();    }    	non-compiled	[CE]  not  a  statement	2	None	replace
