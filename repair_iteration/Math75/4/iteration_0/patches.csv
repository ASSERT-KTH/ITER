bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {  [BUGGY]  return  getCumFreq(((Integer)v).intValue());  [BUGGY]  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	return  getCumFreq(((Integer)v).intValue());	return  getCumFreq(((Integer)  v).longValue());  	compilable	  [FE]  AssertionFailedError  	7	1	replace
2	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue());  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {  [BUGGY]  return  getCumFreq(((Integer)v).intValue());  [BUGGY]  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getCumFreq(((Integer)v).intValue());	return  getCumFreq(((Integer)  v).longValue());  	compilable	  [FE]  AssertionFailedError  	7	1	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {  [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  [BUGGY]  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	return  getCumFreq(((Integer)v).doubleValue());	return  getCumFreq(((Integer)  v).longValue());  	compilable	  [FE]  AssertionFailedError  	7	3	replace
4	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {  [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  [BUGGY]  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getCumFreq(((Integer)v).doubleValue());	return  getCumFreq(((Integer)  v).longValue());  	compilable	  [FE]  AssertionFailedError  	7	3	replace
5	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).longValue());  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError  [CONTEXT]  public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {  [BUGGY]  return  getSumFreq(((Integer)v).longValue());  [BUGGY]  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).longValue());	return  getCumFreq(((Integer)  v).longValue());  	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	7	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {  [BUGGY]    [BUGGY]  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	  	return  getCumFreq(((Integer)  v).longValue());  	compilable	  [FE]  AssertionFailedError  	7	3	replace
7	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {  [BUGGY]    [BUGGY]  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	  	return  getCumFreq(((Integer)  v).longValue());  	compilable	  [FE]  AssertionFailedError  	7	3	replace
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {  [BUGGY]    ((  Integer)v).doubleValue();  [BUGGY]  return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	    ((  Integer)v).doubleValue();		compilable	  [FE]  AssertionFailedError  	8	1	add
9	[BUG]  [BUGGY]    ((  Integer)v).doubleValue();  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {  [BUGGY]    ((  Integer)v).doubleValue();  [BUGGY]  return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	    ((  Integer)v).doubleValue();		compilable	  [FE]  AssertionFailedError  	8	1	add
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {  [BUGGY]    ((  Integer)v).longValue();  [BUGGY]  return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	    ((  Integer)v).longValue();		compilable	  [FE]  AssertionFailedError  	8	1	add
11	[BUG]  [BUGGY]    ((  Integer)v).longValue();  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {  [BUGGY]    ((  Integer)v).longValue();  [BUGGY]  return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	    ((  Integer)v).longValue();		compilable	  [FE]  AssertionFailedError  	8	1	add
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {  [BUGGY]    Integer  nextValue  =(Integer)v;  [BUGGY]  return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	    Integer  nextValue  =(Integer)v;		compilable	  [FE]  AssertionFailedError  	8	1	add
13	[BUG]  [BUGGY]    Integer  nextValue  =(Integer)v;  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {  [BUGGY]    Integer  nextValue  =(Integer)v;  [BUGGY]  return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	    Integer  nextValue  =(Integer)v;		compilable	  [FE]  AssertionFailedError  	8	1	add
14	[BUG]  [BUGGY]    ((  Integer)v).doubleValue());  [CE]  ';'  expected  [FE]          AssertionFailedError  [CONTEXT]  public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {  [BUGGY]    ((  Integer)v).doubleValue());  [BUGGY]  return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	    ((  Integer)v).doubleValue());		non-compiled	[CE]  ';'  expected	8	None	add
15	[BUG]  [BUGGY]    ((  Integer)v).longValue());  [CE]  ';'  expected  [FE]            AssertionFailedError  [CONTEXT]  public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {  [BUGGY]    ((  Integer)v).longValue());  [BUGGY]  return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	    ((  Integer)v).longValue());		non-compiled	[CE]  ';'  expected	8	None	add
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {  [BUGGY]    ((  Integer)v).intValue();  [BUGGY]  return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	    ((  Integer)v).intValue();		compilable	  [FE]  AssertionFailedError  	8	1	add
17	[BUG]  [BUGGY]    ((  Integer)v).intValue();  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {  [BUGGY]    ((  Integer)v).intValue();  [BUGGY]  return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	    ((  Integer)v).intValue();		compilable	  [FE]  AssertionFailedError  	8	1	add
18	[BUG]  [BUGGY]    Iterator  <  Long>  freqTable  =  getFreqTable();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {  [BUGGY]    Iterator  <  Long>  freqTable  =  getFreqTable();  [BUGGY]  return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	    Iterator  <  Long>  freqTable  =  getFreqTable();		non-compiled	[CE]  cannot  find  symbol	8	None	add
19	[BUG]  [BUGGY]    Iterator  <  Long>  freqTable  =  getFreqTable(v);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {  [BUGGY]    Iterator  <  Long>  freqTable  =  getFreqTable(v);  [BUGGY]  return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	    Iterator  <  Long>  freqTable  =  getFreqTable(v);		non-compiled	[CE]  cannot  find  symbol	8	None	add
20	[BUG]  [BUGGY]    Iterator  <  Long>  freqTable  =((  Integer)v).intValue();  [CE]  incompatible  types  [FE]    AssertionFailedError  [CONTEXT]  public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {  [BUGGY]    Iterator  <  Long>  freqTable  =((  Integer)v).intValue();  [BUGGY]  return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	    Iterator  <  Long>  freqTable  =((  Integer)v).intValue();		non-compiled	[CE]  incompatible  types	8	None	add
21	[BUG]  [BUGGY]    Iterator  <  Long>  freqTable  =((  Integer)v).longValue();  [CE]  incompatible  types  [FE]      AssertionFailedError  [CONTEXT]  public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {  [BUGGY]    Iterator  <  Long>  freqTable  =((  Integer)v).longValue();  [BUGGY]  return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	    Iterator  <  Long>  freqTable  =((  Integer)v).longValue();		non-compiled	[CE]  incompatible  types	8	None	add
22	[BUG]  [BUGGY]  return  getMeanValue(((Integer)v).longValue());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {  [BUGGY]  return  getMeanValue(((Integer)v).longValue());  [BUGGY]  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getMeanValue(((Integer)v).longValue());	return  getCumFreq(((Integer)  v).longValue());  	non-compiled	[CE]  cannot  find  symbol	7	None	replace
