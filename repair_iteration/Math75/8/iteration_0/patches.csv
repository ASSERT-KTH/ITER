bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  (double)getCount(sumFreq)/(double)v;  [CE]  inconvertible  types  [FE]    AssertionFailedError  [CONTEXT]  public  double  getPct(Comparable<?>  v)  {  final  long  sumFreq  =  getSumFreq();  if  (sumFreq  ==  0)  {  return  Double.NaN;  }  [BUGGY]  return  (double)getCount(sumFreq)/(double)v;  [BUGGY]  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Comparable<?>  v  [VARIABLES]  Comparable  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5	320	320	1	replace	return  (double)getCount(sumFreq)/(double)v;	return  (double)  getCount(v)  /  (double)  sumFreq;  	non-compiled	[CE]  inconvertible  types	15	None	replace
2	[BUG]  [BUGGY]    [CE]  missing  return  statement  [FE]      AssertionFailedError  [CONTEXT]  public  double  getPct(Comparable<?>  v)  {  final  long  sumFreq  =  getSumFreq();  if  (sumFreq  ==  0)  {  return  Double.NaN;  }  [BUGGY]    [BUGGY]  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Comparable<?>  v  [VARIABLES]  Comparable  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5	320	320	1	replace	  	return  (double)  getCount(v)  /  (double)  sumFreq;  	non-compiled	[CE]  missing  return  statement	15	None	replace
3	[BUG]  [BUGGY]    (double)getCount(v)/  (double)sumFreq;  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  public  double  getPct(Comparable<?>  v)  {  final  long  sumFreq  =  getSumFreq();  if  (sumFreq  ==  0)  {  return  Double.NaN;  }  [BUGGY]    (double)getCount(v)/  (double)sumFreq;  [BUGGY]  return  (double)  getCount(v)  /  (double)  sumFreq;  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Comparable<?>  v  [VARIABLES]  Comparable  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5	320	320	1	replace	    (double)getCount(v)/  (double)sumFreq;		non-compiled	[CE]  not  a  statement	16	None	add
4	[BUG]  [BUGGY]    if(sumFreq  <  =  0)  {  sumFreq  =  Math.max(sumFreq,  sumFreq);  sumFreq  =  Math.min(sumFreq,  sumFreq);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  double  getPct(Comparable<?>  v)  {  final  long  sumFreq  =  getSumFreq();  if  (sumFreq  ==  0)  {  return  Double.NaN;  }  [BUGGY]    if(sumFreq  <  =  0)  {  sumFreq  =  Math.max(sumFreq,  sumFreq);  sumFreq  =  Math.min(sumFreq,  sumFreq);  }  [BUGGY]  return  (double)  getCount(v)  /  (double)  sumFreq;  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Comparable<?>  v  [VARIABLES]  Comparable  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5	320	320	1	replace	    if(sumFreq  <  =  0)  {  sumFreq  =  Math.max(sumFreq,  sumFreq);  sumFreq  =  Math.min(sumFreq,  sumFreq);  }		non-compiled	[CE]  illegal  start  of  expression	16	None	add
5	[BUG]  [BUGGY]    if(sumFreq  <  =  0)  {  sumFreq  =  Math.max(sumFreq,  sumFreq);  sumFreq  =  Math.min(sumFreq,  sumFreq);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  double  getPct(Comparable<?>  v)  {  final  long  sumFreq  =  getSumFreq();  if  (sumFreq  ==  0)  {  return  Double.NaN;  }  [BUGGY]    if(sumFreq  <  =  0)  {  sumFreq  =  Math.max(sumFreq,  sumFreq);  sumFreq  =  Math.min(sumFreq,  sumFreq);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  return  (double)  getCount(v)  /  (double)  sumFreq;  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Comparable<?>  v  [VARIABLES]  Comparable  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5	320	320	1	replace	    if(sumFreq  <  =  0)  {  sumFreq  =  Math.max(sumFreq,  sumFreq);  sumFreq  =  Math.min(sumFreq,  sumFreq);  }  else  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	16	None	add
6	[BUG]  [BUGGY]    if(sumFreq  <  =  0)  {  sumFreq  =  Math.max(sumFreq,  sumFreq);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  public  double  getPct(Comparable<?>  v)  {  final  long  sumFreq  =  getSumFreq();  if  (sumFreq  ==  0)  {  return  Double.NaN;  }  [BUGGY]    if(sumFreq  <  =  0)  {  sumFreq  =  Math.max(sumFreq,  sumFreq);  }  [BUGGY]  return  (double)  getCount(v)  /  (double)  sumFreq;  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Comparable<?>  v  [VARIABLES]  Comparable  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5	320	320	1	replace	    if(sumFreq  <  =  0)  {  sumFreq  =  Math.max(sumFreq,  sumFreq);  }		non-compiled	[CE]  illegal  start  of  expression	16	None	add
7	[BUG]  [BUGGY]    if(sumFreq  ==  0)  {  sumFreq  =  Math.max(sumFreq,  sumFreq);  }  [CE]  cannot  assign  a  value  to  final  variable  sumFreq  [FE]            AssertionFailedError  [CONTEXT]  public  double  getPct(Comparable<?>  v)  {  final  long  sumFreq  =  getSumFreq();  if  (sumFreq  ==  0)  {  return  Double.NaN;  }  [BUGGY]    if(sumFreq  ==  0)  {  sumFreq  =  Math.max(sumFreq,  sumFreq);  }  [BUGGY]  return  (double)  getCount(v)  /  (double)  sumFreq;  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Comparable<?>  v  [VARIABLES]  Comparable  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5	320	320	1	replace	    if(sumFreq  ==  0)  {  sumFreq  =  Math.max(sumFreq,  sumFreq);  }		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  sumFreq	16	None	add
8	[BUG]  [BUGGY]    if(sumFreq  >  0)  {  for(int  i  =  0,  sumFreq  =  sumFreq;  i  <  freqTable.size();  ++i)  {  sumFreq  +=  freqTable.get(i);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  double  getPct(Comparable<?>  v)  {  final  long  sumFreq  =  getSumFreq();  if  (sumFreq  ==  0)  {  return  Double.NaN;  }  [BUGGY]    if(sumFreq  >  0)  {  for(int  i  =  0,  sumFreq  =  sumFreq;  i  <  freqTable.size();  ++i)  {  sumFreq  +=  freqTable.get(i);  }  [BUGGY]  return  (double)  getCount(v)  /  (double)  sumFreq;  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Comparable<?>  v  [VARIABLES]  Comparable  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5	320	320	1	replace	    if(sumFreq  >  0)  {  for(int  i  =  0,  sumFreq  =  sumFreq;  i  <  freqTable.size();  ++i)  {  sumFreq  +=  freqTable.get(i);  }		non-compiled	[CE]  illegal  start  of  expression	16	None	add
9	[BUG]  [BUGGY]    if(sumFreq  >  0)  {  for(int  i  =  0,  sumFreq  =  sumFreq;  i  <  freqTable.size();  ++i)  {  sumFreq  *=  freqTable.get(i);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  double  getPct(Comparable<?>  v)  {  final  long  sumFreq  =  getSumFreq();  if  (sumFreq  ==  0)  {  return  Double.NaN;  }  [BUGGY]    if(sumFreq  >  0)  {  for(int  i  =  0,  sumFreq  =  sumFreq;  i  <  freqTable.size();  ++i)  {  sumFreq  *=  freqTable.get(i);  }  [BUGGY]  return  (double)  getCount(v)  /  (double)  sumFreq;  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Comparable<?>  v  [VARIABLES]  Comparable  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5	320	320	1	replace	    if(sumFreq  >  0)  {  for(int  i  =  0,  sumFreq  =  sumFreq;  i  <  freqTable.size();  ++i)  {  sumFreq  *=  freqTable.get(i);  }		non-compiled	[CE]  illegal  start  of  expression	16	None	add
10	[BUG]  [BUGGY]    if(sumFreq  >  0)  {  for(int  i  =  0;  i  <  sumFreq;  ++i)  {  sumFreq  +=  freqTable.get(i);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  double  getPct(Comparable<?>  v)  {  final  long  sumFreq  =  getSumFreq();  if  (sumFreq  ==  0)  {  return  Double.NaN;  }  [BUGGY]    if(sumFreq  >  0)  {  for(int  i  =  0;  i  <  sumFreq;  ++i)  {  sumFreq  +=  freqTable.get(i);  }  [BUGGY]  return  (double)  getCount(v)  /  (double)  sumFreq;  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Comparable<?>  v  [VARIABLES]  Comparable  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5	320	320	1	replace	    if(sumFreq  >  0)  {  for(int  i  =  0;  i  <  sumFreq;  ++i)  {  sumFreq  +=  freqTable.get(i);  }		non-compiled	[CE]  illegal  start  of  expression	16	None	add
11	[BUG]  [BUGGY]    if(sumFreq  >  0)  {  for(int  i  =  0,  sumFreq  =  sumFreq;  i  <  freqTable.size();  ++i)  {  sumFreq  +=  freqTable.getPct(i);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  public  double  getPct(Comparable<?>  v)  {  final  long  sumFreq  =  getSumFreq();  if  (sumFreq  ==  0)  {  return  Double.NaN;  }  [BUGGY]    if(sumFreq  >  0)  {  for(int  i  =  0,  sumFreq  =  sumFreq;  i  <  freqTable.size();  ++i)  {  sumFreq  +=  freqTable.getPct(i);  }  [BUGGY]  return  (double)  getCount(v)  /  (double)  sumFreq;  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Comparable<?>  v  [VARIABLES]  Comparable  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5	320	320	1	replace	    if(sumFreq  >  0)  {  for(int  i  =  0,  sumFreq  =  sumFreq;  i  <  freqTable.size();  ++i)  {  sumFreq  +=  freqTable.getPct(i);  }		non-compiled	[CE]  illegal  start  of  expression	16	None	add
12	[BUG]  [BUGGY]    long  sumFreq  =  getSumFreq();  [CE]  variable  sumFreq  is  already  defined  in  method  getPct(Comparable<?>)  [FE]    AssertionFailedError  [CONTEXT]  public  double  getPct(Comparable<?>  v)  {  final  long  sumFreq  =  getSumFreq();  if  (sumFreq  ==  0)  {  return  Double.NaN;  }  [BUGGY]    long  sumFreq  =  getSumFreq();  [BUGGY]  return  (double)  getCount(v)  /  (double)  sumFreq;  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Comparable<?>  v  [VARIABLES]  Comparable  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5	320	320	1	replace	    long  sumFreq  =  getSumFreq();		non-compiled	[CE]  variable  sumFreq  is  already  defined  in  method  getPct(Comparable<?>)	16	None	add
13	[BUG]  [BUGGY]    if(sumFreq  >  0)  {  sumFreq  =  getSumFreq();  if(sumFreq  >  0)  {  sumFreq  =  Math.max(sumFreq,  sumFreq);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  double  getPct(Comparable<?>  v)  {  final  long  sumFreq  =  getSumFreq();  if  (sumFreq  ==  0)  {  return  Double.NaN;  }  [BUGGY]    if(sumFreq  >  0)  {  sumFreq  =  getSumFreq();  if(sumFreq  >  0)  {  sumFreq  =  Math.max(sumFreq,  sumFreq);  }  [BUGGY]  return  (double)  getCount(v)  /  (double)  sumFreq;  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Comparable<?>  v  [VARIABLES]  Comparable  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5	320	320	1	replace	    if(sumFreq  >  0)  {  sumFreq  =  getSumFreq();  if(sumFreq  >  0)  {  sumFreq  =  Math.max(sumFreq,  sumFreq);  }		non-compiled	[CE]  illegal  start  of  expression	16	None	add
14	[BUG]  [BUGGY]    if(sumFreq  >  0)  {  sumFreq  =  getSumFreq();  if(sumFreq  <  =  0)  {  sumFreq  =  Math.max(sumFreq,  sumFreq);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  double  getPct(Comparable<?>  v)  {  final  long  sumFreq  =  getSumFreq();  if  (sumFreq  ==  0)  {  return  Double.NaN;  }  [BUGGY]    if(sumFreq  >  0)  {  sumFreq  =  getSumFreq();  if(sumFreq  <  =  0)  {  sumFreq  =  Math.max(sumFreq,  sumFreq);  }  [BUGGY]  return  (double)  getCount(v)  /  (double)  sumFreq;  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Comparable<?>  v  [VARIABLES]  Comparable  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5	320	320	1	replace	    if(sumFreq  >  0)  {  sumFreq  =  getSumFreq();  if(sumFreq  <  =  0)  {  sumFreq  =  Math.max(sumFreq,  sumFreq);  }		non-compiled	[CE]  illegal  start  of  expression	16	None	add
15	[BUG]  [BUGGY]    double  sumFreq  =  getSumFreq();  [CE]  variable  sumFreq  is  already  defined  in  method  getPct(Comparable<?>)  [FE]          AssertionFailedError  [CONTEXT]  public  double  getPct(Comparable<?>  v)  {  final  long  sumFreq  =  getSumFreq();  if  (sumFreq  ==  0)  {  return  Double.NaN;  }  [BUGGY]    double  sumFreq  =  getSumFreq();  [BUGGY]  return  (double)  getCount(v)  /  (double)  sumFreq;  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Comparable<?>  v  [VARIABLES]  Comparable  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5	320	320	1	replace	    double  sumFreq  =  getSumFreq();		non-compiled	[CE]  variable  sumFreq  is  already  defined  in  method  getPct(Comparable<?>)	16	None	add
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  double  getPct(Comparable<?>  v)  {  final  long  sumFreq  =  getSumFreq();  if  (sumFreq  ==  0)  {  return  Double.NaN;  }  [BUGGY]  return(double)getCount(sumFreq)/(double)sumFreq;  [BUGGY]  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Comparable<?>  v  [VARIABLES]  Comparable  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5	320	320	1	add	return(double)getCount(sumFreq)/(double)sumFreq;	return  (double)  getCount(v)  /  (double)  sumFreq;  	compilable	  [FE]  AssertionFailedError  	15	3	replace
17	[BUG]  [BUGGY]  return(double)getCount(sumFreq)/(double)sumFreq;  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  double  getPct(Comparable<?>  v)  {  final  long  sumFreq  =  getSumFreq();  if  (sumFreq  ==  0)  {  return  Double.NaN;  }  [BUGGY]  return(double)getCount(sumFreq)/(double)sumFreq;  [BUGGY]  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getPct  [RETURN_TYPE]  double  Comparable<?>  v  [VARIABLES]  Comparable  v  boolean  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5	320	320	1	replace	return(double)getCount(sumFreq)/(double)sumFreq;	return  (double)  getCount(v)  /  (double)  sumFreq;  	compilable	  [FE]  AssertionFailedError  	15	3	replace
