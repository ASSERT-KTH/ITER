bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  long  result  =  getCumFreq(Long.MIN_VALUE,  v);  [CE]  no  suitable  method  found  for  getCumFreq(long,long)  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(Long.MIN_VALUE,  v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(Long.MIN_VALUE,  v);	  long    result    =    getCumFreq(Long.MIN_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(long,long)	94	None	replace
2	[BUG]  [BUGGY]  int  sumFreq  =  getSumFreq(v,  v);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  int  sumFreq  =  getSumFreq(v,  v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	int  sumFreq  =  getSumFreq(v,  v);	  long    sumFreq    =    getSumFreq(v,    v);    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	1	None	replace
3	[BUG]  [BUGGY]  long  sumFreq  =  getSumFreq(v,  v,  null);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getSumFreq(v,  v,  null);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getSumFreq(v,  v,  null);	  long    sumFreq    =    getSumFreq(v,    v);    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	1	None	replace
4	[BUG]  [BUGGY]  long  sumFreq  =  getSumFreq(v,  v,  freqTable);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getSumFreq(v,  v,  freqTable);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getSumFreq(v,  v,  freqTable);	  long    sumFreq    =    getSumFreq(v,    v);    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	1	None	replace
5	[BUG]  [BUGGY]  long  sumFreq  =  getSumFreq(v,  v),  freqTable);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getSumFreq(v,  v),  freqTable);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getSumFreq(v,  v),  freqTable);	  long    sumFreq    =    getSumFreq(v,    v);    	non-compiled	[CE]  ';'  expected	1	None	replace
6	[BUG]  [BUGGY]  short  result  =  getCumFreq(Long.valueOf(v));  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  short  result  =  getCumFreq(Long.valueOf(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	short  result  =  getCumFreq(Long.valueOf(v));	          long    result    =    getCumFreq(Long.valueOf(v));    short    result    =    getCumFreq(Long.valueOf(v));    	non-compiled	[CE]  possible  loss  of  precision	48	None	replace
7	[BUG]  [BUGGY]  int  result  =  getCumFreq(Long.valueOf(v));  [CE]  possible  loss  of  precision  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  int  result  =  getCumFreq(Long.valueOf(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	int  result  =  getCumFreq(Long.valueOf(v));	          long    result    =    getCumFreq(Long.valueOf(v));    short    result    =    getCumFreq(Long.valueOf(v));    	non-compiled	[CE]  possible  loss  of  precision	48	None	replace
8	[BUG]  [BUGGY]  null  result  =  getCumFreq(Long.valueOf(v));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  null  result  =  getCumFreq(Long.valueOf(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	null  result  =  getCumFreq(Long.valueOf(v));	          long    result    =    getCumFreq(Long.valueOf(v));    short    result    =    getCumFreq(Long.valueOf(v));    	non-compiled	[CE]  not  a  statement	48	None	replace
9	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v)/  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	add	return  getCumFreq(new  Long(v)/  1);	  return    getCumFreq(new    Long(v)+    1);    	compilable	  [FE]  StackOverflowError  	81	3	replace
10	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v)/  1);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v)/  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(new  Long(v)/  1);	  return    getCumFreq(new    Long(v)+    1);    	compilable	  [FE]  StackOverflowError  	81	3	replace
11	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v)+  2);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	add	return  getCumFreq(new  Long(v)+  2);	  return    getCumFreq(new    Long(v)+    1);    	compilable	  [FE]  StackOverflowError  	81	3	replace
12	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v)+  2);  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v)+  2);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(new  Long(v)+  2);	  return    getCumFreq(new    Long(v)+    1);    	compilable	  [FE]  StackOverflowError  	81	3	replace
13	[BUG]  [BUGGY]  return  getFreq(new  Long(v)+  1);  [CE]  cannot  find  symbol  [FE]        StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getFreq(new  Long(v)+  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getFreq(new  Long(v)+  1);	  return    getCumFreq(new    Long(v)+    1);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
14	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  }  else  {  sumFreq  +=  new  Long(v);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  }  else  {  sumFreq  +=  new  Long(v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  }  else  {  sumFreq  +=  new  Long(v);  }	  return    getCumFreq(new    Long(v));    getCumFreq(new    Long(v));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
15	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  }  else  {  sumFreq.setLength(0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  }  else  {  sumFreq.setLength(0);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  }  else  {  sumFreq.setLength(0);  }	  return    getCumFreq(new    Long(v));    getCumFreq(new    Long(v));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
16	[BUG]  [BUGGY]  long  sumFreq  =  freqTable.getCumFreq(v)/  1;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  freqTable.getCumFreq(v)/  1;  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  freqTable.getCumFreq(v)/  1;	  long    sumFreq    =    freqTable.getCumFreq(v)-    1;    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
17	[BUG]  [BUGGY]  long  sumFreq  =  freqTable.getCumFreq(v)-  1L;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  freqTable.getCumFreq(v)-  1L;  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  freqTable.getCumFreq(v)-  1L;	  long    sumFreq    =    freqTable.getCumFreq(v)-    1;    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
18	[BUG]  [BUGGY]  int  sumFreq  =  getSumFreq(v,  freqTable);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  int  sumFreq  =  getSumFreq(v,  freqTable);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	int  sumFreq  =  getSumFreq(v,  freqTable);	  long    sumFreq    =    getSumFreq(v,    freqTable);    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	2	None	replace
19	[BUG]  [BUGGY]  long  sumFreq  =  getSumFreq(v,  freqTable,  v);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getSumFreq(v,  freqTable,  v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getSumFreq(v,  freqTable,  v);	  long    sumFreq    =    getSumFreq(v,    freqTable);    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	2	None	replace
20	[BUG]  [BUGGY]  long  sumFreq  =  getSumFreq(v,  freqTable,  result);  [CE]  cannot  find  symbol  result  [FE]                          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getSumFreq(v,  freqTable,  result);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getSumFreq(v,  freqTable,  result);	  long    sumFreq    =    getSumFreq(v,    freqTable);    	non-compiled	[CE]  cannot  find  symbol  result	2	None	replace
21	[BUG]  [BUGGY]          long    result    =    getCumFreq(Long.valueOf(v));    result  =  getCumFreq(Long.valueOf(v));  long  result  =  getCumFreq(Long.valueOf(v));  result  =  getCumFreq(Long.valueOf(v));  [CE]  variable  result  is  already  defined  in  method  getCumFreq(long)  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]          long    result    =    getCumFreq(Long.valueOf(v));    result  =  getCumFreq(Long.valueOf(v));  long  result  =  getCumFreq(Long.valueOf(v));  result  =  getCumFreq(Long.valueOf(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	                long        result        =        getCumFreq(Long.valueOf(v));        result    =    getCumFreq(Long.valueOf(v));    long  result  =  getCumFreq(Long.valueOf(v));  result  =  getCumFreq(Long.valueOf(v));	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  getCumFreq(long)	87	None	add
22	[BUG]  [BUGGY]          long    result    =    getCumFreq(Long.valueOf(v));    result  =  getCumFreq(Long.valueOf(v));  Long  result  =  getCumFreq(Long.valueOf(v));  result  =  getCumFreq(Long.valueOf(v));  [CE]  variable  result  is  already  defined  in  method  getCumFreq(long)  [FE]      AssertionFailedError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]          long    result    =    getCumFreq(Long.valueOf(v));    result  =  getCumFreq(Long.valueOf(v));  Long  result  =  getCumFreq(Long.valueOf(v));  result  =  getCumFreq(Long.valueOf(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	                long        result        =        getCumFreq(Long.valueOf(v));        result    =    getCumFreq(Long.valueOf(v));    Long  result  =  getCumFreq(Long.valueOf(v));  result  =  getCumFreq(Long.valueOf(v));	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  getCumFreq(long)	87	None	add
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]          long    result    =    getCumFreq(Long.valueOf(v));    result  =  getCumFreq(Long.valueOf(v));  result  =  getCumFreq(Long.valueOf(v));  result  =  getCumFreq(Long.valueOf(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	add	                long        result        =        getCumFreq(Long.valueOf(v));        result    =    getCumFreq(Long.valueOf(v));    result  =  getCumFreq(Long.valueOf(v));  result  =  getCumFreq(Long.valueOf(v));	  	compilable	  [FE]  AssertionFailedError  	87	1	add
24	[BUG]  [BUGGY]          long    result    =    getCumFreq(Long.valueOf(v));    result  =  getCumFreq(Long.valueOf(v));  result  =  getCumFreq(Long.valueOf(v));  result  =  getCumFreq(Long.valueOf(v));  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]          long    result    =    getCumFreq(Long.valueOf(v));    result  =  getCumFreq(Long.valueOf(v));  result  =  getCumFreq(Long.valueOf(v));  result  =  getCumFreq(Long.valueOf(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	                long        result        =        getCumFreq(Long.valueOf(v));        result    =    getCumFreq(Long.valueOf(v));    result  =  getCumFreq(Long.valueOf(v));  result  =  getCumFreq(Long.valueOf(v));	  	compilable	  [FE]  AssertionFailedError  	87	1	add
25	[BUG]  [BUGGY]          long    result    =    getCumFreq(Long.valueOf(v));    result  =  getCumFreq(Long.valueOf(v));  long  result  =  getCumFreq(long.valueOf(v));  result  =  getCumFreq(Long.valueOf(v));  [CE]  class  expected  [FE]          AssertionFailedError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]          long    result    =    getCumFreq(Long.valueOf(v));    result  =  getCumFreq(Long.valueOf(v));  long  result  =  getCumFreq(long.valueOf(v));  result  =  getCumFreq(Long.valueOf(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	                long        result        =        getCumFreq(Long.valueOf(v));        result    =    getCumFreq(Long.valueOf(v));    long  result  =  getCumFreq(long.valueOf(v));  result  =  getCumFreq(Long.valueOf(v));	  	non-compiled	[CE]  class  expected	87	None	add
26	[BUG]  [BUGGY]          long    result    =    getCumFreq(Long.valueOf(v));    result  =  getCumFreq(Long.valueOf(v));  short  result  =  getCumFreq(Long.valueOf(v));  result  =  getCumFreq(Long.valueOf(v));  [CE]  variable  result  is  already  defined  in  method  getCumFreq(long)  [FE]            AssertionFailedError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]          long    result    =    getCumFreq(Long.valueOf(v));    result  =  getCumFreq(Long.valueOf(v));  short  result  =  getCumFreq(Long.valueOf(v));  result  =  getCumFreq(Long.valueOf(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	                long        result        =        getCumFreq(Long.valueOf(v));        result    =    getCumFreq(Long.valueOf(v));    short  result  =  getCumFreq(Long.valueOf(v));  result  =  getCumFreq(Long.valueOf(v));	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  getCumFreq(long)	87	None	add
27	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(v)/  1;  [CE]  missing  return  statement  [FE]            StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(v)/  1;  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(v)/  1;	  long    sumFreq    =    getCumFreq(v)+    1;    	non-compiled	[CE]  missing  return  statement	97	None	replace
28	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(v)+  1L;  [CE]  missing  return  statement  [FE]              StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(v)+  1L;  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(v)+  1L;	  long    sumFreq    =    getCumFreq(v)+    1;    	non-compiled	[CE]  missing  return  statement	97	None	replace
29	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(v)+  2;  [CE]  missing  return  statement  [FE]                StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(v)+  2;  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(v)+  2;	  long    sumFreq    =    getCumFreq(v)+    1;    	non-compiled	[CE]  missing  return  statement	97	None	replace
30	[BUG]  [BUGGY]  return  getCumFreq(variable,  freqTable.valueOf(v));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(variable,  freqTable.valueOf(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(variable,  freqTable.valueOf(v));	  return    getCumFreq(variable.valueOf(v));    	non-compiled	[CE]  cannot  find  symbol  	65	None	replace
31	[BUG]  [BUGGY]  return  getCumFreq(v.valueOf(variable));  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v.valueOf(variable));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(v.valueOf(variable));	  return    getCumFreq(variable.valueOf(v));    	non-compiled	[CE]  cannot  find  symbol  	65	None	replace
32	[BUG]  [BUGGY]  return  getCumFreq(variable.valueOf(v),  v);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(variable.valueOf(v),  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(variable.valueOf(v),  v);	  return    getCumFreq(variable.valueOf(v));    	non-compiled	[CE]  cannot  find  symbol  	65	None	replace
33	[BUG]  [BUGGY]  return  sumFreqTable.longValue();  [CE]  cannot  find  symbol  sumFreqTable  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  sumFreqTable.longValue();  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  sumFreqTable.longValue();	  return    freqTable.longValue();    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	71	None	replace
34	[BUG]  [BUGGY]  return  this.sumFreqTable.longValue();  [CE]  cannot  find  symbol  sumFreqTable  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  this.sumFreqTable.longValue();  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  this.sumFreqTable.longValue();	  return    freqTable.longValue();    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	71	None	replace
35	[BUG]  [BUGGY]  return  sumFreqtable.longValue();  [CE]  cannot  find  symbol  sumFreqtable  [FE]                        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  sumFreqtable.longValue();  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  sumFreqtable.longValue();	  return    freqTable.longValue();    	non-compiled	[CE]  cannot  find  symbol  sumFreqtable	71	None	replace
36	[BUG]  [BUGGY]  long  result  =  getCumFreq(Long.MAX_VALUE);  return  result  +  v.length();  [CE]  long  cannot  be  dereferenced  [FE]        StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(Long.MAX_VALUE);  return  result  +  v.length();  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(Long.MAX_VALUE);  return  result  +  v.length();	  return    getCumFreq(Long.MAX_VALUE);    long    result    =    getCumFreq(Long.MAX_VALUE);    return    result    +    sumFreq.length();    	non-compiled	[CE]  long  cannot  be  dereferenced	100	None	replace
37	[BUG]  [BUGGY]  long  result  =  getCumFreq(v);  return  result  +  v.length();  [CE]  long  cannot  be  dereferenced  [FE]          StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(v);  return  result  +  v.length();  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(v);  return  result  +  v.length();	  return    getCumFreq(Long.MAX_VALUE);    long    result    =    getCumFreq(Long.MAX_VALUE);    return    result    +    sumFreq.length();    	non-compiled	[CE]  long  cannot  be  dereferenced	100	None	replace
38	[BUG]  [BUGGY]  long  result  =  getCumFreq(long.MAX_VALUE);  return  result  +  v.length();  [CE]  class  expected  [FE]            StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(long.MAX_VALUE);  return  result  +  v.length();  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(long.MAX_VALUE);  return  result  +  v.length();	  return    getCumFreq(Long.MAX_VALUE);    long    result    =    getCumFreq(Long.MAX_VALUE);    return    result    +    sumFreq.length();    	non-compiled	[CE]  class  expected	100	None	replace
39	[BUG]  [BUGGY]  long  result  =  getCumFreq(Long.MIN_VALUE);  return  result  +  v.length();  [CE]  long  cannot  be  dereferenced  [FE]              StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(Long.MIN_VALUE);  return  result  +  v.length();  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(Long.MIN_VALUE);  return  result  +  v.length();	  return    getCumFreq(Long.MAX_VALUE);    long    result    =    getCumFreq(Long.MAX_VALUE);    return    result    +    sumFreq.length();    	non-compiled	[CE]  long  cannot  be  dereferenced	100	None	replace
40	[BUG]  [BUGGY]  long  v  =  this.freqTable.getCumFreq(v);  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  v  =  this.freqTable.getCumFreq(v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  v  =  this.freqTable.getCumFreq(v);	  long    sumFreq    =    this.freqTable.getCumFreq(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	62	None	replace
41	[BUG]  [BUGGY]  long  freq  =  this.freqTable.getCumFreq(v);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  freq  =  this.freqTable.getCumFreq(v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  freq  =  this.freqTable.getCumFreq(v);	  long    sumFreq    =    this.freqTable.getCumFreq(v);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
42	[BUG]  [BUGGY]  return  getFreq(Long.MAX_VALUE,  v  +  1);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getFreq(Long.MAX_VALUE,  v  +  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getFreq(Long.MAX_VALUE,  v  +  1);	  return    getFreq(Long.MAX_VALUE,    v);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
43	[BUG]  [BUGGY]  return  getFreq(Number.MAX_VALUE,  v);  [CE]  cannot  find  symbol  MAX_VALUE  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getFreq(Number.MAX_VALUE,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getFreq(Number.MAX_VALUE,  v);	  return    getFreq(Long.MAX_VALUE,    v);    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	109	None	replace
44	[BUG]  [BUGGY]  return  getFreq(Long.MAX_VALUE,  v)+  1;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getFreq(Long.MAX_VALUE,  v)+  1;  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getFreq(Long.MAX_VALUE,  v)+  1;	  return    getFreq(Long.MAX_VALUE,    v);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
45	[BUG]  [BUGGY]  return  getFreq(new  Long(v),  sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getFreq(new  Long(v),  sumFreq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getFreq(new  Long(v),  sumFreq);	  return    getFreq(new    Long(v));    	non-compiled	[CE]  cannot  find  symbol  sumFreq	51	None	replace
46	[BUG]  [BUGGY]  return  getFreq(new  Long(v),  freqTable);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getFreq(new  Long(v),  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getFreq(new  Long(v),  freqTable);	  return    getFreq(new    Long(v));    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
47	[BUG]  [BUGGY]  null  sumFreq  =  getCumFreq(new  Long(v));  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  null  sumFreq  =  getCumFreq(new  Long(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	null  sumFreq  =  getCumFreq(new  Long(v));	          long    sumFreq    =    getCumFreq(new    Long(v));    Long    sumFreq    =    getCumFreq(new    Long(v));    	non-compiled	[CE]  not  a  statement	6	None	replace
48	[BUG]  [BUGGY]  Long  sumFreq  =  getCumFreq(new  Long(v));  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  Long  sumFreq  =  getCumFreq(new  Long(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	Long  sumFreq  =  getCumFreq(new  Long(v));	          long    sumFreq    =    getCumFreq(new    Long(v));    Long    sumFreq    =    getCumFreq(new    Long(v));    	non-compiled	[CE]  missing  return  statement	6	None	replace
49	[BUG]  [BUGGY]  long  v  =  sumFreqTable.size();  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  v  =  sumFreqTable.size();  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  v  =  sumFreqTable.size();	  int    v    =    sumFreqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	21	None	replace
50	[BUG]  [BUGGY]  return  getCumFreq(Long.parseLong(v)+  1,  freqTable);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(Long.parseLong(v)+  1,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.parseLong(v)+  1,  freqTable);	  return    getCumFreq(Long.parseLong(v)+    1);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	93	None	replace
51	[BUG]  [BUGGY]  return  getCumFreq(Long.parseLong(v)/  1);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(Long.parseLong(v)/  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.parseLong(v)/  1);	  return    getCumFreq(Long.parseLong(v)+    1);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	93	None	replace
52	[BUG]  [BUGGY]  return  getCumFreq(Long.parseLong(v)+  1,  v);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(Long.parseLong(v)+  1,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.parseLong(v)+  1,  v);	  return    getCumFreq(Long.parseLong(v)+    1);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	93	None	replace
53	[BUG]  [BUGGY]  return  getCumFreq(Long.parseLong(v),  v  +  1);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(Long.parseLong(v),  v  +  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.parseLong(v),  v  +  1);	  return    getCumFreq(Long.parseLong(v)+    1);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	93	None	replace
54	[BUG]  [BUGGY]  return  getFreq(Long.valueOf(v),  sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getFreq(Long.valueOf(v),  sumFreq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getFreq(Long.valueOf(v),  sumFreq);	  return    getFreq(Long.valueOf(v),    freqTable);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	57	None	replace
55	[BUG]  [BUGGY]  return  getFreq(Long.valueOf(v),  sumFreqTable);  [CE]  cannot  find  symbol  sumFreqTable  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getFreq(Long.valueOf(v),  sumFreqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getFreq(Long.valueOf(v),  sumFreqTable);	  return    getFreq(Long.valueOf(v),    freqTable);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	57	None	replace
56	[BUG]  [BUGGY]  return  getFreq(Long.parseLong(v),  freqTable);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getFreq(Long.parseLong(v),  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getFreq(Long.parseLong(v),  freqTable);	  return    getFreq(Long.valueOf(v),    freqTable);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	57	None	replace
57	[BUG]  [BUGGY]  null  result  =  getCumFreq(new  Long(v));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  null  result  =  getCumFreq(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	null  result  =  getCumFreq(new  Long(v));	  return    getCumFreq(new    Long(v));    long    result    =    getCumFreq(new    Long(v));    	non-compiled	[CE]  not  a  statement	25	None	replace
58	[BUG]  [BUGGY]  long  result  =  getCumFreq(new  Long(v));  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(new  Long(v));	  return    getCumFreq(new    Long(v));    long    result    =    getCumFreq(new    Long(v));    	non-compiled	[CE]  missing  return  statement	25	None	replace
59	[BUG]  [BUGGY]  this.sumFreq  =  getCumFreq(v,  Long.valueOf(v));  [CE]  cannot  find  symbol  sumFreq  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  this.sumFreq  =  getCumFreq(v,  Long.valueOf(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	this.sumFreq  =  getCumFreq(v,  Long.valueOf(v));	  this.sumFreq    =    getCumFreq(v,    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	59	None	replace
60	[BUG]  [BUGGY]  this.sumFreq  =  getCumFreq(v,  Long.MAX_VALUE);  [CE]  cannot  find  symbol  sumFreq  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  this.sumFreq  =  getCumFreq(v,  Long.MAX_VALUE);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	this.sumFreq  =  getCumFreq(v,  Long.MAX_VALUE);	  this.sumFreq    =    getCumFreq(v,    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	59	None	replace
61	[BUG]  [BUGGY]  this.sumFreq  =  getCumFreq(v,  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  sumFreq  [FE]                        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  this.sumFreq  =  getCumFreq(v,  Integer.MAX_VALUE);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	this.sumFreq  =  getCumFreq(v,  Integer.MAX_VALUE);	  this.sumFreq    =    getCumFreq(v,    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	59	None	replace
62	[BUG]  [BUGGY]  this.sumFreq  =  getCumFreq(v  -  2);  [CE]  cannot  find  symbol  sumFreq  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  this.sumFreq  =  getCumFreq(v  -  2);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	this.sumFreq  =  getCumFreq(v  -  2);	  this.sumFreq    =    getCumFreq(v    -    1);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	76	None	replace
63	[BUG]  [BUGGY]  this.sumFreq  =  getCumFreq(v  *  1);  [CE]  cannot  find  symbol  sumFreq  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  this.sumFreq  =  getCumFreq(v  *  1);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	this.sumFreq  =  getCumFreq(v  *  1);	  this.sumFreq    =    getCumFreq(v    -    1);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	76	None	replace
64	[BUG]  [BUGGY]  this.sumFreq  =  getCumFreq(v  /  1);  [CE]  cannot  find  symbol  sumFreq  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  this.sumFreq  =  getCumFreq(v  /  1);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	this.sumFreq  =  getCumFreq(v  /  1);	  this.sumFreq    =    getCumFreq(v    -    1);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	76	None	replace
65	[BUG]  [BUGGY]  long  result  =  getCumFreq(new  Long(v));  return  result  +  v.longValue();  [CE]  long  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(new  Long(v));  return  result  +  v.longValue();  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(new  Long(v));  return  result  +  v.longValue();	  return    getCumFreq(new    Long(v));    long    result    =    getCumFreq(new    Long(v));    return    result    +    sumFreq.longValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	98	None	replace
66	[BUG]  [BUGGY]  long  result  =  getCumFreq(new  Long(v));  return  result  +  freq.longValue();  [CE]  cannot  find  symbol  freq  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(new  Long(v));  return  result  +  freq.longValue();  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(new  Long(v));  return  result  +  freq.longValue();	  return    getCumFreq(new    Long(v));    long    result    =    getCumFreq(new    Long(v));    return    result    +    sumFreq.longValue();    	non-compiled	[CE]  cannot  find  symbol  freq	98	None	replace
67	[BUG]  [BUGGY]  long  result  =  getCumFreq(new  Long(v));  return  result  +  freqTable.longValue();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(new  Long(v));  return  result  +  freqTable.longValue();  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(new  Long(v));  return  result  +  freqTable.longValue();	  return    getCumFreq(new    Long(v));    long    result    =    getCumFreq(new    Long(v));    return    result    +    sumFreq.longValue();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
68	[BUG]  [BUGGY]  return  v  *  Math.cos(v);  [CE]  possible  loss  of  precision  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  v  *  Math.cos(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  v  *  Math.cos(v);	  return    sumFreq    *    Math.cos(v);    	non-compiled	[CE]  possible  loss  of  precision	83	None	replace
69	[BUG]  [BUGGY]  return  v  *  Math.cos(sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  v  *  Math.cos(sumFreq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  v  *  Math.cos(sumFreq);	  return    sumFreq    *    Math.cos(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	83	None	replace
70	[BUG]  [BUGGY]  return  this.sumFreq  *  Math.cos(v);  [CE]  cannot  find  symbol  sumFreq  [FE]                        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  this.sumFreq  *  Math.cos(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  this.sumFreq  *  Math.cos(v);	  return    sumFreq    *    Math.cos(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	83	None	replace
71	[BUG]  [BUGGY]  int  v  =  getCumFreq(Long.MAX_VALUE);  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]                StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  int  v  =  getCumFreq(Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	int  v  =  getCumFreq(Long.MAX_VALUE);	  return    getCumFreq(Long.MAX_VALUE);    int    v    =    getCumFreq(Long.MAX_VALUE);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	41	None	replace
72	[BUG]  [BUGGY]  null  v  =  getCumFreq(Long.MAX_VALUE);  [CE]  not  a  statement  [FE]                  StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  null  v  =  getCumFreq(Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	null  v  =  getCumFreq(Long.MAX_VALUE);	  return    getCumFreq(Long.MAX_VALUE);    int    v    =    getCumFreq(Long.MAX_VALUE);    	non-compiled	[CE]  not  a  statement	41	None	replace
73	[BUG]  [BUGGY]  v  =  getCumFreq(Long.MAX_VALUE);  [CE]  missing  return  statement  [FE]                    StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  v  =  getCumFreq(Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	v  =  getCumFreq(Long.MAX_VALUE);	  return    getCumFreq(Long.MAX_VALUE);    int    v    =    getCumFreq(Long.MAX_VALUE);    	non-compiled	[CE]  missing  return  statement	41	None	replace
74	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  }  else  {  sumFreq  =  new  Long(v);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  }  else  {  sumFreq  =  new  Long(v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  }  else  {  sumFreq  =  new  Long(v);  }	  return    getCumFreq(new    Long(v));    if(v    <    =    0)    {    sumFreq    =    null;    }    else    {    sumFreq    =    new    Long(v);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
75	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  }  else  {  sumFreq  =  null;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  }  else  {  sumFreq  =  null;  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  }  else  {  sumFreq  =  null;  }	  return    getCumFreq(new    Long(v));    if(v    <    =    0)    {    sumFreq    =    null;    }    else    {    sumFreq    =    new    Long(v);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
76	[BUG]  [BUGGY]  this.sumFreq  =  getCumFreq(new  Long(v));  [CE]  cannot  find  symbol  sumFreq  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  this.sumFreq  =  getCumFreq(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	this.sumFreq  =  getCumFreq(new  Long(v));	  return    getCumFreq(new    Long(v));    if(v    <    =    0)    {    sumFreq    =    null;    }    else    {    sumFreq    =    new    Long(v);    }    	non-compiled	[CE]  cannot  find  symbol  sumFreq	90	None	replace
77	[BUG]  [BUGGY]  short  sumFreq  =  getCumFreq(v);  [CE]  possible  loss  of  precision  [FE]              StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  short  sumFreq  =  getCumFreq(v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	short  sumFreq  =  getCumFreq(v);	          long    sumFreq    =    getCumFreq(v);    short    sumFreq    =    getCumFreq(v);    	non-compiled	[CE]  possible  loss  of  precision	19	None	replace
78	[BUG]  [BUGGY]  null  sumFreq  =  getCumFreq(Long.valueOf(v));  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  null  sumFreq  =  getCumFreq(Long.valueOf(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	null  sumFreq  =  getCumFreq(Long.valueOf(v));	          long    sumFreq    =    getCumFreq(Long.valueOf(v));    long    sumFreq    =    getCumFreq(Long.valueOf(v));    	non-compiled	[CE]  not  a  statement	52	None	replace
79	[BUG]  [BUGGY]  short  sumFreq  =  getCumFreq(Long.valueOf(v));  [CE]  possible  loss  of  precision  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  short  sumFreq  =  getCumFreq(Long.valueOf(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	short  sumFreq  =  getCumFreq(Long.valueOf(v));	          long    sumFreq    =    getCumFreq(Long.valueOf(v));    long    sumFreq    =    getCumFreq(Long.valueOf(v));    	non-compiled	[CE]  possible  loss  of  precision	52	None	replace
80	[BUG]  [BUGGY]  long  v  =  freqTable.size()  -  1;  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  v  =  freqTable.size()  -  1;  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  v  =  freqTable.size()  -  1;	  long    v    =    freqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	20	None	replace
81	[BUG]  [BUGGY]  long  v  =  freqTable.size()  +  1;  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  v  =  freqTable.size()  +  1;  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  v  =  freqTable.size()  +  1;	  long    v    =    freqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	20	None	replace
82	[BUG]  [BUGGY]  return  v  *  Math.max(v,  sumFreq.length);  [CE]  cannot  find  symbol  sumFreq  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  v  *  Math.max(v,  sumFreq.length);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  v  *  Math.max(v,  sumFreq.length);	  return    sumFreq    *    Math.max(v,    sumFreq.length);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	32	None	replace
83	[BUG]  [BUGGY]  return  v  *  Math.max(v,  v.length);  [CE]  long  cannot  be  dereferenced  [FE]                        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  v  *  Math.max(v,  v.length);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  v  *  Math.max(v,  v.length);	  return    sumFreq    *    Math.max(v,    sumFreq.length);    	non-compiled	[CE]  long  cannot  be  dereferenced	32	None	replace
84	[BUG]  [BUGGY]  return  v  *  Math.max(sumFreq,  v.length);  [CE]  cannot  find  symbol  sumFreq  [FE]                          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  v  *  Math.max(sumFreq,  v.length);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  v  *  Math.max(sumFreq,  v.length);	  return    sumFreq    *    Math.max(v,    sumFreq.length);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	32	None	replace
85	[BUG]  [BUGGY]  return  sumFreq  *  Math.max(v,  v.length);  [CE]  cannot  find  symbol  sumFreq  [FE]                            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  sumFreq  *  Math.max(v,  v.length);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  sumFreq  *  Math.max(v,  v.length);	  return    sumFreq    *    Math.max(v,    sumFreq.length);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	32	None	replace
86	[BUG]  [BUGGY]  long  result  =  getCumFreq(Long.MAX_VALUE);  return  result  +  v.length;  [CE]  long  cannot  be  dereferenced  [FE]        StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(Long.MAX_VALUE);  return  result  +  v.length;  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(Long.MAX_VALUE);  return  result  +  v.length;	  return    getCumFreq(Long.MAX_VALUE);    long    result    =    getCumFreq(Long.MAX_VALUE);    return    result    +    sumFreq.length;    	non-compiled	[CE]  long  cannot  be  dereferenced	92	None	replace
87	[BUG]  [BUGGY]  long  result  =  getCumFreq(v);  return  result  +  v.length;  [CE]  long  cannot  be  dereferenced  [FE]          StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(v);  return  result  +  v.length;  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(v);  return  result  +  v.length;	  return    getCumFreq(Long.MAX_VALUE);    long    result    =    getCumFreq(Long.MAX_VALUE);    return    result    +    sumFreq.length;    	non-compiled	[CE]  long  cannot  be  dereferenced	92	None	replace
88	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(Long.MAX_VALUE);  return  result  +  v;  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	add	long  result  =  getCumFreq(Long.MAX_VALUE);  return  result  +  v;	  return    getCumFreq(Long.MAX_VALUE);    long    result    =    getCumFreq(Long.MAX_VALUE);    return    result    +    sumFreq.length;    	compilable	  [FE]  StackOverflowError  	92	3	replace
89	[BUG]  [BUGGY]  long  result  =  getCumFreq(Long.MAX_VALUE);  return  result  +  v;  [FE]  StackOverflowError  [FE]            StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(Long.MAX_VALUE);  return  result  +  v;  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(Long.MAX_VALUE);  return  result  +  v;	  return    getCumFreq(Long.MAX_VALUE);    long    result    =    getCumFreq(Long.MAX_VALUE);    return    result    +    sumFreq.length;    	compilable	  [FE]  StackOverflowError  	92	3	replace
90	[BUG]  [BUGGY]  long  result  =  getCumFreq(long.MAX_VALUE);  return  result  +  v.length;  [CE]  class  expected  [FE]              StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(long.MAX_VALUE);  return  result  +  v.length;  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(long.MAX_VALUE);  return  result  +  v.length;	  return    getCumFreq(Long.MAX_VALUE);    long    result    =    getCumFreq(Long.MAX_VALUE);    return    result    +    sumFreq.length;    	non-compiled	[CE]  class  expected	92	None	replace
91	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(v  -  2);  [CE]  missing  return  statement  [FE]        StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(v  -  2);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(v  -  2);	  long    sumFreq    =    getCumFreq(v    -    1);    	non-compiled	[CE]  missing  return  statement	95	None	replace
92	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(v  *  1);  [CE]  missing  return  statement  [FE]          StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(v  *  1);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(v  *  1);	  long    sumFreq    =    getCumFreq(v    -    1);    	non-compiled	[CE]  missing  return  statement	95	None	replace
93	[BUG]  [BUGGY]  short  sumFreq  =  getCumFreq(new  Long(v));  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  short  sumFreq  =  getCumFreq(new  Long(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	short  sumFreq  =  getCumFreq(new  Long(v));	          long    sumFreq    =    getCumFreq(new    Long(v));    short    sumFreq    =    getCumFreq(new    Long(v));    	non-compiled	[CE]  possible  loss  of  precision	8	None	replace
94	[BUG]  [BUGGY]  long  sumFreq  =  getSumFreq(v,  result,  false);  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getSumFreq(v,  result,  false);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getSumFreq(v,  result,  false);	  long    sumFreq    =    getSumFreq(v,    false);    	non-compiled	[CE]  cannot  find  symbol  result	101	None	replace
95	[BUG]  [BUGGY]  long  sumFreq  =  getSumFreq(v,  v,  false);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getSumFreq(v,  v,  false);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getSumFreq(v,  v,  false);	  long    sumFreq    =    getSumFreq(v,    false);    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	101	None	replace
96	[BUG]  [BUGGY]  long  sumFreq  =  getSumFreq(v,  true);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getSumFreq(v,  true);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getSumFreq(v,  true);	  long    sumFreq    =    getSumFreq(v,    false);    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	101	None	replace
97	[BUG]  [BUGGY]  int  sumFreq  =  getSumFreq(v,  false);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  int  sumFreq  =  getSumFreq(v,  false);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	int  sumFreq  =  getSumFreq(v,  false);	  long    sumFreq    =    getSumFreq(v,    false);    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	101	None	replace
98	[BUG]  [BUGGY]  return  getFreq(Long.parseLong(v),  sumFreq);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getFreq(Long.parseLong(v),  sumFreq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getFreq(Long.parseLong(v),  sumFreq);	  return    getFreq(Long.parseLong(v));    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	56	None	replace
99	[BUG]  [BUGGY]  return  getFreq(Short.parseLong(v));  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getFreq(Short.parseLong(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getFreq(Short.parseLong(v));	  return    getFreq(Long.parseLong(v));    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
100	[BUG]  [BUGGY]  return  getFreq(Util.parseLong(v));  [CE]  cannot  find  symbol  Util  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getFreq(Util.parseLong(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getFreq(Util.parseLong(v));	  return    getFreq(Long.parseLong(v));    	non-compiled	[CE]  cannot  find  symbol  Util	56	None	replace
101	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v)+  1);  getCumFreq(new  Long(v)+  1);  [CE]  unreachable  statement  [FE]    StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v)+  1);  getCumFreq(new  Long(v)+  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return    getCumFreq(new    Long(v)+    1);    getCumFreq(new  Long(v)+  1);	  	non-compiled	[CE]  unreachable  statement	80	None	add
102	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v)+  1);  long  v  =  getCumFreq(new  Long(v)+  1);  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]      StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v)+  1);  long  v  =  getCumFreq(new  Long(v)+  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return    getCumFreq(new    Long(v)+    1);    long  v  =  getCumFreq(new  Long(v)+  1);	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	80	None	add
103	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v)+  1);  return  getCumFreq(new  Long(v)+  1);  [CE]  unreachable  statement  [FE]        StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v)+  1);  return  getCumFreq(new  Long(v)+  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return    getCumFreq(new    Long(v)+    1);    return  getCumFreq(new  Long(v)+  1);	  	non-compiled	[CE]  unreachable  statement	80	None	add
104	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v)+  1);  if(v  <  =  0)  {  return  getCumFreq(new  Long(v)+  1);  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v)+  1);  if(v  <  =  0)  {  return  getCumFreq(new  Long(v)+  1);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return    getCumFreq(new    Long(v)+    1);    if(v  <  =  0)  {  return  getCumFreq(new  Long(v)+  1);  }	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
105	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v)+  1);  long  v  =  getCumFreq(new  Long(v)+  1);  return  getCumFreq(new  Long(v)+  1);  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]            StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v)+  1);  long  v  =  getCumFreq(new  Long(v)+  1);  return  getCumFreq(new  Long(v)+  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return    getCumFreq(new    Long(v)+    1);    long  v  =  getCumFreq(new  Long(v)+  1);  return  getCumFreq(new  Long(v)+  1);	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	80	None	add
106	[BUG]  [BUGGY]  return  getCumFreq(Long.parseLong(v)/  2.0,  freqTable);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(Long.parseLong(v)/  2.0,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.parseLong(v)/  2.0,  freqTable);	  return    getCumFreq(Long.parseLong(v)/    2.0);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	102	None	replace
107	[BUG]  [BUGGY]  return  getCumFreq(Long.parseLong(v)/  2.0,  sumFreqTable);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(Long.parseLong(v)/  2.0,  sumFreqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.parseLong(v)/  2.0,  sumFreqTable);	  return    getCumFreq(Long.parseLong(v)/    2.0);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	102	None	replace
108	[BUG]  [BUGGY]  return  getCumFreq(Long.parseLong(v)/  2.0,  sumFreq);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(Long.parseLong(v)/  2.0,  sumFreq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.parseLong(v)/  2.0,  sumFreq);	  return    getCumFreq(Long.parseLong(v)/    2.0);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	102	None	replace
109	[BUG]  [BUGGY]  return  getCumFreq(v,  Long.MAX_VALUE,  freqTable);  [CE]  no  suitable  method  found  for  getCumFreq(long,long,TreeMap<Comparable<?>,Long>)  [FE]        StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v,  Long.MAX_VALUE,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(v,  Long.MAX_VALUE,  freqTable);	  return    getCumFreq(v,    Long.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(long,long,TreeMap<Comparable<?>,Long>)	77	None	replace
110	[BUG]  [BUGGY]  return  getCumFreq(v,  Long.MAX_VALUE,  sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]          StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v,  Long.MAX_VALUE,  sumFreq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(v,  Long.MAX_VALUE,  sumFreq);	  return    getCumFreq(v,    Long.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	77	None	replace
111	[BUG]  [BUGGY]  return  getCumFreq(v,  Long.MAX_VALUE,  v);  [CE]  no  suitable  method  found  for  getCumFreq(long,long,long)  [FE]            StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v,  Long.MAX_VALUE,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(v,  Long.MAX_VALUE,  v);	  return    getCumFreq(v,    Long.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(long,long,long)	77	None	replace
112	[BUG]  [BUGGY]  return  getCumFreq(v,  v,  Long.MAX_VALUE);  [CE]  no  suitable  method  found  for  getCumFreq(long,long,long)  [FE]              StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v,  v,  Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(v,  v,  Long.MAX_VALUE);	  return    getCumFreq(v,    Long.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(long,long,long)	77	None	replace
113	[BUG]  [BUGGY]  return  getCumFreq(Long.parseLong(v),  sumFreq,  freqTable);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(Long.parseLong(v),  sumFreq,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.parseLong(v),  sumFreq,  freqTable);	  return    getCumFreq(Long.parseLong(v),    freqTable);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	34	None	replace
114	[BUG]  [BUGGY]  return  getCumFreq(Long.parseLong(v),  sumFreqTable,  freqTable);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(Long.parseLong(v),  sumFreqTable,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.parseLong(v),  sumFreqTable,  freqTable);	  return    getCumFreq(Long.parseLong(v),    freqTable);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	34	None	replace
115	[BUG]  [BUGGY]  return  getFrequency(Long.MAX_VALUE,  v);  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getFrequency(Long.MAX_VALUE,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getFrequency(Long.MAX_VALUE,  v);	  return    getFrequency(Long.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
116	[BUG]  [BUGGY]  return  getFrequency(Variable.MAX_VALUE);  [CE]  cannot  find  symbol  Variable  [FE]              StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getFrequency(Variable.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getFrequency(Variable.MAX_VALUE);	  return    getFrequency(Long.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  Variable	12	None	replace
117	[BUG]  [BUGGY]  long  sumFreq  =  getSumFreq(Long.valueOf(v),  v);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getSumFreq(Long.valueOf(v),  v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getSumFreq(Long.valueOf(v),  v);	  long    sumFreq    =    getSumFreq(Long.valueOf(v));    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	44	None	replace
118	[BUG]  [BUGGY]  int  sumFreq  =  getSumFreq(Long.valueOf(v));  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  int  sumFreq  =  getSumFreq(Long.valueOf(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	int  sumFreq  =  getSumFreq(Long.valueOf(v));	  long    sumFreq    =    getSumFreq(Long.valueOf(v));    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	44	None	replace
119	[BUG]  [BUGGY]  long  sumFreq  =  getSumFreq(Long.valueOf(v),  freqTable);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getSumFreq(Long.valueOf(v),  freqTable);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getSumFreq(Long.valueOf(v),  freqTable);	  long    sumFreq    =    getSumFreq(Long.valueOf(v));    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	44	None	replace
120	[BUG]  [BUGGY]  long  sumFreq  =  getSumFreq(Long.valueOf(v),  0);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getSumFreq(Long.valueOf(v),  0);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getSumFreq(Long.valueOf(v),  0);	  long    sumFreq    =    getSumFreq(Long.valueOf(v));    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	44	None	replace
121	[BUG]  [BUGGY]  long  v  =  getCumFreq(Long.parseLong(value));  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  v  =  getCumFreq(Long.parseLong(value));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  v  =  getCumFreq(Long.parseLong(value));	  long    v    =    getCumFreq(Long.parseLong(v));    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	67	None	replace
122	[BUG]  [BUGGY]  long  v  =  getCumFreq(Long.parseLong(variable));  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  v  =  getCumFreq(Long.parseLong(variable));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  v  =  getCumFreq(Long.parseLong(variable));	  long    v    =    getCumFreq(Long.parseLong(v));    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	67	None	replace
123	[BUG]  [BUGGY]  long  v  =  getCumFreq(Long.parseLong(b));  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  v  =  getCumFreq(Long.parseLong(b));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  v  =  getCumFreq(Long.parseLong(b));	  long    v    =    getCumFreq(Long.parseLong(v));    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	67	None	replace
124	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v),  sumFreq,  v);  [CE]  cannot  find  symbol  sumFreq  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v),  sumFreq,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(new  Long(v),  sumFreq,  v);	  return    getCumFreq(new    Long(v),    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	49	None	replace
125	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v),  freqTable,  v);  [CE]  no  suitable  method  found  for  getCumFreq(Long,TreeMap<Comparable<?>,Long>,long)  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v),  freqTable,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(new  Long(v),  freqTable,  v);	  return    getCumFreq(new    Long(v),    v);    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(Long,TreeMap<Comparable<?>,Long>,long)	49	None	replace
126	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v),  sumFreq.longValue());  [CE]  cannot  find  symbol  sumFreq  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v),  sumFreq.longValue());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(new  Long(v),  sumFreq.longValue());	  return    getCumFreq(new    Long(v),    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	49	None	replace
127	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  if(v  <  =  0)  {  sumFreq  =  new  Long(v);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  if(v  <  =  0)  {  sumFreq  =  new  Long(v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  if(v  <  =  0)  {  sumFreq  =  new  Long(v);  }	  return    getCumFreq(new    Long(v));    if(v    <    =    0)    {    sumFreq    =    new    Long(v);    }    else    {    sumFreq    =    new    Long(v);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
128	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  }	  return    getCumFreq(new    Long(v));    if(v    <    =    0)    {    sumFreq    =    new    Long(v);    }    else    {    sumFreq    =    new    Long(v);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
129	[BUG]  [BUGGY]  long  v  =  getCumFreq(new  Long(v));  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  v  =  getCumFreq(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  v  =  getCumFreq(new  Long(v));	  return    getCumFreq(new    Long(v));    long    v    =    getCumFreq(new    Long(v));    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	24	None	replace
130	[BUG]  [BUGGY]  null  v  =  getCumFreq(new  Long(v));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  null  v  =  getCumFreq(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	null  v  =  getCumFreq(new  Long(v));	  return    getCumFreq(new    Long(v));    long    v    =    getCumFreq(new    Long(v));    	non-compiled	[CE]  not  a  statement	24	None	replace
131	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(v,  v);  [CE]  no  suitable  method  found  for  getCumFreq(long,long)  [FE]            StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(v,  v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(v,  v);	          long    sumFreq    =    getCumFreq(v);    int    sumFreq    =    getCumFreq(v);    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(long,long)	18	None	replace
132	[BUG]  [BUGGY]  long  sumFreq  =  getSumFreq(v,  0.0,  v);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getSumFreq(v,  0.0,  v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getSumFreq(v,  0.0,  v);	  long    sumFreq    =    getSumFreq(v,    0.0);    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	91	None	replace
133	[BUG]  [BUGGY]  int  sumFreq  =  getSumFreq(v,  0.0);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  int  sumFreq  =  getSumFreq(v,  0.0);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	int  sumFreq  =  getSumFreq(v,  0.0);	  long    sumFreq    =    getSumFreq(v,    0.0);    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	91	None	replace
134	[BUG]  [BUGGY]  long  sumFreq  =  getSumFreq(v,  1.0);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getSumFreq(v,  1.0);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getSumFreq(v,  1.0);	  long    sumFreq    =    getSumFreq(v,    0.0);    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	91	None	replace
135	[BUG]  [BUGGY]  long  sumFreq  =  getSumFreq(v,  1.0,  0.0);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getSumFreq(v,  1.0,  0.0);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getSumFreq(v,  1.0,  0.0);	  long    sumFreq    =    getSumFreq(v,    0.0);    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	91	None	replace
136	[BUG]  [BUGGY]  return  getCumFreq(v,  freqTable.valueOf(v));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v,  freqTable.valueOf(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(v,  freqTable.valueOf(v));	  return    getCumFreq(v,    long.valueOf(v));    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
137	[BUG]  [BUGGY]  return  getCumFreq(v,  long.parseLong(v));  [CE]  class  expected  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v,  long.parseLong(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(v,  long.parseLong(v));	  return    getCumFreq(v,    long.valueOf(v));    	non-compiled	[CE]  class  expected	64	None	replace
138	[BUG]  [BUGGY]  return  getCumFreq(v,  v.longValue());  [CE]  long  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v,  v.longValue());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(v,  v.longValue());	  return    getCumFreq(v,    long.valueOf(v));    	non-compiled	[CE]  long  cannot  be  dereferenced	64	None	replace
139	[BUG]  [BUGGY]  return  getFreq(v,  long.valueOf(v));  [CE]  class  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getFreq(v,  long.valueOf(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getFreq(v,  long.valueOf(v));	  return    getCumFreq(v,    long.valueOf(v));    	non-compiled	[CE]  class  expected	64	None	replace
140	[BUG]  [BUGGY]  long  result  =  getCumFreq(L  Long.valueOf(v));  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(L  Long.valueOf(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(L  Long.valueOf(v));	          long    result    =    getCumFreq(Long.valueOf(v));    long    result    =    getCumFreq(L    Long.valueOf(v));    	non-compiled	[CE]  ')'  expected	47	None	replace
141	[BUG]  [BUGGY]  long  result  =  getCumFreq(L  Long.parseLong(v));  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(L  Long.parseLong(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(L  Long.parseLong(v));	          long    result    =    getCumFreq(Long.valueOf(v));    long    result    =    getCumFreq(L    Long.valueOf(v));    	non-compiled	[CE]  ')'  expected	47	None	replace
142	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(Long.MAX_VALUE,  v);  [CE]  no  suitable  method  found  for  getCumFreq(long,long)  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(Long.MAX_VALUE,  v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(Long.MAX_VALUE,  v);	  long    sumFreq    =    getCumFreq(Long.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(long,long)	43	None	replace
143	[BUG]  [BUGGY]  int  sumFreq  =  getCumFreq(Long.MAX_VALUE);  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  int  sumFreq  =  getCumFreq(Long.MAX_VALUE);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	int  sumFreq  =  getCumFreq(Long.MAX_VALUE);	  long    sumFreq    =    getCumFreq(Long.MAX_VALUE);    	non-compiled	[CE]  possible  loss  of  precision	43	None	replace
144	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(Long.MIN_VALUE);  [CE]  missing  return  statement  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(Long.MIN_VALUE);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(Long.MIN_VALUE);	  long    sumFreq    =    getCumFreq(Long.MAX_VALUE);    	non-compiled	[CE]  missing  return  statement	43	None	replace
145	[BUG]  [BUGGY]  return  v  *  Math.sqrt(v);  [CE]  possible  loss  of  precision  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  v  *  Math.sqrt(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  v  *  Math.sqrt(v);	  return    sumFreq    *    Math.sqrt(v);    	non-compiled	[CE]  possible  loss  of  precision	82	None	replace
146	[BUG]  [BUGGY]  return  result  *  Math.sqrt(v);  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  result  *  Math.sqrt(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  result  *  Math.sqrt(v);	  return    sumFreq    *    Math.sqrt(v);    	non-compiled	[CE]  cannot  find  symbol  result	82	None	replace
147	[BUG]  [BUGGY]  return  sumFreq  /  Math.sqrt(v);  [CE]  cannot  find  symbol  sumFreq  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  sumFreq  /  Math.sqrt(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  sumFreq  /  Math.sqrt(v);	  return    sumFreq    *    Math.sqrt(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	82	None	replace
148	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(L  Long.valueOf(v));  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(L  Long.valueOf(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(L  Long.valueOf(v));	          long    sumFreq    =    getCumFreq(Long.valueOf(v));    long    sumFreq    =    getCumFreq(L    Long.valueOf(v));    	non-compiled	[CE]  ')'  expected	55	None	replace
149	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(L  Long.parseLong(v));  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(L  Long.parseLong(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(L  Long.parseLong(v));	          long    sumFreq    =    getCumFreq(Long.valueOf(v));    long    sumFreq    =    getCumFreq(L    Long.valueOf(v));    	non-compiled	[CE]  ')'  expected	55	None	replace
150	[BUG]  [BUGGY]  return  getCumFreq(Long.parseLong(v),  freqTable,  sumFreq);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(Long.parseLong(v),  freqTable,  sumFreq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.parseLong(v),  freqTable,  sumFreq);	  return    getCumFreq(Long.parseLong(v),    sumFreqTable);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	36	None	replace
151	[BUG]  [BUGGY]  return  getCumFreq(Long.parseLong(v),  sumFreqTable,  0);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(Long.parseLong(v),  sumFreqTable,  0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.parseLong(v),  sumFreqTable,  0);	  return    getCumFreq(Long.parseLong(v),    sumFreqTable);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	36	None	replace
152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  freqTable.get(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	add	return  freqTable.get(v);	  return    sumFreq.get(v);    	compilable	  [FE]  AssertionFailedError  	30	2	replace
153	[BUG]  [BUGGY]  return  freqTable.get(v);  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  freqTable.get(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  freqTable.get(v);	  return    sumFreq.get(v);    	compilable	  [FE]  AssertionFailedError  	30	2	replace
154	[BUG]  [BUGGY]  return  this.sumFreq.get(v);  [CE]  cannot  find  symbol  sumFreq  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  this.sumFreq.get(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  this.sumFreq.get(v);	  return    sumFreq.get(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	30	None	replace
155	[BUG]  [BUGGY]  return  _freqTable.get(v);  [CE]  cannot  find  symbol  _freqTable  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  _freqTable.get(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  _freqTable.get(v);	  return    sumFreq.get(v);    	non-compiled	[CE]  cannot  find  symbol  _freqTable	30	None	replace
156	[BUG]  [BUGGY]  return  v.get(v);  [CE]  long  cannot  be  dereferenced  [FE]                        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  v.get(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  v.get(v);	  return    sumFreq.get(v);    	non-compiled	[CE]  long  cannot  be  dereferenced	30	None	replace
157	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v),  sumFreqTable);  [CE]  cannot  find  symbol  sumFreqTable  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v),  sumFreqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(new  Long(v),  sumFreqTable);	  return    getCumFreq(new    Long(v),    freqTable);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	50	None	replace
158	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v),  sumFreqTable,  freqTable);  [CE]  cannot  find  symbol  sumFreqTable  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v),  sumFreqTable,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(new  Long(v),  sumFreqTable,  freqTable);	  return    getCumFreq(new    Long(v),    freqTable);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	50	None	replace
159	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v),  sumFreq,  freqTable);  [CE]  cannot  find  symbol  sumFreq  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v),  sumFreq,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(new  Long(v),  sumFreq,  freqTable);	  return    getCumFreq(new    Long(v),    freqTable);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	50	None	replace
160	[BUG]  [BUGGY]  long  result  =  getCumFreq(Long.MAX_VALUE,  v);  [CE]  no  suitable  method  found  for  getCumFreq(long,long)  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(Long.MAX_VALUE,  v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(Long.MAX_VALUE,  v);	  long    result    =    getCumFreq(Long.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(long,long)	14	None	replace
161	[BUG]  [BUGGY]  long  result  =  getCumFreq(Long.MAX_VALUE  +  1);  [CE]  missing  return  statement  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(Long.MAX_VALUE  +  1);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(Long.MAX_VALUE  +  1);	  long    result    =    getCumFreq(Long.MAX_VALUE);    	non-compiled	[CE]  missing  return  statement	14	None	replace
162	[BUG]  [BUGGY]  return  getCumFreq(v,  freqTable.longValue());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v,  freqTable.longValue());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(v,  freqTable.longValue());	  return    getCumFreq(v.longValue());    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
163	[BUG]  [BUGGY]  return  getCumFreq(v,  sumFreq.longValue());  [CE]  cannot  find  symbol  sumFreq  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v,  sumFreq.longValue());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(v,  sumFreq.longValue());	  return    getCumFreq(v.longValue());    	non-compiled	[CE]  cannot  find  symbol  sumFreq	66	None	replace
164	[BUG]  [BUGGY]  return  getCumFreq(v.longValue(),  v);  [CE]  long  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v.longValue(),  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(v.longValue(),  v);	  return    getCumFreq(v.longValue());    	non-compiled	[CE]  long  cannot  be  dereferenced	66	None	replace
165	[BUG]  [BUGGY]  getCumFreq(Long.MAX_VALUE);  [CE]  missing  return  statement  [FE]          StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  getCumFreq(Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	getCumFreq(Long.MAX_VALUE);	  return    getCumFreq(Long.MAX_VALUE);    getCumFreq(Long.MAX_VALUE);    	non-compiled	[CE]  missing  return  statement	38	None	replace
166	[BUG]  [BUGGY]  null  =  getCumFreq(v);  [CE]  unexpected  type  [FE]            StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  null  =  getCumFreq(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	null  =  getCumFreq(v);	  return    getCumFreq(Long.MAX_VALUE);    getCumFreq(Long.MAX_VALUE);    	non-compiled	[CE]  unexpected  type	38	None	replace
167	[BUG]  [BUGGY]  long  v  =  freqTable.getCumFreq(variable);  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  v  =  freqTable.getCumFreq(variable);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  v  =  freqTable.getCumFreq(variable);	  long    v    =    freqTable.getCumFreq(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	61	None	replace
168	[BUG]  [BUGGY]  long  v  =  freqTable.getCumFreq(this.sumFreq);  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  v  =  freqTable.getCumFreq(this.sumFreq);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  v  =  freqTable.getCumFreq(this.sumFreq);	  long    v    =    freqTable.getCumFreq(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	61	None	replace
169	[BUG]  [BUGGY]  long  v  =  freqTable.getCumFreq(v)+  1;  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  v  =  freqTable.getCumFreq(v)+  1;  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  v  =  freqTable.getCumFreq(v)+  1;	  long    v    =    freqTable.getCumFreq(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	61	None	replace
170	[BUG]  [BUGGY]  return  v  *  Math.pow(10,  v);  [CE]  possible  loss  of  precision  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  v  *  Math.pow(10,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  v  *  Math.pow(10,  v);	  return    sumFreq    *    Math.pow(10,    v);    	non-compiled	[CE]  possible  loss  of  precision	84	None	replace
171	[BUG]  [BUGGY]  return  v  *  Math.pow(10,  sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]                        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  v  *  Math.pow(10,  sumFreq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  v  *  Math.pow(10,  sumFreq);	  return    sumFreq    *    Math.pow(10,    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	84	None	replace
172	[BUG]  [BUGGY]  return  this.sumFreq  *  Math.pow(10,  v);  [CE]  cannot  find  symbol  sumFreq  [FE]                          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  this.sumFreq  *  Math.pow(10,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  this.sumFreq  *  Math.pow(10,  v);	  return    sumFreq    *    Math.pow(10,    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	84	None	replace
173	[BUG]  [BUGGY]  double  sumFreq  =  getCumFreq(v);  [CE]  missing  return  statement  [FE]        StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  double  sumFreq  =  getCumFreq(v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	double  sumFreq  =  getCumFreq(v);	  int    sumFreq    =    getCumFreq(v);    	non-compiled	[CE]  missing  return  statement	28	None	replace
174	[BUG]  [BUGGY]  float  sumFreq  =  getCumFreq(v);  [CE]  missing  return  statement  [FE]          StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  float  sumFreq  =  getCumFreq(v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	float  sumFreq  =  getCumFreq(v);	  int    sumFreq    =    getCumFreq(v);    	non-compiled	[CE]  missing  return  statement	28	None	replace
175	[BUG]  [BUGGY]  float  sumFreq  =  getCumFreq(new  Long(v));  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  float  sumFreq  =  getCumFreq(new  Long(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	float  sumFreq  =  getCumFreq(new  Long(v));	  int    sumFreq    =    getCumFreq(new    Long(v));    	non-compiled	[CE]  missing  return  statement	73	None	replace
176	[BUG]  [BUGGY]  double  sumFreq  =  getCumFreq(new  Long(v));  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  double  sumFreq  =  getCumFreq(new  Long(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	double  sumFreq  =  getCumFreq(new  Long(v));	  int    sumFreq    =    getCumFreq(new    Long(v));    	non-compiled	[CE]  missing  return  statement	73	None	replace
177	[BUG]  [BUGGY]  return  getFreq(Variable.MAX_VALUE);  [CE]  cannot  find  symbol  Variable  [FE]          StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getFreq(Variable.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getFreq(Variable.MAX_VALUE);	  return    getFreq(Long.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  Variable	11	None	replace
178	[BUG]  [BUGGY]  return  getFreq(Number.MAX_VALUE);  [CE]  cannot  find  symbol  MAX_VALUE  [FE]            StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getFreq(Number.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getFreq(Number.MAX_VALUE);	  return    getFreq(Long.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	11	None	replace
179	[BUG]  [BUGGY]  return  getFreq(v);  [CE]  cannot  find  symbol  [FE]              StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getFreq(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getFreq(v);	  return    getFreq(Long.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
180	[BUG]  [BUGGY]  return  this.freqTable.longValue();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  this.freqTable.longValue();  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  this.freqTable.longValue();	  return    this.sumFreq.longValue();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
181	[BUG]  [BUGGY]  return  this.result.longValue();  [CE]  cannot  find  symbol  result  [FE]                        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  this.result.longValue();  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  this.result.longValue();	  return    this.sumFreq.longValue();    	non-compiled	[CE]  cannot  find  symbol  result	72	None	replace
182	[BUG]  [BUGGY]  return  this.sumFreq.longValue()  +  1;  [CE]  cannot  find  symbol  sumFreq  [FE]                          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  this.sumFreq.longValue()  +  1;  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  this.sumFreq.longValue()  +  1;	  return    this.sumFreq.longValue();    	non-compiled	[CE]  cannot  find  symbol  sumFreq	72	None	replace
183	[BUG]  [BUGGY]  return  getCumFreq(Long.parseLong(v),  sumFreq,  v);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(Long.parseLong(v),  sumFreq,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.parseLong(v),  sumFreq,  v);	  return    getCumFreq(Long.parseLong(v),    v);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	35	None	replace
184	[BUG]  [BUGGY]  return  getCumFreq(Long.parseLong(v),  freqTable,  v);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(Long.parseLong(v),  freqTable,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.parseLong(v),  freqTable,  v);	  return    getCumFreq(Long.parseLong(v),    v);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	35	None	replace
185	[BUG]  [BUGGY]  long  result  =  getCumFreq(new  Long(v));  if(result  ==  null)  {  return  result;  }  [CE]  incomparable  types:  long  and  <null>  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(new  Long(v));  if(result  ==  null)  {  return  result;  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(new  Long(v));  if(result  ==  null)  {  return  result;  }	  return    getCumFreq(new    Long(v));    long    result    =    getCumFreq(new    Long(v));    if(result    ==    null)    {    return    result;    }    	non-compiled	[CE]  incomparable  types:  long  and  <null>	27	None	replace
186	[BUG]  [BUGGY]  result  =  getCumFreq(new  Long(v));  [CE]  cannot  find  symbol  result  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  result  =  getCumFreq(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	result  =  getCumFreq(new  Long(v));	  return    getCumFreq(new    Long(v));    long    result    =    getCumFreq(new    Long(v));    if(result    ==    null)    {    return    result;    }    	non-compiled	[CE]  cannot  find  symbol  result	27	None	replace
187	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v),  freq);  [CE]  cannot  find  symbol  freq  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v),  freq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(new  Long(v),  freq);	  return    getCumFreq(new    Long(v),    sumFreq);    	non-compiled	[CE]  cannot  find  symbol  freq	105	None	replace
188	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v),  0);  [CE]  no  suitable  method  found  for  getCumFreq(Long,int)  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v),  0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(new  Long(v),  0);	  return    getCumFreq(new    Long(v),    sumFreq);    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(Long,int)	105	None	replace
189	[BUG]  [BUGGY]  return  getSumFreq(new  Long(v));  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getSumFreq(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getSumFreq(new  Long(v));	  return    getCumFreq(new    Long(v));    return    getCumFreq(new    Long(v));    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	26	None	replace
190	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    getCumFreq(new    Long(v));    return    getCumFreq(new    Long(v));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
191	[BUG]  [BUGGY]  return  getFrequency(v);  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getFrequency(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getFrequency(v);	  return    getCumFreq(v);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
192	[BUG]  [BUGGY]  return  getNumberFreq(v);  [CE]  cannot  find  symbol  [FE]      StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getNumberFreq(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getNumberFreq(v);	  return    getCumFreq(v);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
193	[BUG]  [BUGGY]  return  getCumFreq(Long.parseLong(v),  sumFreq,  0);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(Long.parseLong(v),  sumFreq,  0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.parseLong(v),  sumFreq,  0);	  return    getCumFreq(Long.parseLong(v),    sumFreq);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	33	None	replace
194	[BUG]  [BUGGY]  long  result  =  getSumFreq(Long.valueOf(v),  freqTable);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getSumFreq(Long.valueOf(v),  freqTable);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getSumFreq(Long.valueOf(v),  freqTable);	  long    result    =    getSumFreq(Long.valueOf(v));    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	15	None	replace
195	[BUG]  [BUGGY]  long  result  =  getSumFreq(Long.valueOf(v),  v);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getSumFreq(Long.valueOf(v),  v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getSumFreq(Long.valueOf(v),  v);	  long    result    =    getSumFreq(Long.valueOf(v));    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	15	None	replace
196	[BUG]  [BUGGY]  long  result  =  getSumFreq(Long.valueOf(v),  sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getSumFreq(Long.valueOf(v),  sumFreq);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getSumFreq(Long.valueOf(v),  sumFreq);	  long    result    =    getSumFreq(Long.valueOf(v));    	non-compiled	[CE]  cannot  find  symbol  sumFreq	15	None	replace
197	[BUG]  [BUGGY]  int  result  =  getSumFreq(Long.valueOf(v));  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  int  result  =  getSumFreq(Long.valueOf(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	int  result  =  getSumFreq(Long.valueOf(v));	  long    result    =    getSumFreq(Long.valueOf(v));    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	15	None	replace
198	[BUG]  [BUGGY]  Short  sumFreq  =  getCumFreq(Long.valueOf(v));  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  Short  sumFreq  =  getCumFreq(Long.valueOf(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	Short  sumFreq  =  getCumFreq(Long.valueOf(v));	          long    sumFreq    =    getCumFreq(Long.valueOf(v));    short    sumFreq    =    getCumFreq(Long.valueOf(v));    	non-compiled	[CE]  incompatible  types	54	None	replace
199	[BUG]  [BUGGY]  long  sumFreq  =  getSumFreq(v,  0L,  v);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getSumFreq(v,  0L,  v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getSumFreq(v,  0L,  v);	  long    sumFreq    =    getSumFreq(v,    0);    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	4	None	replace
200	[BUG]  [BUGGY]  int  sumFreq  =  getSumFreq(v,  0);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  int  sumFreq  =  getSumFreq(v,  0);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	int  sumFreq  =  getSumFreq(v,  0);	  long    sumFreq    =    getSumFreq(v,    0);    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	4	None	replace
201	[BUG]  [BUGGY]  long  sumFreq  =  getSumFreq(v,  0,  v);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getSumFreq(v,  0,  v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getSumFreq(v,  0,  v);	  long    sumFreq    =    getSumFreq(v,    0);    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	4	None	replace
202	[BUG]  [BUGGY]  long  sumFreq  =  getSumFreq(v,  1);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getSumFreq(v,  1);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getSumFreq(v,  1);	  long    sumFreq    =    getSumFreq(v,    0);    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	4	None	replace
203	[BUG]  [BUGGY]  null  sumFreq  =  getCumFreq(v);  [CE]  not  a  statement  [FE]          StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  null  sumFreq  =  getCumFreq(v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	null  sumFreq  =  getCumFreq(v);	          long    sumFreq    =    getCumFreq(v);    Long    sumFreq    =    getCumFreq(v);    	non-compiled	[CE]  not  a  statement	17	None	replace
204	[BUG]  [BUGGY]  long  v  =  freqTable.getCumFreq(v,  v);  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  v  =  freqTable.getCumFreq(v,  v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  v  =  freqTable.getCumFreq(v,  v);	  long    sumFreq    =    freqTable.getCumFreq(v,    v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	63	None	replace
205	[BUG]  [BUGGY]  long  sumFreq  =  this.freqTable.getCumFreq(v,  v);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  this.freqTable.getCumFreq(v,  v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  this.freqTable.getCumFreq(v,  v);	  long    sumFreq    =    freqTable.getCumFreq(v,    v);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
206	[BUG]  [BUGGY]  long  sumFreq  =  freqTable.getCumFreq(v,  null);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  freqTable.getCumFreq(v,  null);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  freqTable.getCumFreq(v,  null);	  long    sumFreq    =    freqTable.getCumFreq(v,    v);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
207	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  v  *(v  -  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	add	return  v  *(v  -  1);	  return    sumFreq    *(v    -    1);    	compilable	  [FE]  AssertionFailedError  	85	3	replace
208	[BUG]  [BUGGY]  return  v  *(v  -  1);  [FE]  AssertionFailedError  [FE]                        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  v  *(v  -  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  v  *(v  -  1);	  return    sumFreq    *(v    -    1);    	compilable	  [FE]  AssertionFailedError  	85	3	replace
209	[BUG]  [BUGGY]  return  result  *(v  -  1);  [CE]  cannot  find  symbol  result  [FE]                          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  result  *(v  -  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  result  *(v  -  1);	  return    sumFreq    *(v    -    1);    	non-compiled	[CE]  cannot  find  symbol  result	85	None	replace
210	[BUG]  [BUGGY]  return  _cumFreq  *(v  -  1);  [CE]  cannot  find  symbol  _cumFreq  [FE]                            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  _cumFreq  *(v  -  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  _cumFreq  *(v  -  1);	  return    sumFreq    *(v    -    1);    	non-compiled	[CE]  cannot  find  symbol  _cumFreq	85	None	replace
211	[BUG]  [BUGGY]  return  this.sumFreq  *(v  -  1);  [CE]  cannot  find  symbol  sumFreq  [FE]                              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  this.sumFreq  *(v  -  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  this.sumFreq  *(v  -  1);	  return    sumFreq    *(v    -    1);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	85	None	replace
212	[BUG]  [BUGGY]  long  v  =  getCumFreq(Long.MAX_VALUE,  v);  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  v  =  getCumFreq(Long.MAX_VALUE,  v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  v  =  getCumFreq(Long.MAX_VALUE,  v);	  long    v    =    getCumFreq(Long.MAX_VALUE);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	69	None	replace
213	[BUG]  [BUGGY]  long  v  =  getCumFreq(Long.MIN_VALUE,  v);  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  v  =  getCumFreq(Long.MIN_VALUE,  v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  v  =  getCumFreq(Long.MIN_VALUE,  v);	  long    v    =    getCumFreq(Long.MAX_VALUE);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	69	None	replace
214	[BUG]  [BUGGY]  long  v  =  getCumFreq(Long.MAX_VALUE,  1);  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]                        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  v  =  getCumFreq(Long.MAX_VALUE,  1);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  v  =  getCumFreq(Long.MAX_VALUE,  1);	  long    v    =    getCumFreq(Long.MAX_VALUE);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	69	None	replace
215	[BUG]  [BUGGY]  return  v  *  Math.max(0,  sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  v  *  Math.max(0,  sumFreq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  v  *  Math.max(0,  sumFreq);	  return    sumFreq    *    Math.max(0,    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	31	None	replace
216	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  v  *  Math.max(0,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	add	return  v  *  Math.max(0,  v);	  return    sumFreq    *    Math.max(0,    v);    	compilable	  [FE]  AssertionFailedError  	31	2	replace
217	[BUG]  [BUGGY]  return  v  *  Math.max(0,  v);  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  v  *  Math.max(0,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  v  *  Math.max(0,  v);	  return    sumFreq    *    Math.max(0,    v);    	compilable	  [FE]  AssertionFailedError  	31	2	replace
218	[BUG]  [BUGGY]  return  this.maxFreq  *  Math.max(0,  v);  [CE]  cannot  find  symbol  maxFreq  [FE]                        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  this.maxFreq  *  Math.max(0,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  this.maxFreq  *  Math.max(0,  v);	  return    sumFreq    *    Math.max(0,    v);    	non-compiled	[CE]  cannot  find  symbol  maxFreq	31	None	replace
219	[BUG]  [BUGGY]  this.sumFreq  =  getCumFreq(v  +  2);  [CE]  cannot  find  symbol  sumFreq  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  this.sumFreq  =  getCumFreq(v  +  2);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	this.sumFreq  =  getCumFreq(v  +  2);	  this.sumFreq    =    getCumFreq(v    +    1);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	58	None	replace
220	[BUG]  [BUGGY]  long  result  =  getCumFreq(Long.parseLong(v),  sumFreq);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(Long.parseLong(v),  sumFreq);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(Long.parseLong(v),  sumFreq);	  long    result    =    getCumFreq(Long.parseLong(v));    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	13	None	replace
221	[BUG]  [BUGGY]  long  result  =  getCumFreq(Long.parseLong(v),  freqTable);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(Long.parseLong(v),  freqTable);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(Long.parseLong(v),  freqTable);	  long    result    =    getCumFreq(Long.parseLong(v));    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	13	None	replace
222	[BUG]  [BUGGY]  long  result  =  getCumFreq(Long.parseLong(v),  v);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(Long.parseLong(v),  v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(Long.parseLong(v),  v);	  long    result    =    getCumFreq(Long.parseLong(v));    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	13	None	replace
223	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(new  Long(v),  v,  freqTable);  [CE]  no  suitable  method  found  for  getCumFreq(Long,long,TreeMap<Comparable<?>,Long>)  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(new  Long(v),  v,  freqTable);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(new  Long(v),  v,  freqTable);	  long    sumFreq    =    getCumFreq(new    Long(v),    v);    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(Long,long,TreeMap<Comparable<?>,Long>)	74	None	replace
224	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(new  Long(v),  freqTable,  v);  [CE]  no  suitable  method  found  for  getCumFreq(Long,TreeMap<Comparable<?>,Long>,long)  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(new  Long(v),  freqTable,  v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(new  Long(v),  freqTable,  v);	  long    sumFreq    =    getCumFreq(new    Long(v),    v);    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(Long,TreeMap<Comparable<?>,Long>,long)	74	None	replace
225	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(new  Long(v),  freqTable);  [CE]  no  suitable  method  found  for  getCumFreq(Long,TreeMap<Comparable<?>,Long>)  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(new  Long(v),  freqTable);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(new  Long(v),  freqTable);	  long    sumFreq    =    getCumFreq(new    Long(v),    v);    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(Long,TreeMap<Comparable<?>,Long>)	74	None	replace
226	[BUG]  [BUGGY]  int  sumFreq  =  getCumFreq(new  Long(v),  v);  [CE]  no  suitable  method  found  for  getCumFreq(Long,long)  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  int  sumFreq  =  getCumFreq(new  Long(v),  v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	int  sumFreq  =  getCumFreq(new  Long(v),  v);	  long    sumFreq    =    getCumFreq(new    Long(v),    v);    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(Long,long)	74	None	replace
227	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(Long.parseLong(v),  v);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(Long.parseLong(v),  v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(Long.parseLong(v),  v);	  long    sumFreq    =    getCumFreq(Long.parseLong(v));    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	42	None	replace
228	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(Long.parseLong(v),  freqTable);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(Long.parseLong(v),  freqTable);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(Long.parseLong(v),  freqTable);	  long    sumFreq    =    getCumFreq(Long.parseLong(v));    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	42	None	replace
229	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(Long.parseLong(v)+  1);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(Long.parseLong(v)+  1);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(Long.parseLong(v)+  1);	  long    sumFreq    =    getCumFreq(Long.parseLong(v));    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	42	None	replace
230	[BUG]  [BUGGY]  int  sumFreq  =  getCumFreq(Long.parseLong(v));  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  int  sumFreq  =  getCumFreq(Long.parseLong(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	int  sumFreq  =  getCumFreq(Long.parseLong(v));	  long    sumFreq    =    getCumFreq(Long.parseLong(v));    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	42	None	replace
231	[BUG]  [BUGGY]  this.sumFreq  =  getCumFreq(v)+  2;  [CE]  cannot  find  symbol  sumFreq  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  this.sumFreq  =  getCumFreq(v)+  2;  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	this.sumFreq  =  getCumFreq(v)+  2;	  this.sumFreq    =    getCumFreq(v)+    1;    	non-compiled	[CE]  cannot  find  symbol  sumFreq	60	None	replace
232	[BUG]  [BUGGY]  this.sumFreq  =  getCumFreq(v)+  1L;  [CE]  cannot  find  symbol  sumFreq  [FE]                        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  this.sumFreq  =  getCumFreq(v)+  1L;  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	this.sumFreq  =  getCumFreq(v)+  1L;	  this.sumFreq    =    getCumFreq(v)+    1;    	non-compiled	[CE]  cannot  find  symbol  sumFreq	60	None	replace
233	[BUG]  [BUGGY]  this.sumFreq  =  getCumFreq(v)/  1;  [CE]  cannot  find  symbol  sumFreq  [FE]                          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  this.sumFreq  =  getCumFreq(v)/  1;  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	this.sumFreq  =  getCumFreq(v)/  1;	  this.sumFreq    =    getCumFreq(v)+    1;    	non-compiled	[CE]  cannot  find  symbol  sumFreq	60	None	replace
234	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v)).doubleValue();  [CE]  long  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v)).doubleValue();  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(new  Long(v)).doubleValue();	  return    getCumFreq(new    Long(v)).longValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	79	None	replace
235	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v)).intValue();  [CE]  long  cannot  be  dereferenced  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v)).intValue();  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(new  Long(v)).intValue();	  return    getCumFreq(new    Long(v)).longValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	79	None	replace
236	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(v  /  1);  [CE]  missing  return  statement  [FE]          StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(v  /  1);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(v  /  1);	  long    sumFreq    =    getCumFreq(v    +    1);    	non-compiled	[CE]  missing  return  statement	96	None	replace
237	[BUG]  [BUGGY]  long  result  =  getCumFreq(v);  [CE]  missing  return  statement  [FE]        StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(v);	  return    getCumFreq(Long.MAX_VALUE);    long    result    =    getCumFreq(Long.MAX_VALUE);    	non-compiled	[CE]  missing  return  statement	37	None	replace
238	[BUG]  [BUGGY]  null  result  =  getCumFreq(v);  [CE]  not  a  statement  [FE]          StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  null  result  =  getCumFreq(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	null  result  =  getCumFreq(v);	  return    getCumFreq(Long.MAX_VALUE);    long    result    =    getCumFreq(Long.MAX_VALUE);    	non-compiled	[CE]  not  a  statement	37	None	replace
239	[BUG]  [BUGGY]  null  result  =  getCumFreq(Long.MAX_VALUE);  [CE]  not  a  statement  [FE]            StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  null  result  =  getCumFreq(Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	null  result  =  getCumFreq(Long.MAX_VALUE);	  return    getCumFreq(Long.MAX_VALUE);    long    result    =    getCumFreq(Long.MAX_VALUE);    	non-compiled	[CE]  not  a  statement	37	None	replace
240	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(v,  0,  v);  [CE]  no  suitable  method  found  for  getCumFreq(long,int,long)  [FE]          StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(v,  0,  v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(v,  0,  v);	  long    sumFreq    =    getCumFreq(v,    0);    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(long,int,long)	29	None	replace
241	[BUG]  [BUGGY]  int  sumFreq  =  getCumFreq(v,  0);  [CE]  no  suitable  method  found  for  getCumFreq(long,int)  [FE]            StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  int  sumFreq  =  getCumFreq(v,  0);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	int  sumFreq  =  getCumFreq(v,  0);	  long    sumFreq    =    getCumFreq(v,    0);    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(long,int)	29	None	replace
242	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(v,  0L);  [CE]  no  suitable  method  found  for  getCumFreq(long,long)  [FE]              StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(v,  0L);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(v,  0L);	  long    sumFreq    =    getCumFreq(v,    0);    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(long,long)	29	None	replace
243	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(v,  0L,  v);  [CE]  no  suitable  method  found  for  getCumFreq(long,long,long)  [FE]                StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(v,  0L,  v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(v,  0L,  v);	  long    sumFreq    =    getCumFreq(v,    0);    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(long,long,long)	29	None	replace
244	[BUG]  [BUGGY]  long  v  =  this.sumFreqTable.size();  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  v  =  this.sumFreqTable.size();  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  v  =  this.sumFreqTable.size();	  int    v    =    this.sumFreqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	86	None	replace
245	[BUG]  [BUGGY]  int  v  =  this.sumFreqTable.size()  -  1;  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  int  v  =  this.sumFreqTable.size()  -  1;  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	int  v  =  this.sumFreqTable.size()  -  1;	  int    v    =    this.sumFreqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	86	None	replace
246	[BUG]  [BUGGY]  return  SumFreq.longValue();  [CE]  cannot  find  symbol  SumFreq  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  SumFreq.longValue();  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  SumFreq.longValue();	  return    v.longValue();    	non-compiled	[CE]  cannot  find  symbol  SumFreq	70	None	replace
247	[BUG]  [BUGGY]  return  sumFreq.doubleValue();  [CE]  cannot  find  symbol  sumFreq  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  sumFreq.doubleValue();  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  sumFreq.doubleValue();	  return    v.longValue();    	non-compiled	[CE]  cannot  find  symbol  sumFreq	70	None	replace
248	[BUG]  [BUGGY]  return  getCumFreq(v);  getCumFreq(v);  [CE]  unreachable  statement  [FE]    StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v);  getCumFreq(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return    getCumFreq(v);    getCumFreq(v);	  	non-compiled	[CE]  unreachable  statement	9	None	add
249	[BUG]  [BUGGY]  return  getCumFreq(v);  long  v  =  getCumFreq(v);  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]      StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v);  long  v  =  getCumFreq(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return    getCumFreq(v);    long  v  =  getCumFreq(v);	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	9	None	add
250	[BUG]  [BUGGY]  return  getCumFreq(v);  return  getCumFreq(v);  [CE]  unreachable  statement  [FE]        StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v);  return  getCumFreq(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return    getCumFreq(v);    return  getCumFreq(v);	  	non-compiled	[CE]  unreachable  statement	9	None	add
251	[BUG]  [BUGGY]  return  getCumFreq(v);  this.sumFreq  =  getCumFreq(v);  [CE]  cannot  find  symbol  sumFreq  [FE]          StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v);  this.sumFreq  =  getCumFreq(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return    getCumFreq(v);    this.sumFreq  =  getCumFreq(v);	  	non-compiled	[CE]  cannot  find  symbol  sumFreq	9	None	add
252	[BUG]  [BUGGY]  return  getCumFreq(v);  this.sumFreq  =  new  Long(v);  [CE]  cannot  find  symbol  sumFreq  [FE]            StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v);  this.sumFreq  =  new  Long(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return    getCumFreq(v);    this.sumFreq  =  new  Long(v);	  	non-compiled	[CE]  cannot  find  symbol  sumFreq	9	None	add
253	[BUG]  [BUGGY]  float  sumFreq  =  getCumFreq(Long.valueOf(v));  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  float  sumFreq  =  getCumFreq(Long.valueOf(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	float  sumFreq  =  getCumFreq(Long.valueOf(v));	  int    sumFreq    =    getCumFreq(Long.valueOf(v));    	non-compiled	[CE]  missing  return  statement	75	None	replace
254	[BUG]  [BUGGY]  double  sumFreq  =  getCumFreq(Long.valueOf(v));  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  double  sumFreq  =  getCumFreq(Long.valueOf(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	double  sumFreq  =  getCumFreq(Long.valueOf(v));	  int    sumFreq    =    getCumFreq(Long.valueOf(v));    	non-compiled	[CE]  missing  return  statement	75	None	replace
255	[BUG]  [BUGGY]  return  getMeanValue(Long.MAX_VALUE,  v);  [CE]  cannot  find  symbol  [FE]        StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getMeanValue(Long.MAX_VALUE,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getMeanValue(Long.MAX_VALUE,  v);	  return    getMeanValue(Long.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
256	[BUG]  [BUGGY]  return  getMeanValue(Number.MAX_VALUE);  [CE]  cannot  find  symbol  MAX_VALUE  [FE]          StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getMeanValue(Number.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getMeanValue(Number.MAX_VALUE);	  return    getMeanValue(Long.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	108	None	replace
257	[BUG]  [BUGGY]  return  getMeanValue(Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getMeanValue(Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getMeanValue(Integer.MAX_VALUE);	  return    getMeanValue(Long.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
258	[BUG]  [BUGGY]  return  getMeanValue(Long.MIN_VALUE,  v);  [CE]  cannot  find  symbol  [FE]              StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getMeanValue(Long.MIN_VALUE,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getMeanValue(Long.MIN_VALUE,  v);	  return    getMeanValue(Long.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
259	[BUG]  [BUGGY]  return  getCumFreq(Long.valueOf(v),  freqTable);  [CE]  no  suitable  method  found  for  getCumFreq(Long,TreeMap<Comparable<?>,Long>)  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(Long.valueOf(v),  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.valueOf(v),  freqTable);	  return    getFreq(Long.valueOf(v),    freqTable);    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(Long,TreeMap<Comparable<?>,Long>)	57	None	replace
260	[BUG]  [BUGGY]  return  getCumFreq(Long.parseLong(v)/  2.0),  freqTable);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(Long.parseLong(v)/  2.0),  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.parseLong(v)/  2.0),  freqTable);	  return    getCumFreq(Long.parseLong(v)/    2.0);    	non-compiled	[CE]  ';'  expected	102	None	replace
261	[BUG]  [BUGGY]  return  getCumFreq(Long.parseLong(v)/  2.0,  v);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(Long.parseLong(v)/  2.0,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.parseLong(v)/  2.0,  v);	  return    getCumFreq(Long.parseLong(v)/    2.0);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	102	None	replace
262	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v),  v  =  getCumFreq(new  Long(v));  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v),  v  =  getCumFreq(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(new  Long(v),  v  =  getCumFreq(new  Long(v));	  return    getCumFreq(new    Long(v));    long    v    =    getCumFreq(new    Long(v));    	non-compiled	[CE]  ')'  expected	24	None	replace
263	[BUG]  [BUGGY]  return  getCumFreq(Long.parseLong(v)+  1).longValue());  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(Long.parseLong(v)+  1).longValue());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.parseLong(v)+  1).longValue());	  return    getCumFreq(Long.parseLong(v)+    1);    	non-compiled	[CE]  ';'  expected	93	None	replace
264	[BUG]  [BUGGY]  return  getCumFreq(Long.parseLong(v)+  1).longValue();  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(Long.parseLong(v)+  1).longValue();  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.parseLong(v)+  1).longValue();	  return    getCumFreq(Long.parseLong(v)+    1);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	93	None	replace
265	[BUG]  [BUGGY]  return  getMeanValue(long.MAX_VALUE);  [CE]  class  expected  [FE]        StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getMeanValue(long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getMeanValue(long.MAX_VALUE);	  return    getMeanValue(Long.MAX_VALUE);    	non-compiled	[CE]  class  expected	108	None	replace
266	[BUG]  [BUGGY]  return  freq.get(v);  [CE]  cannot  find  symbol  freq  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  freq.get(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  freq.get(v);	  return    sumFreq.get(v);    	non-compiled	[CE]  cannot  find  symbol  freq	30	None	replace
267	[BUG]  [BUGGY]  int  v  =  freqTable.getCumFreq(v);  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  int  v  =  freqTable.getCumFreq(v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	int  v  =  freqTable.getCumFreq(v);	  long    v    =    freqTable.getCumFreq(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	61	None	replace
268	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v)).sumFreq();  [CE]  long  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v)).sumFreq();  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(new  Long(v)).sumFreq();	  return    getCumFreq(new    Long(v)).longValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	79	None	replace
269	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(long.MAX_VALUE);  [CE]  class  expected  [FE]            StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(long.MAX_VALUE);	  return    getCumFreq(Long.MAX_VALUE);    long    sumFreq    =    getCumFreq(Long.MAX_VALUE);    	non-compiled	[CE]  class  expected	39	None	replace
270	[BUG]  [BUGGY]  int  v  =  getCumFreq(Long.parseLong(v));  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  int  v  =  getCumFreq(Long.parseLong(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	int  v  =  getCumFreq(Long.parseLong(v));	  long    v    =    getCumFreq(Long.parseLong(v));    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	67	None	replace
271	[BUG]  [BUGGY]  long  v  =  getCumFreq(Long.parseLong(v)+  1);  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  v  =  getCumFreq(Long.parseLong(v)+  1);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  v  =  getCumFreq(Long.parseLong(v)+  1);	  long    v    =    getCumFreq(Long.parseLong(v));    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	67	None	replace
272	[BUG]  [BUGGY]  return  this.sumFreq  *  Math.sqrt(v);  [CE]  cannot  find  symbol  sumFreq  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  this.sumFreq  *  Math.sqrt(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  this.sumFreq  *  Math.sqrt(v);	  return    sumFreq    *    Math.sqrt(v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	82	None	replace
273	[BUG]  [BUGGY]  long  result  =  getCumFreq(long.MAX_VALUE);  [CE]  class  expected  [FE]        StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(long.MAX_VALUE);	  return    getCumFreq(Long.MAX_VALUE);    long    result    =    getCumFreq(Long.MAX_VALUE);    	non-compiled	[CE]  class  expected	37	None	replace
274	[BUG]  [BUGGY]  if(v  <  0)  {  return  getCumFreq(new  Long(v));  }  else  {  sumFreq  =  new  Long(v);  }  [CE]  cannot  find  symbol  sumFreq  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  if(v  <  0)  {  return  getCumFreq(new  Long(v));  }  else  {  sumFreq  =  new  Long(v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	if(v  <  0)  {  return  getCumFreq(new  Long(v));  }  else  {  sumFreq  =  new  Long(v);  }	  return    getCumFreq(new    Long(v));    getCumFreq(new    Long(v));    	non-compiled	[CE]  cannot  find  symbol  sumFreq	23	None	replace
275	[BUG]  [BUGGY]  long  v  =  getCumFreq(Long.MIN_VALUE);  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  v  =  getCumFreq(Long.MIN_VALUE);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  v  =  getCumFreq(Long.MIN_VALUE);	  long    v    =    getCumFreq(Long.MAX_VALUE);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	69	None	replace
276	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(v  -  1L);  [CE]  missing  return  statement  [FE]        StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(v  -  1L);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(v  -  1L);	  long    sumFreq    =    getCumFreq(v    -    1);    	non-compiled	[CE]  missing  return  statement	95	None	replace
277	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v  -  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	add	return  getCumFreq(v  -  1);	  return    getCumFreq(v);    	compilable	  [FE]  StackOverflowError  	10	3	replace
278	[BUG]  [BUGGY]  return  getCumFreq(v  -  1);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v  -  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(v  -  1);	  return    getCumFreq(v);    	compilable	  [FE]  StackOverflowError  	10	3	replace
279	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v  +  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	add	return  getCumFreq(v  +  1);	  return    getCumFreq(v);    	compilable	  [FE]  StackOverflowError  	10	3	replace
280	[BUG]  [BUGGY]  return  getCumFreq(v  +  1);  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v  +  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(v  +  1);	  return    getCumFreq(v);    	compilable	  [FE]  StackOverflowError  	10	3	replace
281	[BUG]  [BUGGY]  return  getCumFreq(v,  0);  [CE]  no  suitable  method  found  for  getCumFreq(long,int)  [FE]        StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v,  0);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(v,  0);	  return    getCumFreq(v);    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(long,int)	10	None	replace
282	[BUG]  [BUGGY]  return  getCumFreq(Long.parseLong(v),  freq);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(Long.parseLong(v),  freq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.parseLong(v),  freq);	  return    getCumFreq(Long.parseLong(v),    sumFreq);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	33	None	replace
283	[BUG]  [BUGGY]  long  result  =  getCumFreq(new  Long(v));  if(result!=  null)  {  return  result;  }  [CE]  incomparable  types:  long  and  <null>  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(new  Long(v));  if(result!=  null)  {  return  result;  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(new  Long(v));  if(result!=  null)  {  return  result;  }	  return    getCumFreq(new    Long(v));    long    result    =    getCumFreq(new    Long(v));    if(result    ==    null)    {    return    result;    }    	non-compiled	[CE]  incomparable  types:  long  and  <null>	27	None	replace
284	[BUG]  [BUGGY]  return  sumFreq(new  Long(v));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  sumFreq(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  sumFreq(new  Long(v));	  return    getFreq(new    Long(v));    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
285	[BUG]  [BUGGY]  return  getCumFreq(v,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  getCumFreq(long,int)  [FE]        StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(v,  Integer.MAX_VALUE);	  return    getCumFreq(v,    Long.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(long,int)	77	None	replace
286	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v),  this);  [CE]  no  suitable  method  found  for  getCumFreq(Long,Frequency)  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v),  this);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(new  Long(v),  this);	  return    getCumFreq(new    Long(v),    sumFreq);    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(Long,Frequency)	105	None	replace
287	[BUG]  [BUGGY]  return  getCumFreq(Long.MAX_VALUE,  v);  [CE]  no  suitable  method  found  for  getCumFreq(long,long)  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(Long.MAX_VALUE,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.MAX_VALUE,  v);	  return    getFreq(Long.MAX_VALUE,    v);    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(long,long)	109	None	replace
288	[BUG]  [BUGGY]  return  getFreq(Long.MAX_VALUE,  v)+  sumFreq;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getFreq(Long.MAX_VALUE,  v)+  sumFreq;  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getFreq(Long.MAX_VALUE,  v)+  sumFreq;	  return    getFreq(Long.MAX_VALUE,    v);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
289	[BUG]  [BUGGY]  return  c  *(v  -  1);  [CE]  cannot  find  symbol  c  [FE]                        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  c  *(v  -  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  c  *(v  -  1);	  return    sumFreq    *(v    -    1);    	non-compiled	[CE]  cannot  find  symbol  c	85	None	replace
290	[BUG]  [BUGGY]  int  sumFreq  =  getCumFreq(v);  Integer  sumFreq  =  getCumFreq(v);  [CE]  possible  loss  of  precision  [FE]          StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  int  sumFreq  =  getCumFreq(v);  Integer  sumFreq  =  getCumFreq(v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	int  sumFreq  =  getCumFreq(v);  Integer  sumFreq  =  getCumFreq(v);	          long    sumFreq    =    getCumFreq(v);    Long    sumFreq    =    getCumFreq(v);    	non-compiled	[CE]  possible  loss  of  precision	17	None	replace
291	[BUG]  [BUGGY]  int  sumFreq  =  getCumFreq(v);  Long  sumFreq  =  getCumFreq(v);  [CE]  possible  loss  of  precision  [FE]            StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  int  sumFreq  =  getCumFreq(v);  Long  sumFreq  =  getCumFreq(v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	int  sumFreq  =  getCumFreq(v);  Long  sumFreq  =  getCumFreq(v);	          long    sumFreq    =    getCumFreq(v);    Long    sumFreq    =    getCumFreq(v);    	non-compiled	[CE]  possible  loss  of  precision	17	None	replace
292	[BUG]  [BUGGY]  return  getCumFreq(new  long(v));  [CE]  '['  expected  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(new  long(v));	  return    getCumFreq(new    Long(v));    return    getCumFreq(new    Long(v));    	non-compiled	[CE]  '['  expected	26	None	replace
293	[BUG]  [BUGGY]  long  result  =  getCumFreq(long.valueOf(v));  [CE]  class  expected  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(long.valueOf(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(long.valueOf(v));	          long    result    =    getCumFreq(Long.valueOf(v));    long    result    =    getCumFreq(long.valueOf(v));    	non-compiled	[CE]  class  expected	104	None	replace
294	[BUG]  [BUGGY]  long  result  =  getCumFreq(long.longValue());  [CE]  class  expected  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(long.longValue());  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(long.longValue());	          long    result    =    getCumFreq(Long.valueOf(v));    long    result    =    getCumFreq(long.valueOf(v));    	non-compiled	[CE]  class  expected	104	None	replace
295	[BUG]  [BUGGY]  Long  result  =  getCumFreq(Long.MAX_VALUE);  return  result  +  v.length();  [CE]  long  cannot  be  dereferenced  [FE]        StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  Long  result  =  getCumFreq(Long.MAX_VALUE);  return  result  +  v.length();  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	Long  result  =  getCumFreq(Long.MAX_VALUE);  return  result  +  v.length();	  return    getCumFreq(Long.MAX_VALUE);    long    result    =    getCumFreq(Long.MAX_VALUE);    return    result    +    sumFreq.length();    	non-compiled	[CE]  long  cannot  be  dereferenced	100	None	replace
296	[BUG]  [BUGGY]  boolean  sumFreq  =  getCumFreq(Long.valueOf(v));  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  boolean  sumFreq  =  getCumFreq(Long.valueOf(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	boolean  sumFreq  =  getCumFreq(Long.valueOf(v));	          long    sumFreq    =    getCumFreq(Long.valueOf(v));    short    sumFreq    =    getCumFreq(Long.valueOf(v));    	non-compiled	[CE]  incompatible  types	54	None	replace
297	[BUG]  [BUGGY]  boolean  sumFreq  =  getCumFreq(new  Long(v));  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  boolean  sumFreq  =  getCumFreq(new  Long(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	boolean  sumFreq  =  getCumFreq(new  Long(v));	          long    sumFreq    =    getCumFreq(new    Long(v));    short    sumFreq    =    getCumFreq(new    Long(v));    	non-compiled	[CE]  incompatible  types	8	None	replace
298	[BUG]  [BUGGY]  return  this.sumFreq  *  Math.max(0,  v);  [CE]  cannot  find  symbol  sumFreq  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  this.sumFreq  *  Math.max(0,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  this.sumFreq  *  Math.max(0,  v);	  return    sumFreq    *    Math.max(0,    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	31	None	replace
299	[BUG]  [BUGGY]  return  getCumFreq(long.MAX_VALUE);  [CE]  class  expected  [FE]              StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(long.MAX_VALUE);	  return    getCumFreq(Long.MAX_VALUE);    return    getCumFreq(Long.MAX_VALUE);    	non-compiled	[CE]  class  expected	40	None	replace
300	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(Long.MAX_VALUE  +  1);  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(Long.MAX_VALUE  +  1);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(Long.MAX_VALUE  +  1);	  long    sumFreq    =    getCumFreq(Long.MAX_VALUE);    	non-compiled	[CE]  missing  return  statement	43	None	replace
301	[BUG]  [BUGGY]  long  result  =  getCumFreq(long.MAX_VALUE);  return  result  +  v;  [CE]  class  expected  [FE]        StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(long.MAX_VALUE);  return  result  +  v;  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(long.MAX_VALUE);  return  result  +  v;	  return    getCumFreq(Long.MAX_VALUE);    long    result    =    getCumFreq(Long.MAX_VALUE);    return    result    +    sumFreq.length;    	non-compiled	[CE]  class  expected	92	None	replace
302	[BUG]  [BUGGY]  return  getCumFreq(v,  v);  [CE]  no  suitable  method  found  for  getCumFreq(long,long)  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(v,  v);	  return    getCumFreq(v,    long.valueOf(v));    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(long,long)	64	None	replace
303	[BUG]  [BUGGY]  return  getCumFreq(v);  long  sumFreq  =  getCumFreq(v);  [CE]  unreachable  statement  [FE]    StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v);  long  sumFreq  =  getCumFreq(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return    getCumFreq(v);    long  sumFreq  =  getCumFreq(v);	  	non-compiled	[CE]  unreachable  statement	9	None	add
304	[BUG]  [BUGGY]  return  getCumFreq(v);  long  sumFreq  =  getSumFreq(v);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]      StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v);  long  sumFreq  =  getSumFreq(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return    getCumFreq(v);    long  sumFreq  =  getSumFreq(v);	  	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	9	None	add
305	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v),  sumTable,  freqTable);  [CE]  cannot  find  symbol  sumTable  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v),  sumTable,  freqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(new  Long(v),  sumTable,  freqTable);	  return    getCumFreq(new    Long(v),    freqTable);    	non-compiled	[CE]  cannot  find  symbol  sumTable	50	None	replace
306	[BUG]  [BUGGY]  long  result  =  getCumFreq(Integer.MIN_VALUE);  [CE]  missing  return  statement  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(Integer.MIN_VALUE);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(Integer.MIN_VALUE);	          long    result    =    getCumFreq(Long.valueOf(v));    long    result    =    getCumFreq(Integer.valueOf(v));    	non-compiled	[CE]  missing  return  statement	103	None	replace
307	[BUG]  [BUGGY]  return  this.sumFreq.longValue()  +  v;  [CE]  cannot  find  symbol  sumFreq  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  this.sumFreq.longValue()  +  v;  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  this.sumFreq.longValue()  +  v;	  return    this.sumFreq.longValue();    	non-compiled	[CE]  cannot  find  symbol  sumFreq	72	None	replace
308	[BUG]  [BUGGY]  return  this.sumFreq.longValue()  -  1;  [CE]  cannot  find  symbol  sumFreq  [FE]                        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  this.sumFreq.longValue()  -  1;  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  this.sumFreq.longValue()  -  1;	  return    this.sumFreq.longValue();    	non-compiled	[CE]  cannot  find  symbol  sumFreq	72	None	replace
309	[BUG]  [BUGGY]  this.sumFreq  =  getCumFreq(v,  v  +  1);  [CE]  cannot  find  symbol  sumFreq  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  this.sumFreq  =  getCumFreq(v,  v  +  1);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	this.sumFreq  =  getCumFreq(v,  v  +  1);	  this.sumFreq    =    getCumFreq(v,    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	59	None	replace
310	[BUG]  [BUGGY]  this.sumFreq  =  getCumFreq(v,  v)+  1L;  [CE]  cannot  find  symbol  sumFreq  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  this.sumFreq  =  getCumFreq(v,  v)+  1L;  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	this.sumFreq  =  getCumFreq(v,  v)+  1L;	  this.sumFreq    =    getCumFreq(v,    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	59	None	replace
311	[BUG]  [BUGGY]  long  result  =  getCumFreq(Long.parseLong(v)+  1);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(Long.parseLong(v)+  1);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(Long.parseLong(v)+  1);	  long    result    =    getCumFreq(Long.parseLong(v));    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	13	None	replace
312	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v)+  1L);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	add	return  getCumFreq(new  Long(v)+  1L);	  return    getCumFreq(new    Long(v)+    1);    	compilable	  [FE]  StackOverflowError  	81	3	replace
313	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v)+  1L);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v)+  1L);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(new  Long(v)+  1L);	  return    getCumFreq(new    Long(v)+    1);    	compilable	  [FE]  StackOverflowError  	81	3	replace
314	[BUG]  [BUGGY]  return  sumFreq[v.longValue();  [CE]  ']'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  sumFreq[v.longValue();  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  sumFreq[v.longValue();	  return    v.longValue();    	non-compiled	[CE]  ']'  expected	70	None	replace
315	[BUG]  [BUGGY]  return  v.longValue()  +  sumFreq.longValue();  [CE]  long  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  v.longValue()  +  sumFreq.longValue();  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  v.longValue()  +  sumFreq.longValue();	  return    v.longValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	70	None	replace
316	[BUG]  [BUGGY]  return  getFreq(Long.parseLong(v)+  sumFreq.length);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getFreq(Long.parseLong(v)+  sumFreq.length);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getFreq(Long.parseLong(v)+  sumFreq.length);	  return    getFreq(Long.parseLong(v));    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	56	None	replace
317	[BUG]  [BUGGY]  long  v  =  freqTable.get(v);  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  v  =  freqTable.get(v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  v  =  freqTable.get(v);	  long    v    =    freqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	20	None	replace
318	[BUG]  [BUGGY]  Long  result  =  getCumFreq(Long.valueOf(v));  [CE]  missing  return  statement  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  Long  result  =  getCumFreq(Long.valueOf(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	Long  result  =  getCumFreq(Long.valueOf(v));	          long    result    =    getCumFreq(Long.valueOf(v));    Long    result    =    getCumFreq(Long.valueOf(v));    	non-compiled	[CE]  missing  return  statement	46	None	replace
319	[BUG]  [BUGGY]  return  result  *  Math.cos(v);  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  result  *  Math.cos(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  result  *  Math.cos(v);	  return    sumFreq    *    Math.cos(v);    	non-compiled	[CE]  cannot  find  symbol  result	83	None	replace
320	[BUG]  [BUGGY]  if(v  <  =  0)  {  sumFreq  =  null;  }  else  {  sumFreq  =  new  Long(v);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  if(v  <  =  0)  {  sumFreq  =  null;  }  else  {  sumFreq  =  new  Long(v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	if(v  <  =  0)  {  sumFreq  =  null;  }  else  {  sumFreq  =  new  Long(v);  }	  return    getCumFreq(new    Long(v));    if(v    <    =    0)    {    sumFreq    =    null;    }    else    {    sumFreq    =    new    Long(v);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
321	[BUG]  [BUGGY]  if(v  <  =  0)  {  sumFreq  =  null;  }  else  {  return  getCumFreq(new  Long(v));  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  if(v  <  =  0)  {  sumFreq  =  null;  }  else  {  return  getCumFreq(new  Long(v));  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	if(v  <  =  0)  {  sumFreq  =  null;  }  else  {  return  getCumFreq(new  Long(v));  }	  return    getCumFreq(new    Long(v));    if(v    <    =    0)    {    sumFreq    =    null;    }    else    {    sumFreq    =    new    Long(v);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
322	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v)+  1);  if(v  <  =  0)  {  sumFreq  =  new  Long(v);  }  else  {  sumFreq  =  new  Long(v);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v)+  1);  if(v  <  =  0)  {  sumFreq  =  new  Long(v);  }  else  {  sumFreq  =  new  Long(v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return    getCumFreq(new    Long(v)+    1);    if(v  <  =  0)  {  sumFreq  =  new  Long(v);  }  else  {  sumFreq  =  new  Long(v);  }	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
323	[BUG]  [BUGGY]  return  getCumFreq(v,  new  Long(v));  [CE]  no  suitable  method  found  for  getCumFreq(long,Long)  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v,  new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(v,  new  Long(v));	  return    getCumFreq(new    Long(v));    long    result    =    getCumFreq(new    Long(v));    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(long,Long)	25	None	replace
324	[BUG]  [BUGGY]  double  sumFreq  =  getSumFreq(v);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  double  sumFreq  =  getSumFreq(v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	double  sumFreq  =  getSumFreq(v);	  int    sumFreq    =    getSumFreq(v);    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	3	None	replace
325	[BUG]  [BUGGY]  return  getCumFreq(variable.longValue());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(variable.longValue());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(variable.longValue());	  return    getCumFreq(variable.valueOf(v));    	non-compiled	[CE]  cannot  find  symbol  	65	None	replace
326	[BUG]  [BUGGY]  long  sumFreq  =  getSumFreq(v,  0L);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getSumFreq(v,  0L);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getSumFreq(v,  0L);	  long    sumFreq    =    getSumFreq(v,    0);    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	4	None	replace
327	[BUG]  [BUGGY]  long  sumFreq  =  getSumFreq(v,  v  +  1);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getSumFreq(v,  v  +  1);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getSumFreq(v,  v  +  1);	  long    sumFreq    =    getSumFreq(v,    v);    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	1	None	replace
328	[BUG]  [BUGGY]  long  sumFreq  =  getSumFreq(v,  v)+  1L;  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getSumFreq(v,  v)+  1L;  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getSumFreq(v,  v)+  1L;	  long    sumFreq    =    getSumFreq(v,    v);    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	1	None	replace
329	[BUG]  [BUGGY]  return  getMeanValue(new  Long(v));  [CE]  cannot  find  symbol  [FE]        StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getMeanValue(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getMeanValue(new  Long(v));	  return    getMeanValue(Long.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
330	[BUG]  [BUGGY]  return  getMeanValue(v,  Long.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getMeanValue(v,  Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getMeanValue(v,  Long.MAX_VALUE);	  return    getMeanValue(Long.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
331	[BUG]  [BUGGY]  return  getMeanValue(Variable.MAX_VALUE);  [CE]  cannot  find  symbol  Variable  [FE]            StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getMeanValue(Variable.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getMeanValue(Variable.MAX_VALUE);	  return    getMeanValue(Long.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  Variable	108	None	replace
332	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v),  this.v);  [CE]  cannot  find  symbol  v  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v),  this.v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(new  Long(v),  this.v);	  return    getCumFreq(new    Long(v),    sumFreq);    	non-compiled	[CE]  cannot  find  symbol  v	105	None	replace
333	[BUG]  [BUGGY]  return  getFreq(v,  Long.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getFreq(v,  Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getFreq(v,  Long.MAX_VALUE);	  return    getFreq(Long.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
334	[BUG]  [BUGGY]  long  sumFreq  =  getSumFreq(v,  freqTable,  column);  [CE]  cannot  find  symbol  column  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getSumFreq(v,  freqTable,  column);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getSumFreq(v,  freqTable,  column);	  long    sumFreq    =    getSumFreq(v,    freqTable);    	non-compiled	[CE]  cannot  find  symbol  column	2	None	replace
335	[BUG]  [BUGGY]  long  sumFreq  =  v.getCumFreq(this.freqTable);  [CE]  long  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  v.getCumFreq(this.freqTable);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  v.getCumFreq(this.freqTable);	  long    sumFreq    =    this.freqTable.getCumFreq(v);    	non-compiled	[CE]  long  cannot  be  dereferenced	62	None	replace
336	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(v,  1);  [CE]  no  suitable  method  found  for  getCumFreq(long,int)  [FE]          StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(v,  1);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(v,  1);	  long    sumFreq    =    getCumFreq(v,    0);    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(long,int)	29	None	replace
337	[BUG]  [BUGGY]  long  v  =  freqTable.getCumFreq(v,  sumFreq);  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  v  =  freqTable.getCumFreq(v,  sumFreq);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  v  =  freqTable.getCumFreq(v,  sumFreq);	  long    v    =    freqTable.getCumFreq(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	61	None	replace
338	[BUG]  [BUGGY]  long  v  =  freqTable.getCumFreq(v)-  1;  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  v  =  freqTable.getCumFreq(v)-  1;  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  v  =  freqTable.getCumFreq(v)-  1;	  long    v    =    freqTable.getCumFreq(v);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	61	None	replace
339	[BUG]  [BUGGY]  int  sumFreq  =  getCumFreq(new  Integer(v));  [CE]  no  suitable  constructor  found  for  Integer(long)  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  int  sumFreq  =  getCumFreq(new  Integer(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	int  sumFreq  =  getCumFreq(new  Integer(v));	          long    sumFreq    =    getCumFreq(new    Long(v));    int    sumFreq    =    getCumFreq(new    Long(v));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(long)	7	None	replace
340	[BUG]  [BUGGY]  long  result  =  getCumFreq(long.doubleValue());  [CE]  class  expected  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(long.doubleValue());  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(long.doubleValue());	          long    result    =    getCumFreq(Long.valueOf(v));    long    result    =    getCumFreq(long.valueOf(v));    	non-compiled	[CE]  class  expected	104	None	replace
341	[BUG]  [BUGGY]  long  sumFreq  =  v.getCumFreq(v,  freqTable);  [CE]  long  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  v.getCumFreq(v,  freqTable);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  v.getCumFreq(v,  freqTable);	  long    sumFreq    =    freqTable.getCumFreq(v,    v);    	non-compiled	[CE]  long  cannot  be  dereferenced	63	None	replace
342	[BUG]  [BUGGY]  int  v  =  this.sumFreqTable.size()  -  2;  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  int  v  =  this.sumFreqTable.size()  -  2;  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	int  v  =  this.sumFreqTable.size()  -  2;	  int    v    =    this.sumFreqTable.size();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	86	None	replace
343	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  }  else  {  sumFreq.setLong(v);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  }  else  {  sumFreq.setLong(v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  }  else  {  sumFreq.setLong(v);  }	  return    getCumFreq(new    Long(v));    getCumFreq(new    Long(v));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
344	[BUG]  [BUGGY]  this.sumFreq  =  getCumFreq(v,  v)+  1;  [CE]  cannot  find  symbol  sumFreq  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  this.sumFreq  =  getCumFreq(v,  v)+  1;  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	this.sumFreq  =  getCumFreq(v,  v)+  1;	  this.sumFreq    =    getCumFreq(v,    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	59	None	replace
345	[BUG]  [BUGGY]  this.sumFreq  =  getCumFreq(v,  v)-  1;  [CE]  cannot  find  symbol  sumFreq  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  this.sumFreq  =  getCumFreq(v,  v)-  1;  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	this.sumFreq  =  getCumFreq(v,  v)-  1;	  this.sumFreq    =    getCumFreq(v,    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	59	None	replace
346	[BUG]  [BUGGY]  int  v  =  getCumFreq(new  Long(v));  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  int  v  =  getCumFreq(new  Long(v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	int  v  =  getCumFreq(new  Long(v));	  return    getCumFreq(new    Long(v));    long    v    =    getCumFreq(new    Long(v));    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	24	None	replace
347	[BUG]  [BUGGY]  long  sumFreq  =  freqTable.getCumFreq(v)-  2;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  freqTable.getCumFreq(v)-  2;  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  freqTable.getCumFreq(v)-  2;	  long    sumFreq    =    freqTable.getCumFreq(v)-    1;    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
348	[BUG]  [BUGGY]  return  this.cumFreq  *  Math.cos(v);  [CE]  cannot  find  symbol  cumFreq  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  this.cumFreq  *  Math.cos(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  this.cumFreq  *  Math.cos(v);	  return    sumFreq    *    Math.cos(v);    	non-compiled	[CE]  cannot  find  symbol  cumFreq	83	None	replace
349	[BUG]  [BUGGY]  long  result  =  getCumFreq(new  Long(v));  return  result  +  v  *  sumFreq.longValue();  [CE]  cannot  find  symbol  sumFreq  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(new  Long(v));  return  result  +  v  *  sumFreq.longValue();  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(new  Long(v));  return  result  +  v  *  sumFreq.longValue();	  return    getCumFreq(new    Long(v));    long    result    =    getCumFreq(new    Long(v));    return    result    +    sumFreq.longValue();    	non-compiled	[CE]  cannot  find  symbol  sumFreq	98	None	replace
350	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  if(v  <  =  0)  {  sumFreq  =  null;  }  else  {  sumFreq  =  new  Long(v);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  if(v  <  =  0)  {  sumFreq  =  null;  }  else  {  sumFreq  =  new  Long(v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  if(v  <  =  0)  {  sumFreq  =  null;  }  else  {  sumFreq  =  new  Long(v);  }	  return    getCumFreq(new    Long(v));    if(v    <    =    0)    {    sumFreq    =    null;    }    else    {    sumFreq    =    new    Long(v);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
351	[BUG]  [BUGGY]  return  getFreq(Long.parseLong(sumFreq));  [CE]  cannot  find  symbol  sumFreq  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getFreq(Long.parseLong(sumFreq));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getFreq(Long.parseLong(sumFreq));	  return    getFreq(Long.parseLong(v));    	non-compiled	[CE]  cannot  find  symbol  sumFreq	56	None	replace
352	[BUG]  [BUGGY]  return  getFreq(Long.parseLong(sumFreq,  v));  [CE]  cannot  find  symbol  sumFreq  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getFreq(Long.parseLong(sumFreq,  v));  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getFreq(Long.parseLong(sumFreq,  v));	  return    getFreq(Long.parseLong(v));    	non-compiled	[CE]  cannot  find  symbol  sumFreq	56	None	replace
353	[BUG]  [BUGGY]  return  getCumFreq(v);  if(v  >  0)  {  sumFreq  =  new  Long(v);  }  else  {  sumFreq  +=  DateTimeUtils.currentTimeMillis();  }  [CE]  cannot  find  symbol  sumFreq  [FE]    StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v);  if(v  >  0)  {  sumFreq  =  new  Long(v);  }  else  {  sumFreq  +=  DateTimeUtils.currentTimeMillis();  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return    getCumFreq(v);    if(v  >  0)  {  sumFreq  =  new  Long(v);  }  else  {  sumFreq  +=  DateTimeUtils.currentTimeMillis();  }	  	non-compiled	[CE]  cannot  find  symbol  sumFreq	9	None	add
354	[BUG]  [BUGGY]  return  getCumFreq(v);  if(v  >  0)  {  sumFreq  +=  getCumFreq(v);  }  else  {  sumFreq  +=  getSumFreq();  }  [CE]  cannot  find  symbol  sumFreq  [FE]      StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v);  if(v  >  0)  {  sumFreq  +=  getCumFreq(v);  }  else  {  sumFreq  +=  getSumFreq();  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return    getCumFreq(v);    if(v  >  0)  {  sumFreq  +=  getCumFreq(v);  }  else  {  sumFreq  +=  getSumFreq();  }	  	non-compiled	[CE]  cannot  find  symbol  sumFreq	9	None	add
355	[BUG]  [BUGGY]  return  getCumFreq(Long.parseLong(v),  freqTable,  sumFreqTable);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(Long.parseLong(v),  freqTable,  sumFreqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.parseLong(v),  freqTable,  sumFreqTable);	  return    getCumFreq(Long.parseLong(v),    sumFreqTable);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	36	None	replace
356	[BUG]  [BUGGY]  return  getCumFreq(Long.parseLong(v),  sumFreqTable,  v);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(Long.parseLong(v),  sumFreqTable,  v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.parseLong(v),  sumFreqTable,  v);	  return    getCumFreq(Long.parseLong(v),    sumFreqTable);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	36	None	replace
357	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  result  =  getCumFreq(new  Long(v));  if(result  ==  null)  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  result  =  getCumFreq(new  Long(v));  if(result  ==  null)  {  return  result;  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  result  =  getCumFreq(new  Long(v));  if(result  ==  null)  {  return  result;  }	  return    getCumFreq(new    Long(v));    long    result    =    getCumFreq(new    Long(v));    if(result    ==    null)    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
358	[BUG]  [BUGGY]  if(v  <  =  0  ||  v  >  0)  {  return  getCumFreq(new  Long(v));  result  =  getCumFreq(new  Long(v));  if(result  ==  null)  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  if(v  <  =  0  ||  v  >  0)  {  return  getCumFreq(new  Long(v));  result  =  getCumFreq(new  Long(v));  if(result  ==  null)  {  return  result;  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	if(v  <  =  0  ||  v  >  0)  {  return  getCumFreq(new  Long(v));  result  =  getCumFreq(new  Long(v));  if(result  ==  null)  {  return  result;  }	  return    getCumFreq(new    Long(v));    long    result    =    getCumFreq(new    Long(v));    if(result    ==    null)    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
359	[BUG]  [BUGGY]  long  result  =  getCumFreq(L  Long.MAX_VALUE);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(L  Long.MAX_VALUE);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(L  Long.MAX_VALUE);	          long    result    =    getCumFreq(Long.valueOf(v));    long    result    =    getCumFreq(L    Long.valueOf(v));    	non-compiled	[CE]  ')'  expected	47	None	replace
360	[BUG]  [BUGGY]  return  getCumFreq(v,  sumFreqTable.longValue());  [CE]  cannot  find  symbol  sumFreqTable  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v,  sumFreqTable.longValue());  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(v,  sumFreqTable.longValue());	  return    getCumFreq(v.longValue());    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	66	None	replace
361	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v)+  1);  for(int  i  =  0,  len  =  sumFreq.length();  i  <  len;  ++i)  {  sumFreq[i]  =  new  Long(v);  }  [CE]  cannot  find  symbol  sumFreq  [FE]    StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v)+  1);  for(int  i  =  0,  len  =  sumFreq.length();  i  <  len;  ++i)  {  sumFreq[i]  =  new  Long(v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return    getCumFreq(new    Long(v)+    1);    for(int  i  =  0,  len  =  sumFreq.length();  i  <  len;  ++i)  {  sumFreq[i]  =  new  Long(v);  }	  	non-compiled	[CE]  cannot  find  symbol  sumFreq	80	None	add
362	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v)+  1);  for(int  i  =  0,  len  =  sumFreq.length();  i  <  len;  ++i)  {  sumFreq[i]  +=  new  Long(v);  }  [CE]  cannot  find  symbol  sumFreq  [FE]      StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v)+  1);  for(int  i  =  0,  len  =  sumFreq.length();  i  <  len;  ++i)  {  sumFreq[i]  +=  new  Long(v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return    getCumFreq(new    Long(v)+    1);    for(int  i  =  0,  len  =  sumFreq.length();  i  <  len;  ++i)  {  sumFreq[i]  +=  new  Long(v);  }	  	non-compiled	[CE]  cannot  find  symbol  sumFreq	80	None	add
363	[BUG]  [BUGGY]  return  cumFreq  *(v  -  1);  [CE]  cannot  find  symbol  cumFreq  [FE]                        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  cumFreq  *(v  -  1);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  cumFreq  *(v  -  1);	  return    sumFreq    *(v    -    1);    	non-compiled	[CE]  cannot  find  symbol  cumFreq	85	None	replace
364	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v)).shortValue();  [CE]  long  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v)).shortValue();  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(new  Long(v)).shortValue();	  return    getCumFreq(new    Long(v)).longValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	79	None	replace
365	[BUG]  [BUGGY]  return  getFreq(Long.MAX_VALUE,  sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getFreq(Long.MAX_VALUE,  sumFreq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getFreq(Long.MAX_VALUE,  sumFreq);	  return    getFreq(Long.MAX_VALUE,    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	109	None	replace
366	[BUG]  [BUGGY]  return  getCumFreq(Long.parseLong(v)/  2.0),  sumFreq);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(Long.parseLong(v)/  2.0),  sumFreq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.parseLong(v)/  2.0),  sumFreq);	  return    getCumFreq(Long.parseLong(v)/    2.0);    	non-compiled	[CE]  ';'  expected	102	None	replace
367	[BUG]  [BUGGY]  return  getCumFreq(Long.parseLong(v)+  1,  sumFreq);  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(Long.parseLong(v)+  1,  sumFreq);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.parseLong(v)+  1,  sumFreq);	  return    getCumFreq(Long.parseLong(v)+    1);    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	93	None	replace
368	[BUG]  [BUGGY]  long  result  =  getCumFreq(Long.MAX_VALUE);  return  result  -  result  +  v.length();  [CE]  long  cannot  be  dereferenced  [FE]        StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(Long.MAX_VALUE);  return  result  -  result  +  v.length();  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(Long.MAX_VALUE);  return  result  -  result  +  v.length();	  return    getCumFreq(Long.MAX_VALUE);    long    result    =    getCumFreq(Long.MAX_VALUE);    return    result    +    sumFreq.length();    	non-compiled	[CE]  long  cannot  be  dereferenced	100	None	replace
369	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(Long.MAX_VALUE);  }  else  {  sumFreq  =  new  Long(v);  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(Long.MAX_VALUE);  }  else  {  sumFreq  =  new  Long(v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	if(v  <  =  0)  {  return  getCumFreq(Long.MAX_VALUE);  }  else  {  sumFreq  =  new  Long(v);  }	  return    getCumFreq(Long.MAX_VALUE);    getCumFreq(Long.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
370	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(Long.MAX_VALUE);  }  else  {  sumFreq  +=  Long.MAX_VALUE;  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(Long.MAX_VALUE);  }  else  {  sumFreq  +=  Long.MAX_VALUE;  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	if(v  <  =  0)  {  return  getCumFreq(Long.MAX_VALUE);  }  else  {  sumFreq  +=  Long.MAX_VALUE;  }	  return    getCumFreq(Long.MAX_VALUE);    getCumFreq(Long.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
371	[BUG]  [BUGGY]  if(v  <  =  0)  {  sumFreq  =  new  Long(v);  }  else  {  sumFreq  =  new  Long(v);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  if(v  <  =  0)  {  sumFreq  =  new  Long(v);  }  else  {  sumFreq  =  new  Long(v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	if(v  <  =  0)  {  sumFreq  =  new  Long(v);  }  else  {  sumFreq  =  new  Long(v);  }	  return    getCumFreq(new    Long(v));    if(v    <    =    0)    {    sumFreq    =    new    Long(v);    }    else    {    sumFreq    =    new    Long(v);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
372	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  if(v  <  =  0)  {  sumFreq  =  new  Long(v);  }  else  {  sumFreq  =  new  Long(v);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  if(v  <  =  0)  {  sumFreq  =  new  Long(v);  }  else  {  sumFreq  =  new  Long(v);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  if(v  <  =  0)  {  sumFreq  =  new  Long(v);  }  else  {  sumFreq  =  new  Long(v);  }	  return    getCumFreq(new    Long(v));    if(v    <    =    0)    {    sumFreq    =    new    Long(v);    }    else    {    sumFreq    =    new    Long(v);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
373	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  result  =  getCumFreq(new  Long(v));  }  else  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  result  =  getCumFreq(new  Long(v));  }  else  {  return  result;  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  result  =  getCumFreq(new  Long(v));  }  else  {  return  result;  }	  return    getCumFreq(new    Long(v));    long    result    =    getCumFreq(new    Long(v));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
374	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  result  =  getCumFreq(new  Long(v));  }  else  {  return  result  +  1;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  result  =  getCumFreq(new  Long(v));  }  else  {  return  result  +  1;  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	if(v  <  =  0)  {  return  getCumFreq(new  Long(v));  result  =  getCumFreq(new  Long(v));  }  else  {  return  result  +  1;  }	  return    getCumFreq(new    Long(v));    long    result    =    getCumFreq(new    Long(v));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
375	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(L  Long.MAX_VALUE);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(L  Long.MAX_VALUE);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(L  Long.MAX_VALUE);	          long    sumFreq    =    getCumFreq(Long.valueOf(v));    long    sumFreq    =    getCumFreq(L    Long.valueOf(v));    	non-compiled	[CE]  ')'  expected	55	None	replace
376	[BUG]  [BUGGY]  int  result  =  getCumFreq(Long.parseLong(v));  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  int  result  =  getCumFreq(Long.parseLong(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	int  result  =  getCumFreq(Long.parseLong(v));	  long    result    =    getCumFreq(Long.parseLong(v));    	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	13	None	replace
377	[BUG]  [BUGGY]          long    result    =    getCumFreq(Long.valueOf(v));    result  =  getCumFreq(Long.valueOf(v));  long  result  =  getCumFreq(Long.parseLong(v));  result  =  getCumFreq(Long.parseLong(v));  [CE]  variable  result  is  already  defined  in  method  getCumFreq(long)  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]          long    result    =    getCumFreq(Long.valueOf(v));    result  =  getCumFreq(Long.valueOf(v));  long  result  =  getCumFreq(Long.parseLong(v));  result  =  getCumFreq(Long.parseLong(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	                long        result        =        getCumFreq(Long.valueOf(v));        result    =    getCumFreq(Long.valueOf(v));    long  result  =  getCumFreq(Long.parseLong(v));  result  =  getCumFreq(Long.parseLong(v));	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  getCumFreq(long)	87	None	add
378	[BUG]  [BUGGY]          long    result    =    getCumFreq(Long.valueOf(v));    result  =  getCumFreq(Long.valueOf(v));  long  result  =  getCumFreq(Long.MIN_VALUE);  result  =  getCumFreq(Long.valueOf(v));  [CE]  variable  result  is  already  defined  in  method  getCumFreq(long)  [FE]      AssertionFailedError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]          long    result    =    getCumFreq(Long.valueOf(v));    result  =  getCumFreq(Long.valueOf(v));  long  result  =  getCumFreq(Long.MIN_VALUE);  result  =  getCumFreq(Long.valueOf(v));  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	                long        result        =        getCumFreq(Long.valueOf(v));        result    =    getCumFreq(Long.valueOf(v));    long  result  =  getCumFreq(Long.MIN_VALUE);  result  =  getCumFreq(Long.valueOf(v));	  	non-compiled	[CE]  variable  result  is  already  defined  in  method  getCumFreq(long)	87	None	add
379	[BUG]  [BUGGY]  long  v  =  getCumFreq(Long.MAX_VALUE)+  1;  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  v  =  getCumFreq(Long.MAX_VALUE)+  1;  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  v  =  getCumFreq(Long.MAX_VALUE)+  1;	  long    v    =    getCumFreq(Long.MAX_VALUE);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	69	None	replace
380	[BUG]  [BUGGY]  return  v  *  Math.max(v,  this.sumFreq.length);  [CE]  cannot  find  symbol  sumFreq  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  v  *  Math.max(v,  this.sumFreq.length);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  v  *  Math.max(v,  this.sumFreq.length);	  return    sumFreq    *    Math.max(v,    sumFreq.length);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	32	None	replace
381	[BUG]  [BUGGY]  return  v  *  Math.max(v,  value.length);  [CE]  cannot  find  symbol  value  [FE]                        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  v  *  Math.max(v,  value.length);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  v  *  Math.max(v,  value.length);	  return    sumFreq    *    Math.max(v,    sumFreq.length);    	non-compiled	[CE]  cannot  find  symbol  value	32	None	replace
382	[BUG]  [BUGGY]  return  getCumFreq(v,  Long.MAX_VALUE,  sumFreqTable);  [CE]  cannot  find  symbol  sumFreqTable  [FE]        StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(v,  Long.MAX_VALUE,  sumFreqTable);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(v,  Long.MAX_VALUE,  sumFreqTable);	  return    getCumFreq(v,    Long.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	77	None	replace
383	[BUG]  [BUGGY]  int  result  =  getCumFreq(Long.MAX_VALUE);  [CE]  possible  loss  of  precision  [FE]        StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  int  result  =  getCumFreq(Long.MAX_VALUE);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	int  result  =  getCumFreq(Long.MAX_VALUE);	  return    getCumFreq(Long.MAX_VALUE);    long    result    =    getCumFreq(Long.MAX_VALUE);    	non-compiled	[CE]  possible  loss  of  precision	37	None	replace
384	[BUG]  [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(Long.MAX_VALUE);  result  =  getCumFreq(Long.MAX_VALUE);  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  if(v  <  =  0)  {  return  getCumFreq(Long.MAX_VALUE);  result  =  getCumFreq(Long.MAX_VALUE);  }  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	if(v  <  =  0)  {  return  getCumFreq(Long.MAX_VALUE);  result  =  getCumFreq(Long.MAX_VALUE);  }	  return    getCumFreq(Long.MAX_VALUE);    long    result    =    getCumFreq(Long.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
385	[BUG]  [BUGGY]  return  value  *  Math.sqrt(v);  [CE]  cannot  find  symbol  value  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  value  *  Math.sqrt(v);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  value  *  Math.sqrt(v);	  return    sumFreq    *    Math.sqrt(v);    	non-compiled	[CE]  cannot  find  symbol  value	82	None	replace
386	[BUG]  [BUGGY]  long  result  =  getCumFreq(Long.MAX_VALUE);  return  result  -  result  +  v.length;  [CE]  long  cannot  be  dereferenced  [FE]        StackOverflowError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  result  =  getCumFreq(Long.MAX_VALUE);  return  result  -  result  +  v.length;  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  result  =  getCumFreq(Long.MAX_VALUE);  return  result  -  result  +  v.length;	  return    getCumFreq(Long.MAX_VALUE);    long    result    =    getCumFreq(Long.MAX_VALUE);    return    result    +    sumFreq.length;    	non-compiled	[CE]  long  cannot  be  dereferenced	92	None	replace
387	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v)/  2);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	add	return  getCumFreq(new  Long(v)/  2);	  return    getCumFreq(new    Long(v)+    1);    	compilable	  [FE]  StackOverflowError  	81	3	replace
388	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v)/  2);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  return  getCumFreq(new  Long(v)/  2);  [BUGGY]      }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(new  Long(v)/  2);	  return    getCumFreq(new    Long(v)+    1);    	compilable	  [FE]  StackOverflowError  	81	3	replace
389	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(new  Long(v),  v,  this.freqTable);  [CE]  no  suitable  method  found  for  getCumFreq(Long,long,TreeMap<Comparable<?>,Long>)  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(new  Long(v),  v,  this.freqTable);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(new  Long(v),  v,  this.freqTable);	  long    sumFreq    =    getCumFreq(new    Long(v),    v);    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(Long,long,TreeMap<Comparable<?>,Long>)	74	None	replace
390	[BUG]  [BUGGY]  long  sumFreq  =  getCumFreq(new  Long(v),  v,  v);  [CE]  no  suitable  method  found  for  getCumFreq(Long,long,long)  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(long  v)  {      [BUGGY]  long  sumFreq  =  getCumFreq(new  Long(v),  v,  v);  [BUGGY]      return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	long  sumFreq  =  getCumFreq(new  Long(v),  v,  v);	  long    sumFreq    =    getCumFreq(new    Long(v),    v);    	non-compiled	[CE]  no  suitable  method  found  for  getCumFreq(Long,long,long)	74	None	replace
