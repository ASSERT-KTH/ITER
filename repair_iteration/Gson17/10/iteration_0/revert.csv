projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java81}
projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java81this.localFormat=localFormat;
projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java81if(localFormat==null){finalClass<?extendsDate>dateType=localFormat.getClass();if(dateType!=Date.class&&dateType!=Date.class&&dateType!=Timestamp.class){thrownewIllegalArgumentException("Datetypemustbe
projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java81if(localFormat==null){finalClass<?extendsDate>dateType=localFormat.getClass();if(dateType!=Date.class&&dateType!=Date.class&&dateType!=Timestamp.class){thrownewIllegalArgumentException("");}
projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java81if(localFormat==null){finalClass<?extendsDate>dateType=localFormat.getClass();if(dateType.isPrimitive()||dateType.isPrimitive()){thrownewIllegalArgumentException("");}
projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java81if(localFormat==null){finalClass<?extendsDate>dateType=localFormat.getClass();if(dateType!=Date.class&&dateType!=Date.class&&dateType!=Timestamp.class){thrownewIllegalArgumentException("Datetypemustbeoneof
projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java81if(localFormat==null){finalClass<?extendsDate>dateType=localFormat.getClass();if(dateType!=Date.class&&dateType!=Date.class&&dateType!=Timestamp.class){thrownewIllegalArgumentException("
projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java81if(localFormat==null){finalClass<?extendsDate>dateType=localFormat.getClass();if(dateType!=Date.class&&dateType!=Date.class&&dateType!=Timestamp.class){thrownewIllegalArgumentException("Datetypemustbean
projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java81
projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java81if(localFormat==null){for(finalClass<?extendsDate>dateType:localFormat){if(dateType.isPrimitive()||dateType.isPrimitive()){thrownewIllegalArgumentException("");}
projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java81if(localFormat==null){for(finalClass<?extendsDate>dateType:localFormat){if(dateType.isAssignableFrom(dateType)){thrownewIllegalArgumentException("");}
projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java81if(localFormat==null){for(finalClass<?extendsDate>dateType:localFormat){if(dateType!=Date.class&&dateType!=Date.class&&dateType!=Timestamp.class){thrownewIllegalArgumentException("");}
projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java81if(localFormat==null){for(finalClass<?extendsDate>dateType:localFormat){if(dateType!=Date.class&&dateType!=Date.class&&dateType!=Timestamp.class){thrownewIllegalArgumentException("")
projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java81if(localFormat==null){for(finalClass<?extendsDate>dateType:localFormat){if(dateType.getClass().isArray()){thrownewIllegalArgumentException("");}
projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java81if(localFormat==null){for(finalClass<?extendsDate>dateType:localFormat){if(dateType!=Date.class&&dateType!=Date.class&&dateType!=Timestamp.class){thrownewIllegalArgumentException("Datetypemustbe
projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java81if(localFormat==null){for(finalClass<?extendsDate>dateType:localFormat.getClasses()){thrownewIllegalArgumentException("");}
projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java81if(localFormat==null){for(finalClass<?extendsDate>dateType:localFormat){thrownewIllegalArgumentException("");}
projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java81if(localFormat==null){for(finalClass<?extendsDate>dateType:localFormat){thrownewIllegalArgumentException("Datetypemustbenon-standardformat");}
projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java81if(localFormat==null){for(finalClass<?extendsDate>dateType:localFormat){thrownewIllegalArgumentException("Datetypemustbenon-standardformat.");}
projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java81thrownewIllegalArgumentException("");
projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java81if(localFormat==null){for(finalClass<?extendsDate>dateType:localFormat.getClasses()){thrownewIllegalArgumentException("Datetypemustbenon-standardformat.");}
