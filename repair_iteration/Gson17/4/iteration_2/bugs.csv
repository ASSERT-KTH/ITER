bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US);  [CE]  illegal  start  of  expression  [FE]        JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US);  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US);	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
2	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFA  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFA  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFA	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US);    	non-compiled	[CE]  ';'  expected	9	None	replace
3	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DE  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DE  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DE	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US);    	non-compiled	[CE]  ';'  expected	9	None	replace
4	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US);    	non-compiled	[CE]  ';'  expected	9	None	replace
5	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT);  [CE]  ';'  expected  [FE]                JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT);  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT);	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US);    	non-compiled	[CE]  ';'  expected	9	None	replace
6	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT  [CE]  ';'  expected  [FE]                  JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US);    	non-compiled	[CE]  ';'  expected	9	None	replace
7	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DELAYED  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DELAYED  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DELAYED	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DE    	non-compiled	[CE]  ';'  expected	2	None	replace
8	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEATE  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEATE  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEATE	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DE    	non-compiled	[CE]  ';'  expected	2	None	replace
9	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DE  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DE  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DE	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DE    	non-compiled	[CE]  ';'  expected	2	None	replace
10	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFULT,  DateFormat.DE  [CE]  ';'  expected  [FE]                JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFULT,  DateFormat.DE  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFULT,  DateFormat.DE	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DE    	non-compiled	[CE]  ';'  expected	2	None	replace
11	[BUG]  [BUGGY]  this.dateType  =  dateType.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DE  [CE]  ';'  expected  [FE]                  JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  dateType.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DE  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  dateType.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DE	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DE    	non-compiled	[CE]  ';'  expected	2	None	replace
12	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [CE]  ';'  expected  [FE]                    JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DE    	non-compiled	[CE]  ';'  expected	2	None	replace
13	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT));    	non-compiled	[CE]  ';'  expected	10	None	replace
14	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAUL  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAUL  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAUL	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT));    	non-compiled	[CE]  ';'  expected	10	None	replace
15	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT));    	non-compiled	[CE]  ';'  expected	10	None	replace
16	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEF    	non-compiled	[CE]  ';'  expected	19	None	replace
17	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  [CE]  ';'  expected  [FE]                JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEF    	non-compiled	[CE]  ';'  expected	19	None	replace
18	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEF,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  [CE]  ';'  expected  [FE]                  JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEF,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEF,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEF    	non-compiled	[CE]  ';'  expected	19	None	replace
19	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEF,  DateFormat.DEF  [CE]  ';'  expected  [FE]                    JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEF,  DateFormat.DEF  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEF,  DateFormat.DEF	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEF    	non-compiled	[CE]  ';'  expected	19	None	replace
20	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  1;  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  1;  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  1;	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT)+    1;    	non-compiled	[CE]  ';'  expected	12	None	replace
21	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  2;  [CE]  ';'  expected  [FE]                JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  2;  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  2;	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT)+    1;    	non-compiled	[CE]  ';'  expected	12	None	replace
22	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  1L;  [CE]  ';'  expected  [FE]                  JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  1L;  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  1L;	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT)+    1;    	non-compiled	[CE]  ';'  expected	12	None	replace
23	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)/  1;  [CE]  ';'  expected  [FE]                    JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)/  1;  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)/  1;	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT)+    1;    	non-compiled	[CE]  ';'  expected	12	None	replace
24	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  3;  [CE]  ';'  expected  [FE]                      JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  3;  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  3;	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT)+    1;    	non-compiled	[CE]  ';'  expected	12	None	replace
25	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  2;  [CE]  ';'  expected  [FE]                        JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  2;  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  2;	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT)+    1;    	non-compiled	[CE]  ';'  expected	12	None	replace
26	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT  [CE]  ';'  expected  [FE]                  JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFA    	non-compiled	[CE]  ';'  expected	6	None	replace
27	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [CE]  ';'  expected  [FE]                    JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFA    	non-compiled	[CE]  ';'  expected	6	None	replace
28	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  [CE]  ';'  expected  [FE]                      JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFA    	non-compiled	[CE]  ';'  expected	6	None	replace
29	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [CE]  ';'  expected  [FE]                  JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    	non-compiled	[CE]  ';'  expected	14	None	replace
30	[BUG]  [BUGGY]  This.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [CE]  ';'  expected  [FE]                    JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  This.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	This.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    	non-compiled	[CE]  ';'  expected	14	None	replace
31	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  [CE]  ';'  expected  [FE]                      JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    	non-compiled	[CE]  ';'  expected	14	None	replace
32	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(dateType,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [CE]  ';'  expected  [FE]                        JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(dateType,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(dateType,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    	non-compiled	[CE]  ';'  expected	14	None	replace
33	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  0,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [CE]  ';'  expected  [FE]                          JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  0,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  0,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    	non-compiled	[CE]  ';'  expected	14	None	replace
34	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  }  [CE]  ';'  expected  [FE]                            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  }  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  }	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    	non-compiled	[CE]  ';'  expected	14	None	replace
35	[BUG]  [BUGGY]  this.dateType  =  dateType.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  dateType.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  dateType.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT));    	non-compiled	[CE]  ';'  expected	1	None	replace
36	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFULT));  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFULT));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFULT));	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT));    	non-compiled	[CE]  ';'  expected	1	None	replace
37	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  1);  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  1);  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  1);	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT));    	non-compiled	[CE]  ';'  expected	1	None	replace
38	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.SHORT));  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.SHORT));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.SHORT));	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT));    	non-compiled	[CE]  ';'  expected	1	None	replace
39	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.NAME));  [CE]  ';'  expected  [FE]                JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.NAME));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.NAME));	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT));    	non-compiled	[CE]  ';'  expected	1	None	replace
40	[BUG]  [BUGGY]  this.dateType  =  dateType.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  dateType.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  dateType.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US));    	non-compiled	[CE]  ';'  expected	16	None	replace
41	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)+  1);  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)+  1);  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)+  1);	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US));    	non-compiled	[CE]  ';'  expected	16	None	replace
42	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getShortDateTimeInstance(DateFormat.DEFAULT,  Locale.US));  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getShortDateTimeInstance(DateFormat.DEFAULT,  Locale.US));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getShortDateTimeInstance(DateFormat.DEFAULT,  Locale.US));	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US));    	non-compiled	[CE]  ';'  expected	16	None	replace
43	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  [CE]  ';'  expected  [FE]                JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFA    	non-compiled	[CE]  ';'  expected	20	None	replace
44	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  DateFormat.DEFA  [CE]  ';'  expected  [FE]                  JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  DateFormat.DEFA  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  DateFormat.DEFA	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFA    	non-compiled	[CE]  ';'  expected	20	None	replace
45	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DE  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DE  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DE	  if(dateType    ==    null)    {    this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US);    }    else    {    this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.    	non-compiled	[CE]  ';'  expected	11	None	replace
46	[BUG]  [BUGGY]  if(dateType!=  null)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }  else  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.  [CE]  illegal  start  of  expression  [FE]              JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  if(dateType!=  null)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }  else  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	if(dateType!=  null)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }  else  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.	  if(dateType    ==    null)    {    this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US);    }    else    {    this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
47	[BUG]  [BUGGY]  if(dateType!=  null)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }  [CE]  illegal  start  of  expression  [FE]                JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  if(dateType!=  null)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	if(dateType!=  null)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }	  if(dateType    ==    null)    {    this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US);    }    else    {    this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
48	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  [CE]  ';'  expected  [FE]                  JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT	  if(dateType    ==    null)    {    this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US);    }    else    {    this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.    	non-compiled	[CE]  ';'  expected	11	None	replace
49	[BUG]  [BUGGY]  this.dateType  =  dateType.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [CE]  ';'  expected  [FE]                  JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  dateType.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  dateType.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    	non-compiled	[CE]  ';'  expected	21	None	replace
50	[BUG]  [BUGGY]  This.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [CE]  ';'  expected  [FE]                    JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  This.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	This.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    	non-compiled	[CE]  ';'  expected	21	None	replace
51	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  0,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [CE]  ';'  expected  [FE]                      JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  0,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  0,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    	non-compiled	[CE]  ';'  expected	21	None	replace
52	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  localFormat.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [CE]  ';'  expected  [FE]                        JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  localFormat.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  localFormat.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    	non-compiled	[CE]  ';'  expected	21	None	replace
53	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  }  [CE]  ';'  expected  [FE]                          JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  }  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  }	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    	non-compiled	[CE]  ';'  expected	21	None	replace
54	[BUG]  [BUGGY]  This.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  [CE]  illegal  start  of  expression  [FE]                JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  This.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	This.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);	  if(dateType    ==    null)    {    this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
55	[BUG]  [BUGGY]  DateFormat  localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  [CE]  illegal  start  of  expression  [FE]                  JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  DateFormat  localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	DateFormat  localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);	  if(dateType    ==    null)    {    this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
56	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAUL  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAUL  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAUL	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFA    	non-compiled	[CE]  ';'  expected	4	None	replace
57	[BUG]  [BUGGY]  This.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFA  [CE]  ';'  expected  [FE]                JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  This.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFA  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	This.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFA	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFA    	non-compiled	[CE]  ';'  expected	4	None	replace
58	[BUG]  [BUGGY]  this.dateType  =  dateType.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFA  [CE]  ';'  expected  [FE]                  JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  dateType.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFA  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  dateType.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFA	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFA    	non-compiled	[CE]  ';'  expected	4	None	replace
59	[BUG]  [BUGGY]  String  SIMPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [CE]  ';'  expected  [FE]                      JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  String  SIMPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	String  SIMPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));	      	non-compiled	[CE]  ';'  expected	8	None	replace
60	[BUG]  [BUGGY]  String  SIMPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  [CE]  illegal  start  of  expression  [FE]                        JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  String  SIMPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	String  SIMPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
61	[BUG]  [BUGGY]  String  SIMPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));  [CE]  ';'  expected  [FE]                          JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  String  SIMPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	String  SIMPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));	      	non-compiled	[CE]  ';'  expected	8	None	replace
62	[BUG]  [BUGGY]  String  SIMPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFA  [CE]  ';'  expected  [FE]                            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  String  SIMPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFA  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	String  SIMPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFA	      	non-compiled	[CE]  ';'  expected	8	None	replace
63	[BUG]  [BUGGY]  if(localFormat  ==  null)  {  localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }  [CE]  illegal  start  of  expression  [FE]                              JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  if(localFormat  ==  null)  {  localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	if(localFormat  ==  null)  {  localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
64	[BUG]  [BUGGY]  String  SIMPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT);  [CE]  ';'  expected  [FE]                                JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  String  SIMPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT);  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	String  SIMPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT);	      	non-compiled	[CE]  ';'  expected	8	None	replace
65	[BUG]  [BUGGY]  String  SIMPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US);  [CE]  illegal  start  of  expression  [FE]                                  JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  String  SIMPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US);  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	String  SIMPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
66	[BUG]  [BUGGY]  this.dateType  =  dateType.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  dateType.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  dateType.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT    	non-compiled	[CE]  ';'  expected	18	None	replace
67	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT);  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT);  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT);	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US);    	non-compiled	[CE]  ';'  expected	3	None	replace
68	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT  [CE]  ';'  expected  [FE]                    JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT    	non-compiled	[CE]  ';'  expected	15	None	replace
69	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(dateType,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT  [CE]  ';'  expected  [FE]                      JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(dateType,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(dateType,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT    	non-compiled	[CE]  ';'  expected	15	None	replace
70	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEF  [CE]  ';'  expected  [FE]                    JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEF  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEF	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEF    	non-compiled	[CE]  ';'  expected	7	None	replace
71	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  [CE]  ';'  expected  [FE]                      JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEF    	non-compiled	[CE]  ';'  expected	7	None	replace
72	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEF,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  [CE]  ';'  expected  [FE]                        JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEF,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEF,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEF    	non-compiled	[CE]  ';'  expected	7	None	replace
73	[BUG]  [BUGGY]  this.dateType  =  dateType.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  [CE]  ';'  expected  [FE]                JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  dateType.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  dateType.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT    	non-compiled	[CE]  ';'  expected	5	None	replace
74	[BUG]  [BUGGY]  This.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  [CE]  ';'  expected  [FE]                  JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  This.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	This.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT    	non-compiled	[CE]  ';'  expected	5	None	replace
75	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(Locale.US,  DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  [CE]  ';'  expected  [FE]                    JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(Locale.US,  DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(Locale.US,  DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT    	non-compiled	[CE]  ';'  expected	5	None	replace
76	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  +  ';'  [CE]  ';'  expected  [FE]                      JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  +  ';'  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  +  ';'	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT    	non-compiled	[CE]  ';'  expected	5	None	replace
77	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  DateFormat.DEFAULT);  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  DateFormat.DEFAULT);  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  DateFormat.DEFAULT);	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT);    	non-compiled	[CE]  ';'  expected	17	None	replace
78	[BUG]  [BUGGY]  this.dateType  =  dateType.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT);  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  dateType.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT);  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  dateType.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT);	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT);    	non-compiled	[CE]  ';'  expected	17	None	replace
79	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US));    	non-compiled	[CE]  ';'  expected	16	None	replace
80	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.ENGLISH),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.ENGLISH),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.ENGLISH),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US));    	non-compiled	[CE]  ';'  expected	16	None	replace
81	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.LONG,  Locale.US));  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.LONG,  Locale.US));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.LONG,  Locale.US));	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US));    	non-compiled	[CE]  ';'  expected	16	None	replace
82	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.FULL,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.FULL,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.FULL,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US));    	non-compiled	[CE]  ';'  expected	16	None	replace
83	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFA    	non-compiled	[CE]  ';'  expected	4	None	replace
84	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [CE]  ';'  expected  [FE]                  JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    	non-compiled	[CE]  ';'  expected	14	None	replace
85	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)+  SIMPLE_NAME,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [CE]  ';'  expected  [FE]                    JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)+  SIMPLE_NAME,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)+  SIMPLE_NAME,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    	non-compiled	[CE]  ';'  expected	14	None	replace
86	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  -  1  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  -  1  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  -  1	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEF    	non-compiled	[CE]  ';'  expected	19	None	replace
87	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF)  [CE]  ';'  expected  [FE]                JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF)  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF)	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEF    	non-compiled	[CE]  ';'  expected	19	None	replace
88	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF);  [CE]  ';'  expected  [FE]                  JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF);  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF);	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEF    	non-compiled	[CE]  ';'  expected	19	None	replace
89	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  [CE]  ';'  expected  [FE]                    JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEF    	non-compiled	[CE]  ';'  expected	19	None	replace
90	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [CE]  ';'  expected  [FE]                  JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    	non-compiled	[CE]  ';'  expected	21	None	replace
91	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.ENGLISH),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [CE]  ';'  expected  [FE]                    JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.ENGLISH),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.ENGLISH),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    	non-compiled	[CE]  ';'  expected	21	None	replace
92	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [CE]  illegal  start  of  expression  [FE]                      JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
93	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  [CE]  ';'  expected  [FE]                    JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEF    	non-compiled	[CE]  ';'  expected	7	None	replace
94	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFL  [CE]  ';'  expected  [FE]                      JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFL  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFL	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEF    	non-compiled	[CE]  ';'  expected	7	None	replace
95	[BUG]  [BUGGY]  if(dateType  ==  null)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT  [CE]  ';'  expected  [FE]                    JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  if(dateType  ==  null)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	if(dateType  ==  null)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT    	non-compiled	[CE]  ';'  expected	15	None	replace
96	[BUG]  [BUGGY]  if(dateType  ==  null)  {  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  if(dateType  ==  null)  {  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	if(dateType  ==  null)  {  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT    	non-compiled	[CE]  ';'  expected	18	None	replace
97	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT    	non-compiled	[CE]  ';'  expected	18	None	replace
98	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US)+  1;  [CE]  illegal  start  of  expression  [FE]            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US)+  1;  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US)+  1;	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
99	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  [CE]  ';'  expected  [FE]                  JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFA    	non-compiled	[CE]  ';'  expected	6	None	replace
100	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  /  ';'  [CE]  ';'  expected  [FE]                    JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  /  ';'  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  /  ';'	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFA    	non-compiled	[CE]  ';'  expected	6	None	replace
101	[BUG]  [BUGGY]  this.enUsFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  [CE]  illegal  start  of  expression  [FE]            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.enUsFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.enUsFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);	  if(dateType    ==    null)    {    this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US);    }    else    {    this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
102	[BUG]  [BUGGY]  if(dateType  ==  null)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }  else  {  this.localFormat  =  DateFormat.getDateTimeInstance(Date  [CE]  ')'  expected  [FE]              JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  if(dateType  ==  null)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }  else  {  this.localFormat  =  DateFormat.getDateTimeInstance(Date  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	if(dateType  ==  null)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }  else  {  this.localFormat  =  DateFormat.getDateTimeInstance(Date	  if(dateType    ==    null)    {    this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US);    }    else    {    this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.    	non-compiled	[CE]  ')'  expected	11	None	replace
103	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  &  ';'  [CE]  ';'  expected  [FE]                JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  &  ';'  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  &  ';'	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT    	non-compiled	[CE]  ';'  expected	5	None	replace
104	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.SHORT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  [CE]  ';'  expected  [FE]                  JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.SHORT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.SHORT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT    	non-compiled	[CE]  ';'  expected	5	None	replace
105	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  1;  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  1;  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  1;	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT);    	non-compiled	[CE]  ';'  expected	17	None	replace
106	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.SHORT);  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.SHORT);  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.SHORT);	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT);    	non-compiled	[CE]  ';'  expected	17	None	replace
107	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEBREAK  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEBREAK  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEBREAK	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DE    	non-compiled	[CE]  ';'  expected	2	None	replace
108	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DE  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DE  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DE	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DE    	non-compiled	[CE]  ';'  expected	2	None	replace
109	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.LONG));  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.LONG));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.LONG));	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT));    	non-compiled	[CE]  ';'  expected	1	None	replace
110	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.FULL,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.FULL,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.FULL,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT));    	non-compiled	[CE]  ';'  expected	1	None	replace
111	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.UTC));  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.UTC));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.UTC));	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT));    	non-compiled	[CE]  ';'  expected	1	None	replace
112	[BUG]  [BUGGY]  if(dateType  ==  null)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US);  }  [CE]  illegal  start  of  expression  [FE]                JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  if(dateType  ==  null)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US);  }  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	if(dateType  ==  null)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US);  }	  if(dateType    ==    null)    {    this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
113	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  1  +  1;  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  1  +  1;  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  1  +  1;	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT)+    1;    	non-compiled	[CE]  ';'  expected	12	None	replace
114	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  1L;  [CE]  ';'  expected  [FE]                JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  1L;  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  1L;	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT)+    1;    	non-compiled	[CE]  ';'  expected	12	None	replace
115	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)  [CE]  ';'  expected  [FE]                JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFA    	non-compiled	[CE]  ';'  expected	20	None	replace
116	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.SHORT));  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.SHORT));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.SHORT));	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT));    	non-compiled	[CE]  ';'  expected	10	None	replace
117	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  1);  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  1);  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  1);	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT));    	non-compiled	[CE]  ';'  expected	10	None	replace
118	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.LONG));  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.LONG));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.LONG));	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT));    	non-compiled	[CE]  ';'  expected	10	None	replace
119	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.NAME));  [CE]  ';'  expected  [FE]                JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.NAME));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.NAME));	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT));    	non-compiled	[CE]  ';'  expected	10	None	replace
120	[BUG]  [BUGGY]  enUsFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  [CE]  illegal  start  of  expression  [FE]                      JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  enUsFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	enUsFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
121	[BUG]  [BUGGY]  enUsFormat  =  Locale.getDefault();  [CE]  illegal  start  of  expression  [FE]                        JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  enUsFormat  =  Locale.getDefault();  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	enUsFormat  =  Locale.getDefault();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
122	[BUG]  [BUGGY]  this.simPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  [CE]  illegal  start  of  expression  [FE]                          JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.simPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.simPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
123	[BUG]  [BUGGY]  DateFormat  localFormat  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  Locale.US);  [CE]  illegal  start  of  expression  [FE]                            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  DateFormat  localFormat  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  Locale.US);  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	DateFormat  localFormat  =  DateFormat.getDateInstance(DateFormat.DEFAULT,  Locale.US);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
124	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)+  1L,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [CE]  ';'  expected  [FE]                  JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)+  1L,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)+  1L,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    	non-compiled	[CE]  ';'  expected	14	None	replace
125	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDefaultDateTimeInstance(DateFormat.DEFAULT,  [CE]  ';'  expected  [FE]                    JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDefaultDateTimeInstance(DateFormat.DEFAULT,  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDefaultDateTimeInstance(DateFormat.DEFAULT,	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    	non-compiled	[CE]  ';'  expected	14	None	replace
126	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [CE]  illegal  start  of  expression  [FE]                      JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
127	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFULT,  [CE]  ';'  expected  [FE]                        JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFULT,  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFULT,	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    	non-compiled	[CE]  ';'  expected	14	None	replace
128	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DELAYER  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DELAYER  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DELAYER	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DE    	non-compiled	[CE]  ';'  expected	2	None	replace
129	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DE  [CE]  ')'  expected  [FE]            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DE  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DE	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DE    	non-compiled	[CE]  ')'  expected	2	None	replace
130	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  [CE]  ')'  expected  [FE]                JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT    	non-compiled	[CE]  ')'  expected	5	None	replace
131	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getLocalDateTimeInstance(DateFormat.DEFAULT  [CE]  ';'  expected  [FE]                  JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getLocalDateTimeInstance(DateFormat.DEFAULT  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getLocalDateTimeInstance(DateFormat.DEFAULT	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT    	non-compiled	[CE]  ';'  expected	5	None	replace
132	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)+  1,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)+  1,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)+  1,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US));    	non-compiled	[CE]  ';'  expected	16	None	replace
133	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US));    	non-compiled	[CE]  ';'  expected	16	None	replace
134	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDefaultDateTimeInstance(DateFormat.DEFAULT,  Locale.US));  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDefaultDateTimeInstance(DateFormat.DEFAULT,  Locale.US));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDefaultDateTimeInstance(DateFormat.DEFAULT,  Locale.US));	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US));    	non-compiled	[CE]  ';'  expected	16	None	replace
135	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US  +  1),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US  +  1),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US  +  1),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US));    	non-compiled	[CE]  ';'  expected	16	None	replace
136	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFA    	non-compiled	[CE]  ';'  expected	4	None	replace
137	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFA  [CE]  ')'  expected  [FE]                JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFA  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFA	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFA    	non-compiled	[CE]  ')'  expected	4	None	replace
138	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  dateType);  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  dateType);  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  dateType);	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT);    	non-compiled	[CE]  ';'  expected	17	None	replace
139	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFULT);  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFULT);  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFULT);	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT);    	non-compiled	[CE]  ';'  expected	17	None	replace
140	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)+  1,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT);  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)+  1,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT);  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)+  1,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT);	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT);    	non-compiled	[CE]  ';'  expected	17	None	replace
141	[BUG]  [BUGGY]  if(this.localFormat  ==  null)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }  [CE]  illegal  start  of  expression  [FE]                JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  if(this.localFormat  ==  null)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	if(this.localFormat  ==  null)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }	  if(dateType    ==    null)    {    this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
142	[BUG]  [BUGGY]  if(dateType  ==  null  ||  this.localFormat  ==  DateFormat.DEFAULT)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }  [CE]  illegal  start  of  expression  [FE]                  JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  if(dateType  ==  null  ||  this.localFormat  ==  DateFormat.DEFAULT)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	if(dateType  ==  null  ||  this.localFormat  ==  DateFormat.DEFAULT)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }	  if(dateType    ==    null)    {    this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
143	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  [CE]  ')'  expected  [FE]              JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEF    	non-compiled	[CE]  ')'  expected	19	None	replace
144	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.	  if(dateType    ==    null)    {    this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US);    }    else    {    this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.    	non-compiled	[CE]  ';'  expected	11	None	replace
145	[BUG]  [BUGGY]  if(dateType  ==  null  ||  dateType.isPrimitive())  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }  else  {  this.localFormat  =  DateFormat.getDateTimeInstance  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  if(dateType  ==  null  ||  dateType.isPrimitive())  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }  else  {  this.localFormat  =  DateFormat.getDateTimeInstance  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	if(dateType  ==  null  ||  dateType.isPrimitive())  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }  else  {  this.localFormat  =  DateFormat.getDateTimeInstance	  if(dateType    ==    null)    {    this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US);    }    else    {    this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.    	non-compiled	[CE]  ';'  expected	11	None	replace
146	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDefaultDateTimeInstance(DateFormat.DEFAULT  [CE]  ';'  expected  [FE]                  JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDefaultDateTimeInstance(DateFormat.DEFAULT  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDefaultDateTimeInstance(DateFormat.DEFAULT	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFA    	non-compiled	[CE]  ';'  expected	6	None	replace
147	[BUG]  [BUGGY]  this.simPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));  [CE]  ';'  expected  [FE]                      JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.simPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.simPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));	      	non-compiled	[CE]  ';'  expected	8	None	replace
148	[BUG]  [BUGGY]  enUsFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));  [CE]  ';'  expected  [FE]                        JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  enUsFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	enUsFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));	      	non-compiled	[CE]  ';'  expected	8	None	replace
149	[BUG]  [BUGGY]  this.simPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  [CE]  ';'  expected  [FE]                          JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.simPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.simPLE_NAME  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);	      	non-compiled	[CE]  ';'  expected	8	None	replace
150	[BUG]  [BUGGY]  enUsFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  [CE]  ';'  expected  [FE]                            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  enUsFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	enUsFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);	      	non-compiled	[CE]  ';'  expected	8	None	replace
151	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  [CE]  ')'  expected  [FE]                    JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEF    	non-compiled	[CE]  ')'  expected	7	None	replace
152	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFLATE  [CE]  ';'  expected  [FE]                      JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFLATE  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFLATE	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEF    	non-compiled	[CE]  ';'  expected	7	None	replace
153	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFE  [CE]  ';'  expected  [FE]                        JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFE  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFE	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEF    	non-compiled	[CE]  ';'  expected	7	None	replace
154	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFT  [CE]  ';'  expected  [FE]                          JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFT  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFT	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEF    	non-compiled	[CE]  ';'  expected	7	None	replace
155	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(dateType,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [CE]  ';'  expected  [FE]          JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(dateType,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(dateType,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT));    	non-compiled	[CE]  ';'  expected	10	None	replace
156	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFULT));  [CE]  ';'  expected  [FE]            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFULT));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFULT));	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT));    	non-compiled	[CE]  ';'  expected	10	None	replace
157	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)+  1,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [CE]  ';'  expected  [FE]              JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)+  1,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)+  1,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT));    	non-compiled	[CE]  ';'  expected	10	None	replace
158	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDefaultDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [CE]  ';'  expected  [FE]                JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDefaultDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDefaultDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT));    	non-compiled	[CE]  ';'  expected	10	None	replace
159	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getLocalFileName(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [CE]  ';'  expected  [FE]                  JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getLocalFileName(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getLocalFileName(DateFormat.DEFAULT,  DateFormat.DEFAULT));	  this.localFormat    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT));    	non-compiled	[CE]  ';'  expected	10	None	replace
160	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)+  1,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [CE]  ';'  expected  [FE]                  JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)+  1,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)+  1,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    	non-compiled	[CE]  ';'  expected	21	None	replace
161	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDefaultDateTimeInstance(DateFormat.DEFAULT,  [CE]  ';'  expected  [FE]                    JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDefaultDateTimeInstance(DateFormat.DEFAULT,  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDefaultDateTimeInstance(DateFormat.DEFAULT,	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    	non-compiled	[CE]  ';'  expected	21	None	replace
162	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFULT,  [CE]  ';'  expected  [FE]                      JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFULT,  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFULT,	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    	non-compiled	[CE]  ';'  expected	21	None	replace
163	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)+  1,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [CE]  ';'  expected  [FE]        JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)+  1,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)+  1,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT));    	non-compiled	[CE]  ';'  expected	1	None	replace
164	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT  [CE]  ')'  expected  [FE]            JsonParseException    [CONTEXT]    DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));    [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT  [BUGGY]      [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US)&&  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT	  this.dateType    =    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    Locale.US),    DateFormat.getDateTimeInstance(DateFormat.DEFAULT,    DateFormat.DEFAULT    	non-compiled	[CE]  ')'  expected	18	None	replace
