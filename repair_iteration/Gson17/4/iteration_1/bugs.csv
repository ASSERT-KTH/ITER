bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [CE]  ';'  expected  [FE]    JsonParseException  [CONTEXT]  DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]    [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));	}  	non-compiled	[CE]  ';'  expected	7	None	replace
2	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DE  [CE]  ';'  expected  [FE]      JsonParseException  [CONTEXT]  DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DE  [BUGGY]    [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DE	}  	non-compiled	[CE]  ';'  expected	7	None	replace
3	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US);  [CE]  illegal  start  of  expression  [FE]        JsonParseException  [CONTEXT]  DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US);  [BUGGY]    [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US);	}  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
4	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFA  [CE]  ';'  expected  [FE]          JsonParseException  [CONTEXT]  DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFA  [BUGGY]    [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFA	}  	non-compiled	[CE]  ';'  expected	7	None	replace
5	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  [CE]  ';'  expected  [FE]            JsonParseException  [CONTEXT]  DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT  [BUGGY]    [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT	}  	non-compiled	[CE]  ';'  expected	7	None	replace
6	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFA  [CE]  ';'  expected  [FE]              JsonParseException  [CONTEXT]  DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFA  [BUGGY]    [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFA	}  	non-compiled	[CE]  ';'  expected	7	None	replace
7	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  [CE]  ';'  expected  [FE]                JsonParseException  [CONTEXT]  DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  [BUGGY]    [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF	}  	non-compiled	[CE]  ';'  expected	7	None	replace
8	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]                  JsonParseException  [CONTEXT]  DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]    [BUGGY]    [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
9	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  [CE]  illegal  start  of  expression  [FE]    JsonParseException  [CONTEXT]  DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  [BUGGY]    [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);	}  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
10	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [CE]  ';'  expected  [FE]      JsonParseException  [CONTEXT]  DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]    [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));	}  	non-compiled	[CE]  ';'  expected	7	None	replace
11	[BUG]  [BUGGY]  if(dateType  ==  null)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }  else  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.  [CE]  illegal  start  of  expression  [FE]        JsonParseException  [CONTEXT]  DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]  if(dateType  ==  null)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }  else  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.  [BUGGY]    [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	if(dateType  ==  null)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }  else  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.	}  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
12	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  1;  [CE]  ';'  expected  [FE]          JsonParseException  [CONTEXT]  DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  1;  [BUGGY]    [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT)+  1;	}  	non-compiled	[CE]  ';'  expected	7	None	replace
13	[BUG]  [BUGGY]  if(dateType  ==  null)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }  [CE]  illegal  start  of  expression  [FE]            JsonParseException  [CONTEXT]  DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]  if(dateType  ==  null)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }  [BUGGY]    [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	if(dateType  ==  null)  {  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US);  }	}  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [CE]  ';'  expected  [FE]              JsonParseException  [CONTEXT]  DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [BUGGY]    [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,	}  	non-compiled	[CE]  ';'  expected	7	None	replace
15	[BUG]  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT  [CE]  ';'  expected  [FE]                JsonParseException  [CONTEXT]  DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]  this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT  [BUGGY]    [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.localFormat  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT	}  	non-compiled	[CE]  ';'  expected	7	None	replace
16	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));  [CE]  ';'  expected  [FE]    JsonParseException  [CONTEXT]  DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));  [BUGGY]    [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US));	}  	non-compiled	[CE]  ';'  expected	7	None	replace
17	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT);  [CE]  ';'  expected  [FE]      JsonParseException  [CONTEXT]  DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT);  [BUGGY]    [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT);	}  	non-compiled	[CE]  ';'  expected	7	None	replace
18	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT  [CE]  ';'  expected  [FE]        JsonParseException  [CONTEXT]  DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT  [BUGGY]    [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT	}  	non-compiled	[CE]  ';'  expected	7	None	replace
19	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  [CE]  ';'  expected  [FE]          JsonParseException  [CONTEXT]  DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF  [BUGGY]    [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEF	}  	non-compiled	[CE]  ';'  expected	7	None	replace
20	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFA  [CE]  ';'  expected  [FE]            JsonParseException  [CONTEXT]  DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFA  [BUGGY]    [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFA	}  	non-compiled	[CE]  ';'  expected	7	None	replace
21	[BUG]  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [CE]  ';'  expected  [FE]              JsonParseException  [CONTEXT]  DefaultDateTypeAdapter(Class<?  extends  Date>  dateType)  {  this(dateType,  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  DateFormat.DEFAULT));  [BUGGY]  this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  [BUGGY]    [CLASS]  DefaultDateTypeAdapter  [METHOD]  <init>  [RETURN_TYPE]  Class)  Date>  dateType  [VARIABLES]  Class  dateType  String  SIMPLE_NAME  boolean  DateFormat  enUsFormat  localFormat  	projects/Gson17/gson/src/main/java/com/google/gson/DefaultDateTypeAdapter.java	0.5	52	52	2	replace	this.dateType  =  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,  Locale.US),  DateFormat.getDateTimeInstance(DateFormat.DEFAULT,	}  	non-compiled	[CE]  ';'  expected	7	None	replace
