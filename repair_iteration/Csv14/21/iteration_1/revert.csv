projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537validate();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.skipHeaderRecord=skipHeaderRecord;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(quoteMode!=null){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i])){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(quoteMode!=null){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i])){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames){this.recordSeparator=ignoreSurroundingSpaces;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(header,0,this.recordSeparator,header,0,header.length);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames){for(inti=0;i<headerComments.length;++i){String[]headerComments=headerComments[i];}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.quoteCharacter=quoteCharacter==null?null:quoteCharacter.clone();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.commentMarker=quoteMode==null?null:quoteMode.clone();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.commentMarker=quoteMode==null?null:quoteMode.toString();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(header,0,this.recordSeparator,headerComments,0,header.length);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(header,0,this.recordSeparator,header,0,header.length-1);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(header,0,this.recordSeparator,header,0,header.length+1);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.quoteCharacter=quoteCharacter!=null?null:quoteCharacter.clone();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.quoteCharacter=quoteMode==null?null:quoteCharacter.clone();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.commentMarker=quoteMode==null?null:quoteMode.getCommentMarker();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.commentMarker=quoteMode!=null?null:quoteMode.clone();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(recordSeparator!=null){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i])){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(recordSeparator==null){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i])){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(recordSeparator!=null){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i])){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!recordSeparator.equals(headerComments[i])){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i])){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(recordSeparator!=null){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i])){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(recordSeparator==null){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i])){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(recordSeparator!=null){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i])){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!recordSeparator.equals(headerComments[i])){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i])){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,nullString);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,header);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,false);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537allowMissingColumnNames(false){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames||ignoreEmptyLines){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){if(!allowMissingColumnNames){for(inti=0;i<headerComments.length;++i){String[]headerComments=headerComments[i];}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){if(!allowMissingColumnNames){for(inti=0;i<headerComments.length;++i){String[]headerComments=headerComments[i];}}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){if(!allowMissingColumnNames){for(inti=0;i<headerComments.length;++i){String[]headerComments=headerComments[i].toString();}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537validateSurroundingSpaces();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537validate(nullString);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537validate(null);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.skipHeaderRecord=null;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.skipHeaderRecord=skippingHeaderRecord;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=ignoreSurroundingSpaces;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=ignoreEmptyLines;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537This.recordSeparator=ignoreSurroundingSpaces;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.commentMarker=quoteMode!=null?null:quoteMode.toString();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){for(inti=0;i<headerComments.length;++i){String[]headerComments=headerComments[i];}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537for(inti=0;i<headerComments.length;++i){String[]headerComments=headerComments[i];}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Object[]headerComments=headerComments.toArray(headerComments);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!recordSeparator){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i])){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!recordSeparator){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i])){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(header,0,header,0,header.length);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(headers,0,this.recordSeparator,header,0,header.length);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,escape);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,0);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames){thrownewIllegalStateException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.nullString=nullString;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!recordSeparator){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i])){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!recordSeparator){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i])){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingEmptyLines){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames&&!ignoreEmptyLines){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames&&ignoreEmptyLines!=false){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames){validate();}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(this.allowMissingColumnNames){validate();}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(this.allowMissingColumnNames){validate();}else{thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.skipHeaderRecord=ignoreHeaderRecord;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.skipHeaderRecord=allowMissingColumnNames;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames&&!missingEmptyLines){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames&&!skipHeaderRecord.isEmpty()){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Object[]headerComments=toStringArray(headerComments);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(recordSeparator!=null){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i].trim())){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=recordSeparator;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=ignoreSurroundingSpaces;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(header,0,headerComments,0,header.length);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,delimiter);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator+1);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(recordSeparator!=null){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i].trim())){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames){for(inti=0;i<headerComments.length;++i){String[]headerComments=headerComments[i].toString();}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Object[]headerComments=headerComments.toArray(newObject[headerComments.size()]);
