projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537validate();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.skipHeaderRecord=skipHeaderRecord;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(quoteMode!=null){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i])){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(quoteMode!=null){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i])){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames){this.recordSeparator=ignoreSurroundingSpaces;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(header,0,this.recordSeparator,header,0,header.length);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames){for(inti=0;i<headerComments.length;++i){String[]headerComments=headerComments[i];}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.quoteCharacter=quoteCharacter==null?null:quoteCharacter.clone();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.commentMarker=quoteMode==null?null:quoteMode.clone();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.commentMarker=quoteMode==null?null:quoteMode.toString();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(header,0,this.recordSeparator,headerComments,0,header.length);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(header,0,this.recordSeparator,header,0,header.length-1);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(header,0,this.recordSeparator,header,0,header.length+1);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.quoteCharacter=quoteCharacter!=null?null:quoteCharacter.clone();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.quoteCharacter=quoteMode==null?null:quoteCharacter.clone();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.commentMarker=quoteMode==null?null:quoteMode.getCommentMarker();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.commentMarker=quoteMode!=null?null:quoteMode.clone();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(recordSeparator!=null){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i])){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(recordSeparator==null){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i])){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(recordSeparator!=null){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i])){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!recordSeparator.equals(headerComments[i])){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i])){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(recordSeparator!=null){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i])){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(recordSeparator==null){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i])){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(recordSeparator!=null){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i])){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!recordSeparator.equals(headerComments[i])){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i])){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,nullString);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,header);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,false);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537allowMissingColumnNames(false){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames||ignoreEmptyLines){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){if(!allowMissingColumnNames){for(inti=0;i<headerComments.length;++i){String[]headerComments=headerComments[i];}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){if(!allowMissingColumnNames){for(inti=0;i<headerComments.length;++i){String[]headerComments=headerComments[i];}}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){if(!allowMissingColumnNames){for(inti=0;i<headerComments.length;++i){String[]headerComments=headerComments[i].toString();}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537validateSurroundingSpaces();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537validate(nullString);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537validate(null);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.skipHeaderRecord=null;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.skipHeaderRecord=skippingHeaderRecord;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=ignoreSurroundingSpaces;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=ignoreEmptyLines;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537This.recordSeparator=ignoreSurroundingSpaces;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.commentMarker=quoteMode!=null?null:quoteMode.toString();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){for(inti=0;i<headerComments.length;++i){String[]headerComments=headerComments[i];}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537for(inti=0;i<headerComments.length;++i){String[]headerComments=headerComments[i];}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Object[]headerComments=headerComments.toArray(headerComments);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!recordSeparator){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i])){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!recordSeparator){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i])){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(header,0,header,0,header.length);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(headers,0,this.recordSeparator,header,0,header.length);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,escape);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,0);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames){thrownewIllegalStateException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.nullString=nullString;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!recordSeparator){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i])){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!recordSeparator){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i])){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingEmptyLines){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames&&!ignoreEmptyLines){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames&&ignoreEmptyLines!=false){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames){validate();}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(this.allowMissingColumnNames){validate();}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(this.allowMissingColumnNames){validate();}else{thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.skipHeaderRecord=ignoreHeaderRecord;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.skipHeaderRecord=allowMissingColumnNames;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames&&!missingEmptyLines){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames&&!skipHeaderRecord.isEmpty()){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Object[]headerComments=toStringArray(headerComments);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(recordSeparator!=null){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i].trim())){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=recordSeparator;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=ignoreSurroundingSpaces;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(header,0,headerComments,0,header.length);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,delimiter);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator+1);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(recordSeparator!=null){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i].trim())){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames){for(inti=0;i<headerComments.length;++i){String[]headerComments=headerComments[i].toString();}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Object[]headerComments=headerComments.toArray(newObject[headerComments.size()]);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,commentStart);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,trim);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(commentStart,escape);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,nullString,ignoreEmptyLines);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i])){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i])){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537validate(nullString,null);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537validate(nullString,header);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537validate(nullString,headerComments);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i].trim())){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(recordSeparator!=null){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i].trim())){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i].trim())){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator+2);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator+3);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,true);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,null);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,false,ignoreEmptyLines);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){if(!allowMissingColumnNames){for(inti=0;i<headerComments.length;++i){String[]headerComments=headerComments[i].toString();}}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){if(!allowMissingColumnNames){for(inti=0;i<headerComments.length;++i){String[]headerComments=headerComments[i].toString()
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537allowMissingColumnNames&&!missingEmptyLines){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames&&!missingSurroundingSpaces){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames||!missingEmptyLines){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537allowMissingEmptyLines){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537allowMissingEmptyLines(true);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=nullString;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=escape;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=delimiter;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i])){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i])){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(header,0,this.recordSeparator,headerComments,0,header.length+1);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(header,0,this.recordSeparator,headerComments,0,header.length-1);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(header,0,this.recordSeparator,header,0,header.length-2);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Object[]headerComments=toStringArray(headerComments,null);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Object[]headerComments=toStringArray(headerComments,false);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Object[]headerComments=toStringArray(recordSeparator);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537validateEmptyLines();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537validateSurroundingSpaces(true);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(headerComments,0,headerComments,0,header.length);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(header,0,headerComments,0,header.length-1);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(header,0,headerComments,0,header.length+1);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){if(!allowMissingColumnNames){for(inti=0;i<headerComments.length;++i){String[]headerComments=headerComments[i].clone();}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){if(!allowMissingColumnNames){for(inti=0;i<headerComments.length;++i){String[]headerComments=headerComments[i]
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames&&ignoreEmptyLines==false){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames&&ignoreSurroundingSpaces!=false){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames||ignoreEmptyLines!=false){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(headers,0,this.recordSeparator,headerComments,0,header.length);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(headers,0,headerComments,0,header.length);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(headers,0,this.recordSeparator,header,0,header.length-1);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.nullString=delimiter==null?null:toStringArray(delimiter);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.nullString=delimiter==null?null:delimiter.clone();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.nullString=delimiter!=null?null:toStringArray(delimiter);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){if(!allowMissingColumnNames){for(inti=0;i<headerComments.length;++i){string[]headerComments=headerComments[i].toString();}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=null;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!recordSeparator){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i].toString())){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!recordSeparator){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i]
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537allowMissingColumnNames){thrownewIllegalStateException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537allowMissingColumnNames(true){thrownewIllegalStateException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,1);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,0,recordSeparator.length);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.skipHeaderRecord=skippeHeaderRecord;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i])){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!recordSeparator.equals(headerComments[i])){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i])
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!recordSeparator.equals(headerComments[i])){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i]
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Validate.isTrue(this.allowMissingColumnNames);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Validate.notNull(this.allowMissingColumnNames);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Validate.notEmpty(this.allowMissingColumnNames);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537This.recordSeparator=recordSeparator;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537This.recordSeparator=nullString;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537This.recordSeparator=escape;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames&&!ignoreSurroundingSpaces){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!ignoreEmptyLines&&!allowMissingColumnNames){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537allowMissingColumnNames&&!ignoreSurroundingSpaces){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){if(!recordSeparator.equals(headerComments[i])){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!recordSeparator.equals(headerComments[i])){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i])
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537validate(DEFAULT);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537validate(null,null);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i])){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!recordSeparator.equals(headerComments[i])){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i]
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=nullString;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(headers,0,header,0,header.length);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(headerComments,0,header,0,header.length);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!recordSeparator){for(inti=1;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i])){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537String[]headerComments=headerComments[i];
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537for(inti=0;i<headerComments.length-1;++i){String[]headerComments=headerComments[i];}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537inti=0;i<headerComments.length;++i){String[]headerComments=headerComments[i];}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.quoteCharacter=quoteMode==null?null:quoteMode.clone();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.quoteCharacter=quoteMode!=null?null:quoteMode.clone();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i])
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.skipHeaderRecord=ignoreSurroundingSpaces;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){if(!allowMissingColumnNames){for(inti=0;i<headerComments.length;++i){string[]headerComments=headerComments[i];}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.skipHeaderRecord=skippedHeaderRecord;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.skippingHeaderRecord=skipHeaderRecord;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537allowMissingColumnNames(true){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537enableMissingColumnNames(true){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i])
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Validate.isTrue(!allowMissingColumnNames);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Validate.isTrue(!allowMissingColumnNames);validate();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Validate.isTrue(!allowMissingColumnNames,trim==null);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(commentStart,delimiter);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,quoteCharacter);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537validate();}else{thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i].trim())){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(recordSeparator!=null){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i].trim())){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i].trim())){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames&&ignoreEmptyLines){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537allowMissingColumnNames&&ignoreEmptyLines){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537allowMissingColumnNames||ignoreEmptyLines){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537finalObject[]headerComments=headerComments.toArray(newObject[headerComments.size()]);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){for(inti=0;i<headerComments.length;++i){String[]headerComments=headerComments[i].clone();}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Object[]headerComments=toArray(headerComments);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Object[]headerComments=this.headerComments.toArray(headerComments);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Object[]headerComments=toStringArray(headers);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames&&!recordSeparator.isEmpty()){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames||!skipHeaderRecord.isEmpty()){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames&&!ignoreEmptyLines.isEmpty()){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Object[]headerComments=toStringArray(headerComments.size()]);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Object[]headerComments=headerComments.toArray(newObject[headers.size()]);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Object[]headerComments=headerComments.toArray(newObject[headerComments.size()+1]);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.skipHeaderRecord=allowMissingHeaderRecord;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames&&!ignoreEmptyLines){validate();}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames&&ignoreEmptyLines!=false){validate();}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames&&ignoreEmptyLines==false){validate();}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537for(inti=0;i<headerComments.length;++i){String[]headerComments=headerComments[i].toString();}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i]).trim()){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i]).trim()){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i])){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.headerComments=toStringArray(headerComments);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i]
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!this.allowMissingColumnNames){validate();}else{thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.allowMissingColumnNames=ignoreEmptyLines;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i]).trim()){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames&&ignoreEmptySpaces!=false){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(header,0,header,0,header.length+1);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i]
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.nullString=delimiter==null?null:delimiter;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537validate(delimiter);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,0L);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537validate(nullString,DEFAULT);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537validateSurroundingSpaces(escape);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i])){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i],false)){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i])){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments==null){if(!allowMissingColumnNames){for(inti=0;i<headerComments.length;++i){String[]headerComments=headerComments[i];}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Object[]headerComments=toStringArray(header);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Object[]headerComments=toStringArray(headerComments,header);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(header,0,header,0,header.length-1);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(header,0,recordSeparator,header,0,header.length-1);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames&&!ignoredEmptyLines){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(ignoreEmptyLines){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(header,0,headerComments,1,header.length);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(nullString,false);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i])){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(headers,0,this.recordSeparator,header,0,header.length+1);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(headerComments!=null){for(inti=0;i<headerComments.length;++i){String[]headerComments=headerComments[i].toString();}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Object[]headerComments=headerComments.toString();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i])){
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames&&!ignoreSurroundingSpaces.isEmpty()){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames&&!missingHeaderRecord.isEmpty()){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingEmptyLines&&!ignoreEmptyLines){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537safely()){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537allowMissingEmptyLines();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Object[]headerComments=toArray(headers);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i])){
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(delimiter,recordSeparator);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingEmptyLines){thrownewIllegalStateException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537allowMissingColumnNames();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator/1);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Object[]headerComments=toArray(headerComments.size()]);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingEmptyLines&&!missingEmptyLines){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=newString(delimiter);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i],nullString)){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(recordSeparator==null){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i])){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames&&this.ignoreEmptyLines!=false){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames&&removeEmptyLines){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(recordSeparator==null){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i])){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!recordSeparator.equals(headerComments[i],nullString)){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i]
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames&&!this.skipHeaderRecord.isEmpty()){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,false,null);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(nullString!=null){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i])){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!recordSeparator){for(inti=0;i<headerCount;i++){if(!recordSeparator.equals(headerComments[i])){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=recordSeparator;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,nullString,delimiter);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537validate(nullString,delimiter);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537allowMissingColumnNames(false){thrownewIllegalStateException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537allowMissingColumnNames(true);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537allowMissingColumnNames(recordSeparator){thrownewIllegalStateException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!recordSeparator.equals(headerComments[i])){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,3);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Validate.isTrue(!allowMissingColumnNames,trim<=0);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Validate.isTrue(!allowMissingColumnNames,trim<>0);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.commentMarker=quoteMode!=null?null:quoteMode.getCommentMarker();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Object[]headerComments=header.toArray(newObject[headerComments.size()]);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Object[]headerComments=headers.toArray(newObject[headerComments.size()]);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.quoteCharacter=quoteMode!=null?null:quoteCharacter.clone();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(nullString!=null){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i])){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!recordSeparator){for(inti=0;i<headerCount;++i){if(!recordSeparator.equals(headerComments[i])){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,delimiter,quoteCharacter);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator+0);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!recordSeparator.equals(headerComments[i])){for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i].trim())){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537for(inti=0;i<headerComments.length;++i){if(!recordSeparator.equals(headerComments[i].trim())){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537CharactercommentStart=toStringArray(headerComments);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537allowMissingEmptyLines(false){thrownewIllegalArgumentException("");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.recordSeparator=toStringArray(recordSeparator,descriptionStart);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.skipHeaderRecord=SkipHeaderRecord.DEFAULT;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i],nullString)){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!recordSeparator.equals(headerComments[i],nullString)){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i]
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!recordSeparator){for(inti=0;i<headerCount;i++){if(!recordSeparator.equals(headerComments[i])){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537System.arraycopy(header,0,header,1,header.length);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537ensureCapacity(this.allowMissingColumnNames);
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537ensureCapacity(this.allowMissingColumnNames){validate();}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537Object[]headerComments=headerComments[i].toString();
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.allowMissingColumnNames=false;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i].trim())){continue;}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i].trim())){continue
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537CharactercommentStart=toStringArray(headerComments);if(recordSeparator!=null){for(inti=0;i<headerComments.length;i++){if(!recordSeparator.equals(headerComments[i].
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537for(inti=0;i<headerComments.length;++i){String[]headerComments=headerComments[i].split(",");}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537this.skipHeaderRecord=allowMissingColumnNames?null:allowMissingColumnNames;
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingColumnNames){validateSurroundingSpaces();}
projects/Csv14/src/main/java/org/apache/commons/csv/CSVFormat.java537if(!allowMissingEmptyLines){validateSurroundingSpaces();}
