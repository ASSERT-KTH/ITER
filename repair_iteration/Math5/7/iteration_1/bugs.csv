bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  [BUGGY]    if(c.isNaN)  {  return  isNaN;  }  [BUGGY]  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	    if(c.isNaN)  {  return  isNaN;  }		compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	14	1	add
2	[BUG]  [BUGGY]    if(c.isNaN)  {  return  isNaN;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  [BUGGY]    if(c.isNaN)  {  return  isNaN;  }  [BUGGY]  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	    if(c.isNaN)  {  return  isNaN;  }		compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	14	1	add
3	[BUG]  [BUGGY]    if(c.isInfinite)  {  if(d.denominator  ==  c.divisor)  {  return  isNaN;  }  [CE]  ';'  expected  [FE]      java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  [BUGGY]    if(c.isInfinite)  {  if(d.denominator  ==  c.divisor)  {  return  isNaN;  }  [BUGGY]  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	    if(c.isInfinite)  {  if(d.denominator  ==  c.divisor)  {  return  isNaN;  }		non-compiled	[CE]  ';'  expected	14	None	add
4	[BUG]  [BUGGY]    if(c.isNaN)  {  return  isNaN  ||  isInfinite  ==  c.infinite;  }  [CE]  cannot  find  symbol  infinite  [FE]        java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  [BUGGY]    if(c.isNaN)  {  return  isNaN  ||  isInfinite  ==  c.infinite;  }  [BUGGY]  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	    if(c.isNaN)  {  return  isNaN  ||  isInfinite  ==  c.infinite;  }		non-compiled	[CE]  cannot  find  symbol  infinite	14	None	add
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  [BUGGY]  if(c.isInfinite)  {  [BUGGY]  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isInfinite)  {	if  (c.isNaN)  {  	compilable	  [FE]  AssertionError  	13	4	replace
6	[BUG]  [BUGGY]  if(c.isInfinite)  {  [FE]  AssertionError  [FE]    java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  [BUGGY]  if(c.isInfinite)  {  [BUGGY]  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite)  {	if  (c.isNaN)  {  	compilable	  [FE]  AssertionError  	13	4	replace
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  [BUGGY]  if(c.isInfinite  ||  c.isInfinite)  {  [BUGGY]  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isInfinite  ||  c.isInfinite)  {	if  (c.isNaN)  {  	compilable	  [FE]  AssertionError  	13	4	replace
8	[BUG]  [BUGGY]  if(c.isInfinite  ||  c.isInfinite)  {  [FE]  AssertionError  [FE]      java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  [BUGGY]  if(c.isInfinite  ||  c.isInfinite)  {  [BUGGY]  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite  ||  c.isInfinite)  {	if  (c.isNaN)  {  	compilable	  [FE]  AssertionError  	13	4	replace
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  [BUGGY]  if(isNaN  ||  c.isInfinite)  {  [BUGGY]  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(isNaN  ||  c.isInfinite)  {	if  (c.isNaN)  {  	compilable	  [FE]  AssertionError  	13	3	replace
10	[BUG]  [BUGGY]  if(isNaN  ||  c.isInfinite)  {  [FE]  AssertionError  [FE]    java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  [BUGGY]  if(isNaN  ||  c.isInfinite)  {  [BUGGY]  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(isNaN  ||  c.isInfinite)  {	if  (c.isNaN)  {  	compilable	  [FE]  AssertionError  	13	3	replace
11	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  [BUGGY]    if(c!=  null)  {  return  false;  }  [BUGGY]  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	    if(c!=  null)  {  return  false;  }		compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	14	16	add
12	[BUG]  [BUGGY]    if(c!=  null)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  [BUGGY]    if(c!=  null)  {  return  false;  }  [BUGGY]  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	    if(c!=  null)  {  return  false;  }		compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	14	16	add
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  [BUGGY]    if(c.isInfinite)  {  return  isNaN;  }  [BUGGY]  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	    if(c.isInfinite)  {  return  isNaN;  }		compilable	  [FE]  AssertionError  	14	3	add
14	[BUG]  [BUGGY]    if(c.isInfinite)  {  return  isNaN;  }  [FE]  AssertionError  [FE]      java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  [BUGGY]    if(c.isInfinite)  {  return  isNaN;  }  [BUGGY]  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	    if(c.isInfinite)  {  return  isNaN;  }		compilable	  [FE]  AssertionError  	14	3	add
15	[BUG]  [BUGGY]    if(c.isInfinite)  {  if(!(isNaN  ==  c.isInfinite))  {  return  isNaN;  }  [CE]  ';'  expected  [FE]    java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  [BUGGY]    if(c.isInfinite)  {  if(!(isNaN  ==  c.isInfinite))  {  return  isNaN;  }  [BUGGY]  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	    if(c.isInfinite)  {  if(!(isNaN  ==  c.isInfinite))  {  return  isNaN;  }		non-compiled	[CE]  ';'  expected	14	None	add
16	[BUG]  [BUGGY]    if(c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)&&  (imaginary  ==  c.imaginary);  }  [CE]  unreachable  statement  [FE]      java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  [BUGGY]    if(c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)&&  (imaginary  ==  c.imaginary);  }  [BUGGY]  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	    if(c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)&&  (imaginary  ==  c.imaginary);  }		non-compiled	[CE]  unreachable  statement	14	None	add
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  [BUGGY]  if(c.isNaN  ||  c.isInfinite)  {  [BUGGY]  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isNaN  ||  c.isInfinite)  {	if  (c.isNaN)  {  	compilable	  [FE]  AssertionError  	13	3	replace
18	[BUG]  [BUGGY]  if(c.isNaN  ||  c.isInfinite)  {  [FE]  AssertionError  [FE]    java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  [BUGGY]  if(c.isNaN  ||  c.isInfinite)  {  [BUGGY]  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isNaN  ||  c.isInfinite)  {	if  (c.isNaN)  {  	compilable	  [FE]  AssertionError  	13	3	replace
