bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  isNaN  ||  c.isInfinite  ==  isNaN)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isInfinite  ==  isNaN  ||  c.isInfinite  ==  isNaN)  {	  if(c.isInfinite    ==    isNaN)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	51	14	replace
2	[BUG]  [BUGGY]  if(c.isInfinite  ==  isNaN  ||  c.isInfinite  ==  isNaN)  {  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  isNaN  ||  c.isInfinite  ==  isNaN)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite  ==  isNaN  ||  c.isInfinite  ==  isNaN)  {	  if(c.isInfinite    ==    isNaN)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	51	14	replace
3	[BUG]  [BUGGY]  if(c.isInfinite  ==  false)  {  if(!isNaN  ||!isInfinite  ==  c.infinite)  {  return  isNaN;  }  [CE]  cannot  find  symbol  infinite  [FE]              java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  false)  {  if(!isNaN  ||!isInfinite  ==  c.infinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite  ==  false)  {  if(!isNaN  ||!isInfinite  ==  c.infinite)  {  return  isNaN;  }	  if(c.isInfinite!=    false)    {    if(!isNaN    ||!isInfinite    ==    c.infinite)    {    return    isNaN;    }    	non-compiled	[CE]  cannot  find  symbol  infinite	46	None	replace
4	[BUG]  [BUGGY]  if(c.isInfinite  ==  isNaN)  {  if(c.isInfinite  ==  isNaN)  {  [CE]  ';'  expected  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  isNaN)  {  if(c.isInfinite  ==  isNaN)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite    ==    isNaN)    {    if(c.isInfinite  ==  isNaN)  {	  	non-compiled	[CE]  ';'  expected	50	None	add
5	[BUG]  [BUGGY]  if(c.isInfinite  ==  isNaN)  {  if(c.isInfinite!=  isNaN)  {  [CE]  ';'  expected  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  isNaN)  {  if(c.isInfinite!=  isNaN)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite    ==    isNaN)    {    if(c.isInfinite!=  isNaN)  {	  	non-compiled	[CE]  ';'  expected	50	None	add
6	[BUG]  [BUGGY]  if(c.isInfinite  ==  true)  {  return  isNaN;  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  true)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite  ==  true)  {  return  isNaN;  }	  if(c.isInfinite    ==    false)    {    return    isNaN;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
7	[BUG]  [BUGGY]  if(c  ==  null  ||  c.isInfinite())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected:<(-0.5      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c  ==  null  ||  c.isInfinite())  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c  ==  null  ||  c.isInfinite())  {  return  false;  }	  if(c!=    null    ||    c.isInfinite())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
8	[BUG]  [BUGGY]  if(c.isNaN  ||  c.isNaN)  {  If(c.isNaN  ||  c.isInfinite)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isNaN  ||  c.isNaN)  {  If(c.isNaN  ||  c.isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isNaN  ||  c.isNaN)  {  If(c.isNaN  ||  c.isInfinite)  {	  if(c.isInfinite    ||    c.isInfinite)    {    If(c.isInfinite    ||    c.isInfinite)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
9	[BUG]  [BUGGY]  if(c.isNaN  ||  c.isNaN)  {  If(c.isInfinite  ||  c.isInfinite)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isNaN  ||  c.isNaN)  {  If(c.isInfinite  ||  c.isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isNaN  ||  c.isNaN)  {  If(c.isInfinite  ||  c.isInfinite)  {	  if(c.isInfinite    ||    c.isInfinite)    {    If(c.isInfinite    ||    c.isInfinite)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
10	[BUG]  [BUGGY]  if(c.isInfinite  ==  isNaN  ||  c.isInfinite)  {  if(c.isInfinite  ==  isNaN  ||  c.isInfinite)  {  [CE]  ';'  expected  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  isNaN  ||  c.isInfinite)  {  if(c.isInfinite  ==  isNaN  ||  c.isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite    ==    isNaN    ||    c.isInfinite)    {    if(c.isInfinite  ==  isNaN  ||  c.isInfinite)  {	  	non-compiled	[CE]  ';'  expected	48	None	add
11	[BUG]  [BUGGY]  if(c.isInfinite  ==  isNaN  ||  c.isInfinite)  {  if(c.isInfinite!=  isNaN  ||  c.isInfinite)  {  [CE]  ';'  expected  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  isNaN  ||  c.isInfinite)  {  if(c.isInfinite!=  isNaN  ||  c.isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite    ==    isNaN    ||    c.isInfinite)    {    if(c.isInfinite!=  isNaN  ||  c.isInfinite)  {	  	non-compiled	[CE]  ';'  expected	48	None	add
12	[BUG]  [BUGGY]  if(c.isNaN  ==  isNaN  ||  c.isInfinite)  {  if(c.isNaN  ==  isNaN  ||  c.isInfinite)  {  [CE]  ';'  expected  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isNaN  ==  isNaN  ||  c.isInfinite)  {  if(c.isNaN  ==  isNaN  ||  c.isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isNaN    ==    isNaN    ||    c.isInfinite)    {    if(c.isNaN  ==  isNaN  ||  c.isInfinite)  {	  	non-compiled	[CE]  ';'  expected	43	None	add
13	[BUG]  [BUGGY]  if(c.isNaN  ==  isNaN  ||  c.isInfinite)  {  if(c.isNaN!=  isNaN  ||  c.isInfinite)  {  [CE]  ';'  expected  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isNaN  ==  isNaN  ||  c.isInfinite)  {  if(c.isNaN!=  isNaN  ||  c.isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isNaN    ==    isNaN    ||    c.isInfinite)    {    if(c.isNaN!=  isNaN  ||  c.isInfinite)  {	  	non-compiled	[CE]  ';'  expected	43	None	add
14	[BUG]  [BUGGY]  if(c.denominator  ==  d.denominator)  {  return  isNaN;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.denominator  ==  d.denominator)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.denominator  ==  d.denominator)  {  return  isNaN;  }	  if(d.denominator    ==    c.denominator)    {    return    isNaN;    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
15	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c!=    null)    {    return    false;    }    if(c  ==  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	                if(c!=        null)        {        return        false;        }        if(c    ==    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	30	16	add
16	[BUG]  [BUGGY]          if(c!=    null)    {    return    false;    }    if(c  ==  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c!=    null)    {    return    false;    }    if(c  ==  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	                if(c!=        null)        {        return        false;        }        if(c    ==    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	30	16	add
17	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c!=    null)    {    return    false;    }    if(c  ==  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	                if(c!=        null)        {        return        false;        }        if(c    ==    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	30	16	add
18	[BUG]  [BUGGY]          if(c!=    null)    {    return    false;    }    if(c  ==  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c!=    null)    {    return    false;    }    if(c  ==  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	                if(c!=        null)        {        return        false;        }        if(c    ==    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	30	16	add
19	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c!=    null)    {    return    false;    }    if(c  ==  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c  ==  null)  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	                if(c!=        null)        {        return        false;        }        if(c    ==    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c  ==  null)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	30	16	add
20	[BUG]  [BUGGY]          if(c!=    null)    {    return    false;    }    if(c  ==  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c  ==  null)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c!=    null)    {    return    false;    }    if(c  ==  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c  ==  null)  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	                if(c!=        null)        {        return        false;        }        if(c    ==    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c  ==  null)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	30	16	add
21	[BUG]  [BUGGY]  if(c.real!=  null)  {  if(c.isInfinite)  {  return  isNaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.real!=  null)  {  if(c.isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.real!=  null)  {  if(c.isInfinite)  {  return  isNaN;  }	          if(c.isInfinite)    {    return    isNaN;    }    if(c.isInfinite)    {    return    isNaN;    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	11	None	replace
22	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]        AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isNaN  ||  c.isNaN)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isNaN  ||  c.isNaN)  {	  if(c.isInfinite    ||    c.isInfinite)    {    if(c.isInfinite    ||    c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	21	1	replace
23	[BUG]  [BUGGY]  if(c.isNaN  ||  c.isNaN)  {  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]        AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isNaN  ||  c.isNaN)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isNaN  ||  c.isNaN)  {	  if(c.isInfinite    ||    c.isInfinite)    {    if(c.isInfinite    ||    c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	21	1	replace
24	[BUG]  [BUGGY]  if(c.isInfinite)  {  if(denominator  ==  c.denominator)  {  return  isNaN;  }  [CE]  cannot  find  symbol  denominator  [FE]                java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite)  {  if(denominator  ==  c.denominator)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite)  {  if(denominator  ==  c.denominator)  {  return  isNaN;  }	  if(c.isInfinite)    {    if(d.denominator    ==    c.denominator)    {    return    isNaN;    }    	non-compiled	[CE]  cannot  find  symbol  denominator	33	None	replace
25	[BUG]  [BUGGY]  if(isNaN  ==  c.isInfinite)  {  if(isNaN  ==  c.isInfinite)  {  [CE]  ';'  expected  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(isNaN  ==  c.isInfinite)  {  if(isNaN  ==  c.isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(isNaN    ==    c.isInfinite)    {    if(isNaN  ==  c.isInfinite)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
26	[BUG]  [BUGGY]  if(isNaN  ==  c.isInfinite)  {  if(isNaN!=  c.isInfinite)  {  [CE]  ';'  expected  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(isNaN  ==  c.isInfinite)  {  if(isNaN!=  c.isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(isNaN    ==    c.isInfinite)    {    if(isNaN!=  c.isInfinite)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
27	[BUG]  [BUGGY]  if(c.isInfinite)  {  If(c.isInfinite  ||  c.isInfinite)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite)  {  If(c.isInfinite  ||  c.isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite)  {  If(c.isInfinite  ||  c.isInfinite)  {	  if(c.isNaN    ||    c.isInfinite)    {    If(c.isNaN    ||    c.isInfinite)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
28	[BUG]  [BUGGY]  if(c.isInfinite)  {  If(c.isNaN  ||  c.isInfinite)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite)  {  If(c.isNaN  ||  c.isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite)  {  If(c.isNaN  ||  c.isInfinite)  {	  if(c.isNaN    ||    c.isInfinite)    {    If(c.isNaN    ||    c.isInfinite)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
29	[BUG]  [BUGGY]  if(c.isInfinite  ==  false)  {  return  isInfinite;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  false)  {  return  isInfinite;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite  ==  false)  {  return  isInfinite;  }	  if(c.isInfinite)    {    return    isInfinite;    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
30	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite)  {  if(!isInfinite  ||!isInfinite)  {  return  isInfinite;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isInfinite)  {  if(!isInfinite  ||!isInfinite)  {  return  isInfinite;  }	  if(c.isInfinite)    {    if(!isNaN    ||!isInfinite)    {    return    isNaN;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	35	5	replace
31	[BUG]  [BUGGY]  if(c.isInfinite)  {  if(!isInfinite  ||!isInfinite)  {  return  isInfinite;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite)  {  if(!isInfinite  ||!isInfinite)  {  return  isInfinite;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite)  {  if(!isInfinite  ||!isInfinite)  {  return  isInfinite;  }	  if(c.isInfinite)    {    if(!isNaN    ||!isInfinite)    {    return    isNaN;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	35	5	replace
32	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite)  {  if(!isInfinite  ||!isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isInfinite)  {  if(!isInfinite  ||!isInfinite)  {  return  isNaN;  }	  if(c.isInfinite)    {    if(!isNaN    ||!isInfinite)    {    return    isNaN;    }    	compilable	  [FE]  AssertionError  	35	4	replace
33	[BUG]  [BUGGY]  if(c.isInfinite)  {  if(!isInfinite  ||!isInfinite)  {  return  isNaN;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite)  {  if(!isInfinite  ||!isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite)  {  if(!isInfinite  ||!isInfinite)  {  return  isNaN;  }	  if(c.isInfinite)    {    if(!isNaN    ||!isInfinite)    {    return    isNaN;    }    	compilable	  [FE]  AssertionError  	35	4	replace
34	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isNaN)  {  if(c!=  null)  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isNaN)  {  if(c!=  null)  {  return  false;  }	          if(c!=    null)    {    return    false;    }    if(c    ==    null)    {    return    false;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	31	4	replace
35	[BUG]  [BUGGY]  if(c.isNaN)  {  if(c!=  null)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isNaN)  {  if(c!=  null)  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isNaN)  {  if(c!=  null)  {  return  false;  }	          if(c!=    null)    {    return    false;    }    if(c    ==    null)    {    return    false;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	31	4	replace
36	[BUG]  [BUGGY]  if(c.isInfinite)  {  if(!isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  if(!isInfinite)  {  return  isNaN;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite)  {  if(!isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  if(!isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite)    {    if(!isInfinite)    {    return    isNaN;    }    if(c.isInfinite)  {  if(!isInfinite)  {  return  isNaN;  }	  	non-compiled	[CE]  ';'  expected	36	None	add
37	[BUG]  [BUGGY]  if(c.isInfinite)  {  if(!isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  if(!isInfinite)  {  return  ISNaN;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite)  {  if(!isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  if(!isInfinite)  {  return  ISNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite)    {    if(!isInfinite)    {    return    isNaN;    }    if(c.isInfinite)  {  if(!isInfinite)  {  return  ISNaN;  }	  	non-compiled	[CE]  ';'  expected	36	None	add
38	[BUG]  [BUGGY]  if(c.isInfinite  ==  isNaN)  {  return  isInfinite;  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  isNaN)  {  return  isInfinite;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite  ==  isNaN)  {  return  isInfinite;  }	  if(c.isInfinite    ==    isInfinite)    {    return    isInfinite;    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
39	[BUG]  [BUGGY]  if(c.isInfinite  ==  denominator)  {  return  isInfinite;  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  denominator)  {  return  isInfinite;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite  ==  denominator)  {  return  isInfinite;  }	  if(c.isInfinite    ==    isInfinite)    {    return    isInfinite;    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
40	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isNaN  ==  isNaN  &&  c.isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isNaN  ==  isNaN  &&  c.isInfinite)  {	  if(c.isNaN    ==    isNaN    ||    c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	44	5	replace
41	[BUG]  [BUGGY]  if(c.isNaN  ==  isNaN  &&  c.isInfinite)  {  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isNaN  ==  isNaN  &&  c.isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isNaN  ==  isNaN  &&  c.isInfinite)  {	  if(c.isNaN    ==    isNaN    ||    c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	44	5	replace
42	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c!=    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	                if(c!=        null)        {        return        false;        }        if(c!=    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	28	16	add
43	[BUG]  [BUGGY]          if(c!=    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c!=    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	                if(c!=        null)        {        return        false;        }        if(c!=    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	28	16	add
44	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c!=    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	                if(c!=        null)        {        return        false;        }        if(c!=    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	28	16	add
45	[BUG]  [BUGGY]          if(c!=    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c!=    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	                if(c!=        null)        {        return        false;        }        if(c!=    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	28	16	add
46	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c!=    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c  ==  null)  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	                if(c!=        null)        {        return        false;        }        if(c!=    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c  ==  null)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	28	16	add
47	[BUG]  [BUGGY]          if(c!=    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c  ==  null)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c!=    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c  ==  null)  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	                if(c!=        null)        {        return        false;        }        if(c!=    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c  ==  null)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	28	16	add
48	[BUG]  [BUGGY]  if(c.isInfinite)  {  return  isNaN  ||  isNaN  ==  c.infinite;  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite)  {  return  isNaN  ||  isNaN  ==  c.infinite;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite)  {  return  isNaN  ||  isNaN  ==  c.infinite;  }	  if(c.isInfinite)    {    return    isNaN    ||    isInfinite    ==    c.infinite;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
49	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(isNaN  ==  c.isNaN)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(isNaN  ==  c.isNaN)  {	  if(isNaN    ||    c.isInfinite)    {    if(isNaN    ||    c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	26	15	replace
50	[BUG]  [BUGGY]  if(isNaN  ==  c.isNaN)  {  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(isNaN  ==  c.isNaN)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(isNaN  ==  c.isNaN)  {	  if(isNaN    ||    c.isInfinite)    {    if(isNaN    ||    c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	26	15	replace
51	[BUG]  [BUGGY]  if(c!=  null  ||  c.isInfinite())  {  return  isNaN;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c!=  null  ||  c.isInfinite())  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c!=  null  ||  c.isInfinite())  {  return  isNaN;  }	  if(c!=    null)    {    return    isNaN;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
52	[BUG]  [BUGGY]  if(isNaN  ==  c.isInfinite)  {  If(isNaN  ||  c.isInfinite)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(isNaN  ==  c.isInfinite)  {  If(isNaN  ||  c.isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(isNaN  ==  c.isInfinite)  {  If(isNaN  ||  c.isInfinite)  {	  if(isNaN    ||    c.isInfinite)    {    If(isNaN    ||    c.isInfinite)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
53	[BUG]  [BUGGY]  if(c.infinite  ==  isInfinite)  {  return  isNaN;  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.infinite  ==  isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.infinite  ==  isInfinite)  {  return  isNaN;  }	  if(!(isInfinite    ==    c.infinite))    {    return    isNaN;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
54	[BUG]  [BUGGY]  if(isInfinite  ||  c.isInfinite)  {  if(isInfinite  ||  c.isInfinite)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(isInfinite  ||  c.isInfinite)  {  if(isInfinite  ||  c.isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(isInfinite    ||    c.isInfinite)    {    if(isInfinite  ||  c.isInfinite)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
55	[BUG]  [BUGGY]  if(isInfinite  ||  c.isInfinite)  {  If(isInfinite  ||  c.isInfinite)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(isInfinite  ||  c.isInfinite)  {  If(isInfinite  ||  c.isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(isInfinite    ||    c.isInfinite)    {    If(isInfinite  ||  c.isInfinite)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
56	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  isNaN  &&  c.isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isInfinite  ==  isNaN  &&  c.isInfinite)  {	  if(c.isInfinite    ==    isNaN    ||    c.isInfinite)    {    	compilable	  [FE]  AssertionError  	49	3	replace
57	[BUG]  [BUGGY]  if(c.isInfinite  ==  isNaN  &&  c.isInfinite)  {  [FE]  AssertionError  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  isNaN  &&  c.isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite  ==  isNaN  &&  c.isInfinite)  {	  if(c.isInfinite    ==    isNaN    ||    c.isInfinite)    {    	compilable	  [FE]  AssertionError  	49	3	replace
58	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c.isNaN)    {    return    isNaN;    }    if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	                if(c.isNaN)        {        return        isNaN;        }        if(c.isNaN)    {    return    isNaN;    }    if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	23	1	add
59	[BUG]  [BUGGY]          if(c.isNaN)    {    return    isNaN;    }    if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c.isNaN)    {    return    isNaN;    }    if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	                if(c.isNaN)        {        return        isNaN;        }        if(c.isNaN)    {    return    isNaN;    }    if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	23	1	add
60	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c.isNaN)    {    return    isNaN;    }    if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	                if(c.isNaN)        {        return        isNaN;        }        if(c.isNaN)    {    return    isNaN;    }    if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	23	1	add
61	[BUG]  [BUGGY]          if(c.isNaN)    {    return    isNaN;    }    if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c.isNaN)    {    return    isNaN;    }    if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	                if(c.isNaN)        {        return        isNaN;        }        if(c.isNaN)    {    return    isNaN;    }    if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	23	1	add
62	[BUG]  [BUGGY]          if(c.isNaN)    {    return    isNaN;    }    if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c.isNaN)    {    return    isNaN;    }    if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	                if(c.isNaN)        {        return        isNaN;        }        if(c.isNaN)    {    return    isNaN;    }    if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
63	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c.isInfinite)    {    return    isNaN;    }    if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	                if(c.isInfinite)        {        return        isNaN;        }        if(c.isInfinite)    {    return    isNaN;    }    if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }	  	compilable	  [FE]  AssertionError  	10	3	add
64	[BUG]  [BUGGY]          if(c.isInfinite)    {    return    isNaN;    }    if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c.isInfinite)    {    return    isNaN;    }    if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	                if(c.isInfinite)        {        return        isNaN;        }        if(c.isInfinite)    {    return    isNaN;    }    if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }	  	compilable	  [FE]  AssertionError  	10	3	add
65	[BUG]  [BUGGY]          if(c.isInfinite)    {    return    isNaN;    }    if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c.isInfinite)    {    return    isNaN;    }    if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	                if(c.isInfinite)        {        return        isNaN;        }        if(c.isInfinite)    {    return    isNaN;    }    if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
66	[BUG]  [BUGGY]          if(c.isInfinite)    {    return    isNaN;    }    if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c.isInfinite)    {    return    isNaN;    }    if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	                if(c.isInfinite)        {        return        isNaN;        }        if(c.isInfinite)    {    return    isNaN;    }    if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
67	[BUG]  [BUGGY]  if(c.isInfinite)  {  if(!isNaN  ||!isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  if(!isNaN  ||!isInfinite)  {  return  isNaN;  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite)  {  if(!isNaN  ||!isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  if(!isNaN  ||!isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite)    {    if(!isNaN    ||!isInfinite)    {    return    isNaN;    }    if(c.isInfinite)  {  if(!isNaN  ||!isInfinite)  {  return  isNaN;  }	  	non-compiled	[CE]  ';'  expected	34	None	add
68	[BUG]  [BUGGY]  if(c.isInfinite)  {  if(!isNaN  ||!isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  if(!isNaN  ||!isInfinite)  {  return  ISNaN;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite)  {  if(!isNaN  ||!isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  if(!isNaN  ||!isInfinite)  {  return  ISNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite)    {    if(!isNaN    ||!isInfinite)    {    return    isNaN;    }    if(c.isInfinite)  {  if(!isNaN  ||!isInfinite)  {  return  ISNaN;  }	  	non-compiled	[CE]  ';'  expected	34	None	add
69	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(isNaN  ||  isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(isNaN  ||  isInfinite)  {	  if(isInfinite    ||    c.isInfinite)    {    	compilable	  [FE]  AssertionError  	6	3	replace
70	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(isNaN  ||  isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(isNaN  ||  isInfinite)  {	  if(isInfinite    ||    c.isInfinite)    {    	compilable	  [FE]  AssertionError  	6	3	replace
71	[BUG]  [BUGGY]  c.parent  ==  parent)  {  return  isNaN;  }  [CE]  not  a  statement  [FE]              java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  c.parent  ==  parent)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	c.parent  ==  parent)  {  return  isNaN;  }	  parent    ==    c.parent)    {    return    isNaN;    }    else    {    return(real    ==    c.real)&&    (imaginary    ==    c.imaginary);    }    	non-compiled	[CE]  not  a  statement	9	None	replace
72	[BUG]  [BUGGY]  parent  ==  c.parent)  {  return  isNaN;  }  [CE]  not  a  statement  [FE]                java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  parent  ==  c.parent)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	parent  ==  c.parent)  {  return  isNaN;  }	  parent    ==    c.parent)    {    return    isNaN;    }    else    {    return(real    ==    c.real)&&    (imaginary    ==    c.imaginary);    }    	non-compiled	[CE]  not  a  statement	9	None	replace
73	[BUG]  [BUGGY]  if(other.isInfinite)  {  return  isNaN;  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(other.isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(other.isInfinite)  {  return  isNaN;  }	          if(c.isInfinite)    {    return    isNaN;    }    if(c.isInfinite)    {    return    ISNaN;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
74	[BUG]  [BUGGY]  if(c.isNaN)  {  If(c.isInfinite)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isNaN)  {  If(c.isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isNaN)  {  If(c.isInfinite)  {	  if(c.isInfinite)    {    If(c.isInfinite)    {    	non-compiled	[CE]  ';'  expected	14	None	replace
75	[BUG]  [BUGGY]  if(c.isNaN)  {  If(c.isNaN)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isNaN)  {  If(c.isNaN)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isNaN)  {  If(c.isNaN)  {	  if(c.isInfinite)    {    If(c.isInfinite)    {    	non-compiled	[CE]  ';'  expected	14	None	replace
76	[BUG]  [BUGGY]  if(c!=  null)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }  if(c!=  null)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }  [CE]  ';'  expected  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c!=  null)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }  if(c!=  null)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c!=    null)    {    if(!isNaN    ==    c.isInfinite)    {    return    isNaN;    }    if(c!=  null)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }	  	non-compiled	[CE]  ';'  expected	41	None	add
77	[BUG]  [BUGGY]  if(c!=  null)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }  if(c  ==  null)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }  [CE]  ';'  expected  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c!=  null)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }  if(c  ==  null)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c!=    null)    {    if(!isNaN    ==    c.isInfinite)    {    return    isNaN;    }    if(c  ==  null)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }	  	non-compiled	[CE]  ';'  expected	41	None	add
78	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  true)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isInfinite  ==  true)  {	  if(c.isInfinite    ==    false)    {    	compilable	  [FE]  AssertionError  	16	4	replace
79	[BUG]  [BUGGY]  if(c.isInfinite  ==  true)  {  [FE]  AssertionError  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  true)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite  ==  true)  {	  if(c.isInfinite    ==    false)    {    	compilable	  [FE]  AssertionError  	16	4	replace
80	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c!=  null)  {  if(c.isNaN)  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c!=  null)  {  if(c.isNaN)  {  return  false;  }	          if(c.isNaN)    {    return    isNaN;    }    if(c.isNaN)    {    return    isNaN;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	24	15	replace
81	[BUG]  [BUGGY]  if(c!=  null)  {  if(c.isNaN)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c!=  null)  {  if(c.isNaN)  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c!=  null)  {  if(c.isNaN)  {  return  false;  }	          if(c.isNaN)    {    return    isNaN;    }    if(c.isNaN)    {    return    isNaN;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	24	15	replace
82	[BUG]  [BUGGY]  if(c.isInfinite  ||  c.isNaN)  {  if(c.isInfinite  ||  c.isNaN)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ||  c.isNaN)  {  if(c.isInfinite  ||  c.isNaN)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite    ||    c.isNaN)    {    if(c.isInfinite  ||  c.isNaN)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
83	[BUG]  [BUGGY]  if(c.isInfinite  ||  c.isNaN)  {  If(c.isInfinite  ||  c.isNaN)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ||  c.isNaN)  {  If(c.isInfinite  ||  c.isNaN)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite    ||    c.isNaN)    {    If(c.isInfinite  ||  c.isNaN)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
84	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(isNaN  ==  c.isInfinite  ||  isNaN  ==  c.isNaN)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(isNaN  ==  c.isInfinite  ||  isNaN  ==  c.isNaN)  {	  if(isNaN    ==    c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	8	14	replace
85	[BUG]  [BUGGY]  if(isNaN  ==  c.isInfinite  ||  isNaN  ==  c.isNaN)  {  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(isNaN  ==  c.isInfinite  ||  isNaN  ==  c.isNaN)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(isNaN  ==  c.isInfinite  ||  isNaN  ==  c.isNaN)  {	  if(isNaN    ==    c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	8	14	replace
86	[BUG]  [BUGGY]  if(!isInfinite)  {  return  isNaN;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(!isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(!isInfinite)  {  return  isNaN;  }	  if(isInfinite)    {    return    isNaN;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
87	[BUG]  [BUGGY]  if(c!=  null)  {  if(!isInfinite  ==  c.infinite)  {  return  isNaN;  }  [CE]  cannot  find  symbol  infinite  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c!=  null)  {  if(!isInfinite  ==  c.infinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c!=  null)  {  if(!isInfinite  ==  c.infinite)  {  return  isNaN;  }	  if(c!=    null)    {    if(!isNaN    ==    c.isInfinite)    {    return    isNaN;    }    	non-compiled	[CE]  cannot  find  symbol  infinite	42	None	replace
88	[BUG]  [BUGGY]  if(c.isInfinite  ==  false)  {  if(c.isInfinite  ==  false)  {  [CE]  ';'  expected  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  false)  {  if(c.isInfinite  ==  false)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite    ==    false)    {    if(c.isInfinite  ==  false)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
89	[BUG]  [BUGGY]  if(c.isInfinite  ==  false)  {  if(c.isInfinite!=  false)  {  [CE]  ';'  expected  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  false)  {  if(c.isInfinite!=  false)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite    ==    false)    {    if(c.isInfinite!=  false)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
90	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  false  ||  c.isNaN)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isInfinite  ==  false  ||  c.isNaN)  {	  if(c.isInfinite    ||    c.isNaN)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	19	13	replace
91	[BUG]  [BUGGY]  if(c.isInfinite  ==  false  ||  c.isNaN)  {  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  false  ||  c.isNaN)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite  ==  false  ||  c.isNaN)  {	  if(c.isInfinite    ||    c.isNaN)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	19	13	replace
92	[BUG]  [BUGGY]  if(isInfinite)  {  return  isNaN  ||  isInfinite  ==  c.infinite;  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(isInfinite)  {  return  isNaN  ||  isInfinite  ==  c.infinite;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(isInfinite)  {  return  isNaN  ||  isInfinite  ==  c.infinite;  }	  if(c.isInfinite)    {    return    isNaN    ||    isInfinite    ==    c.infinite;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
93	[BUG]  [BUGGY]  if(c!=  null)  {  return  isInfinite;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c!=  null)  {  return  isInfinite;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c!=  null)  {  return  isInfinite;  }	  if(c!=    null)    {    return    isNaN;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
94	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c!=  null)  {  if(c.isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c!=  null)  {  if(c.isInfinite)  {  return  isNaN;  }	          if(c.isInfinite)    {    return    isNaN;    }    if(c.isInfinite)    {    return    isNaN;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	11	14	replace
95	[BUG]  [BUGGY]  if(c!=  null)  {  if(c.isInfinite)  {  return  isNaN;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c!=  null)  {  if(c.isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c!=  null)  {  if(c.isInfinite)  {  return  isNaN;  }	          if(c.isInfinite)    {    return    isNaN;    }    if(c.isInfinite)    {    return    isNaN;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	11	14	replace
96	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]      AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c  ==  null)  {  if(c.isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c  ==  null)  {  if(c.isInfinite)  {  return  isNaN;  }	          if(c.isInfinite)    {    return    isNaN;    }    if(c.isInfinite)    {    return    isNaN;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	11	4	replace
97	[BUG]  [BUGGY]  if(c  ==  null)  {  if(c.isInfinite)  {  return  isNaN;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]      AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c  ==  null)  {  if(c.isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c  ==  null)  {  if(c.isInfinite)  {  return  isNaN;  }	          if(c.isInfinite)    {    return    isNaN;    }    if(c.isInfinite)    {    return    isNaN;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	11	4	replace
98	[BUG]  [BUGGY]  if(other.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(other.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(other.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }	          if(c.isInfinite)    {    return    isNaN;    }    if(c.isInfinite)    {    return    ISNaN;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
99	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c!=  null)  {  if(c.isNaN)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c!=  null)  {  if(c.isNaN)  {  return  isNaN;  }	          if(c.isNaN)    {    return    isNaN;    }    if(c.isNaN)    {    return    isNaN;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	24	14	replace
100	[BUG]  [BUGGY]  if(c!=  null)  {  if(c.isNaN)  {  return  isNaN;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c!=  null)  {  if(c.isNaN)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c!=  null)  {  if(c.isNaN)  {  return  isNaN;  }	          if(c.isNaN)    {    return    isNaN;    }    if(c.isNaN)    {    return    isNaN;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	24	14	replace
101	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite)  {  if(real  ==  c.real)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isInfinite)  {  if(real  ==  c.real)  {  return  isNaN;  }	  if(c.isInfinite)    {    if(d.denominator    ==    c.denominator)    {    return    isNaN;    }    	compilable	  [FE]  AssertionError  	33	4	replace
102	[BUG]  [BUGGY]  if(c.isInfinite)  {  if(real  ==  c.real)  {  return  isNaN;  }  [FE]  AssertionError  [FE]                java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite)  {  if(real  ==  c.real)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite)  {  if(real  ==  c.real)  {  return  isNaN;  }	  if(c.isInfinite)    {    if(d.denominator    ==    c.denominator)    {    return    isNaN;    }    	compilable	  [FE]  AssertionError  	33	4	replace
103	[BUG]  [BUGGY]  parent  ==  c.parent)  {  return  isNaN;  }  else  {  return(parent  ==  c.parent)&&  (imaginary  ==  c.imaginary);  }  [CE]  not  a  statement  [FE]              java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  parent  ==  c.parent)  {  return  isNaN;  }  else  {  return(parent  ==  c.parent)&&  (imaginary  ==  c.imaginary);  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	parent  ==  c.parent)  {  return  isNaN;  }  else  {  return(parent  ==  c.parent)&&  (imaginary  ==  c.imaginary);  }	  parent    ==    c.parent)    {    return    isNaN;    }    else    {    return(real    ==    c.real)&&    (imaginary    ==    c.imaginary);    }    	non-compiled	[CE]  not  a  statement	9	None	replace
104	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c  ==  null)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c  ==  null)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }	  if(c!=    null)    {    if(!isNaN    ==    c.isInfinite)    {    return    isNaN;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	42	4	replace
105	[BUG]  [BUGGY]  if(c  ==  null)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c  ==  null)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c  ==  null)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }	  if(c!=    null)    {    if(!isNaN    ==    c.isInfinite)    {    return    isNaN;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	42	4	replace
106	[BUG]  [BUGGY]  if(c.isInfinite)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }	          if(c.isNaN)    {    return    isNaN;    }    if(c.isNaN)    {    return    ISNaN;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
107	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(isNaN  ==  c.isNaN  ||  isInfinite  ==  c.isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(isNaN  ==  c.isNaN  ||  isInfinite  ==  c.isInfinite)  {	  if(isNaN    ==    c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	8	15	replace
108	[BUG]  [BUGGY]  if(isNaN  ==  c.isNaN  ||  isInfinite  ==  c.isInfinite)  {  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(isNaN  ==  c.isNaN  ||  isInfinite  ==  c.isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(isNaN  ==  c.isNaN  ||  isInfinite  ==  c.isInfinite)  {	  if(isNaN    ==    c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	8	15	replace
109	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c!=  null)  {  if(!isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c!=  null)  {  if(!isInfinite)  {  return  isNaN;  }	  if(c.isInfinite)    {    if(!isInfinite)    {    return    isNaN;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	37	14	replace
110	[BUG]  [BUGGY]  if(c!=  null)  {  if(!isInfinite)  {  return  isNaN;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c!=  null)  {  if(!isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c!=  null)  {  if(!isInfinite)  {  return  isNaN;  }	  if(c.isInfinite)    {    if(!isInfinite)    {    return    isNaN;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	37	14	replace
111	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  isNaN  ||  c.isInfinite  ==  false)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isInfinite  ==  isNaN  ||  c.isInfinite  ==  false)  {	  if(c.isInfinite    ==    isNaN)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	51	12	replace
112	[BUG]  [BUGGY]  if(c.isInfinite  ==  isNaN  ||  c.isInfinite  ==  false)  {  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  isNaN  ||  c.isInfinite  ==  false)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite  ==  isNaN  ||  c.isInfinite  ==  false)  {	  if(c.isInfinite    ==    isNaN)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	51	12	replace
113	[BUG]  [BUGGY]  if(!(isInfinite  ==  c.infinite)&&!(real  ==  c.infinite))  {  return  isNaN;  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(!(isInfinite  ==  c.infinite)&&!(real  ==  c.infinite))  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(!(isInfinite  ==  c.infinite)&&!(real  ==  c.infinite))  {  return  isNaN;  }	  if(!(isInfinite    ==    c.infinite))    {    return    isNaN;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
114	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(real  ==  c.real)  {  if(c!=  null)  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(real  ==  c.real)  {  if(c!=  null)  {  return  false;  }	          if(c!=    null)    {    return    false;    }    if(c    ==    null)    {    return    false;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	31	16	replace
115	[BUG]  [BUGGY]  if(real  ==  c.real)  {  if(c!=  null)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(real  ==  c.real)  {  if(c!=  null)  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(real  ==  c.real)  {  if(c!=  null)  {  return  false;  }	          if(c!=    null)    {    return    false;    }    if(c    ==    null)    {    return    false;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	31	16	replace
116	[BUG]  [BUGGY]  if(isNaN  ==  c.isInfinite)  {  If(isNaN  ==  c.isInfinite)  {  [CE]  ';'  expected  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(isNaN  ==  c.isInfinite)  {  If(isNaN  ==  c.isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(isNaN    ==    c.isInfinite)    {    If(isNaN  ==  c.isInfinite)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
117	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]        AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c  ==  null)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c  ==  null)  {	  if(c.isInfinite)    {    if(c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	13	4	replace
118	[BUG]  [BUGGY]  if(c  ==  null)  {  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]        AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c  ==  null)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c  ==  null)  {	  if(c.isInfinite)    {    if(c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	13	4	replace
119	[BUG]  [BUGGY]  c.isInfinite  =  isInfinite;  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  c.isInfinite  =  isInfinite;  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	c.isInfinite  =  isInfinite;	  if(c.isInfinite)    {    return    isInfinite;    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
120	[BUG]  [BUGGY]  if(isNaN  ==  c.isNaN)  {  If(isNaN  ||  c.isInfinite)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(isNaN  ==  c.isNaN)  {  If(isNaN  ||  c.isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(isNaN  ==  c.isNaN)  {  If(isNaN  ||  c.isInfinite)  {	  if(isNaN    ||    c.isInfinite)    {    If(isNaN    ||    c.isInfinite)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
121	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite!=  false)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isInfinite!=  false)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }	  if(c!=    null)    {    if(!isNaN    ==    c.isInfinite)    {    return    isNaN;    }    	compilable	  [FE]  AssertionError  	42	4	replace
122	[BUG]  [BUGGY]  if(c.isInfinite!=  false)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }  [FE]  AssertionError  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite!=  false)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite!=  false)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }	  if(c!=    null)    {    if(!isNaN    ==    c.isInfinite)    {    return    isNaN;    }    	compilable	  [FE]  AssertionError  	42	4	replace
123	[BUG]  [BUGGY]  if(!isInfinite  ==  c.infinite)  {  return  isNaN;  }  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(!isInfinite  ==  c.infinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(!isInfinite  ==  c.infinite)  {  return  isNaN;  }	  if(c!=    null)    {    if(!isNaN    ==    c.isInfinite)    {    return    isNaN;    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
124	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c!=    null)    {    return    false;    }    if(c  ==  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	                if(c!=        null)        {        return        false;        }        if(c    ==    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	30	16	add
125	[BUG]  [BUGGY]          if(c!=    null)    {    return    false;    }    if(c  ==  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c!=    null)    {    return    false;    }    if(c  ==  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	                if(c!=        null)        {        return        false;        }        if(c    ==    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	30	16	add
126	[BUG]  [BUGGY]  if(c.isInfinite())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected:<(-0.5      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite())  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite())  {  return  false;  }	  if(c    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
127	[BUG]  [BUGGY]  if(c.isInfinite)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected:<(-0.5      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite)  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite)  {  return  false;  }	  if(c    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
128	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isInfinite  ==  isInfinite)  {	  if(c.isNaN    ||    c.isInfinite)    {    if(c.isNaN    ||    c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	1	15	replace
129	[BUG]  [BUGGY]  if(c.isInfinite  ==  isInfinite)  {  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite  ==  isInfinite)  {	  if(c.isNaN    ||    c.isInfinite)    {    if(c.isNaN    ||    c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	1	15	replace
130	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]          AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isNaN  ||  c.isNaN  ||  c.isNaN)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isNaN  ||  c.isNaN  ||  c.isNaN)  {	  if(c.isNaN    ||    c.isInfinite)    {    If(c.isNaN    ||    c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	2	1	replace
131	[BUG]  [BUGGY]  if(c.isNaN  ||  c.isNaN  ||  c.isNaN)  {  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]          AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isNaN  ||  c.isNaN  ||  c.isNaN)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isNaN  ||  c.isNaN  ||  c.isNaN)  {	  if(c.isNaN    ||    c.isInfinite)    {    If(c.isNaN    ||    c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	2	1	replace
132	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c.isInfinite)    {    return    isNaN;    }    if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	                if(c.isInfinite)        {        return        isNaN;        }        if(c.isInfinite)    {    return    isNaN;    }    if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }	  	compilable	  [FE]  AssertionError  	10	3	add
133	[BUG]  [BUGGY]          if(c.isInfinite)    {    return    isNaN;    }    if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c.isInfinite)    {    return    isNaN;    }    if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	                if(c.isInfinite)        {        return        isNaN;        }        if(c.isInfinite)    {    return    isNaN;    }    if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }	  	compilable	  [FE]  AssertionError  	10	3	add
134	[BUG]  [BUGGY]  if(c!=  null)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }  if(c!=  null)  {  if(!isNaN  ==  c.isInfinite)  {  return  ISNaN;  }  [CE]  ';'  expected  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c!=  null)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }  if(c!=  null)  {  if(!isNaN  ==  c.isInfinite)  {  return  ISNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c!=    null)    {    if(!isNaN    ==    c.isInfinite)    {    return    isNaN;    }    if(c!=  null)  {  if(!isNaN  ==  c.isInfinite)  {  return  ISNaN;  }	  	non-compiled	[CE]  ';'  expected	41	None	add
135	[BUG]  [BUGGY]  if(c.isInfinite  ==  isNaN)  {  If(c.isInfinite  ==  isNaN)  {  [CE]  ';'  expected  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  isNaN)  {  If(c.isInfinite  ==  isNaN)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite    ==    isNaN)    {    If(c.isInfinite  ==  isNaN)  {	  	non-compiled	[CE]  ';'  expected	50	None	add
136	[BUG]  [BUGGY]  if(c.isInfinite  ==  isInfinite  ||  c.isInfinite  ==  isInfinite)  {  return  isInfinite;  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  isInfinite  ||  c.isInfinite  ==  isInfinite)  {  return  isInfinite;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite  ==  isInfinite  ||  c.isInfinite  ==  isInfinite)  {  return  isInfinite;  }	  if(c.isInfinite    ==    isInfinite)    {    return    isInfinite;    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
137	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  isNaN  ||  c.isInfinite!=  false)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isInfinite  ==  isNaN  ||  c.isInfinite!=  false)  {	  if(c.isInfinite    ==    isNaN    ||    c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	49	15	replace
138	[BUG]  [BUGGY]  if(c.isInfinite  ==  isNaN  ||  c.isInfinite!=  false)  {  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  isNaN  ||  c.isInfinite!=  false)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite  ==  isNaN  ||  c.isInfinite!=  false)  {	  if(c.isInfinite    ==    isNaN    ||    c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	49	15	replace
139	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  isNaN  ||  c.isInfinite  ==  isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isInfinite  ==  isNaN  ||  c.isInfinite  ==  isInfinite)  {	  if(c.isInfinite    ==    isNaN)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	51	14	replace
140	[BUG]  [BUGGY]  if(c.isInfinite  ==  isNaN  ||  c.isInfinite  ==  isInfinite)  {  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  isNaN  ||  c.isInfinite  ==  isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite  ==  isNaN  ||  c.isInfinite  ==  isInfinite)  {	  if(c.isInfinite    ==    isNaN)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	51	14	replace
141	[BUG]  [BUGGY]  if(c.isInfinite)  {  return  isInfinite  ==  c.infinite;  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite)  {  return  isInfinite  ==  c.infinite;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite)  {  return  isInfinite  ==  c.infinite;  }	  if(c.isInfinite)    {    return    isNaN    ||    isInfinite    ==    c.infinite;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
142	[BUG]  [BUGGY]  if(c.isInfinite  ==  false)  {  If(c.isInfinite  ==  false)  {  [CE]  ';'  expected  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  false)  {  If(c.isInfinite  ==  false)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite    ==    false)    {    If(c.isInfinite  ==  false)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
143	[BUG]  [BUGGY]  if(c.isNaN  ||  c.isNaN)  {  If(c.isNaN  ||  c.isNaN)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isNaN  ||  c.isNaN)  {  If(c.isNaN  ||  c.isNaN)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isNaN  ||  c.isNaN)  {  If(c.isNaN  ||  c.isNaN)  {	  if(c.isInfinite    ||    c.isInfinite)    {    If(c.isInfinite    ||    c.isInfinite)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
144	[BUG]  [BUGGY]  if(!(isInfinite  ==  c.infinite)&&  isNaN)  {  return  isNaN;  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(!(isInfinite  ==  c.infinite)&&  isNaN)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(!(isInfinite  ==  c.infinite)&&  isNaN)  {  return  isNaN;  }	  if(!(isInfinite    ==    c.infinite))    {    return    isNaN;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
145	[BUG]  [BUGGY]  if(isInfinite  ==  c.infinite)  {  return  isNaN;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(isInfinite  ==  c.infinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(isInfinite  ==  c.infinite)  {  return  isNaN;  }	  if(isInfinite)    {    return    isNaN;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
146	[BUG]  [BUGGY]  if(isInfinite)  {  return  isInfinite;  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(isInfinite)  {  return  isInfinite;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(isInfinite)  {  return  isInfinite;  }	  if(isInfinite)    {    return    isNaN;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
147	[BUG]  [BUGGY]  if(c.isInfinite)  {  if(divisor  ==  c.denominator)  {  return  isNaN;  }  [CE]  cannot  find  symbol  divisor  [FE]                java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite)  {  if(divisor  ==  c.denominator)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite)  {  if(divisor  ==  c.denominator)  {  return  isNaN;  }	  if(c.isInfinite)    {    if(d.denominator    ==    c.denominator)    {    return    isNaN;    }    	non-compiled	[CE]  cannot  find  symbol  divisor	33	None	replace
148	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  false)  {  if(!isNaN  ||!isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isInfinite  ==  false)  {  if(!isNaN  ||!isInfinite)  {  return  isNaN;  }	  if(c.isInfinite)    {    if(!isNaN    ||!isInfinite)    {    return    isNaN;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	35	13	replace
149	[BUG]  [BUGGY]  if(c.isInfinite  ==  false)  {  if(!isNaN  ||!isInfinite)  {  return  isNaN;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isInfinite  ==  false)  {  if(!isNaN  ||!isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite  ==  false)  {  if(!isNaN  ||!isInfinite)  {  return  isNaN;  }	  if(c.isInfinite)    {    if(!isNaN    ||!isInfinite)    {    return    isNaN;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	35	13	replace
150	[BUG]  [BUGGY]  parent  ==  c.parent)  {  return  isInfinite;  }  [CE]  not  a  statement  [FE]              java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  parent  ==  c.parent)  {  return  isInfinite;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	parent  ==  c.parent)  {  return  isInfinite;  }	  parent    ==    c.parent)    {    return    isNaN;    }    else    {    return(real    ==    c.real)&&    (imaginary    ==    c.imaginary);    }    	non-compiled	[CE]  not  a  statement	9	None	replace
151	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(isNaN  ||  isInfinite  ||  c.isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(isNaN  ||  isInfinite  ||  c.isInfinite)  {	  if(isInfinite    ||    c.isInfinite)    {    	compilable	  [FE]  AssertionError  	6	3	replace
152	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite  ||  c.isInfinite)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(isNaN  ||  isInfinite  ||  c.isInfinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(isNaN  ||  isInfinite  ||  c.isInfinite)  {	  if(isInfinite    ||    c.isInfinite)    {    	compilable	  [FE]  AssertionError  	6	3	replace
153	[BUG]  [BUGGY]  if(c.isNaN  ||  c.isNaN)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isNaN  ||  c.isNaN)  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isNaN  ||  c.isNaN)  {  return  false;  }	          if(c!=    null)    {    return    false;    }    if(c!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
154	[BUG]  [BUGGY]  if(c!=  null  &&  c.isInfinite())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected:<(-0.5      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c!=  null  &&  c.isInfinite())  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c!=  null  &&  c.isInfinite())  {  return  false;  }	  if(c!=    null    ||    c.isInfinite())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
155	[BUG]  [BUGGY]  if(c.isNaN)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(c.isNaN)  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isNaN)  {  return  false;  }	          if(c!=    null)    {    return    false;    }    if(c    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
156	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c!=    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	                if(c!=        null)        {        return        false;        }        if(c!=    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	28	16	add
157	[BUG]  [BUGGY]          if(c!=    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]          if(c!=    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  [BUGGY]      if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	                if(c!=        null)        {        return        false;        }        if(c!=    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	28	16	add
158	[BUG]  [BUGGY]  if(isNaN  ==  c.isNaN  ||  isInfinite  ==  c.infinite)  {  [CE]  cannot  find  symbol  infinite  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;      [BUGGY]  if(isNaN  ==  c.isNaN  ||  isInfinite  ==  c.infinite)  {  [BUGGY]      return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(isNaN  ==  c.isNaN  ||  isInfinite  ==  c.infinite)  {	  if(isNaN    ==    c.isInfinite)    {    	non-compiled	[CE]  cannot  find  symbol  infinite	8	None	replace
