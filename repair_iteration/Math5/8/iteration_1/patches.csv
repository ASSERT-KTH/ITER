bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(other  ==  this)return  true;  if(other.getClass()!=  getClass())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]  if(other  ==  this)return  true;  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  ==  this)return  true;  if(other.getClass()!=  getClass())  {  return  false;  }	      if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
2	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]      if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	        if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	11	3	add
3	[BUG]  [BUGGY]      if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]      if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	        if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	11	3	add
4	[BUG]  [BUGGY]      if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  }  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]      if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	        if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  }	  	non-compiled	[CE]  illegal  start  of  type	11	None	add
5	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]      if(other  ==  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	        if(other    ==    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	1	1	add
6	[BUG]  [BUGGY]      if(other  ==  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]      if(other  ==  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	        if(other    ==    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	1	1	add
7	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]      if(other  ==  this)  {  return  false;  }  if(other!=  this)  {  return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	        if(other    ==    this)    {    return    false;    }    if(other!=  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	1	16	add
8	[BUG]  [BUGGY]      if(other  ==  this)  {  return  false;  }  if(other!=  this)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]      if(other  ==  this)  {  return  false;  }  if(other!=  this)  {  return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	        if(other    ==    this)    {    return    false;    }    if(other!=  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	1	16	add
9	[BUG]  [BUGGY]  if(this  ==  other)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]  if(this  ==  other)  {  return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(this  ==  other)  {  return  false;  }	      if(other    ==    this)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
10	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]      if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	        if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	3	3	add
11	[BUG]  [BUGGY]      if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]      if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	        if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	3	3	add
12	[BUG]  [BUGGY]      if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [CE]  incompatible  types  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]      if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	        if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	non-compiled	[CE]  incompatible  types	3	None	add
13	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]      if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	        if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	3	17	add
14	[BUG]  [BUGGY]      if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]      if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	        if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	3	17	add
15	[BUG]  [BUGGY]  if(!(other  instanceof  Complex))  {  if(!(other  instanceof  Complex))  {  [CE]  ';'  expected  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]  if(!(other  instanceof  Complex))  {  if(!(other  instanceof  Complex))  {  [BUGGY]    Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(!(other    instanceof    Complex))    {    if(!(other  instanceof  Complex))  {	  	non-compiled	[CE]  ';'  expected	7	None	add
16	[BUG]  [BUGGY]  if(!(other  instanceof  Complex))  {  If(!(other  instanceof  Complex))  {  [CE]  ';'  expected  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]  if(!(other  instanceof  Complex))  {  If(!(other  instanceof  Complex))  {  [BUGGY]    Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(!(other    instanceof    Complex))    {    If(!(other  instanceof  Complex))  {	  	non-compiled	[CE]  ';'  expected	7	None	add
17	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]  if(!(other  instanceof  Complex)&&!(other  instanceof  Complex))  {  [BUGGY]    Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	if(!(other  instanceof  Complex)&&!(other  instanceof  Complex))  {	  if(!(other    instanceof    Complex))    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	8	18	replace
18	[BUG]  [BUGGY]  if(!(other  instanceof  Complex)&&!(other  instanceof  Complex))  {  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]  if(!(other  instanceof  Complex)&&!(other  instanceof  Complex))  {  [BUGGY]    Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(!(other  instanceof  Complex)&&!(other  instanceof  Complex))  {	  if(!(other    instanceof    Complex))    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	8	18	replace
19	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]  if(!(other  instanceof  Complex)&&  isInfinite)  {  [BUGGY]    Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	if(!(other  instanceof  Complex)&&  isInfinite)  {	  if(!(other    instanceof    Complex))    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	8	16	replace
20	[BUG]  [BUGGY]  if(!(other  instanceof  Complex)&&  isInfinite)  {  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]  if(!(other  instanceof  Complex)&&  isInfinite)  {  [BUGGY]    Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(!(other  instanceof  Complex)&&  isInfinite)  {	  if(!(other    instanceof    Complex))    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	8	16	replace
21	[BUG]  [BUGGY]  if(other  instanceof  Real)  {  Complex  c  =(Complex)other;  if(isInfinite)  {  return  isNaN;  }  [CE]  cannot  find  symbol  [FE]          java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]  if(other  instanceof  Real)  {  Complex  c  =(Complex)other;  if(isInfinite)  {  return  isNaN;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  instanceof  Real)  {  Complex  c  =(Complex)other;  if(isInfinite)  {  return  isNaN;  }	      if(other    instanceof    Complex)    {    Complex    c    =(Complex)other;    if(isInfinite)    {    return    isNaN;    }    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
22	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]            java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]  if(other  instanceof  java.util.ArrayList)  {  if(other  instanceof  java.util.ArrayList)  {  return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	if(other  instanceof  java.util.ArrayList)  {  if(other  instanceof  java.util.ArrayList)  {  return  false;  }	      if(other    instanceof    Complex)    {    Complex    c    =(Complex)other;    if(isInfinite)    {    return    isNaN;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	10	16	replace
23	[BUG]  [BUGGY]  if(other  instanceof  java.util.ArrayList)  {  if(other  instanceof  java.util.ArrayList)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]            java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]  if(other  instanceof  java.util.ArrayList)  {  if(other  instanceof  java.util.ArrayList)  {  return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  instanceof  java.util.ArrayList)  {  if(other  instanceof  java.util.ArrayList)  {  return  false;  }	      if(other    instanceof    Complex)    {    Complex    c    =(Complex)other;    if(isInfinite)    {    return    isNaN;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	10	16	replace
24	[BUG]  [BUGGY]  if(other  instanceof  Complex)  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isNaN  ||  isInfinite)  {  return  false;  }  [CE]  ';'  expected  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]  if(other  instanceof  Complex)  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isNaN  ||  isInfinite)  {  return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  instanceof  Complex)  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isNaN  ||  isInfinite)  {  return  false;  }	      if(other    instanceof    Complex)    {    Complex    c    =(Complex)other;    if(isNaN    ||    isInfinite)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	9	None	replace
25	[BUG]  [BUGGY]  if(other  instanceof  Real)  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isNaN  ||  isInfinite)  {  return  false;  }  [CE]  ';'  expected  [FE]          java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]  if(other  instanceof  Real)  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isNaN  ||  isInfinite)  {  return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  instanceof  Real)  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isNaN  ||  isInfinite)  {  return  false;  }	      if(other    instanceof    Complex)    {    Complex    c    =(Complex)other;    if(isNaN    ||    isInfinite)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	9	None	replace
26	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]      if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	        if(other    ==    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	5	1	add
27	[BUG]  [BUGGY]      if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]      if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	        if(other    ==    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	5	1	add
28	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]      if(other  ==  this)  {  return  true;  }  if(other!=  this)  {  return  true;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	        if(other    ==    this)    {    return    true;    }    if(other!=  this)  {  return  true;  }	  	compilable	  [FE]  AssertionError  	5	4	add
29	[BUG]  [BUGGY]      if(other  ==  this)  {  return  true;  }  if(other!=  this)  {  return  true;  }  [FE]  AssertionError  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]      if(other  ==  this)  {  return  true;  }  if(other!=  this)  {  return  true;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	        if(other    ==    this)    {    return    true;    }    if(other!=  this)  {  return  true;  }	  	compilable	  [FE]  AssertionError  	5	4	add
30	[BUG]  [BUGGY]  if(other!=  this)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]  if(other!=  this)  {  return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other!=  this)  {  return  false;  }	      if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
31	[BUG]  [BUGGY]  if(other  ==  this)return  true;  if(other.isInfinite())  {  return  isInfinite;  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]  if(other  ==  this)return  true;  if(other.isInfinite())  {  return  isInfinite;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  ==  this)return  true;  if(other.isInfinite())  {  return  isInfinite;  }	      if(other    ==    this)return    false;    if(other.isInfinite())    {    return    isInfinite;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
32	[BUG]  [BUGGY]  if(!(other  instanceof  Complex))  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isNaN  ||  isInfinite)  {  return  false;  }  [CE]  ';'  expected  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]  if(!(other  instanceof  Complex))  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isNaN  ||  isInfinite)  {  return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(!(other  instanceof  Complex))  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isNaN  ||  isInfinite)  {  return  false;  }	      if(other    instanceof    Complex)    {    Complex    c    =(Complex)other;    if(isNaN    ||    isInfinite)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	9	None	replace
33	[BUG]  [BUGGY]  if(!(other  instanceof  Complex))  {  if(!(other  instanceof  Compiler))  {  [CE]  ';'  expected  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]  if(!(other  instanceof  Complex))  {  if(!(other  instanceof  Compiler))  {  [BUGGY]    Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(!(other    instanceof    Complex))    {    if(!(other  instanceof  Compiler))  {	  	non-compiled	[CE]  ';'  expected	7	None	add
34	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]      if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other  ==  this)return  false;  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	        if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other  ==  this)return  false;	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	11	3	add
35	[BUG]  [BUGGY]      if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other  ==  this)return  false;  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]      if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other  ==  this)return  false;  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	        if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other  ==  this)return  false;	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	11	3	add
36	[BUG]  [BUGGY]      if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other  ==  this)return  false;  }  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]      if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other  ==  this)return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	        if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other  ==  this)return  false;  }	  	non-compiled	[CE]  illegal  start  of  type	11	None	add
37	[BUG]  [BUGGY]      if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other  ==  this)return  false;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]      if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other  ==  this)return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	        if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other  ==  this)return  false;  }	  	non-compiled	[CE]  illegal  start  of  type	11	None	add
38	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]      if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	        if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	3	3	add
39	[BUG]  [BUGGY]      if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]      if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	        if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	3	3	add
40	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]      if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  null)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	        if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  null)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	3	3	add
41	[BUG]  [BUGGY]      if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  null)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]      if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  null)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	        if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  null)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	3	3	add
42	[BUG]  [BUGGY]  if(!(other  instanceof  Complex))  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isInfinite)  {  return  isNaN;  }  [CE]  ';'  expected  [FE]          java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]  if(!(other  instanceof  Complex))  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isInfinite)  {  return  isNaN;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(!(other  instanceof  Complex))  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isInfinite)  {  return  isNaN;  }	      if(other    instanceof    Complex)    {    Complex    c    =(Complex)other;    if(isInfinite)    {    return    isNaN;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
43	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]          java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]  if(!(other  instanceof  Complex))  {  if(other  instanceof  Complex)  {  return  isNaN;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	if(!(other  instanceof  Complex))  {  if(other  instanceof  Complex)  {  return  isNaN;  }	      if(other    instanceof    Complex)    {    Complex    c    =(Complex)other;    if(isInfinite)    {    return    isNaN;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	10	18	replace
44	[BUG]  [BUGGY]  if(!(other  instanceof  Complex))  {  if(other  instanceof  Complex)  {  return  isNaN;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]          java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]  if(!(other  instanceof  Complex))  {  if(other  instanceof  Complex)  {  return  isNaN;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(!(other  instanceof  Complex))  {  if(other  instanceof  Complex)  {  return  isNaN;  }	      if(other    instanceof    Complex)    {    Complex    c    =(Complex)other;    if(isInfinite)    {    return    isNaN;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	10	18	replace
45	[BUG]  [BUGGY]  if(other  ==  this)return  true;  }  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]  if(other  ==  this)return  true;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  ==  this)return  true;  }	      if(other    ==    this)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
46	[BUG]  [BUGGY]  if(other  ==  this)return  true;  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]  if(other  ==  this)return  true;  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  ==  this)return  true;	      if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
47	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]  if(!(other  instanceof  Complex)||!(other  instanceof  Complex))  {  [BUGGY]    Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	if(!(other  instanceof  Complex)||!(other  instanceof  Complex))  {	  if(!(other    instanceof    Complex))    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	8	18	replace
48	[BUG]  [BUGGY]  if(!(other  instanceof  Complex)||!(other  instanceof  Complex))  {  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]  if(!(other  instanceof  Complex)||!(other  instanceof  Complex))  {  [BUGGY]    Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(!(other  instanceof  Complex)||!(other  instanceof  Complex))  {	  if(!(other    instanceof    Complex))    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	8	18	replace
49	[BUG]  [BUGGY]      if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other!=  null)return  false;  }  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]      if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other!=  null)return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	        if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other!=  null)return  false;  }	  	non-compiled	[CE]  illegal  start  of  type	11	None	add
50	[BUG]  [BUGGY]  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isInfinite  ||  isNaN)  {  return  false;  }  [CE]  variable  c  is  already  defined  in  method  equals(Object)  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }    [BUGGY]  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isInfinite  ||  isNaN)  {  return  false;  }  [BUGGY]    if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isInfinite  ||  isNaN)  {  return  false;  }	      if(other    instanceof    Complex)    {    Complex    c    =(Complex)other;    if(isNaN    ||    isInfinite)    {    return    false;    }    	non-compiled	[CE]  variable  c  is  already  defined  in  method  equals(Object)	9	None	replace
