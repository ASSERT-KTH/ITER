bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Real.setNaN(divisor);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  Real.setNaN(divisor);  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	Real.setNaN(divisor);	  Real.setNaN(imaginary);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
2	[BUG]  [BUGGY]  Real  =  imaginary;  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  Real  =  imaginary;  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	Real  =  imaginary;	  Real    =    real;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
3	[BUG]  [BUGGY]  Real  =  real.equals(denominator);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  Real  =  real.equals(denominator);  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	Real  =  real.equals(denominator);	  Real    =    real.equals(imaginary);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
4	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN)  {  return  NaN;  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isInfinite  ||  isNaN)  {  return  NaN;  }  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isInfinite  ||  isNaN)  {  return  NaN;  }	  if(isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
5	[BUG]  [BUGGY]  if(isInfinite)  {  return  ZERO;  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isInfinite)  {  return  ZERO;  }  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isInfinite)  {  return  ZERO;  }	  if(isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
6	[BUG]  [BUGGY]  if(isNaN  ||  real)  {  return  NaN;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isNaN  ||  real)  {  return  NaN;  }  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isNaN  ||  real)  {  return  NaN;  }	  if(isNaN    ||    imaginary)    {    return    NaN;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
7	[BUG]  [BUGGY]  if(isInfinite  ||  imaginary)  {  return  NaN;  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isInfinite  ||  imaginary)  {  return  NaN;  }  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isInfinite  ||  imaginary)  {  return  NaN;  }	  if(isNaN    ||    imaginary)    {    return    NaN;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
8	[BUG]  [BUGGY]  if(isNaN  ||  imaginary  ||  isInfinite)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isNaN  ||  imaginary  ||  isInfinite)  {  [BUGGY]      return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isNaN  ||  imaginary  ||  isInfinite)  {	  if(isNaN    ||    isInfinite    ||    imaginary)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	25	None	replace
9	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN  ||  imaginary)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isInfinite  ||  isNaN  ||  imaginary)  {  [BUGGY]      return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isInfinite  ||  isNaN  ||  imaginary)  {	  if(isNaN    ||    isInfinite    ||    imaginary)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	25	None	replace
10	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN  ||  real)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isInfinite  ||  isNaN  ||  real)  {  [BUGGY]      return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isInfinite  ||  isNaN  ||  real)  {	  if(isInfinite    ||    isNaN)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	4	None	replace
11	[BUG]  [BUGGY]  if(isNaN  ||  real)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isNaN  ||  real)  {  [BUGGY]      return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isNaN  ||  real)  {	  if(isNaN    ||    imaginary)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	21	None	replace
12	[BUG]  [BUGGY]  if(isNaN  ||  divisor)  {  [CE]  cannot  find  symbol  divisor  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isNaN  ||  divisor)  {  [BUGGY]      return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isNaN  ||  divisor)  {	  if(isNaN    ||    imaginary)    {    	non-compiled	[CE]  cannot  find  symbol  divisor	21	None	replace
13	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN)  {  If(isNaN  ||  isNaN)  {  [CE]  ';'  expected  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isInfinite  ||  isNaN)  {  If(isNaN  ||  isNaN)  {  [BUGGY]      return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isInfinite  ||  isNaN)  {  If(isNaN  ||  isNaN)  {	  if(isNaN    ||    isNaN)    {    If(isNaN    ||    isNaN)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
14	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite)  {  return  INF;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isNaN  ||  isInfinite)  {  return  INF;  }  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isNaN  ||  isInfinite)  {  return  INF;  }	  if(isNaN)    {    return    INF;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
15	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite)  {  return  NaN;  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isNaN  ||  isInfinite)  {  return  NaN;  }  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isNaN  ||  isInfinite)  {  return  NaN;  }	  if(isNaN)    {    return    INF;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
16	[BUG]  [BUGGY]  Real.assign(divisor,  imaginary);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  Real.assign(divisor,  imaginary);  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	Real.assign(divisor,  imaginary);	  Real.assign(real,    imaginary);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
17	[BUG]  [BUGGY]  Real.assign(real,  denominator);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  Real.assign(real,  denominator);  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	Real.assign(real,  denominator);	  Real.assign(real,    imaginary);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
18	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]          if(isNaN)    {    return    NaN;    }    if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	add	                if(isNaN)        {        return        NaN;        }        if(isNaN)    {    return    NaN;    }    if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	15	1	add
19	[BUG]  [BUGGY]          if(isNaN)    {    return    NaN;    }    if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]          if(isNaN)    {    return    NaN;    }    if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	                if(isNaN)        {        return        NaN;        }        if(isNaN)    {    return    NaN;    }    if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	15	1	add
20	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]          if(isNaN)    {    return    NaN;    }    if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	add	                if(isNaN)        {        return        NaN;        }        if(isNaN)    {    return    NaN;    }    if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	15	1	add
21	[BUG]  [BUGGY]          if(isNaN)    {    return    NaN;    }    if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]          if(isNaN)    {    return    NaN;    }    if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	                if(isNaN)        {        return        NaN;        }        if(isNaN)    {    return    NaN;    }    if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	15	1	add
22	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]          if(isNaN)    {    return    NaN;    }    if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	add	                if(isNaN)        {        return        NaN;        }        if(isNaN)    {    return    NaN;    }    if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	15	1	add
23	[BUG]  [BUGGY]          if(isNaN)    {    return    NaN;    }    if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]          if(isNaN)    {    return    NaN;    }    if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	                if(isNaN)        {        return        NaN;        }        if(isNaN)    {    return    NaN;    }    if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }  if(isNaN)  {  return  NaN;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	15	1	add
24	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isNaN  ||  isInfinite)  {  return  null;  }  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isNaN  ||  isInfinite)  {  return  null;  }	  if(isNaN)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
25	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN)  {  if(isInfinite  ||  isNaN)  {  [CE]  ';'  expected  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isInfinite  ||  isNaN)  {  if(isInfinite  ||  isNaN)  {  [BUGGY]      return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isInfinite    ||    isNaN)    {    if(isInfinite  ||  isNaN)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
26	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN)  {  If(isInfinite  ||  isNaN)  {  [CE]  ';'  expected  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isInfinite  ||  isNaN)  {  If(isInfinite  ||  isNaN)  {  [BUGGY]      return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isInfinite    ||    isNaN)    {    If(isInfinite  ||  isNaN)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
27	[BUG]  [BUGGY]  ||  isInfinite)  {  return  NaN;  }  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  ||  isInfinite)  {  return  NaN;  }  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	||  isInfinite)  {  return  NaN;  }	          if(isNaN)    {    return    NaN;    }    if(isNaN)    {    return    NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
28	[BUG]  [BUGGY]  Real  =  imaginary.equals(divisor);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  Real  =  imaginary.equals(divisor);  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	Real  =  imaginary.equals(divisor);	  Real    =    imaginary.equals(real);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
29	[BUG]  [BUGGY]  if(isNaN  ||  isNaN  ||  real)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isNaN  ||  isNaN  ||  real)  {  [BUGGY]      return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isNaN  ||  isNaN  ||  real)  {	  if(isNaN    ||    isNaN    ||    imaginary)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	26	None	replace
30	[BUG]  [BUGGY]  if(isNaN  ||  isInfinite  &&  imaginary)  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isNaN  ||  isInfinite  &&  imaginary)  {  [BUGGY]      return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isNaN  ||  isInfinite  &&  imaginary)  {	  if(isNaN    ||    isInfinite    ||    imaginary)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	25	None	replace
31	[BUG]  [BUGGY]  if(isNaN  ||  isNaN)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isNaN  ||  isNaN)  {  return  null;  }  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isNaN  ||  isNaN)  {  return  null;  }	          if(isNaN)    {    return    NaN;    }    if(isNaN)    {    return    NaN;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
32	[BUG]  [BUGGY]  if(isInfinite)  {  return  ONE;  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isInfinite)  {  return  ONE;  }  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isInfinite)  {  return  ONE;  }	  if(isInfinite)    {    return    NaN;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
33	[BUG]  [BUGGY]  if(isInfinite  ||  imaginary)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isInfinite  ||  imaginary)  {  [BUGGY]      return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isInfinite  ||  imaginary)  {	  if(isInfinite    ||    isNaN)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	4	None	replace
34	[BUG]  [BUGGY]  if(isNaN)  {  return  this;  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isNaN)  {  return  this;  }  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isNaN)  {  return  this;  }	  if(isNaN)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
35	[BUG]  [BUGGY]  Real.assign(real,  imaginary,  addend);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  Real.assign(real,  imaginary,  addend);  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	Real.assign(real,  imaginary,  addend);	  Real.assign(real,    imaginary);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
36	[BUG]  [BUGGY]  Real.assign(real,  addend);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  Real.assign(real,  addend);  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	Real.assign(real,  addend);	  Real.assign(real,    imaginary);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
37	[BUG]  [BUGGY]  if(isNaN  ||  imaginary  ||  isNaN)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isNaN  ||  imaginary  ||  isNaN)  {  [BUGGY]      return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isNaN  ||  imaginary  ||  isNaN)  {	  if(isNaN    ||    isNaN    ||    imaginary)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	26	None	replace
38	[BUG]  [BUGGY]  if(isInfinite)  {  If(isNaN  ||  isInfinite)  {  [CE]  ';'  expected  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isInfinite)  {  If(isNaN  ||  isInfinite)  {  [BUGGY]      return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isInfinite)  {  If(isNaN  ||  isInfinite)  {	  if(isNaN    ||    isInfinite)    {    If(isNaN    ||    isInfinite)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
39	[BUG]  [BUGGY]  Real.add(real);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  Real.add(real);  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	Real.add(real);	  Real.assign(number);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
40	[BUG]  [BUGGY]  Real.assign(real,  imaginary,  ONE);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  Real.assign(real,  imaginary,  ONE);  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	Real.assign(real,  imaginary,  ONE);	  Real.assign(real,    imaginary);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
41	[BUG]  [BUGGY]  if(isNaN  ||  isNaN)  {  return  INF;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isNaN  ||  isNaN)  {  return  INF;  }  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isNaN  ||  isNaN)  {  return  INF;  }	  if(isNaN)    {    return    INF;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
42	[BUG]  [BUGGY]  Real  =  real.equals(divisor);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  Real  =  real.equals(divisor);  [BUGGY]      if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	Real  =  real.equals(divisor);	  Real    =    real.equals(imaginary);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
43	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isNaN  ==  false)  {  [BUGGY]      return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	add	if(isNaN  ==  false)  {	  if(isNaN    ||    isInfinite)    {    If(isNaN    ||    isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	7	5	replace
44	[BUG]  [BUGGY]  if(isNaN  ==  false)  {  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isNaN  ==  false)  {  [BUGGY]      return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isNaN  ==  false)  {	  if(isNaN    ||    isInfinite)    {    If(isNaN    ||    isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	7	5	replace
45	[BUG]  [BUGGY]  If(isNaN  ||  isInfinite)  {  [CE]  ';'  expected  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  If(isNaN  ||  isInfinite)  {  [BUGGY]      return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	If(isNaN  ||  isInfinite)  {	  if(isNaN    ||    isInfinite)    {    If(isNaN    ||    isInfinite)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
46	[BUG]  [BUGGY]  if(isNaN  ||  real  ||  imaginary)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isNaN  ||  real  ||  imaginary)  {  [BUGGY]      return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isNaN  ||  real  ||  imaginary)  {	  if(isNaN    ||    isNaN    ||    imaginary)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	26	None	replace
47	[BUG]  [BUGGY]  If(isNaN  ||  isNaN)  {  [CE]  ';'  expected  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  If(isNaN  ||  isNaN)  {  [BUGGY]      return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	If(isNaN  ||  isNaN)  {	  if(isNaN    ||    isNaN)    {    If(isNaN    ||    isNaN)    {    	non-compiled	[CE]  ';'  expected	11	None	replace
48	[BUG]  [BUGGY]  if(isNaN  ||  imaginary  ||  real)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  Complex  reciprocal()  {      [BUGGY]  if(isNaN  ||  imaginary  ||  real)  {  [BUGGY]      return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	if(isNaN  ||  imaginary  ||  real)  {	  if(isNaN    ||    imaginary)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	21	None	replace
