bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return NaN; [FE] java.lang.AssertionError: expected:<(NaN [CONTEXT] public Complex reciprocal() { if (isNaN) { return NaN; } if (real == 0.0 && imaginary == 0.0) { [BUGGY] return NaN; [BUGGY] } if (isInfinite) { return ZERO; } if (FastMath.abs(real) < FastMath.abs(imaginary)) { double q = real / imaginary; double scale = 1. / (real * q + imaginary); return createComplex(scale * q, -scale); [CLASS] Complex [METHOD] reciprocal [RETURN_TYPE] Complex  [VARIABLES] boolean isInfinite isNaN double addend c d denominator divisor imaginary q real scale long serialVersionUID Complex I INF NaN ONE ZERO addend divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	305	305	1	replace	
2	[BUG] [BUGGY] [FE] java.lang.AssertionError: expected:<(NaN [CONTEXT] public Complex reciprocal() { if (isNaN) { return NaN; } if (real == 0.0 && imaginary == 0.0) { [BUGGY] [BUGGY] return NaN; } if (isInfinite) { return ZERO; } if (FastMath.abs(real) < FastMath.abs(imaginary)) { double q = real / imaginary; double scale = 1. / (real * q + imaginary); return createComplex(scale * q, -scale); [CLASS] Complex [METHOD] reciprocal [RETURN_TYPE] Complex  [VARIABLES] boolean isInfinite isNaN double addend c d denominator divisor imaginary q real scale long serialVersionUID Complex I INF NaN ONE ZERO addend divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	305	305	1	add	
3	[BUG] [BUGGY] return "(" + real + ", " + imaginary + ")"; [FE] java.lang.AssertionError: expected:<(NaN [CONTEXT] public String toString() { [BUGGY] return "(" + real + ", " + imaginary + ")"; [BUGGY] } [CLASS] Complex [METHOD] toString [RETURN_TYPE] String  [VARIABLES] boolean isInfinite isNaN double addend c d denominator divisor expReal factor imaginary imaginary2 imaginaryPart innerPart nthPhi nthRootOfAbs q real real2 realPart scale slice subtrahend t x long serialVersionUID Complex I INF NaN ONE ZERO addend c divisor factor subtrahend x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	
4	[BUG] [BUGGY] [FE] java.lang.AssertionError: expected:<(NaN [CONTEXT] public String toString() { [BUGGY] [BUGGY] return "(" + real + ", " + imaginary + ")"; } [CLASS] Complex [METHOD] toString [RETURN_TYPE] String  [VARIABLES] boolean isInfinite isNaN double addend c d denominator divisor expReal factor imaginary imaginary2 imaginaryPart innerPart nthPhi nthRootOfAbs q real real2 realPart scale slice subtrahend t x long serialVersionUID Complex I INF NaN ONE ZERO addend c divisor factor subtrahend x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	add	
5	[BUG] [BUGGY] if (real == 0.0 && imaginary == 0.0) { [FE] java.lang.AssertionError: expected:<(NaN [CONTEXT] public Complex reciprocal() { if (isNaN) { return NaN; } [BUGGY] if (real == 0.0 && imaginary == 0.0) { [BUGGY] return NaN; } if (isInfinite) { return ZERO; } if (FastMath.abs(real) < FastMath.abs(imaginary)) { double q = real / imaginary; double scale = 1. / (real * q + imaginary); [CLASS] Complex [METHOD] reciprocal [RETURN_TYPE] Complex  [VARIABLES] boolean isInfinite isNaN double addend c d denominator divisor imaginary q real scale long serialVersionUID Complex I INF NaN ONE ZERO addend divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4472135954999579	304	304	1	replace	
6	[BUG] [BUGGY] [FE] java.lang.AssertionError: expected:<(NaN [CONTEXT] public Complex reciprocal() { if (isNaN) { return NaN; } [BUGGY] [BUGGY] if (real == 0.0 && imaginary == 0.0) { return NaN; } if (isInfinite) { return ZERO; } if (FastMath.abs(real) < FastMath.abs(imaginary)) { double q = real / imaginary; double scale = 1. / (real * q + imaginary); [CLASS] Complex [METHOD] reciprocal [RETURN_TYPE] Complex  [VARIABLES] boolean isInfinite isNaN double addend c d denominator divisor imaginary q real scale long serialVersionUID Complex I INF NaN ONE ZERO addend divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4472135954999579	304	304	1	add	
7	[BUG] [BUGGY] if (isNaN) { [FE] java.lang.AssertionError: expected:<(NaN [CONTEXT] public Complex reciprocal() { [BUGGY] if (isNaN) { [BUGGY] return NaN; } if (real == 0.0 && imaginary == 0.0) { return NaN; } if (isInfinite) { return ZERO; } [CLASS] Complex [METHOD] reciprocal [RETURN_TYPE] Complex  [VARIABLES] boolean isInfinite isNaN double addend c d denominator divisor imaginary q real scale long serialVersionUID Complex I INF NaN ONE ZERO addend divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	replace	
8	[BUG] [BUGGY] [FE] java.lang.AssertionError: expected:<(NaN [CONTEXT] public Complex reciprocal() { [BUGGY] [BUGGY] if (isNaN) { return NaN; } if (real == 0.0 && imaginary == 0.0) { return NaN; } if (isInfinite) { return ZERO; } [CLASS] Complex [METHOD] reciprocal [RETURN_TYPE] Complex  [VARIABLES] boolean isInfinite isNaN double addend c d denominator divisor imaginary q real scale long serialVersionUID Complex I INF NaN ONE ZERO addend divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.4082482904638631	300	300	1	add	
9	[BUG] [BUGGY] return (real == c.real) && (imaginary == c.imaginary); [FE] java.lang.AssertionError: expected:<(NaN [CONTEXT] public boolean equals(Object other) { if (this == other) { return true; } if (other instanceof Complex){ Complex c = (Complex)other; if (c.isNaN) { return isNaN; } else { [BUGGY] return (real == c.real) && (imaginary == c.imaginary); [BUGGY] } } return false; } [CLASS] Complex [METHOD] equals [RETURN_TYPE] boolean  Object other [VARIABLES] Object other boolean isInfinite isNaN double addend c d denominator divisor imaginary q real scale long serialVersionUID Complex I INF NaN ONE ZERO addend c divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	
10	[BUG] [BUGGY] [FE] java.lang.AssertionError: expected:<(NaN [CONTEXT] public boolean equals(Object other) { if (this == other) { return true; } if (other instanceof Complex){ Complex c = (Complex)other; if (c.isNaN) { return isNaN; } else { [BUGGY] [BUGGY] return (real == c.real) && (imaginary == c.imaginary); } } return false; } [CLASS] Complex [METHOD] equals [RETURN_TYPE] boolean  Object other [VARIABLES] Object other boolean isInfinite isNaN double addend c d denominator divisor imaginary q real scale long serialVersionUID Complex I INF NaN ONE ZERO addend c divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	add	
11	[BUG] [BUGGY] Complex c = (Complex)other; [FE] java.lang.AssertionError: expected:<(NaN [CONTEXT] public boolean equals(Object other) { if (this == other) { return true; } if (other instanceof Complex){ [BUGGY] Complex c = (Complex)other; [BUGGY] if (c.isNaN) { return isNaN; } else { return (real == c.real) && (imaginary == c.imaginary); } } return false; } [CLASS] Complex [METHOD] equals [RETURN_TYPE] boolean  Object other [VARIABLES] Object other boolean isInfinite isNaN double addend c d denominator divisor imaginary q real scale long serialVersionUID Complex I INF NaN ONE ZERO addend c divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	344	344	1	replace	
12	[BUG] [BUGGY] [FE] java.lang.AssertionError: expected:<(NaN [CONTEXT] public boolean equals(Object other) { if (this == other) { return true; } if (other instanceof Complex){ [BUGGY] [BUGGY] Complex c = (Complex)other; if (c.isNaN) { return isNaN; } else { return (real == c.real) && (imaginary == c.imaginary); } } return false; } [CLASS] Complex [METHOD] equals [RETURN_TYPE] boolean  Object other [VARIABLES] Object other boolean isInfinite isNaN double addend c d denominator divisor imaginary q real scale long serialVersionUID Complex I INF NaN ONE ZERO addend c divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	344	344	1	add	
13	[BUG] [BUGGY] if (c.isNaN) { [FE] java.lang.AssertionError: expected:<(NaN [CONTEXT] public boolean equals(Object other) { if (this == other) { return true; } if (other instanceof Complex){ Complex c = (Complex)other; [BUGGY] if (c.isNaN) { [BUGGY] return isNaN; } else { return (real == c.real) && (imaginary == c.imaginary); } } return false; } [CLASS] Complex [METHOD] equals [RETURN_TYPE] boolean  Object other [VARIABLES] Object other boolean isInfinite isNaN double addend c d denominator divisor imaginary q real scale long serialVersionUID Complex I INF NaN ONE ZERO addend c divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	
14	[BUG] [BUGGY] [FE] java.lang.AssertionError: expected:<(NaN [CONTEXT] public boolean equals(Object other) { if (this == other) { return true; } if (other instanceof Complex){ Complex c = (Complex)other; [BUGGY] [BUGGY] if (c.isNaN) { return isNaN; } else { return (real == c.real) && (imaginary == c.imaginary); } } return false; } [CLASS] Complex [METHOD] equals [RETURN_TYPE] boolean  Object other [VARIABLES] Object other boolean isInfinite isNaN double addend c d denominator divisor imaginary q real scale long serialVersionUID Complex I INF NaN ONE ZERO addend c divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	
15	[BUG] [BUGGY] if (other instanceof Complex){ [FE] java.lang.AssertionError: expected:<(NaN [CONTEXT] public boolean equals(Object other) { if (this == other) { return true; } [BUGGY] if (other instanceof Complex){ [BUGGY] Complex c = (Complex)other; if (c.isNaN) { return isNaN; } else { return (real == c.real) && (imaginary == c.imaginary); } } return false; } [CLASS] Complex [METHOD] equals [RETURN_TYPE] boolean  Object other [VARIABLES] Object other boolean isInfinite isNaN double addend c d denominator divisor imaginary q real scale long serialVersionUID Complex I INF NaN ONE ZERO addend c divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	
16	[BUG] [BUGGY] [FE] java.lang.AssertionError: expected:<(NaN [CONTEXT] public boolean equals(Object other) { if (this == other) { return true; } [BUGGY] [BUGGY] if (other instanceof Complex){ Complex c = (Complex)other; if (c.isNaN) { return isNaN; } else { return (real == c.real) && (imaginary == c.imaginary); } } return false; } [CLASS] Complex [METHOD] equals [RETURN_TYPE] boolean  Object other [VARIABLES] Object other boolean isInfinite isNaN double addend c d denominator divisor imaginary q real scale long serialVersionUID Complex I INF NaN ONE ZERO addend c divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	
