projects/Time2/src/main/java/org/joda/time/Partial.java429if(fieldType==null){
projects/Time2/src/main/java/org/joda/time/Partial.java429if(fieldType==null||value==0){
projects/Time2/src/main/java/org/joda/time/Partial.java429
projects/Time2/src/main/java/org/joda/time/Partial.java429int[]newValues=getValues();
projects/Time2/src/main/java/org/joda/time/Partial.java429int[]newValues=iPartial.getValues();
projects/Time2/src/main/java/org/joda/time/Partial.java429int[]newValues=iTypes.get(value);
projects/Time2/src/main/java/org/joda/time/Partial.java429Partialparser=getPartial();
projects/Time2/src/main/java/org/joda/time/Partial.java429Partialparams=getParameters();
projects/Time2/src/main/java/org/joda/time/Partial.java429if(fieldType==null||value<0){
projects/Time2/src/main/java/org/joda/time/Partial.java429if(value==0){thrownewIllegalArgumentException("Thefieldtypemustnotbenull.");}
projects/Time2/src/main/java/org/joda/time/Partial.java429if(value==0){thrownewIllegalArgumentException("");}
projects/Time2/src/main/java/org/joda/time/Partial.java429Partial<?>fieldType=fieldType.getField(iChronology).withValue(value);
projects/Time2/src/main/java/org/joda/time/Partial.java429if(fieldType==null||value<=0){
projects/Time2/src/main/java/org/joda/time/Partial.java429Partialparser=getPartialParser();
projects/Time2/src/main/java/org/joda/time/Partial.java429int[]newValues=fieldType.getValues();
projects/Time2/src/main/java/org/joda/time/Partial.java429int[]newValues=getValues(value);
projects/Time2/src/main/java/org/joda/time/Partial.java429While(value<=0){thrownewIllegalArgumentException("");}
projects/Time2/src/main/java/org/joda/time/Partial.java429aughtExceptionHandler.throwAsIgnoredException("");
projects/Time2/src/main/java/org/joda/time/Partial.java429tries.add(newTypedField(fieldType,value));
projects/Time2/src/main/java/org/joda/time/Partial.java429Partialparams=getParameter(value);
projects/Time2/src/main/java/org/joda/time/Partial.java429int[]newValues=iTypes.get(fieldType);
projects/Time2/src/main/java/org/joda/time/Partial.java429int[]newValues=iTypes.get(fieldType,value);
projects/Time2/src/main/java/org/joda/time/Partial.java429Partial<?>fieldType=fieldType.getField(iChronology).withUTC();
projects/Time2/src/main/java/org/joda/time/Partial.java429Partial<?>fieldType=fieldType.getField(iChronology).withLocalMillis(value);
projects/Time2/src/main/java/org/joda/time/Partial.java429int[]newValues=iTypes.toArray(newint[0]);
projects/Time2/src/main/java/org/joda/time/Partial.java429Partialparams=getParameters(value);
projects/Time2/src/main/java/org/joda/time/Partial.java429Partial<?>fieldType=fieldType.getField(iChronology).with(newValues,value);
projects/Time2/src/main/java/org/joda/time/Partial.java429nested.add(newTypedField(fieldType,value));
projects/Time2/src/main/java/org/joda/time/Partial.java429nested=newLinkedList<DateTimeFieldType>();
projects/Time2/src/main/java/org/joda/time/Partial.java429Partialparser=getPartial().withValue(value);
projects/Time2/src/main/java/org/joda/time/Partial.java429safeMultiply(fieldType,value){thrownewIllegalArgumentException("");}
projects/Time2/src/main/java/org/joda/time/Partial.java429safeMultiply(fieldType.getValue(),value){thrownewIllegalArgumentException("");}
projects/Time2/src/main/java/org/joda/time/Partial.java429int[]newValues=iTypes.values();
projects/Time2/src/main/java/org/joda/time/Partial.java429[Delete]
projects/Time2/src/main/java/org/joda/time/Partial.java429aughtInvalidPartialException("");
projects/Time2/src/main/java/org/joda/time/Partial.java429if(value==0||fieldType==null){
projects/Time2/src/main/java/org/joda/time/Partial.java429int[]newValues=iTypes.getValues();
projects/Time2/src/main/java/org/joda/time/Partial.java429nested=newArrayList<DateTimeFieldType>();
projects/Time2/src/main/java/org/joda/time/Partial.java429int[]newValues=getValues(fieldType);
projects/Time2/src/main/java/org/joda/time/Partial.java429Partial<?>fieldType=fieldType.getField(iChronology).with(iValues,value);
projects/Time2/src/main/java/org/joda/time/Partial.java429Partial<?>fieldType=iChronology.getField(iChronology).with(newValues,value);
projects/Time2/src/main/java/org/joda/time/Partial.java429Partialparams=getParameter(fieldType);
projects/Time2/src/main/java/org/joda/time/Partial.java429Partialparams=getParameters(fieldType);
projects/Time2/src/main/java/org/joda/time/Partial.java429iPartial.setValue(value);
projects/Time2/src/main/java/org/joda/time/Partial.java429int[]newValues=iTypes.get(fieldType,index);
projects/Time2/src/main/java/org/joda/time/Partial.java429int[]newValues=iTypes.get(fieldType,values);
projects/Time2/src/main/java/org/joda/time/Partial.java429Partial<?>fieldType=fieldType.getField(iChronology).withUTF8();
projects/Time2/src/main/java/org/joda/time/Partial.java429Partialparser=getPartial().withField(fieldType,value);
projects/Time2/src/main/java/org/joda/time/Partial.java429Partialparser=getPartial().withField(fieldType);
projects/Time2/src/main/java/org/joda/time/Partial.java429int[]newValues=iTypes.toArray(newint[1]);
projects/Time2/src/main/java/org/joda/time/Partial.java429int[]newValues=iTypes.toArray();
projects/Time2/src/main/java/org/joda/time/Partial.java429if(value==0){tries.add(newTypedField(fieldType,value));}else{thrownewIllegalArgumentException("");}
projects/Time2/src/main/java/org/joda/time/Partial.java429if(value<0){tries.add(newTypedField(fieldType,value));}else{thrownewIllegalArgumentException("");}
projects/Time2/src/main/java/org/joda/time/Partial.java429if(iTypes==null){aughtExceptionHandler.throwAsIgnoredException("");}
projects/Time2/src/main/java/org/joda/time/Partial.java429While(value<0){thrownewIllegalArgumentException("");}
projects/Time2/src/main/java/org/joda/time/Partial.java429Partialparams=getParameter(iChronology);
projects/Time2/src/main/java/org/joda/time/Partial.java429Partial<?>fieldType=fieldType.getField(iChronology).withLocalMillis(value,newValues);
projects/Time2/src/main/java/org/joda/time/Partial.java429Partialparser=getPartialParser(value);
projects/Time2/src/main/java/org/joda/time/Partial.java429nested.add(newTypedField(fieldType,value),iValues);
projects/Time2/src/main/java/org/joda/time/Partial.java429Partialparser=getPartialParser(fieldType);
projects/Time2/src/main/java/org/joda/time/Partial.java429Partialparams=getParameter(fieldType,value);
projects/Time2/src/main/java/org/joda/time/Partial.java429Partial<?>fieldType=fieldType.getDurationType().getField(iChronology).withLocalMillis(value);
projects/Time2/src/main/java/org/joda/time/Partial.java429if(value==0){aughtExceptionHandler.throwAsIgnoredException("");}
projects/Time2/src/main/java/org/joda/time/Partial.java429Partial<?>fieldType=fieldType.getField(iChronology).with(newValues,value+1);
projects/Time2/src/main/java/org/joda/time/Partial.java429int[]newValues=iTypes.get(fieldType,value-1);
projects/Time2/src/main/java/org/joda/time/Partial.java429Partial<?>fieldType=fieldType.getField(iChronology).setValue(value);
projects/Time2/src/main/java/org/joda/time/Partial.java429int[]newValues=iTypes.toArray(newint[value]);
projects/Time2/src/main/java/org/joda/time/Partial.java429tries.add(newTypedField(fieldType,value),iValues);
projects/Time2/src/main/java/org/joda/time/Partial.java429int[]newValues=getValues(fieldType,value);
projects/Time2/src/main/java/org/joda/time/Partial.java429safely(fieldType,value){thrownewIllegalArgumentException("");}
projects/Time2/src/main/java/org/joda/time/Partial.java429Partialparams=getParameterType(value);
projects/Time2/src/main/java/org/joda/time/Partial.java429int[]newValues=iTypes.get(fieldType,value+1);
projects/Time2/src/main/java/org/joda/time/Partial.java429if(value<0||fieldType==null){
projects/Time2/src/main/java/org/joda/time/Partial.java429int[]values=getValues();
projects/Time2/src/main/java/org/joda/time/Partial.java429if(value==0){tries.add(newTypedField(fieldType,value));}
projects/Time2/src/main/java/org/joda/time/Partial.java429if(value<0){thrownewIllegalArgumentException("");}
projects/Time2/src/main/java/org/joda/time/Partial.java429int[]newValues=fieldType.values();
projects/Time2/src/main/java/org/joda/time/Partial.java429Partial<?>fieldType=fieldType.getField(chronology).withLocalMillis(value);
