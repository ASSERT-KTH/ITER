bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
17	[BUG] [BUGGY] iChronology = chronology; [FE] IllegalArgumentException [CONTEXT] public Partial(DateTimeFieldType type, int value, Chronology chronology) { super(); chronology = DateTimeUtils.getChronology(chronology).withUTC(); [BUGGY] iChronology = chronology; [BUGGY] if (type == null) { throw new IllegalArgumentException("The field type must not be null"); } iTypes = new DateTimeFieldType[] {type}; iValues = new int[] {value}; chronology.validate(this, iValues); } [CLASS] Partial Property [METHOD] <init> [RETURN_TYPE] Chronology)  DateTimeFieldType type int value Chronology chronology [VARIABLES] boolean DateTimeFieldType[] iTypes Partial iPartial DateTimeFieldType type int[] iValues Chronology chrono chronology iChronology long serialVersionUID DateTimeFormatter[] iFormatter int iFieldIndex value  	projects/Time2/src/main/java/org/joda/time/Partial.java	0.2886751345948129	155	155	1	replace	
18	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] public Partial(DateTimeFieldType type, int value, Chronology chronology) { super(); chronology = DateTimeUtils.getChronology(chronology).withUTC(); [BUGGY] [BUGGY] iChronology = chronology; if (type == null) { throw new IllegalArgumentException("The field type must not be null"); } iTypes = new DateTimeFieldType[] {type}; iValues = new int[] {value}; chronology.validate(this, iValues); } [CLASS] Partial Property [METHOD] <init> [RETURN_TYPE] Chronology)  DateTimeFieldType type int value Chronology chronology [VARIABLES] boolean DateTimeFieldType[] iTypes Partial iPartial DateTimeFieldType type int[] iValues Chronology chrono chronology iChronology long serialVersionUID DateTimeFormatter[] iFormatter int iFieldIndex value  	projects/Time2/src/main/java/org/joda/time/Partial.java	0.2886751345948129	155	155	1	add	
