compilation error,707,replace,[CE] cannot assign a value to final variable iChrono, Chronology  chrono  =(instant  ==  null)?  instant.getChronology()  :  instant.getChronology();  ,iChrono =(chrono == null)? instant.getChronology() : DateTimeUtils.getInstantChronology(instant);
compilation error,702,replace,[CE] cannot find symbol, if(instant  ==  null  ||  instant.getLocalMillis()!=  text.length())  {  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  ,if(instant == null || instant.getLocalMillis() < text.length()) {
compilation error,707,add,[CE] incomparable types: long and <null>, ,Chronology  chrono  =(instant  ==  null)?  instant.getChronology()  :  instant.getChronology();  instantMillis =(instantMillis == null)? instant.getMillis() : instant.getMillis();
compilation error,710,add,[CE] variable instantLocal is already defined in method parseInto(ReadWritableInstant,String,int), ,    instantLocal  =  instantMillis  +  chrono.getZone().getOffset(instantLocal);  long instantLocal = instantMillis + chrono.getZone().getOffset(instantLocal);
compilation error,708,replace,[CE] cannot find symbol, long  instantLocal  =  instantMillis  +  chrono.getZone().setUTC(instantMillis);  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException( "Instant  must  not  be  null ");  }  long  instantMillis  =  instant.getMillis();  Chronology  chrono  =  instant.getChronology();  ,long instantLocal = instantMillis + chrono.getZone().setUTC(instantMillis, iLocale);
compilation error,710,add,[CE] variable year is already defined in method parseInto(ReadWritableInstant,String,int), ,    int  year  =  chrono.year().get(instantLocal);  int year = chrono.year().get(instantLocal);
compilation error,707,replace,[CE] bad operand types for binary operator '<', Chronology  chrono  =(instant  ==  null)?  instant.getChronology()  :  DateTimeUtils.getInstantChronology(instant);  ,Chronology chrono =(instant < null)? instant.getChronology() : DateTimeUtils.getInstantChronology(instant);
compilation error,706,replace,[CE] cannot find symbol, long  instantMillis  =  instant.getMillis()  -  1;  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException( "Instant  must  not  be  null ");  }  ,long instantMillis = instant.getInstantMillis();
compilation error,710,replace,[CE] cannot find symbol defaultYear,   int  parsedYear  =  chrono.year().get(instantLocal);  ,int parsedYear = chrono.monthOfYear().get(instantLocal);
compilation error,710,replace,[CE] cannot find symbol defaultYear,   int  pivotYear  =  chrono.year().get(instantLocal);  ,int parsedLocal = chrono.monthOfYear().get(instantLocal);
increase failing tests,708,replace, [FE] AssertionFailedError testParseInto_monthOnly_baseStartYear, long  instantLocal  =  instantMillis  /  chrono.getZone().getOffset(instantMillis);  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException( "Instant  must  not  be  null ");  }  long  instantMillis  =  instant.getMillis();  Chronology  chrono  =  instant.getChronology();  ,long instantLocal = instantMillis * chrono.getZone().getOffset(instantMillis);
compilation error,708,replace,[CE] cannot find symbol date, long  instantLocal  =  instantMillis  /  chrono.getZone().getOffset(instantMillis);  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException( "Instant  must  not  be  null ");  }  long  instantMillis  =  instant.getMillis();  Chronology  chrono  =  instant.getChronology();  ,long instantLocal = instantMillis / date.getZone().getOffset(instantMillis);
compilation error,204,replace,[CE] cannot find symbol, return  this.iLocale;  ,return Locale.getLocale(this.iLocale);
compilation error,710,replace,[CE] cannot find symbol,   int  iLocal  =  chrono.monthOfYear().get(instantLocal);  ,int iLocal = chrono.monthOfMonth().get(instantLocal);
increase failing tests,706,replace, [FE] ComparisonFailure testPrint_bufferMethods, long  instantMillis  =  instant.getMillis()  -  position;  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException( "Instant  must  not  be  null ");  }  ,long instantMillis = instant.getMillis() - position + 1;
compilation error,706,replace,[CE] bad operand types for binary operator '-', long  instantMillis  =  instant.getMillis()  -  position;  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException( "Instant  must  not  be  null ");  }  ,long instantMillis = instant.getMillis() - text;
compilation error,708,replace,[CE] cannot find symbol,   chrono  =  selectChronology(chrono);  ,chrono = iParser.getChronology(chrono);
compilation error,708,add,[CE] cannot find symbol, ,    chrono  =  selectChronology(chrono);  instantMillis = chrono.getZone().get(instantMillis);
compilation error,710,add,[CE] variable pivotYear is already defined in method parseInto(ReadWritableInstant,String,int), ,    int  pivotYear  =  chrono.year().get(instantLocal);  int pivotYear = chrono.monthOfYear().get(instantLocal);
compilation error,708,replace,[CE] variable parser is already defined in method parseInto(ReadWritableInstant,String,int),   DateTimeParser  parser  =  requireParser();  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException( "Instant  must  not  be  null ");  }  long  instantMillis  =  instant.getMillis();  Chronology  chrono  =  instant.getChronology();  ,DateTimeParser parser = iParser();
compilation error,702,replace,[CE] cannot find symbol, if(instant  ==  null  ||  instant.getMillis()!=  text.length())  {  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  ,if(instant == null || parser.getMillis()!= text.length()) {
compilation error,701,replace,[CE] cannot find symbol iParserBucket, DateTimeParser  parser  =  getParser();  ,DateTimeParser parser = iParserBucket.parseInto(instant, text, position);
compilation error,190,replace,[CE] cannot find symbol, if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  ,if(locale == getLocale() || locale!= null && locale.isSubtype(getLocale())) {
compilation error,710,replace,[CE] cannot find symbol defaultYear,   int  year  =  chrono.year().get(instantLocal);  ,int monthOfYear = chrono.monthOfYear().get(instantLocal);
compilation error,710,replace,[CE] cannot find symbol defaultYear,   instantLocal  =  instantMillis  +  chrono.getZone().getOffset(instantLocal);  ,instantLocal = instantLocal + chrono.getZone().getOffset(instantMillis);
compilation error,701,add,[CE] cannot find symbol, ,DateTimeParser  parser  =  getParser();  DateTimeParser printer = parser.withChronology(text, position);
compilation error,707,replace,[CE] bad operand types for binary operator '<', Chronology  chrono  =(instant  ==  null)?  instant.getChronology()  :  instant.getChronology();  ,Chronology chrono =(instant < null)? instant.getChronology() : instant.getChronology();
compilation error,707,replace,[CE] cannot find symbol chrono,   instantMillis  +=  DateTimeUtils.currentTimeMillis();  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException( "Instant  must  not  be  null ");  }  long  instantMillis  =  instant.getMillis();  ,instantMillis -= DateTimeUtils.currentTimeMillis();
compilation error,710,replace,[CE] cannot find symbol defaultYear,   int  pivotYear  =  chrono.year().get(instantLocal);  ,int pivotYear = chrono.monthOfYear().get(instantLocal);
compilation error,710,replace,[CE] cannot find symbol iLocal,   int  iLocal  =  chrono.monthOfYear().get(instantLocal);  ,if(iLocal instanceof DateTimeParser) { throw new IllegalArgumentException(""); }
compilation error,710,replace,[CE] cannot find symbol,   int  pivotYear  =  chrono.year().get(instantLocal);  ,int parsedYear = chrono.months().get(instantLocal);
compilation error,708,replace,[CE] cannot find symbol instantLocal,   chrono  =  selectChronology(chrono);  ,chrono =(chrono!= null)? chrono : selectChronology(chrono);
compilation error,702,replace,[CE] cannot find symbol, if(instant  ==  null  ||  instant.getLocalMillis()!=  text.length())  {  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  ,if(instant == null || instant.getLocalMillis() == text.length()) {
compilation error,204,replace,[CE] cannot find symbol locale, return  this.iLocale;  ,return(locale == null)? Locale.getDefault() : this.iLocale;
compilation error,708,replace,[CE] no suitable method found for getOffset(long,Chronology), long  instantLocal  =  instantMillis  /  chrono.getZone().getOffset(instantMillis);  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException( "Instant  must  not  be  null ");  }  long  instantMillis  =  instant.getMillis();  Chronology  chrono  =  instant.getChronology();  ,long instantLocal = instantMillis / chrono.getZone().getOffset(instantMillis, chrono);
compilation error,710,replace,[CE] cannot find symbol defaultYear,   instantLocal  =  instantMillis  +  chrono.getZone().getOffset(instantLocal);  ,instantLocal = instantLocal + chrono.getZone().getOffset(instantLocal);
compilation error,710,add,[CE] cannot find symbol, ,    int  year  =  chrono.year().get(instantLocal);  int month = chrono.month().get(instantLocal);
compilation error,710,replace,[CE] cannot find symbol,   int  parsedYear  =  chrono.year().get(instantLocal);  ,int parsedYear = chrono.years().get(instantLocal);
compilation error,707,replace,[CE] cannot find symbol chrono, Chronology  chrono  =(instant  ==  null)?  instant.getChronology()  :  instant.getChronology();  ,instantMillis = DateTimeUtils.getInstantMillis(instant);
compilation error,707,add,[CE] ';' expected, ,Chronology  chrono  =(instant  ==  null)?  instant.getChronology()  :  instant.getChronology();  DateTimeParser parser.parseInto(bucket, text, position);
compilation error,710,replace,[CE] cannot find symbol bucket,   int  iLocal  =  chrono.monthOfYear().get(instantLocal);  ,iParser.parseInto(bucket, text, position);
compilation error,708,replace,[CE] cannot find symbol instantLocal,   instantMillis  =  DateTimeUtils.currentTimeMillis();  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException( "Instant  must  not  be  null ");  }  long  instantMillis  =  instant.getMillis();  Chronology  chrono  =  instant.getChronology();  ,instantMillis = DateTimeUtils.getInstantMillis(instant);
compilation error,701,add,[CE] variable parser is already defined in method parseInto(ReadWritableInstant,String,int), ,DateTimeParser  parser  =  getParser();  DateTimeParser parser = requireParser();
increase failing tests,709,replace, [FE] org.joda.time.IllegalFieldValueException: Cannot parse "2 29": Value 29 for dayOfMonth must be in the range [1 testParseInto_monthDay_feb29_newYork_startOfYear,   instantLocal  =  instantMillis  +  chrono.getZone().getOffset(instantLocal);  ,instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);
compilation error,707,replace,[CE] cannot find symbol,   instantMillis  =  DateTimeUtils.currentTimeMillis();  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException( "Instant  must  not  be  null ");  }  long  instantMillis  =  instant.getMillis();  ,instantMillis = DateTimeUtils.readInstantMillis(instant);
compilation error,710,replace,[CE] cannot find symbol,   int  pivotYear  =  chrono.year().get(instantLocal);  ,int pivotYear = chrono.months().get(instantLocal);
compilation error,702,replace,[CE] bad operand types for binary operator '<', if(instant  ==  null  ||  instant.getMillis()!=  text.length())  {  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  ,if(instant < null || instant.getMillis()!= text.length()) {
compilation error,710,replace,[CE] cannot find symbol,   int  iLocal  =  chrono.monthOfYear().get(instantLocal);  ,int iLocal = chrono.months().get(instantLocal);
compilation error,708,add,[CE] cannot find symbol iChronology, ,    chrono  =  selectChronology(chrono);  iChronology = chrono.withUTC();
compilation error,708,replace,[CE] cannot find symbol, long  instantLocal  =  instantMillis  +  chrono.getZone().setUTC(instantMillis);  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException( "Instant  must  not  be  null ");  }  long  instantMillis  =  instant.getMillis();  Chronology  chrono  =  instant.getChronology();  ,long instantLocal = instantMillis - chrono.getZone().setUTC(instantMillis);
compilation error,710,replace,[CE] method getChronology in class DateTimeUtils cannot be applied to given types;,   chrono  =  selectChronology(chrono);  ,chrono =(chrono!= null? chrono : DateTimeUtils.getChronology(instant, chrono));
compilation error,710,replace,[CE] cannot find symbol defaultYear,   int  year  =  chrono.year().get(instantLocal);  ,int year = chrono.year().get(instantLocal - 1);
compilation error,708,replace,[CE] variable parser is already defined in method parseInto(ReadWritableInstant,String,int),   DateTimeParser  parser  =  requireParser();  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException( "Instant  must  not  be  null ");  }  long  instantMillis  =  instant.getMillis();  Chronology  chrono  =  instant.getChronology();  ,DateTimeParser parser = getParser();
compilation error,707,replace,[CE] incomparable types: long and <null>, Chronology  chrono  =(instant  ==  null)?  instant.getChronology()  :  DateTimeUtils.getInstantChronology(instant);  ,Chronology chrono =(instantMillis == null)? instant.getChronology() : DateTimeUtils.getInstantChronology(instant);
compilation error,710,replace,[CE] cannot find symbol defaultYear,   int  year  =  chrono.year().get(instantLocal);  ,int iMonthOfYear = chrono.monthOfYear().get(instantLocal);
compilation error,190,replace,[CE] cannot find symbol, if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  ,if(locale == getLocale() || locale!= null && locale.startsWith(getLocale())) {
compilation error,710,add,[CE] variable defaultYear is already defined in method parseInto(ReadWritableInstant,String,int), ,    instantLocal  =  instantMillis  +  chrono.getZone().getOffset(instantLocal);  long defaultYear = chrono.year().get(instantLocal);
compilation error,710,add,[CE] variable pivotYear is already defined in method parseInto(ReadWritableInstant,String,int), ,    int  pivotYear  =  chrono.year().get(instantLocal);  int pivotYear = chrono.monthOfYear().get(pivotYear);
compilation error,707,replace,[CE] incomparable types: long and <null>, Chronology  chrono  =(instant  ==  null)?  instant.getChronology()  :  instant.getChronology();  ,Chronology chrono =(instantMillis == null)? instant.getChronology() : instant.getChronology();
increase failing tests,706,replace, [FE] AssertionFailedError testParseInto_monthOnly_baseStartYear, long  instantMillis  =  instant.getMillis()  -  1;  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException( "Instant  must  not  be  null ");  }  ,long instantMillis = instant.getMillis() / 2;
compilation error,708,replace,[CE] method currentTimeMillis in class DateTimeUtils cannot be applied to given types;,   instantMillis  =  DateTimeUtils.currentTimeMillis();  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException( "Instant  must  not  be  null ");  }  long  instantMillis  =  instant.getMillis();  Chronology  chrono  =  instant.getChronology();  ,instantMillis = DateTimeUtils.currentTimeMillis(instantMillis);
compilation error,702,replace,[CE] ')' expected, if(instant  ==  null  ||  instant.getMillis()!=  text.length())  {  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  ,if(instant == null || instant.getMillis()!= text, position) {
compilation error,204,replace,[CE] cannot find symbol locale, return  this.iLocale;  ,return(locale == null? Locale.getDefault() : locale);
compilation error,706,replace,[CE] cannot find symbol, long  instantMillis  =  instant.getMillis()  -  1;  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException( "Instant  must  not  be  null ");  }  ,long instantMillis = instant.getLocalMillis();
compilation error,710,add,[CE] variable pivotYear is already defined in method parseInto(ReadWritableInstant,String,int), ,    int  pivotYear  =  chrono.year().get(instantLocal);  int pivotYear =(iPivotYear == 0)? pivotYear : chrono.getYear(iPivotYear);
compilation error,708,replace,[CE] cannot find symbol, long  instantLocal  =  instantMillis  +  chrono.getZone().setUTC(instantMillis);  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException( "Instant  must  not  be  null ");  }  long  instantMillis  =  instant.getMillis();  Chronology  chrono  =  instant.getChronology();  ,long instantLocal = instantMillis + chrono.getZone().getUTC();
compilation error,710,replace,[CE] cannot find symbol,   chrono  =  selectChronology(chrono);  ,chrono = selectMillis(chrono);
compilation error,701,add,[CE] variable parser is already defined in method parseInto(ReadWritableInstant,String,int), ,DateTimeParser  parser  =  getParser();  DateTimeParser parser =(DateTimeParser)parser.parseInto(instant, text, position, iLocale);
compilation error,710,add,[CE] variable year is already defined in method parseInto(ReadWritableInstant,String,int), ,    int  year  =  chrono.year().get(instantLocal);  long year = chrono.year().get(instantLocal);
compilation error,708,add,[CE] cannot find symbol, ,    chrono  =  selectChronology(chrono);  chrono = selectMillis(instantMillis);
compilation error,701,replace,[CE] cannot find symbol, DateTimeParser  parser  =  getParser();  ,DateTimeParser parser = requiresParser();
compilation error,707,replace,[CE] method currentTimeMillis in class DateTimeUtils cannot be applied to given types;,   instantMillis  +=  DateTimeUtils.currentTimeMillis();  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException( "Instant  must  not  be  null ");  }  long  instantMillis  =  instant.getMillis();  ,instantMillis += DateTimeUtils.currentTimeMillis(instantMillis);
compilation error,708,replace,[CE] variable parser is already defined in method parseInto(ReadWritableInstant,String,int),   DateTimeParser  parser  =  requireParser();  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException( "Instant  must  not  be  null ");  }  long  instantMillis  =  instant.getMillis();  Chronology  chrono  =  instant.getChronology();  ,DateTimeParser parser = requiresParser();
compilation error,707,replace,[CE] cannot find symbol bucket, Chronology  chrono  =(instant  ==  null)?  instant.getChronology()  :  instant.getChronology();  ,instant = parser.parseInto(bucket, text, position);
compilation error,710,replace,[CE] cannot find symbol,   int  pivotYear  =  chrono.year().get(instantLocal);  ,int pivotYear = chrono.monthYear().get(instantLocal);
compilation error,708,replace,[CE] ')' expected,   chrono  =  selectChronology(chrono);  ,chrono =(chrono!= null? chrono : selectChronology(chrono);
compilation error,707,add,[CE] variable chrono is already defined in method parseInto(ReadWritableInstant,String,int), ,Chronology  chrono  =(instant  ==  null)?  instant.getChronology()  :  instant.getChronology();  instantMillis = DateTimeUtils.currentTimeMillis();
compilation error,707,replace,[CE] method currentTimeMillis in class DateTimeUtils cannot be applied to given types;,   instantMillis  =  DateTimeUtils.currentTimeMillis();  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException( "Instant  must  not  be  null ");  }  long  instantMillis  =  instant.getMillis();  ,instantMillis = DateTimeUtils.currentTimeMillis(instantMillis);
compilation error,710,replace,[CE] cannot find symbol defaultYear,   instantLocal  =  instantMillis  +  chrono.getZone().getOffset(instantLocal);  ,instantLocal = instantLocal + chrono.getZone().getOffsetFromLocal(instantMillis);
compilation error,710,replace,[CE] cannot find symbol defaultYear,   int  iLocal  =  chrono.monthOfYear().get(instantLocal);  ,int iLocal = chrono.monthOfYear().get(instantLocal + 1);
increase failing tests,709,replace, [FE] org.joda.time.IllegalFieldValueException: Cannot parse "2 29": Value 29 for dayOfMonth must be in the range [1 testParseInto_monthDay_feb29_newYork_startOfYear,   instantLocal  =  instantMillis  +  chrono.getZone().getOffset(instantLocal);  ,instantLocal = instantMillis + chrono.getZone().getOffsetFromLocal(instantLocal);
compilation error,707,replace,[CE] cannot find symbol instantChronology, Chronology  chrono  =(instant  ==  null)?  instant.getChronology()  :  DateTimeUtils.getInstantChronology(instant);  ,Chronology chrono =(instantChronology == null)? instant.getChronology() : DateTimeUtils.getInstantChronology(instant);
compilation error,702,replace,[CE] bad operand types for binary operator '<', if(instant  ==  null  ||  instant.getLocalMillis()!=  text.length())  {  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  ,if(instant < null || instant.getLocalMillis()!= text.length()) {
compilation error,710,add,[CE] cannot find symbol bucket, ,    instantLocal  =  instantMillis  +  chrono.getZone().getOffset(instantLocal);  instant.setMillis(bucket.computeMillis(false, text));
compilation error,710,replace,[CE] cannot find symbol,   int  parsedYear  =  chrono.year().get(instantLocal);  ,int parsedYear = chrono.monthyear().get(instantLocal);
compilation error,710,replace,[CE] cannot find symbol defaultYear,   int  year  =  chrono.year().get(instantLocal);  ,int iLocal = chrono.dayOfMonth().get(instantLocal);
increase failing tests,706,replace, [FE] ComparisonFailure testPrint_bufferMethods, long  instantMillis  =  instant.getMillis()  -  position;  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException( "Instant  must  not  be  null ");  }  ,long instantMillis = instant.getMillis() - position + 2;
increase failing tests,706,replace, [FE] ComparisonFailure testPrint_chrono_and_zone, long  instantMillis  =  instant.getMillis()  -  position;  [timeout]  [CONTEXT]  public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException( "Instant  must  not  be  null ");  }  ,long instantMillis = instant.getMillis() - position * 2;
compilation error,710,replace,[CE] cannot find symbol,   int  iLocal  =  chrono.monthOfYear().get(instantLocal);  ,chrono = selectMillis(instantLocal);
compilation error,190,replace,[CE] cannot find symbol, if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  ,if(locale == getLocale() || locale!= null && locale.equals(getOffsetParsed())) {
compilation error,707,replace,[CE] cannot find symbol instantChronology, Chronology  chrono  =(instant  ==  null)?  instant.getChronology()  :  instant.getChronology();  ,Chronology chrono =(instantChronology == null)? instant.getChronology() : instant.getChronology();
compilation error,710,replace,[CE] method get in class DateTimeField cannot be applied to given types;,   int  year  =  chrono.year().get(instantLocal);  ,int year = chrono.year().get(instantLocal, iPivotYear);
