increase failing tests,708,add, [FE] IllegalArgumentException testParseInto_monthOnly_baseStartYear, ,        chrono    =    selectChronology(chrono);    chrono  =  selectChronology(chrono);  if(instantMillis > 0) { throw new IllegalArgumentException(""); }
compilation error,708,add,[CE] cannot find symbol, ,        chrono    =    selectChronology(chrono);    chrono  =  selectChronology(chrono);  int offsetParsed = parser.getOffset(instantMillis);
compilation error,710,add,[CE] variable year is already defined in method parseInto(ReadWritableInstant,String,int), ,        int    pivotYear    =    chrono.year().get(instantLocal);    int  year  =  chrono.year().get(instantLocal);  int year = chrono.year().get(instantLocal);
increase failing tests,709,replace, [FE] AssertionFailedError testParseInto_monthOnly_baseStartYear, instantLocal  =  instantLocal  +  chrono.getZone().getOffset(instantMillis);  [timeout]  [CONTEXT]    public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException(   "Instant  must  not  be  null   ");  }  long  instantMillis  =  instant.getMillis();  Chronology  chrono  =  instant.getChronology();  long  instantLocal  =  instantMillis  +  chrono.getZone().getOffset(instantMillis);    ,instantLocal = instantMillis - chrono.getZone().getOffset(instantMillis);
compilation error,706,replace,[CE] bad operand types for binary operator '*', long  instantMillis  =  instant.getMillis()  *  position;  [timeout]  [CONTEXT]    public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException(   "Instant  must  not  be  null   ");  }    ,long instantMillis = instant.getMillis() * text;
compilation error,707,replace,[CE] bad operand types for binary operator '<=', Chronology  chrono  =(instant!=  null)?  instant.getChronology()  :  instant.getChronology();  ,Chronology chrono =(instant <= null)? instant.getChronology() : instant.getChronology();
increase failing tests,708,replace, [FE] AssertionFailedError testParseInto_monthOnly_baseStartYear, long  instantLocal  =  instantMillis  /  position  -  chrono.getZone().getOffset(instantMillis);  [timeout]  [CONTEXT]    public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException(   "Instant  must  not  be  null   ");  }  long  instantMillis  =  instant.getMillis();  Chronology  chrono  =  instant.getChronology();    ,long instantLocal = instantMillis * position - chrono.getZone().getOffset(instantMillis);
increase failing tests,708,replace, [FE] AssertionFailedError testParseInto_monthOnly_baseStartYear, long  instantLocal  =  instantMillis  /  position  -  chrono.getZone().getOffset(instantMillis);  [timeout]  [CONTEXT]    public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException(   "Instant  must  not  be  null   ");  }  long  instantMillis  =  instant.getMillis();  Chronology  chrono  =  instant.getChronology();    ,long instantLocal = instantMillis / 2 - chrono.getZone().getOffset(instantMillis);
compilation error,708,replace,[CE] cannot find symbol shift, long  instantLocal  =  instantMillis  /  position  -  chrono.getZone().getOffset(instantMillis);  [timeout]  [CONTEXT]    public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException(   "Instant  must  not  be  null   ");  }  long  instantMillis  =  instant.getMillis();  Chronology  chrono  =  instant.getChronology();    ,long instantLocal = instantMillis / shift - chrono.getZone().getOffset(instantMillis);
compilation error,708,replace,[CE] ';' expected, long  instantLocal  =  instantMillis  /  chrono.getZone().setOffset(instantMillis);  [timeout]  [CONTEXT]    public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException(   "Instant  must  not  be  null   ");  }  long  instantMillis  =  instant.getMillis();  Chronology  chrono  =  instant.getChronology();    ,long instantLocal = instantMillis / chrono.getZone().setUTC()(instantMillis);
compilation error,710,replace,[CE] cannot find symbol defaultYear,     int  pivotYear  =  chrono.year().get(instantLocal);  int  year  =  chrono.year().get(instantLocal);  ,int pivotYear = chrono.millisOfDay().get(instantLocal); int year = chrono.year().get(instantLocal);
compilation error,710,replace,[CE] cannot find symbol defaultYear,     instantLocal  =  instantMillis  +  chrono.getZone().getOffset(instantLocal);  chrono  =  selectChronology(chrono);  ,if(instantLocal!= 0) { instantLocal = instantMillis + chrono.getZone().getOffset(instantLocal); chrono = selectChronology(chrono); }
compilation error,706,replace,[CE] cannot find symbol dateTimeConstants, long  instantMillis  =  instant.getMillis()  /  position;  [timeout]  [CONTEXT]    public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException(   "Instant  must  not  be  null   ");  }    ,long instantMillis = instant.getMillis() / dateTimeConstants.MILLIS_PER_SECOND;
compilation error,710,replace,[CE] cannot find symbol,     int  year  =  chrono.year().get(instantLocal);  int  month  =  chrono.monthOfYear().get(instantLocal);  ,int year = chrono.year().get(instantLocal); int month = chrono.monthOfMonth().get(instantLocal);
compilation error,710,add,[CE] variable instantLocal is already defined in method parseInto(ReadWritableInstant,String,int), ,        instantLocal    =    instantMillis    +    chrono.getZone().getOffset(instantLocal);    chrono  =  selectChronology(chrono);  long instantLocal = instantMillis + chrono.getZone().getOffset(instantLocal);
compilation error,710,add,[CE] variable year is already defined in method parseInto(ReadWritableInstant,String,int), ,        int    year    =    chrono.year().get(instantLocal);    int  month  =  chrono.monthOfYear().get(instantLocal);  int year = chrono.year().get(instantLocal);
compilation error,707,add,[CE] cannot assign a value to final variable iChrono, ,Chronology  chrono  =(instant!=  null)?  instant.getChronology()  :  DateTimeUtils.getInstantChronology(instant);  iChrono =(chrono!= null)? instant.getChronology() : DateTimeUtils.getInstantChronology(instant);
compilation error,708,replace,[CE] cannot find symbol instantLocal,     chrono  =  selectChronology(chrono);  chrono  =  selectChronology(chrono);  ,if(chrono!= null) { chrono = selectChronology(chrono); chrono = selectChronology(chrono); }
compilation error,707,add,[CE] incomparable types: long and <null>, ,Chronology  chrono  =(instant!=  null)?  instant.getChronology()  :  instant.getChronology();  instantMillis =(instantMillis == null)? instant.getMillis() : instant.getMillis();
compilation error,707,replace,[CE] bad operand types for binary operator '<=', Chronology  chrono  =(instant!=  null)?  instant.getChronology()  :  DateTimeUtils.getInstantChronology(instant);  ,Chronology chrono =(instant <= null)? instant.getChronology() : DateTimeUtils.getInstantChronology(instant);
compilation error,710,replace,[CE] cannot find symbol defaultYear,     instantLocal  =  instantMillis  +  chrono.getZone().getOffset(instantLocal);  instantLocal  =  instantMillis  +  chrono.getZone().getOffset(instantLocal);  ,instantLocal = instantMillis + chrono.getZone().getOffset(instantLocal); instantLocal = instantMillis - chrono.getZone().getOffset(instantLocal);
compilation error,710,add,[CE] variable pivotYear is already defined in method parseInto(ReadWritableInstant,String,int), ,        int    pivotYear    =    chrono.year().get(instantLocal);    int  year  =  chrono.year().get(instantLocal);  int pivotYear = chrono.year().get(instantLocal);
compilation error,702,replace,[CE] bad operand types for binary operator '<', if(instant  ==  null  ||  instant.getMillis()  <  text.length())  {  [timeout]  [CONTEXT]    public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();    ,if(instant < null || instant.getMillis() < text.length()) {
compilation error,709,replace,[CE] variable instantLocal is already defined in method parseInto(ReadWritableInstant,String,int), instantLocal  =  instantLocal  +  chrono.getZone().getOffset(instantMillis);  [timeout]  [CONTEXT]    public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException(   "Instant  must  not  be  null   ");  }  long  instantMillis  =  instant.getMillis();  Chronology  chrono  =  instant.getChronology();  long  instantLocal  =  instantMillis  +  chrono.getZone().getOffset(instantMillis);    ,long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);
compilation error,707,replace,[CE] bad operand types for binary operator '>=', Chronology  chrono  =(instant!=  null)?  instant.getChronology()  :  DateTimeUtils.getInstantChronology(instant);  ,Chronology chrono =(instant >= null)? instant.getChronology() : DateTimeUtils.getInstantChronology(instant);
compilation error,710,replace,[CE] cannot find symbol,     int  pivotYear  =  chrono.year().get(instantLocal);  int  year  =  chrono.year().get(instantLocal);  ,int pivotYear = chrono.millisOfYear().get(instantLocal);
compilation error,702,replace,[CE] cannot find symbol bucket, if(parser  ==  null  ||  instant.getMillis()!=  text.length())  {  [timeout]  [CONTEXT]    public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();    ,if(instant == null || parser.parseInto(bucket, text, position)) {
compilation error,707,replace,[CE] bad operand types for binary operator '>=', Chronology  chrono  =(instant!=  null)?  instant.getChronology()  :  instant.getChronology();  ,Chronology chrono =(instant >= null)? instant.getChronology() : instant.getChronology();
compilation error,707,add,[CE] cannot assign a value to final variable iChrono, ,Chronology  chrono  =(instant!=  null)?  instant.getChronology()  :  DateTimeUtils.getInstantChronology(instant);  iChrono =(chrono == null)? chrono : DateTimeUtils.getInstantChronology(instant);
compilation error,702,replace,[CE] bad operand types for binary operator '<', if(instant  ==  null  ||  instant.getMillis()  ==  text.length())  {  ,if(instant < null || instant.getMillis() == text.length()) {
compilation error,710,add,[CE] variable month is already defined in method parseInto(ReadWritableInstant,String,int), ,        int    year    =    chrono.year().get(instantLocal);    int  month  =  chrono.monthOfYear().get(instantLocal);  int month = chrono.monthOfMonth().get(instantLocal);
compilation error,708,replace,[CE] cannot find symbol instantLocal,     chrono  =  selectChronology(chrono);  chrono  =  selectChronology(chrono);  ,if(chrono!= null) { chrono = selectChronology(chrono); } else { chrono = selectChronology(chrono); }
compilation error,710,replace,[CE] cannot find symbol,     instantLocal  =  instantMillis  +  chrono.getZone().getOffset(instantLocal);  instantLocal  =  instantMillis  +  chrono.getZone().getOffset(instantLocal);  ,instantLocal = instantMillis + chrono.getInstantZone().getOffset(instantLocal);
compilation error,710,add,[CE] variable defaultYear is already defined in method parseInto(ReadWritableInstant,String,int), ,        instantLocal    =    instantMillis    +    chrono.getZone().getOffset(instantLocal);    chrono  =  selectChronology(chrono);  long defaultYear = chrono.year().get(instantLocal);
increase failing tests,706,replace, [FE] org.joda.time.IllegalFieldValueException: Cannot parse "2 29": Value 29 for dayOfMonth must be in the range [1 testParseInto_monthDay_feb29_tokyo_startOfYear, long  instantMillis  =  instant.getMillis()  /  position;  [timeout]  [CONTEXT]    public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException(   "Instant  must  not  be  null   ");  }    ,long instantMillis = instant.getMillis() / text.length();
compilation error,707,add,[CE] ';' expected, ,Chronology  chrono  =(instant!=  null)?  instant.getChronology()  :  instant.getChronology();  DateTimeParser parser.parseInto(bucket, text, position);
compilation error,708,replace,[CE] cannot find symbol, long  instantLocal  =  instantMillis  /  chrono.getZone().setOffset(instantMillis);  [timeout]  [CONTEXT]    public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException(   "Instant  must  not  be  null   ");  }  long  instantMillis  =  instant.getMillis();  Chronology  chrono  =  instant.getChronology();    ,long instantLocal = instantMillis - chrono.getZone().setOffset(instantMillis);
compilation error,710,replace,[CE] cannot find symbol defaultYear,     int  year  =  chrono.year().get(instantLocal);  int  month  =  chrono.monthOfYear().get(instantLocal);  ,int year = chrono.year().get(instantLocal - 1); int month = chrono.monthOfYear().get(instantLocal - 1);
increase failing tests,706,replace, [FE] ComparisonFailure testPrint_bufferMethods, long  instantMillis  =  instant.getMillis()  *  position;  [timeout]  [CONTEXT]    public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException(   "Instant  must  not  be  null   ");  }    ,long instantMillis = instant.getMillis() * position + 1;
compilation error,706,replace,[CE] cannot find symbol timeout, long  instantMillis  =  instant.getMillis()  *  position;  [timeout]  [CONTEXT]    public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException(   "Instant  must  not  be  null   ");  }    ,long instantMillis = instant.getMillis() * timeout;
compilation error,710,replace,[CE] cannot find symbol defaultYear,     instantLocal  =  instantMillis  +  chrono.getZone().getOffset(instantLocal);  chrono  =  selectChronology(chrono);  ,instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis); chrono = selectChronology(chrono);
compilation error,708,add,[CE] cannot find symbol bucket, ,        chrono    =    selectChronology(chrono);    chrono  =  selectChronology(chrono);  iParser.parseInto(bucket, text, position);
compilation error,710,add,[CE] cannot find symbol bucket, ,        int    year    =    chrono.year().get(instantLocal);    int  month  =  chrono.monthOfYear().get(instantLocal);  instant.setMillis(bucket.computeMillis(false, text));
compilation error,708,add,[CE] cannot find symbol, ,        chrono    =    selectChronology(chrono);    chrono  =  selectChronology(chrono);  chrono = selectMillis(instantMillis);
compilation error,707,replace,[CE] cannot find symbol instantChronology, Chronology  chrono  =(instant!=  null)?  instant.getChronology()  :  DateTimeUtils.getInstantChronology(instant);  ,Chronology chrono =(instantChronology!= null)? instant.getChronology() : DateTimeUtils.getInstantChronology(instant);
compilation error,710,add,[CE] no suitable method found for get(long), ,        int    pivotYear    =    chrono.year().get(instantLocal);    int  year  =  chrono.year().get(instantLocal);  int iPivotYear =(year == 0)? pivotYear : chrono.get(instantLocal);
compilation error,710,replace,[CE] incomparable types: long and <null>,     instantLocal  =  instantMillis  +  chrono.getZone().getOffset(instantLocal);  chrono  =  selectChronology(chrono);  ,if(instantLocal!= null) { instantLocal = instantMillis + chrono.getZone().getOffset(instantLocal); chrono = selectChronology(chrono); }
compilation error,710,add,[CE] cannot find symbol bucket, ,        instantLocal    =    instantMillis    +    chrono.getZone().getOffset(instantLocal);    chrono  =  selectChronology(chrono);  instant.setMillis(bucket.computeMillis(false, text));
compilation error,707,add,[CE] variable chrono is already defined in method parseInto(ReadWritableInstant,String,int), ,Chronology  chrono  =(instant!=  null)?  instant.getChronology()  :  DateTimeUtils.getInstantChronology(instant);  instantMillis = DateTimeUtils.getInstantMillis(instant);
compilation error,710,replace,[CE] cannot find symbol defaultYear,     int  year  =  chrono.year().get(instantLocal);  int  month  =  chrono.monthOfYear().get(instantLocal);  ,int year = chrono.year().get(instantLocal); int month = chrono.monthOfYear().get(instantLocal + 1);
compilation error,706,replace,[CE] cannot find symbol dateTimeMillis, long  instantMillis  =  instant.getMillis()  /  position;  [timeout]  [CONTEXT]    public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException(   "Instant  must  not  be  null   ");  }    ,long instantMillis = instant.getMillis() / dateTimeMillis;
increase failing tests,709,replace, [FE] AssertionFailedError testParseInto_monthOnly_baseStartYear, instantLocal  =  instantMillis  /  chrono.getZone().getOffset(instantLocal);  [timeout]  [CONTEXT]    public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException(   "Instant  must  not  be  null   ");  }  long  instantMillis  =  instant.getMillis();  Chronology  chrono  =  instant.getChronology();  long  instantLocal  =  instantMillis  +  chrono.getZone().getOffset(instantMillis);    ,instantLocal = instantLocal - chrono.getZone().getOffset(instantLocal);
compilation error,708,replace,[CE] bad operand types for binary operator '<',     chrono  =  selectChronology(chrono);  chrono  =  selectChronology(chrono);  ,if(instant < null) { chrono = selectChronology(chrono); chrono = selectChronology(chrono); }
compilation error,710,replace,[CE] cannot find symbol defaultYear,     int  pivotYear  =  chrono.year().get(instantLocal);  int  year  =  chrono.year().get(instantLocal);  ,int pivotYear = chrono.monthOfYear().get(instantLocal); int year = chrono.year().get(instantLocal);
compilation error,710,replace,[CE] incomparable types: long and <null>,     instantLocal  =  instantMillis  +  chrono.getZone().getOffset(instantLocal);  instantLocal  =  instantMillis  +  chrono.getZone().getOffset(instantLocal);  ,if(instantLocal!= null) { instantLocal = instantMillis + chrono.getZone().getOffset(instantLocal); instantLocal = instantLocal + chrono.getZone().getOffset(instantLocal); }
compilation error,708,replace,[CE] cannot find symbol, long  instantLocal  =  instantMillis  /  chrono.getZone().setOffset(instantMillis);  [timeout]  [CONTEXT]    public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException(   "Instant  must  not  be  null   ");  }  long  instantMillis  =  instant.getMillis();  Chronology  chrono  =  instant.getChronology();    ,long instantLocal = instantMillis / chrono.getZone().setUTC(instantMillis);
increase failing tests,706,replace, [FE] ComparisonFailure testPrint_chrono_and_zone, long  instantMillis  =  instant.getMillis()  *  position;  [timeout]  [CONTEXT]    public  int  parseInto(ReadWritableInstant  instant,  String  text,  int  position)  {  DateTimeParser  parser  =  requireParser();  if  (instant  ==  null)  {  throw  new  IllegalArgumentException(   "Instant  must  not  be  null   ");  }    ,long instantMillis = instant.getMillis() + position;
compilation error,702,replace,[CE] bad operand types for binary operator '>=', if(instant  ==  null  ||  instant.getMillis()  ==  text.length())  {  ,if(instant >= null || instant.getMillis() == text.length()) {
compilation error,707,add,[CE] variable chrono is already defined in method parseInto(ReadWritableInstant,String,int), ,Chronology  chrono  =(instant!=  null)?  instant.getChronology()  :  instant.getChronology();  instantMillis = DateTimeUtils.currentTimeMillis();
compilation error,707,replace,[CE] cannot find symbol instantProxy, Chronology  chrono  =(instant!=  null)?  instant.getChronology()  :  instant.getChronology();  ,Chronology chrono =(instantProxy!= null)? instant.getChronology() : instant.getChronology();
