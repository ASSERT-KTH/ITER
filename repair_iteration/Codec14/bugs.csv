bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] this(nameType, ruleType, concat, DEFAULT_MAX_PHONEMES); [FE] ExceptionInInitializerError [CONTEXT] public PhoneticEngine(final NameType nameType, final RuleType ruleType, final boolean concat) { [BUGGY] this(nameType, ruleType, concat, DEFAULT_MAX_PHONEMES); [BUGGY] } [CLASS] PhoneticEngine PhonemeBuilder RulesApplication [METHOD] <init> [RETURN_TYPE] RuleType,boolean)  NameType nameType RuleType ruleType final boolean concat [VARIABLES] PhonemeBuilder phonemeBuilder Set phonemes boolean concat found CharSequence input Lang lang NameType nameType RuleType ruleType Map NAME_PREFIXES finalRules int DEFAULT_MAX_PHONEMES i maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	293	293	4	replace	
2	[BUG] [BUGGY] [FE] ExceptionInInitializerError [CONTEXT] public PhoneticEngine(final NameType nameType, final RuleType ruleType, final boolean concat) { [BUGGY] [BUGGY] this(nameType, ruleType, concat, DEFAULT_MAX_PHONEMES); } [CLASS] PhoneticEngine PhonemeBuilder RulesApplication [METHOD] <init> [RETURN_TYPE] RuleType,boolean)  NameType nameType RuleType ruleType final boolean concat [VARIABLES] PhonemeBuilder phonemeBuilder Set phonemes boolean concat found CharSequence input Lang lang NameType nameType RuleType ruleType Map NAME_PREFIXES finalRules int DEFAULT_MAX_PHONEMES i maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	293	293	4	add	
3	[BUG] [BUGGY] final int maxPhonemes) { [FE] ExceptionInInitializerError [CONTEXT] public PhoneticEngine(final NameType nameType, final RuleType ruleType, final boolean concat, [BUGGY] final int maxPhonemes) { [BUGGY] if (ruleType == RuleType.RULES) { throw new IllegalArgumentException("ruleType must not be " + RuleType.RULES); } this.nameType = nameType; this.ruleType = ruleType; this.concat = concat; this.lang = Lang.instance(nameType); this.maxPhonemes = maxPhonemes; } [CLASS] PhoneticEngine PhonemeBuilder RulesApplication [METHOD] <init> [RETURN_TYPE] RuleType,boolean,int)  NameType nameType RuleType ruleType final boolean concat final int maxPhonemes [VARIABLES] PhonemeBuilder phonemeBuilder Set phonemes boolean concat found CharSequence input Lang lang NameType nameType RuleType ruleType Map NAME_PREFIXES finalRules int DEFAULT_MAX_PHONEMES i maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	
4	[BUG] [BUGGY] [FE] ExceptionInInitializerError [CONTEXT] public PhoneticEngine(final NameType nameType, final RuleType ruleType, final boolean concat, [BUGGY] [BUGGY] final int maxPhonemes) { if (ruleType == RuleType.RULES) { throw new IllegalArgumentException("ruleType must not be " + RuleType.RULES); } this.nameType = nameType; this.ruleType = ruleType; this.concat = concat; this.lang = Lang.instance(nameType); this.maxPhonemes = maxPhonemes; } [CLASS] PhoneticEngine PhonemeBuilder RulesApplication [METHOD] <init> [RETURN_TYPE] RuleType,boolean,int)  NameType nameType RuleType ruleType final boolean concat final int maxPhonemes [VARIABLES] PhonemeBuilder phonemeBuilder Set phonemes boolean concat found CharSequence input Lang lang NameType nameType RuleType ruleType Map NAME_PREFIXES finalRules int DEFAULT_MAX_PHONEMES i maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	add	
5	[BUG] [BUGGY] if (ruleType == RuleType.RULES) { [FE] ExceptionInInitializerError [CONTEXT] public PhoneticEngine(final NameType nameType, final RuleType ruleType, final boolean concat, final int maxPhonemes) { [BUGGY] if (ruleType == RuleType.RULES) { [BUGGY] throw new IllegalArgumentException("ruleType must not be " + RuleType.RULES); } this.nameType = nameType; this.ruleType = ruleType; this.concat = concat; this.lang = Lang.instance(nameType); this.maxPhonemes = maxPhonemes; } [CLASS] PhoneticEngine PhonemeBuilder RulesApplication [METHOD] <init> [RETURN_TYPE] RuleType,boolean,int)  NameType nameType RuleType ruleType final boolean concat final int maxPhonemes [VARIABLES] PhonemeBuilder phonemeBuilder Set phonemes boolean concat found CharSequence input Lang lang NameType nameType RuleType ruleType Map NAME_PREFIXES finalRules int DEFAULT_MAX_PHONEMES i maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	
6	[BUG] [BUGGY] [FE] ExceptionInInitializerError [CONTEXT] public PhoneticEngine(final NameType nameType, final RuleType ruleType, final boolean concat, final int maxPhonemes) { [BUGGY] [BUGGY] if (ruleType == RuleType.RULES) { throw new IllegalArgumentException("ruleType must not be " + RuleType.RULES); } this.nameType = nameType; this.ruleType = ruleType; this.concat = concat; this.lang = Lang.instance(nameType); this.maxPhonemes = maxPhonemes; } [CLASS] PhoneticEngine PhonemeBuilder RulesApplication [METHOD] <init> [RETURN_TYPE] RuleType,boolean,int)  NameType nameType RuleType ruleType final boolean concat final int maxPhonemes [VARIABLES] PhonemeBuilder phonemeBuilder Set phonemes boolean concat found CharSequence input Lang lang NameType nameType RuleType ruleType Map NAME_PREFIXES finalRules int DEFAULT_MAX_PHONEMES i maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	add	
7	[BUG] [BUGGY] this.nameType = nameType; [FE] ExceptionInInitializerError [CONTEXT] public PhoneticEngine(final NameType nameType, final RuleType ruleType, final boolean concat, final int maxPhonemes) { if (ruleType == RuleType.RULES) { throw new IllegalArgumentException("ruleType must not be " + RuleType.RULES); } [BUGGY] this.nameType = nameType; [BUGGY] this.ruleType = ruleType; this.concat = concat; this.lang = Lang.instance(nameType); this.maxPhonemes = maxPhonemes; } [CLASS] PhoneticEngine PhonemeBuilder RulesApplication [METHOD] <init> [RETURN_TYPE] RuleType,boolean,int)  NameType nameType RuleType ruleType final boolean concat final int maxPhonemes [VARIABLES] PhonemeBuilder phonemeBuilder Set phonemes boolean concat found CharSequence input Lang lang NameType nameType RuleType ruleType Map NAME_PREFIXES finalRules int DEFAULT_MAX_PHONEMES i maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	314	314	4	replace	
8	[BUG] [BUGGY] [FE] ExceptionInInitializerError [CONTEXT] public PhoneticEngine(final NameType nameType, final RuleType ruleType, final boolean concat, final int maxPhonemes) { if (ruleType == RuleType.RULES) { throw new IllegalArgumentException("ruleType must not be " + RuleType.RULES); } [BUGGY] [BUGGY] this.nameType = nameType; this.ruleType = ruleType; this.concat = concat; this.lang = Lang.instance(nameType); this.maxPhonemes = maxPhonemes; } [CLASS] PhoneticEngine PhonemeBuilder RulesApplication [METHOD] <init> [RETURN_TYPE] RuleType,boolean,int)  NameType nameType RuleType ruleType final boolean concat final int maxPhonemes [VARIABLES] PhonemeBuilder phonemeBuilder Set phonemes boolean concat found CharSequence input Lang lang NameType nameType RuleType ruleType Map NAME_PREFIXES finalRules int DEFAULT_MAX_PHONEMES i maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	314	314	4	add	
9	[BUG] [BUGGY] this.ruleType = ruleType; [FE] ExceptionInInitializerError [CONTEXT] public PhoneticEngine(final NameType nameType, final RuleType ruleType, final boolean concat, final int maxPhonemes) { if (ruleType == RuleType.RULES) { throw new IllegalArgumentException("ruleType must not be " + RuleType.RULES); } this.nameType = nameType; [BUGGY] this.ruleType = ruleType; [BUGGY] this.concat = concat; this.lang = Lang.instance(nameType); this.maxPhonemes = maxPhonemes; } [CLASS] PhoneticEngine PhonemeBuilder RulesApplication [METHOD] <init> [RETURN_TYPE] RuleType,boolean,int)  NameType nameType RuleType ruleType final boolean concat final int maxPhonemes [VARIABLES] PhonemeBuilder phonemeBuilder Set phonemes boolean concat found CharSequence input Lang lang NameType nameType RuleType ruleType Map NAME_PREFIXES finalRules int DEFAULT_MAX_PHONEMES i maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	
10	[BUG] [BUGGY] [FE] ExceptionInInitializerError [CONTEXT] public PhoneticEngine(final NameType nameType, final RuleType ruleType, final boolean concat, final int maxPhonemes) { if (ruleType == RuleType.RULES) { throw new IllegalArgumentException("ruleType must not be " + RuleType.RULES); } this.nameType = nameType; [BUGGY] [BUGGY] this.ruleType = ruleType; this.concat = concat; this.lang = Lang.instance(nameType); this.maxPhonemes = maxPhonemes; } [CLASS] PhoneticEngine PhonemeBuilder RulesApplication [METHOD] <init> [RETURN_TYPE] RuleType,boolean,int)  NameType nameType RuleType ruleType final boolean concat final int maxPhonemes [VARIABLES] PhonemeBuilder phonemeBuilder Set phonemes boolean concat found CharSequence input Lang lang NameType nameType RuleType ruleType Map NAME_PREFIXES finalRules int DEFAULT_MAX_PHONEMES i maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	add	
11	[BUG] [BUGGY] this.concat = concat; [FE] ExceptionInInitializerError [CONTEXT] public PhoneticEngine(final NameType nameType, final RuleType ruleType, final boolean concat, final int maxPhonemes) { if (ruleType == RuleType.RULES) { throw new IllegalArgumentException("ruleType must not be " + RuleType.RULES); } this.nameType = nameType; this.ruleType = ruleType; [BUGGY] this.concat = concat; [BUGGY] this.lang = Lang.instance(nameType); this.maxPhonemes = maxPhonemes; } [CLASS] PhoneticEngine PhonemeBuilder RulesApplication [METHOD] <init> [RETURN_TYPE] RuleType,boolean,int)  NameType nameType RuleType ruleType final boolean concat final int maxPhonemes [VARIABLES] PhonemeBuilder phonemeBuilder Set phonemes boolean concat found CharSequence input Lang lang NameType nameType RuleType ruleType Map NAME_PREFIXES finalRules int DEFAULT_MAX_PHONEMES i maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	
12	[BUG] [BUGGY] [FE] ExceptionInInitializerError [CONTEXT] public PhoneticEngine(final NameType nameType, final RuleType ruleType, final boolean concat, final int maxPhonemes) { if (ruleType == RuleType.RULES) { throw new IllegalArgumentException("ruleType must not be " + RuleType.RULES); } this.nameType = nameType; this.ruleType = ruleType; [BUGGY] [BUGGY] this.concat = concat; this.lang = Lang.instance(nameType); this.maxPhonemes = maxPhonemes; } [CLASS] PhoneticEngine PhonemeBuilder RulesApplication [METHOD] <init> [RETURN_TYPE] RuleType,boolean,int)  NameType nameType RuleType ruleType final boolean concat final int maxPhonemes [VARIABLES] PhonemeBuilder phonemeBuilder Set phonemes boolean concat found CharSequence input Lang lang NameType nameType RuleType ruleType Map NAME_PREFIXES finalRules int DEFAULT_MAX_PHONEMES i maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	
13	[BUG] [BUGGY] this.lang = Lang.instance(nameType); [FE] ExceptionInInitializerError [CONTEXT] public PhoneticEngine(final NameType nameType, final RuleType ruleType, final boolean concat, final int maxPhonemes) { if (ruleType == RuleType.RULES) { throw new IllegalArgumentException("ruleType must not be " + RuleType.RULES); } this.nameType = nameType; this.ruleType = ruleType; this.concat = concat; [BUGGY] this.lang = Lang.instance(nameType); [BUGGY] this.maxPhonemes = maxPhonemes; } [CLASS] PhoneticEngine PhonemeBuilder RulesApplication [METHOD] <init> [RETURN_TYPE] RuleType,boolean,int)  NameType nameType RuleType ruleType final boolean concat final int maxPhonemes [VARIABLES] PhonemeBuilder phonemeBuilder Set phonemes boolean concat found CharSequence input Lang lang NameType nameType RuleType ruleType Map NAME_PREFIXES finalRules int DEFAULT_MAX_PHONEMES i maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	317	317	4	replace	
14	[BUG] [BUGGY] [FE] ExceptionInInitializerError [CONTEXT] public PhoneticEngine(final NameType nameType, final RuleType ruleType, final boolean concat, final int maxPhonemes) { if (ruleType == RuleType.RULES) { throw new IllegalArgumentException("ruleType must not be " + RuleType.RULES); } this.nameType = nameType; this.ruleType = ruleType; this.concat = concat; [BUGGY] [BUGGY] this.lang = Lang.instance(nameType); this.maxPhonemes = maxPhonemes; } [CLASS] PhoneticEngine PhonemeBuilder RulesApplication [METHOD] <init> [RETURN_TYPE] RuleType,boolean,int)  NameType nameType RuleType ruleType final boolean concat final int maxPhonemes [VARIABLES] PhonemeBuilder phonemeBuilder Set phonemes boolean concat found CharSequence input Lang lang NameType nameType RuleType ruleType Map NAME_PREFIXES finalRules int DEFAULT_MAX_PHONEMES i maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	317	317	4	add	
15	[BUG] [BUGGY] private static final Map<NameType, Set<String>> NAME_PREFIXES = new EnumMap<NameType, Set<String>>(NameType.class); [FE] ExceptionInInitializerError [CONTEXT] [BUGGY] private static final Map<NameType, Set<String>> NAME_PREFIXES = new EnumMap<NameType, Set<String>>(NameType.class); [BUGGY]  [CLASS] PhoneticEngine PhonemeBuilder RulesApplication  [VARIABLES] 	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	235	235	4	replace	
16	[BUG] [BUGGY] [FE] ExceptionInInitializerError [CONTEXT] [BUGGY] [BUGGY] private static final Map<NameType, Set<String>> NAME_PREFIXES = new EnumMap<NameType, Set<String>>(NameType.class); [CLASS] PhoneticEngine PhonemeBuilder RulesApplication  [VARIABLES] 	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	235	235	4	add	
21	[BUG] [BUGGY] private static final Map<NameType, Lang> Langs = new EnumMap<NameType, Lang>(NameType.class); [FE] ExceptionInInitializerError [CONTEXT] [BUGGY] private static final Map<NameType, Lang> Langs = new EnumMap<NameType, Lang>(NameType.class); [BUGGY]  [CLASS] Lang LangRule  [VARIABLES] 	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/Lang.java	1.0	96	96	4	replace	
22	[BUG] [BUGGY] [FE] ExceptionInInitializerError [CONTEXT] [BUGGY] [BUGGY] private static final Map<NameType, Lang> Langs = new EnumMap<NameType, Lang>(NameType.class); [CLASS] Lang LangRule  [VARIABLES] 	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/Lang.java	1.0	96	96	4	add	
