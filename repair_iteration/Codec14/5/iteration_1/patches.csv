bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.ruleType  =  nameType.getRuleType();  [CE]  cannot  find  symbol  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  nameType.getRuleType();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  nameType.getRuleType();	  this.ruleType    =    ruleType.getRuleType();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
2	[BUG]  [BUGGY]  this.ruleType  =  ruleType.toRuleType();  [CE]  cannot  find  symbol  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.toRuleType();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.toRuleType();	  this.ruleType    =    ruleType.getRuleType();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
3	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getRuntimeType();  [CE]  cannot  find  symbol  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.getRuntimeType();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.getRuntimeType();	  this.ruleType    =    ruleType.getRuleType();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
4	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getRoleType();  [CE]  cannot  find  symbol  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.getRoleType();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.getRoleType();	  this.ruleType    =    ruleType.getRuleType();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
5	[BUG]  [BUGGY]  this.ruleType  =  ruleType.findRuleType();  [CE]  cannot  find  symbol  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.findRuleType();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.findRuleType();	  this.ruleType    =    ruleType.getRuleType();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
6	[BUG]  [BUGGY]  this.ruleType  =  ruleType.newInstance();  [CE]  cannot  find  symbol  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.newInstance();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.newInstance();	  this.ruleType    =    ruleType.getRuleType();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
7	[BUG]  [BUGGY]  this.ruleType  =  ruleType.findRuleType( "ruleType ");  [CE]  cannot  find  symbol  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.findRuleType( "ruleType ");  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.findRuleType( "ruleType ");	  this.ruleType    =    ruleType.getRuleType();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
8	[BUG]  [BUGGY]  this.ruleType  =  nameType.getRawClass();  [CE]  cannot  find  symbol  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  nameType.getRawClass();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  nameType.getRawClass();	  this.ruleType    =    ruleType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
9	[BUG]  [BUGGY]  this.ruleType  =  ruleType,  nameType.getRawClass();  [CE]  ';'  expected  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType,  nameType.getRawClass();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType,  nameType.getRawClass();	  this.ruleType    =    ruleType.getRawClass();    	non-compiled	[CE]  ';'  expected	17	None	replace
10	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getRuleType( "ruleType ");  [CE]  cannot  find  symbol  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.getRuleType( "ruleType ");  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.getRuleType( "ruleType ");	  this.ruleType    =    ruleType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
11	[BUG]  [BUGGY]  this.ruleType  =  ruleType.toRawClass();  [CE]  cannot  find  symbol  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.toRawClass();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.toRawClass();	  this.ruleType    =    ruleType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
12	[BUG]  [BUGGY]  this.ruleType  =  ruleType.withRawClass();  [CE]  cannot  find  symbol  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.withRawClass();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.withRawClass();	  this.ruleType    =    ruleType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
13	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRawName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  ruleType.getRawName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  ruleType.getRawName();	      NameType    nameType    =    ruleType.getReferenceName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	5	None	replace
14	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getSimpleName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  ruleType.getSimpleName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  ruleType.getSimpleName();	      NameType    nameType    =    ruleType.getReferenceName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	5	None	replace
15	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getNAME_PREFIXES();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  ruleType.getNAME_PREFIXES();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  ruleType.getNAME_PREFIXES();	      NameType    nameType    =    ruleType.getReferenceName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	5	None	replace
16	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getFunctionName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  ruleType.getFunctionName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  ruleType.getFunctionName();	      NameType    nameType    =    ruleType.getReferenceName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	5	None	replace
17	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getFullName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  ruleType.getFullName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  ruleType.getFullName();	      NameType    nameType    =    ruleType.getReferenceName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	5	None	replace
18	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getReferenceName()  +  1;  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  ruleType.getReferenceName()  +  1;  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  ruleType.getReferenceName()  +  1;	      NameType    nameType    =    ruleType.getReferenceName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	5	None	replace
19	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType);  [CE]  enum  types  may  not  be  instantiated  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  ruleType);	  this.ruleType    =    new    RuleType(ruleType.getName(),    nameType);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	24	None	replace
20	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName(),  nameType,  concat);  [CE]  enum  types  may  not  be  instantiated  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName(),  nameType,  concat);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getName(),  nameType,  concat);	  this.ruleType    =    new    RuleType(ruleType.getName(),    nameType);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	24	None	replace
21	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName(),  nameType,  maxPhonemes);  [CE]  enum  types  may  not  be  instantiated  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName(),  nameType,  maxPhonemes);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getName(),  nameType,  maxPhonemes);	  this.ruleType    =    new    RuleType(ruleType.getName(),    nameType);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	24	None	replace
22	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName(),  concat);  [CE]  enum  types  may  not  be  instantiated  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName(),  concat);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getName(),  concat);	  this.ruleType    =    new    RuleType(ruleType.getName(),    nameType);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	24	None	replace
23	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName(),  nameType,  context);  [CE]  cannot  find  symbol  context  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName(),  nameType,  context);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getName(),  nameType,  context);	  this.ruleType    =    new    RuleType(ruleType.getName(),    nameType);    	non-compiled	[CE]  cannot  find  symbol  context	24	None	replace
24	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName(),  nameType,  null);  [CE]  enum  types  may  not  be  instantiated  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName(),  nameType,  null);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getName(),  nameType,  null);	  this.ruleType    =    new    RuleType(ruleType.getName(),    nameType);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	24	None	replace
25	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName(),  nameType,  false);  [CE]  enum  types  may  not  be  instantiated  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName(),  nameType,  false);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getName(),  nameType,  false);	  this.ruleType    =    new    RuleType(ruleType.getName(),    nameType);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	24	None	replace
26	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName(),  nameType,  parametersNode);  [CE]  cannot  find  symbol  parametersNode  [FE]                                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName(),  nameType,  parametersNode);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getName(),  nameType,  parametersNode);	  this.ruleType    =    new    RuleType(ruleType.getName(),    nameType);    	non-compiled	[CE]  cannot  find  symbol  parametersNode	24	None	replace
27	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType,  nameType.getName());  [CE]  enum  types  may  not  be  instantiated  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType,  nameType.getName());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType,  nameType.getName());	  this.ruleType    =    new    RuleType(ruleType.getName());    	non-compiled	[CE]  enum  types  may  not  be  instantiated	23	None	replace
28	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName(),  NAME_PREFIXES);  [CE]  enum  types  may  not  be  instantiated  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName(),  NAME_PREFIXES);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getName(),  NAME_PREFIXES);	  this.ruleType    =    new    RuleType(ruleType.getName());    	non-compiled	[CE]  enum  types  may  not  be  instantiated	23	None	replace
29	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName(),  ruleType);  [CE]  enum  types  may  not  be  instantiated  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName(),  ruleType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getName(),  ruleType);	  this.ruleType    =    new    RuleType(ruleType.getName());    	non-compiled	[CE]  enum  types  may  not  be  instantiated	23	None	replace
30	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName(),  ruleType.getSimpleName());  [CE]  cannot  find  symbol  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName(),  ruleType.getSimpleName());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getName(),  ruleType.getSimpleName());	  this.ruleType    =    new    RuleType(ruleType.getName());    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
31	[BUG]  [BUGGY]  NameType  nameType  =  NAME_PREFIXES.getRuleType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  NAME_PREFIXES.getRuleType();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  NAME_PREFIXES.getRuleType();	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	7	None	replace
32	[BUG]  [BUGGY]  NameType  nameType  =  this.ruleType.getRuleType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  this.ruleType.getRuleType();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  this.ruleType.getRuleType();	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	7	None	replace
33	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getRuleType());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getRuleType());  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getRuleType());	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	7	None	replace
34	[BUG]  [BUGGY]  NameType  nameType  =  this.nameType.getRuleType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  this.nameType.getRuleType();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  this.nameType.getRuleType();	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	7	None	replace
35	[BUG]  [BUGGY]  NameType  nameType  =  type.getRuleType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  type.getRuleType();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  type.getRuleType();	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	7	None	replace
36	[BUG]  [BUGGY]  NameType  nameType  =  RuleType.getRuleType(ruleType);  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  RuleType.getRuleType(ruleType);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  RuleType.getRuleType(ruleType);	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	7	None	replace
37	[BUG]  [BUGGY]  this.ruleType  =  nameType.getSimpleName();  [CE]  cannot  find  symbol  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  nameType.getSimpleName();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  nameType.getSimpleName();	  this.ruleType    =    ruleType.getSimpleName();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
38	[BUG]  [BUGGY]  this.ruleType  =  ruleType.nameType.getSimpleName();  [CE]  cannot  find  symbol  nameType  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.nameType.getSimpleName();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.nameType.getSimpleName();	  this.ruleType    =    ruleType.getSimpleName();    	non-compiled	[CE]  cannot  find  symbol  nameType	14	None	replace
39	[BUG]  [BUGGY]  this.ruleType  =  ruleType,  nameType.getSimpleName();  [CE]  ';'  expected  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType,  nameType.getSimpleName();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType,  nameType.getSimpleName();	  this.ruleType    =    ruleType.getSimpleName();    	non-compiled	[CE]  ';'  expected	14	None	replace
40	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getSimpleName(),  concat;  [CE]  ';'  expected  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.getSimpleName(),  concat;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.getSimpleName(),  concat;	  this.ruleType    =    ruleType.getSimpleName();    	non-compiled	[CE]  ';'  expected	14	None	replace
41	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  ruleType);  [CE]  cannot  find  symbol  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  ruleType);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  ruleType);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
42	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(ruleType);  [CE]  cannot  find  symbol  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(ruleType);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(ruleType);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
43	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  maxPhonemes);  [CE]  cannot  find  symbol  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  maxPhonemes);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  maxPhonemes);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
44	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType);  [CE]  cannot  find  symbol  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
45	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  null);  [CE]  cannot  find  symbol  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  null);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  null);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
46	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  false);  [CE]  cannot  find  symbol  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  false);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  false);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
47	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  locale);  [CE]  cannot  find  symbol  locale  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  locale);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  locale);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol  locale	26	None	replace
48	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  this.maxPhonemes);  [CE]  cannot  find  symbol  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  this.maxPhonemes);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  this.maxPhonemes);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
49	[BUG]  [BUGGY]  NameType  ruleType  =  ruleType.getRawClass();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  ruleType.getRawClass();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  ruleType.getRawClass();	      NameType    ruleType    =    nameType.getRawClass();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	29	None	replace
50	[BUG]  [BUGGY]  NameType  ruleType  =  this.nameType.getRawClass();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  this.nameType.getRawClass();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  this.nameType.getRawClass();	      NameType    ruleType    =    nameType.getRawClass();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	29	None	replace
51	[BUG]  [BUGGY]  NameType  ruleType  =  ruleType.getRuleType();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  ruleType.getRuleType();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  ruleType.getRuleType();	      NameType    ruleType    =    nameType.getRawClass();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	29	None	replace
52	[BUG]  [BUGGY]  NameType  ruleType  =  type.getRawClass();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  type.getRawClass();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  type.getRawClass();	      NameType    ruleType    =    nameType.getRawClass();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	29	None	replace
53	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRuleType(ruleType);  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  nameType.getRuleType(ruleType);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  nameType.getRuleType(ruleType);	      NameType    ruleType    =    nameType.getRawClass();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	29	None	replace
54	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRuleType(),  nameType);  [CE]  cannot  find  symbol  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRuleType(),  nameType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getRuleType(),  nameType);	  this.ruleType    =    new    RuleType(ruleType.getRuleType());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
55	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType,  nameType.getRuleType());  [CE]  cannot  find  symbol  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType,  nameType.getRuleType());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType,  nameType.getRuleType());	  this.ruleType    =    new    RuleType(ruleType.getRuleType());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
56	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRuleType(),  concat);  [CE]  cannot  find  symbol  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRuleType(),  concat);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getRuleType(),  concat);	  this.ruleType    =    new    RuleType(ruleType.getRuleType());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
57	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType,  ruleType.getRuleType());  [CE]  cannot  find  symbol  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType,  ruleType.getRuleType());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType,  ruleType.getRuleType());	  this.ruleType    =    new    RuleType(ruleType.getRuleType());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
58	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRuleType(),  ruleType);  [CE]  cannot  find  symbol  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRuleType(),  ruleType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getRuleType(),  ruleType);	  this.ruleType    =    new    RuleType(ruleType.getRuleType());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
59	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRuleType(),  null);  [CE]  cannot  find  symbol  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRuleType(),  null);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getRuleType(),  null);	  this.ruleType    =    new    RuleType(ruleType.getRuleType());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
60	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRuleType(),  context);  [CE]  cannot  find  symbol  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRuleType(),  context);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getRuleType(),  context);	  this.ruleType    =    new    RuleType(ruleType.getRuleType());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
61	[BUG]  [BUGGY]  this.nameType  =  NameType.NAME_PREFIXES;  [CE]  cannot  find  symbol  NAME_PREFIXES  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  NameType.NAME_PREFIXES;  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  NameType.NAME_PREFIXES;	      this.nameType    =    nameType;    	non-compiled	[CE]  cannot  find  symbol  NAME_PREFIXES	30	None	replace
62	[BUG]  [BUGGY]  this.nameType  =  NAME_PREFIXES;  [CE]  incompatible  types  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  NAME_PREFIXES;  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  NAME_PREFIXES;	      this.nameType    =    nameType;    	non-compiled	[CE]  incompatible  types	30	None	replace
63	[BUG]  [BUGGY]  this.nameType  =  ruleType;  [CE]  incompatible  types  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  ruleType;  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  ruleType;	      this.nameType    =    nameType;    	non-compiled	[CE]  incompatible  types	30	None	replace
64	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  nameType  :  RuleType.NAME_PREFIXES;  [CE]  cannot  find  symbol  NAME_PREFIXES  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  nameType  :  RuleType.NAME_PREFIXES;  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType  instanceof  NameType?  nameType  :  RuleType.NAME_PREFIXES;	      this.nameType    =    nameType;    	non-compiled	[CE]  cannot  find  symbol  NAME_PREFIXES	30	None	replace
65	[BUG]  [BUGGY]  this.nameType  =  NameType.DEFAULT_MAX_PHONEMES;  [CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  NameType.DEFAULT_MAX_PHONEMES;  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  NameType.DEFAULT_MAX_PHONEMES;	      this.nameType    =    nameType;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES	30	None	replace
66	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  nameType  :(NameType)nameType;  [CE]  variable  nameType  might  already  have  been  assigned  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  nameType  :(NameType)nameType;  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType  instanceof  NameType?  nameType  :(NameType)nameType;	      this.nameType    =    nameType;    	non-compiled	[CE]  variable  nameType  might  already  have  been  assigned	30	None	replace
67	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  NameType?(NameType)nameType  :  RuleType.NAME_PREFIXES;  [CE]  cannot  find  symbol  NAME_PREFIXES  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType  instanceof  NameType?(NameType)nameType  :  RuleType.NAME_PREFIXES;  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType  instanceof  NameType?(NameType)nameType  :  RuleType.NAME_PREFIXES;	      this.nameType    =    nameType;    	non-compiled	[CE]  cannot  find  symbol  NAME_PREFIXES	30	None	replace
68	[BUG]  [BUGGY]  this.nameType  =  NameType.DEFAULT_NAME_PREFIXES;  [CE]  cannot  find  symbol  DEFAULT_NAME_PREFIXES  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  NameType.DEFAULT_NAME_PREFIXES;  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  NameType.DEFAULT_NAME_PREFIXES;	      this.nameType    =    nameType;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NAME_PREFIXES	30	None	replace
69	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRawClass(),  nameType);  [CE]  cannot  find  symbol  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRawClass(),  nameType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getRawClass(),  nameType);	  this.ruleType    =    new    RuleType(ruleType.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
70	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType,  nameType.getRawClass());  [CE]  cannot  find  symbol  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType,  nameType.getRawClass());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType,  nameType.getRawClass());	  this.ruleType    =    new    RuleType(ruleType.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
71	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRawClass(),  ruleType);  [CE]  cannot  find  symbol  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRawClass(),  ruleType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getRawClass(),  ruleType);	  this.ruleType    =    new    RuleType(ruleType.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
72	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType,  ruleType.getRawClass());  [CE]  cannot  find  symbol  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType,  ruleType.getRawClass());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType,  ruleType.getRawClass());	  this.ruleType    =    new    RuleType(ruleType.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
73	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRawClass(),  concat);  [CE]  cannot  find  symbol  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRawClass(),  concat);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getRawClass(),  concat);	  this.ruleType    =    new    RuleType(ruleType.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
74	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRawClass(),  null);  [CE]  cannot  find  symbol  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRawClass(),  null);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getRawClass(),  null);	  this.ruleType    =    new    RuleType(ruleType.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
75	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRawClass(),  false);  [CE]  cannot  find  symbol  [FE]                                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRawClass(),  false);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getRawClass(),  false);	  this.ruleType    =    new    RuleType(ruleType.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
76	[BUG]  [BUGGY]  this.ruleType  =  nameType  instanceof  RuleType?((  RuleType)ruleType).toName()  :  null;  [CE]  inconvertible  types  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  nameType  instanceof  RuleType?((  RuleType)ruleType).toName()  :  null;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  nameType  instanceof  RuleType?((  RuleType)ruleType).toName()  :  null;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).toName()    :    null;    	non-compiled	[CE]  inconvertible  types	39	None	replace
77	[BUG]  [BUGGY]  this.ruleType  =(ruleType  instanceof  RuleType)?((  RuleType)ruleType).toName()  :  null;  [CE]  cannot  find  symbol  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =(ruleType  instanceof  RuleType)?((  RuleType)ruleType).toName()  :  null;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =(ruleType  instanceof  RuleType)?((  RuleType)ruleType).toName()  :  null;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).toName()    :    null;    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
78	[BUG]  [BUGGY]  this.ruleType  =(ruleType  instanceof  RuleType?((  RuleType)ruleType).toName()  :  null;  [CE]  ')'  expected  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =(ruleType  instanceof  RuleType?((  RuleType)ruleType).toName()  :  null;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =(ruleType  instanceof  RuleType?((  RuleType)ruleType).toName()  :  null;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).toName()    :    null;    	non-compiled	[CE]  ')'  expected	39	None	replace
79	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).toName()  :  nameType;  [CE]  cannot  find  symbol  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).toName()  :  nameType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).toName()  :  nameType;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).toName()    :    null;    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
80	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getQualifiedName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  ruleType.getQualifiedName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  ruleType.getQualifiedName();	      NameType    nameType    =    ruleType.getRawClass();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	9	None	replace
81	[BUG]  [BUGGY]  this.nameType  =  nameType.getName(),  concat;  [CE]  ';'  expected  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType.getName(),  concat;  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType.getName(),  concat;	      this.nameType    =    nameType.getName();    	non-compiled	[CE]  ';'  expected	33	None	replace
82	[BUG]  [BUGGY]  this.nameType  =  nameType.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType.restrictByNotNullOrUndefined();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType.restrictByNotNullOrUndefined();	      this.nameType    =    nameType.getName();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
83	[BUG]  [BUGGY]  this.nameType  =  nameType.getName()  +  1;  [CE]  incompatible  types  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType.getName()  +  1;  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType.getName()  +  1;	      this.nameType    =    nameType.getName();    	non-compiled	[CE]  incompatible  types	33	None	replace
84	[BUG]  [BUGGY]  this.nameType  =  nameType.getSimpleName();  [CE]  cannot  find  symbol  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType.getSimpleName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType.getSimpleName();	      this.nameType    =    nameType.getName();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
85	[BUG]  [BUGGY]  this.nameType  =  nameType.toName();  [CE]  cannot  find  symbol  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType.toName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType.toName();	      this.nameType    =    nameType.getName();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
86	[BUG]  [BUGGY]  this.nameType  =  ruleType.getName();  [CE]  incompatible  types  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  ruleType.getName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  ruleType.getName();	      this.nameType    =    nameType.getName();    	non-compiled	[CE]  incompatible  types	33	None	replace
87	[BUG]  [BUGGY]  this.nameType  =  nameType.getName(),  false);  [CE]  ';'  expected  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType.getName(),  false);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType.getName(),  false);	      this.nameType    =    nameType.getName();    	non-compiled	[CE]  ';'  expected	33	None	replace
88	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [CE]  variable  ruleType  might  already  have  been  assigned  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;	  	non-compiled	[CE]  variable  ruleType  might  already  have  been  assigned	35	None	add
89	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  This.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [CE]  cannot  find  symbol  This  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  This.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    This.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;	  	non-compiled	[CE]  cannot  find  symbol  This	35	None	add
90	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [CE]  not  a  statement  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;	  	non-compiled	[CE]  not  a  statement	35	None	add
91	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  RuleType  ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  RuleType  ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    RuleType  ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;	  	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	35	None	add
92	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [CE]  ')'  expected  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;	  	non-compiled	[CE]  ')'  expected	35	None	add
93	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);  [CE]  ';'  expected  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);	  	non-compiled	[CE]  ';'  expected	35	None	add
94	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  NameType  ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  NameType  ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    NameType  ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;	  	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	35	None	add
95	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  RuleType  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [CE]  ';'  expected  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  RuleType  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    RuleType  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;	  	non-compiled	[CE]  ';'  expected	35	None	add
96	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);  [CE]  incompatible  types  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);	  	non-compiled	[CE]  incompatible  types	35	None	add
97	[BUG]  [BUGGY]  this.ruleType  =  ruleType.NAME_PREFIXES;  [CE]  cannot  find  symbol  NAME_PREFIXES  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.NAME_PREFIXES;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.NAME_PREFIXES;	  this.ruleType    =    NameType.NAME_PREFIXES;    	non-compiled	[CE]  cannot  find  symbol  NAME_PREFIXES	19	None	replace
98	[BUG]  [BUGGY]  this.ruleType  =  RuleType.NAME_PREFIXES;  [CE]  cannot  find  symbol  NAME_PREFIXES  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  RuleType.NAME_PREFIXES;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  RuleType.NAME_PREFIXES;	  this.ruleType    =    NameType.NAME_PREFIXES;    	non-compiled	[CE]  cannot  find  symbol  NAME_PREFIXES	19	None	replace
99	[BUG]  [BUGGY]  this.ruleType  =  ruleType.node;  [CE]  cannot  find  symbol  node  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.node;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.node;	  this.ruleType    =    NameType.NAME_PREFIXES;    	non-compiled	[CE]  cannot  find  symbol  node	19	None	replace
100	[BUG]  [BUGGY]  this.ruleType  =  ruleType.null;  [CE]  <identifier>  expected  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.null;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.null;	  this.ruleType    =    NameType.NAME_PREFIXES;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
101	[BUG]  [BUGGY]  this.ruleType  =  RuleType.NAME;  [CE]  cannot  find  symbol  NAME  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  RuleType.NAME;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  RuleType.NAME;	  this.ruleType    =    NameType.NAME_PREFIXES;    	non-compiled	[CE]  cannot  find  symbol  NAME	19	None	replace
102	[BUG]  [BUGGY]  NameType  nameType  =  this.nameType.getName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  this.nameType.getName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  this.nameType.getName();	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	3	None	replace
103	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  Context.NAME_PREFIXES);  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  Context.NAME_PREFIXES);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  Context.NAME_PREFIXES);	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	3	None	replace
104	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName());  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  new  NameType(nameType.getName());	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	3	None	replace
105	[BUG]  [BUGGY]  NameType  nameType  =  this.ruleType.getName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  this.ruleType.getName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  this.ruleType.getName();	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	3	None	replace
106	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getName());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getName());  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getName());	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	3	None	replace
107	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getSimpleName());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getSimpleName());  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getSimpleName());	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	3	None	replace
108	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getParameterTypes());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getParameterTypes());  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getParameterTypes());	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	3	None	replace
109	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  concat);  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  concat);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  concat);	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	3	None	replace
110	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(ruleType,  PhonemeBuilder.DEFAULT_MAX_PHONEMES);  [CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(ruleType,  PhonemeBuilder.DEFAULT_MAX_PHONEMES);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(ruleType,  PhonemeBuilder.DEFAULT_MAX_PHONEMES);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES	27	None	replace
111	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(defaultRules);  [CE]  cannot  find  symbol  defaultRules  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(defaultRules);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(defaultRules);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol  defaultRules	27	None	replace
112	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(false);  [CE]  cannot  find  symbol  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(false);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(false);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
113	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(ruleType,  PhonemeBuilder.class);  [CE]  cannot  find  symbol  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(ruleType,  PhonemeBuilder.class);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(ruleType,  PhonemeBuilder.class);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
114	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(numberType);  [CE]  cannot  find  symbol  numberType  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(numberType);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(numberType);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol  numberType	27	None	replace
115	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(null);  [CE]  cannot  find  symbol  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(null);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(null);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
116	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  nameType;  [CE]  incompatible  types  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  nameType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  nameType;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).getName()    :    ruleType;    	non-compiled	[CE]  incompatible  types	42	None	replace
117	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  ruleType.name;  [CE]  name  has  private  access  in  RuleType  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  ruleType.name;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  ruleType.name;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).getName()    :    ruleType;    	non-compiled	[CE]  name  has  private  access  in  RuleType	42	None	replace
118	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  ruleType.toString();  [CE]  incompatible  types  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  ruleType.toString();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  ruleType.toString();	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).getName()    :    ruleType;    	non-compiled	[CE]  incompatible  types	42	None	replace
119	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  ruleType.type;  [CE]  cannot  find  symbol  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  ruleType.type;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  ruleType.type;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).getName()    :    ruleType;    	non-compiled	[CE]  cannot  find  symbol  type	42	None	replace
120	[BUG]  [BUGGY]  this.ruleType  =  nameType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  ruleType;  [CE]  inconvertible  types  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  nameType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  nameType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  ruleType;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).getName()    :    ruleType;    	non-compiled	[CE]  inconvertible  types	42	None	replace
121	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  ruleType.nameType;  [CE]  cannot  find  symbol  nameType  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  ruleType.nameType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  ruleType.nameType;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).getName()    :    ruleType;    	non-compiled	[CE]  cannot  find  symbol  nameType	42	None	replace
122	[BUG]  [BUGGY]  NameType  ruleType  =  this.ruleType.getRuleType();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  this.ruleType.getRuleType();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  this.ruleType.getRuleType();	      NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	28	None	replace
123	[BUG]  [BUGGY]  NameType  ruleType  =  this.nameType.getRuleType();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  this.nameType.getRuleType();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  this.nameType.getRuleType();	      NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	28	None	replace
124	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRawType();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  nameType.getRawType();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  nameType.getRawType();	      NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	28	None	replace
125	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRuleType(null);  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  nameType.getRuleType(null);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  nameType.getRuleType(null);	      NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	28	None	replace
126	[BUG]  [BUGGY]  NameType  ruleType  =  type.getRuleType();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  type.getRuleType();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  type.getRuleType();	      NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	28	None	replace
127	[BUG]  [BUGGY]  NameType  ruleType  =  ruleType.getRules();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  ruleType.getRules();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  ruleType.getRules();	      NameType    ruleType    =    nameType.getRules();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	32	None	replace
128	[BUG]  [BUGGY]  NameType  ruleType  =  NAME_PREFIXES.getRules();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  NAME_PREFIXES.getRules();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  NAME_PREFIXES.getRules();	      NameType    ruleType    =    nameType.getRules();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	32	None	replace
129	[BUG]  [BUGGY]  NameType  ruleType  =  finalRules.getRules();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  finalRules.getRules();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  finalRules.getRules();	      NameType    ruleType    =    nameType.getRules();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	32	None	replace
130	[BUG]  [BUGGY]  NameType  ruleType  =  this.nameType.getRules();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  this.nameType.getRules();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  this.nameType.getRules();	      NameType    ruleType    =    nameType.getRules();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	32	None	replace
131	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRawRules();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  nameType.getRawRules();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  nameType.getRawRules();	      NameType    ruleType    =    nameType.getRules();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	32	None	replace
132	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRules();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  ruleType.getRules();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  ruleType.getRules();	      NameType    ruleType    =    nameType.getRules();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	32	None	replace
133	[BUG]  [BUGGY]  NameType  ruleType  =  NAME_PREFIXES.getRuleType(ruleType);  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  NAME_PREFIXES.getRuleType(ruleType);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  NAME_PREFIXES.getRuleType(ruleType);	      NameType    ruleType    =    nameType.getRules();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	32	None	replace
134	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRules(null);  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  nameType.getRules(null);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  nameType.getRules(null);	      NameType    ruleType    =    nameType.getRules();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	32	None	replace
135	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  NAME_PREFIXES;  [CE]  cannot  find  symbol  nameType  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  NAME_PREFIXES;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  NAME_PREFIXES;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).nameType    :    nameType;    	non-compiled	[CE]  cannot  find  symbol  nameType	40	None	replace
136	[BUG]  [BUGGY]  this.ruleType  =  nameType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  ruleType;  [CE]  inconvertible  types  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  nameType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  nameType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  ruleType;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).nameType    :    nameType;    	non-compiled	[CE]  inconvertible  types	40	None	replace
137	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  null;  [CE]  cannot  find  symbol  nameType  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  null;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  null;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).nameType    :    nameType;    	non-compiled	[CE]  cannot  find  symbol  nameType	40	None	replace
138	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  title;  [CE]  cannot  find  symbol  nameType  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  title;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  title;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).nameType    :    nameType;    	non-compiled	[CE]  cannot  find  symbol  nameType	40	None	replace
139	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  NameType.NAME_PREFIXES;  [CE]  cannot  find  symbol  nameType  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  NameType.NAME_PREFIXES;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  NameType.NAME_PREFIXES;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).nameType    :    nameType;    	non-compiled	[CE]  cannot  find  symbol  nameType	40	None	replace
140	[BUG]  [BUGGY]  this.ruleType  =  nameType.toString();  [CE]  incompatible  types  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  nameType.toString();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  nameType.toString();	  this.ruleType    =    ruleType.toString();    	non-compiled	[CE]  incompatible  types	15	None	replace
141	[BUG]  [BUGGY]  this.ruleType  =  ruleType.nameType();  [CE]  cannot  find  symbol  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.nameType();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.nameType();	  this.ruleType    =    ruleType.toString();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
142	[BUG]  [BUGGY]  this.ruleType  =  ruleType.toString(),  concat;  [CE]  ';'  expected  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.toString(),  concat;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.toString(),  concat;	  this.ruleType    =    ruleType.toString();    	non-compiled	[CE]  ';'  expected	15	None	replace
143	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getRawType();  [CE]  cannot  find  symbol  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.getRawType();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.getRawType();	  this.ruleType    =    ruleType.toString();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
144	[BUG]  [BUGGY]  this.ruleType  =  ruleType.toString(),  nameType);  [CE]  ';'  expected  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.toString(),  nameType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.toString(),  nameType);	  this.ruleType    =    ruleType.toString();    	non-compiled	[CE]  ';'  expected	15	None	replace
145	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.toString()  : "null ";  [CE]  incompatible  types  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType!=  null?  nameType.toString()  : "null ";  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType!=  null?  nameType.toString()  : "null ";	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  incompatible  types	34	None	replace
146	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.toString()  : "null ";  [CE]  incompatible  types  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.toString()  : "null ";  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType  ==  null?  nameType.toString()  : "null ";	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  incompatible  types	34	None	replace
147	[BUG]  [BUGGY]  this.nameType  =  nameType.substring(0,  nameType.length()  -  1);  [CE]  cannot  find  symbol  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType.substring(0,  nameType.length()  -  1);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType.substring(0,  nameType.length()  -  1);	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
148	[BUG]  [BUGGY]  this.nameType  =  ruleType.toString();  [CE]  incompatible  types  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  ruleType.toString();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  ruleType.toString();	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  incompatible  types	34	None	replace
149	[BUG]  [BUGGY]  this.nameType  =  nameType.toLowerCase();  [CE]  cannot  find  symbol  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType.toLowerCase();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType.toLowerCase();	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
150	[BUG]  [BUGGY]  this.nameType  =  nameType.substring(0,  nameType.length()  -  2);  [CE]  cannot  find  symbol  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType.substring(0,  nameType.length()  -  2);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType.substring(0,  nameType.length()  -  2);	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
151	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getSimpleName(),  nameType);  [CE]  cannot  find  symbol  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getSimpleName(),  nameType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getSimpleName(),  nameType);	  this.ruleType    =    new    RuleType(ruleType.getSimpleName());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
152	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType,  nameType.getSimpleName());  [CE]  cannot  find  symbol  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType,  nameType.getSimpleName());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType,  nameType.getSimpleName());	  this.ruleType    =    new    RuleType(ruleType.getSimpleName());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
153	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getSimpleName(),  ruleType.getSimpleName());  [CE]  cannot  find  symbol  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getSimpleName(),  ruleType.getSimpleName());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getSimpleName(),  ruleType.getSimpleName());	  this.ruleType    =    new    RuleType(ruleType.getSimpleName());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
154	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getSimpleName(),  concat);  [CE]  cannot  find  symbol  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getSimpleName(),  concat);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getSimpleName(),  concat);	  this.ruleType    =    new    RuleType(ruleType.getSimpleName());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
155	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getSimpleName(),  NAME_PREFIXES);  [CE]  cannot  find  symbol  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getSimpleName(),  NAME_PREFIXES);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getSimpleName(),  NAME_PREFIXES);	  this.ruleType    =    new    RuleType(ruleType.getSimpleName());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
156	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getSimpleName(),  ruleType);  [CE]  cannot  find  symbol  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getSimpleName(),  ruleType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getSimpleName(),  ruleType);	  this.ruleType    =    new    RuleType(ruleType.getSimpleName());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
157	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType,  ruleType.getSimpleName());  [CE]  cannot  find  symbol  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType,  ruleType.getSimpleName());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType,  ruleType.getSimpleName());	  this.ruleType    =    new    RuleType(ruleType.getSimpleName());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
158	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getSimpleName(),  null);  [CE]  cannot  find  symbol  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getSimpleName(),  null);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getSimpleName(),  null);	  this.ruleType    =    new    RuleType(ruleType.getSimpleName());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
159	[BUG]  [BUGGY]  this.ruleType  =  ruleType.name;  [CE]  name  has  private  access  in  RuleType  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.name;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.name;	  this.ruleType    =    ruleType.nameType;    	non-compiled	[CE]  name  has  private  access  in  RuleType	13	None	replace
160	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getNameType();  [CE]  cannot  find  symbol  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.getNameType();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.getNameType();	  this.ruleType    =    ruleType.nameType;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
161	[BUG]  [BUGGY]  this.ruleType  =  ruleType.type;  [CE]  cannot  find  symbol  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.type;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.type;	  this.ruleType    =    ruleType.nameType;    	non-compiled	[CE]  cannot  find  symbol  type	13	None	replace
162	[BUG]  [BUGGY]  this.ruleType  =  ruleType.toNameType;  [CE]  cannot  find  symbol  toNameType  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.toNameType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.toNameType;	  this.ruleType    =    ruleType.nameType;    	non-compiled	[CE]  cannot  find  symbol  toNameType	13	None	replace
163	[BUG]  [BUGGY]  this.ruleType  =  ruleType.newNameType;  [CE]  cannot  find  symbol  newNameType  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.newNameType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.newNameType;	  this.ruleType    =    ruleType.nameType;    	non-compiled	[CE]  cannot  find  symbol  newNameType	13	None	replace
164	[BUG]  [BUGGY]  NameType  nameType  =  this.ruleType.getReferenceName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  this.ruleType.getReferenceName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  this.ruleType.getReferenceName();	      NameType    nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	8	None	replace
165	[BUG]  [BUGGY]  NameType  nameType  =  this.nameType.getReferenceName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  this.nameType.getReferenceName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  this.nameType.getReferenceName();	      NameType    nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	8	None	replace
166	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getReferenceName());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getReferenceName());  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  new  NameType(nameType.getReferenceName());	      NameType    nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	8	None	replace
167	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getReferenceName());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getReferenceName());  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getReferenceName());	      NameType    nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	8	None	replace
168	[BUG]  [BUGGY]  NameType  nameType  =  type.getReferenceName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  type.getReferenceName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  type.getReferenceName();	      NameType    nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	8	None	replace
169	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(ruleType);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(ruleType);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(ruleType);	      this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	4	None	replace
170	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  concat);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  concat);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  concat);	      this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	4	None	replace
171	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  maxPhonemes);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  maxPhonemes);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  maxPhonemes);	      this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	4	None	replace
172	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  false);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  false);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  false);	      this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	4	None	replace
173	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  ruleType);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  ruleType);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  ruleType);	      this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	4	None	replace
174	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType);	      this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	4	None	replace
175	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  null);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  null);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  null);	      this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	4	None	replace
176	[BUG]  [BUGGY]  this.phonemes  =  PhonemeBuilder.instance(nameType);  [CE]  cannot  find  symbol  phonemes  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.phonemes  =  PhonemeBuilder.instance(nameType);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.phonemes  =  PhonemeBuilder.instance(nameType);	      this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol  phonemes	4	None	replace
177	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getFunctionType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  ruleType.getFunctionType();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  ruleType.getFunctionType();	      NameType    nameType    =    ruleType.getRuleType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	6	None	replace
178	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRawNameType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  ruleType.getRawNameType();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  ruleType.getRawNameType();	      NameType    nameType    =    ruleType.getRuleType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	6	None	replace
179	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.nameType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  ruleType.nameType();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  ruleType.nameType();	      NameType    nameType    =    ruleType.getNameType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	2	None	replace
180	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getNameType(),  concat;  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  ruleType.getNameType(),  concat;  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  ruleType.getNameType(),  concat;	      NameType    nameType    =    ruleType.getNameType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	2	None	replace
181	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getSimpleNameType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  ruleType.getSimpleNameType();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  ruleType.getSimpleNameType();	      NameType    nameType    =    ruleType.getNameType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	2	None	replace
182	[BUG]  [BUGGY]  this.ruleType  =  nameType  instanceof  RuleType?((  RuleType)ruleType).getRawClass()  :  ruleType;  [CE]  inconvertible  types  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  nameType  instanceof  RuleType?((  RuleType)ruleType).getRawClass()  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  nameType  instanceof  RuleType?((  RuleType)ruleType).getRawClass()  :  ruleType;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).getRawClass()    :    ruleType;    	non-compiled	[CE]  inconvertible  types	37	None	replace
183	[BUG]  [BUGGY]  this.ruleType  =(ruleType  instanceof  RuleType?((  RuleType)ruleType).getRawClass()  :  ruleType;  [CE]  ')'  expected  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =(ruleType  instanceof  RuleType?((  RuleType)ruleType).getRawClass()  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =(ruleType  instanceof  RuleType?((  RuleType)ruleType).getRawClass()  :  ruleType;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).getRawClass()    :    ruleType;    	non-compiled	[CE]  ')'  expected	37	None	replace
184	[BUG]  [BUGGY]  this.ruleType  =(ruleType  instanceof  RuleType)?((  RuleType)ruleType).getRawClass()  :  ruleType;  [CE]  cannot  find  symbol  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =(ruleType  instanceof  RuleType)?((  RuleType)ruleType).getRawClass()  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =(ruleType  instanceof  RuleType)?((  RuleType)ruleType).getRawClass()  :  ruleType;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).getRawClass()    :    ruleType;    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
185	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getRawClass()  :  nameType;  [CE]  cannot  find  symbol  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getRawClass()  :  nameType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getRawClass()  :  nameType;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).getRawClass()    :    ruleType;    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
186	[BUG]  [BUGGY]  this.phonemes  =  PhonemeBuilder.instance();  [CE]  cannot  find  symbol  phonemes  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.phonemes  =  PhonemeBuilder.instance();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.phonemes  =  PhonemeBuilder.instance();	      this.phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol  phonemes	10	None	replace
187	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(null);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(null);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(null);	      this.phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	10	None	replace
188	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(numberType);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(numberType);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(numberType);	      this.phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	10	None	replace
189	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(false);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]                                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(false);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(false);	      this.phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	10	None	replace
190	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(defaultRuleType);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]                                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(defaultRuleType);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(defaultRuleType);	      this.phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	10	None	replace
191	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(defaultRules);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]                                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(defaultRules);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(defaultRules);	      this.phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	10	None	replace
192	[BUG]  [BUGGY]  this.ruleType  = "ruleType ";  [CE]  incompatible  types  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  = "ruleType ";  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  = "ruleType ";	  this.ruleType    =    nameType;    	non-compiled	[CE]  incompatible  types	11	None	replace
193	[BUG]  [BUGGY]  this.ruleType  =  ruleType,  nameType;  [CE]  ';'  expected  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType,  nameType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType,  nameType;	  this.ruleType    =    nameType;    	non-compiled	[CE]  ';'  expected	11	None	replace
194	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  RuleType.RULES;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	add	this.ruleType  =  RuleType.RULES;	  this.ruleType    =    nameType;    	compilable	  [FE]  ExceptionInInitializerError  	11	4	replace
195	[BUG]  [BUGGY]  this.ruleType  =  RuleType.RULES;  [FE]  ExceptionInInitializerError  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  RuleType.RULES;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  RuleType.RULES;	  this.ruleType    =    nameType;    	compilable	  [FE]  ExceptionInInitializerError  	11	4	replace
196	[BUG]  [BUGGY]  this.ruleType  =  RuleType.FUNCTION;  [CE]  cannot  find  symbol  FUNCTION  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  RuleType.FUNCTION;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  RuleType.FUNCTION;	  this.ruleType    =    nameType;    	non-compiled	[CE]  cannot  find  symbol  FUNCTION	11	None	replace
197	[BUG]  [BUGGY]  this.ruleType  =  RuleType.FUNCTION_EXPRESSION;  [CE]  cannot  find  symbol  FUNCTION_EXPRESSION  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  RuleType.FUNCTION_EXPRESSION;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  RuleType.FUNCTION_EXPRESSION;	  this.ruleType    =    nameType;    	non-compiled	[CE]  cannot  find  symbol  FUNCTION_EXPRESSION	11	None	replace
198	[BUG]  [BUGGY]  this.ruleType  =  nameType.getName();  [CE]  incompatible  types  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  nameType.getName();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  nameType.getName();	  this.ruleType    =    ruleType.getName();    	non-compiled	[CE]  incompatible  types	16	None	replace
199	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getReferenceName();  [CE]  cannot  find  symbol  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.getReferenceName();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.getReferenceName();	  this.ruleType    =    ruleType.getName();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
200	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getRawName();  [CE]  cannot  find  symbol  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.getRawName();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.getRawName();	  this.ruleType    =    ruleType.getName();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
201	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat;  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat;  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  ruleType.getName(),  concat;	      NameType    nameType    =    ruleType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	1	None	replace
202	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat);  [CE]  ';'  expected  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  ruleType.getName(),  concat);	      NameType    nameType    =    ruleType.getName();    	non-compiled	[CE]  ';'  expected	1	None	replace
203	[BUG]  [BUGGY]  NameType  ruleType  =  ruleType.getReferenceName();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  ruleType.getReferenceName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  ruleType.getReferenceName();	      NameType    ruleType    =    nameType.getReferenceName();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	31	None	replace
204	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRawName();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  nameType.getRawName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  nameType.getRawName();	      NameType    ruleType    =    nameType.getReferenceName();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	31	None	replace
205	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getName();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  nameType.getName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  nameType.getName();	      NameType    ruleType    =    nameType.getReferenceName();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	31	None	replace
206	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getSimpleName();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  nameType.getSimpleName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  nameType.getSimpleName();	      NameType    ruleType    =    nameType.getReferenceName();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	31	None	replace
207	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getFunctionName();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  nameType.getFunctionName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  nameType.getFunctionName();	      NameType    ruleType    =    nameType.getReferenceName();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	31	None	replace
208	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).toString()  :  nameType;  [CE]  incompatible  types  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).toString()  :  nameType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).toString()  :  nameType;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).toString()    :    null;    	non-compiled	[CE]  incompatible  types	38	None	replace
209	[BUG]  [BUGGY]  this.ruleType  =  nameType  instanceof  RuleType?((  RuleType)ruleType).toString()  :  null;  [CE]  inconvertible  types  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  nameType  instanceof  RuleType?((  RuleType)ruleType).toString()  :  null;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  nameType  instanceof  RuleType?((  RuleType)ruleType).toString()  :  null;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).toString()    :    null;    	non-compiled	[CE]  inconvertible  types	38	None	replace
210	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).toString()  :  NAME_PREFIXES;  [CE]  incompatible  types  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).toString()  :  NAME_PREFIXES;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).toString()  :  NAME_PREFIXES;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).toString()    :    null;    	non-compiled	[CE]  incompatible  types	38	None	replace
211	[BUG]  [BUGGY]  this.ruleType  =(ruleType  instanceof  RuleType)?((  RuleType)ruleType).toString()  :  null;  [CE]  incompatible  types  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =(ruleType  instanceof  RuleType)?((  RuleType)ruleType).toString()  :  null;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =(ruleType  instanceof  RuleType)?((  RuleType)ruleType).toString()  :  null;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).toString()    :    null;    	non-compiled	[CE]  incompatible  types	38	None	replace
212	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).toString()  :  String.valueOf(this.maxPhonemes);  [CE]  incompatible  types  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).toString()  :  String.valueOf(this.maxPhonemes);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).toString()  :  String.valueOf(this.maxPhonemes);	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).toString()    :    null;    	non-compiled	[CE]  incompatible  types	38	None	replace
213	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  ==  null?  null  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	add	this.ruleType  =  ruleType  ==  null?  null  :  ruleType;	  this.ruleType    =    ruleType    {    null?    null    :    ruleType;    	compilable	  [FE]  ExceptionInInitializerError  	18	4	replace
214	[BUG]  [BUGGY]  this.ruleType  =  ruleType  ==  null?  null  :  ruleType;  [FE]  ExceptionInInitializerError  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  ==  null?  null  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  ==  null?  null  :  ruleType;	  this.ruleType    =    ruleType    {    null?    null    :    ruleType;    	compilable	  [FE]  ExceptionInInitializerError  	18	4	replace
215	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType!=  null?  null  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	add	this.ruleType  =  ruleType!=  null?  null  :  ruleType;	  this.ruleType    =    ruleType    {    null?    null    :    ruleType;    	compilable	  [FE]  ExceptionInInitializerError  	18	4	replace
216	[BUG]  [BUGGY]  this.ruleType  =  ruleType!=  null?  null  :  ruleType;  [FE]  ExceptionInInitializerError  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType!=  null?  null  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType!=  null?  null  :  ruleType;	  this.ruleType    =    ruleType    {    null?    null    :    ruleType;    	compilable	  [FE]  ExceptionInInitializerError  	18	4	replace
217	[BUG]  [BUGGY]  this.ruleType  =  ruleType  ==  null? "null "  :  ruleType;  [CE]  incompatible  types  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  ==  null? "null "  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  ==  null? "null "  :  ruleType;	  this.ruleType    =    ruleType    {    null?    null    :    ruleType;    	non-compiled	[CE]  incompatible  types	18	None	replace
218	[BUG]  [BUGGY]  this.ruleType  =  ruleType  ==  null?  null  :  ruleType.nameType;  [CE]  cannot  find  symbol  nameType  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  ==  null?  null  :  ruleType.nameType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  ==  null?  null  :  ruleType.nameType;	  this.ruleType    =    ruleType    {    null?    null    :    ruleType;    	non-compiled	[CE]  cannot  find  symbol  nameType	18	None	replace
219	[BUG]  [BUGGY]  this.ruleType  =  ruleType  ==  null? " "  :  ruleType;  [CE]  incompatible  types  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  ==  null? " "  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  ==  null? " "  :  ruleType;	  this.ruleType    =    ruleType    {    null?    null    :    ruleType;    	non-compiled	[CE]  incompatible  types	18	None	replace
220	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]                                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  nameType  ==  null?  null  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	add	this.ruleType  =  nameType  ==  null?  null  :  ruleType;	  this.ruleType    =    ruleType    {    null?    null    :    ruleType;    	compilable	  [FE]  ExceptionInInitializerError  	18	4	replace
221	[BUG]  [BUGGY]  this.ruleType  =  nameType  ==  null?  null  :  ruleType;  [FE]  ExceptionInInitializerError  [FE]                                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  nameType  ==  null?  null  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  nameType  ==  null?  null  :  ruleType;	  this.ruleType    =    ruleType    {    null?    null    :    ruleType;    	compilable	  [FE]  ExceptionInInitializerError  	18	4	replace
222	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getReturnType()  :  nameType;  [CE]  cannot  find  symbol  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getReturnType()  :  nameType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getReturnType()  :  nameType;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).getReturnType()    :    ruleType;    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
223	[BUG]  [BUGGY]  this.ruleType  =  nameType  instanceof  RuleType?((  RuleType)ruleType).getReturnType()  :  ruleType;  [CE]  inconvertible  types  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  nameType  instanceof  RuleType?((  RuleType)ruleType).getReturnType()  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  nameType  instanceof  RuleType?((  RuleType)ruleType).getReturnType()  :  ruleType;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).getReturnType()    :    ruleType;    	non-compiled	[CE]  inconvertible  types	41	None	replace
224	[BUG]  [BUGGY]  this.ruleType  =(ruleType  instanceof  RuleType?((  RuleType)ruleType).getReturnType()  :  ruleType;  [CE]  ')'  expected  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =(ruleType  instanceof  RuleType?((  RuleType)ruleType).getReturnType()  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =(ruleType  instanceof  RuleType?((  RuleType)ruleType).getReturnType()  :  ruleType;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).getReturnType()    :    ruleType;    	non-compiled	[CE]  ')'  expected	41	None	replace
225	[BUG]  [BUGGY]  this.ruleType  =(ruleType  instanceof  RuleType)?((  RuleType)ruleType).getReturnType()  :  ruleType;  [CE]  cannot  find  symbol  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =(ruleType  instanceof  RuleType)?((  RuleType)ruleType).getReturnType()  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =(ruleType  instanceof  RuleType)?((  RuleType)ruleType).getReturnType()  :  ruleType;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).getReturnType()    :    ruleType;    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
226	[BUG]  [BUGGY]  this.ruleType  =  type  instanceof  RuleType?((  RuleType)ruleType).getReturnType()  :  ruleType;  [CE]  cannot  find  symbol  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  type  instanceof  RuleType?((  RuleType)ruleType).getReturnType()  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  type  instanceof  RuleType?((  RuleType)ruleType).getReturnType()  :  ruleType;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).getReturnType()    :    ruleType;    	non-compiled	[CE]  cannot  find  symbol  type	41	None	replace
227	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	add	this.ruleType  =(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);	  this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    	compilable	  [FE]  ExceptionInInitializerError  	36	4	replace
228	[BUG]  [BUGGY]  this.ruleType  =(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);	  this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    	compilable	  [FE]  ExceptionInInitializerError  	36	4	replace
229	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType  &(RuleType)ruleType  :  ruleType;  [CE]  ';'  expected  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType  &(RuleType)ruleType  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType  &(RuleType)ruleType  :  ruleType;	  this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    	non-compiled	[CE]  ';'  expected	36	None	replace
230	[BUG]  [BUGGY]  this.ruleType  =  nameType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [CE]  inconvertible  types  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  nameType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  nameType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;	  this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    	non-compiled	[CE]  inconvertible  types	36	None	replace
231	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  null;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	add	this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  null;	  this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    	compilable	  [FE]  ExceptionInInitializerError  	36	4	replace
232	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  null;  [FE]  ExceptionInInitializerError  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  null;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  null;	  this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    	compilable	  [FE]  ExceptionInInitializerError  	36	4	replace
233	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instancesof  RuleType?(RuleType)ruleType  :  ruleType;  [CE]  ';'  expected  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instancesof  RuleType?(RuleType)ruleType  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instancesof  RuleType?(RuleType)ruleType  :  ruleType;	  this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    	non-compiled	[CE]  ';'  expected	36	None	replace
234	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType,  ruleType);  [CE]  enum  types  may  not  be  instantiated  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(nameType,  ruleType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(nameType,  ruleType);	  this.ruleType    =    new    RuleType(ruleType,    nameType);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	22	None	replace
235	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(NameType.NAME_PREFIXES,  nameType);  [CE]  cannot  find  symbol  NAME_PREFIXES  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(NameType.NAME_PREFIXES,  nameType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(NameType.NAME_PREFIXES,  nameType);	  this.ruleType    =    new    RuleType(ruleType,    nameType);    	non-compiled	[CE]  cannot  find  symbol  NAME_PREFIXES	22	None	replace
236	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType,  nameType,  concat);  [CE]  enum  types  may  not  be  instantiated  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType,  nameType,  concat);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType,  nameType,  concat);	  this.ruleType    =    new    RuleType(ruleType,    nameType);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	22	None	replace
237	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType,  nameType,  maxPhonemes);  [CE]  enum  types  may  not  be  instantiated  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType,  nameType,  maxPhonemes);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType,  nameType,  maxPhonemes);	  this.ruleType    =    new    RuleType(ruleType,    nameType);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	22	None	replace
238	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(type,  ruleType);  [CE]  cannot  find  symbol  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(type,  ruleType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(type,  ruleType);	  this.ruleType    =    new    RuleType(ruleType,    nameType);    	non-compiled	[CE]  cannot  find  symbol  type	22	None	replace
239	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(numberType,  ruleType);  [CE]  cannot  find  symbol  numberType  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(numberType,  ruleType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(numberType,  ruleType);	  this.ruleType    =    new    RuleType(ruleType,    nameType);    	non-compiled	[CE]  cannot  find  symbol  numberType	22	None	replace
240	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(type,  nameType);  [CE]  cannot  find  symbol  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(type,  nameType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(type,  nameType);	  this.ruleType    =    new    RuleType(ruleType,    nameType);    	non-compiled	[CE]  cannot  find  symbol  type	22	None	replace
241	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  0);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  0);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  0);	      this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	4	None	replace
242	[BUG]  [BUGGY]  this.ruleType  =  rules  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [CE]  cannot  find  symbol  rules  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  rules  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  rules  instanceof  RuleType?(RuleType)ruleType  :  ruleType;	  this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    	non-compiled	[CE]  cannot  find  symbol  rules	36	None	replace
243	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  rules;  [CE]  cannot  find  symbol  rules  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  rules;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  rules;	  this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    	non-compiled	[CE]  cannot  find  symbol  rules	36	None	replace
244	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RoleType)ruleType  :  ruleType;  [CE]  cannot  find  symbol  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RoleType)ruleType  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?(RoleType)ruleType  :  ruleType;	  this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
245	[BUG]  [BUGGY]  This.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [CE]  cannot  find  symbol  This  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  This.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	This.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;	  this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    	non-compiled	[CE]  cannot  find  symbol  This	36	None	replace
246	[BUG]  [BUGGY]  this.nameType  =  NameType.DEFAULT_PREFIXES;  [CE]  cannot  find  symbol  DEFAULT_PREFIXES  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  NameType.DEFAULT_PREFIXES;  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  NameType.DEFAULT_PREFIXES;	      this.nameType    =    nameType;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_PREFIXES	30	None	replace
247	[BUG]  [BUGGY]  this.nameType  =  NameType.DEFAULT_NAM_PHONEMES;  [CE]  cannot  find  symbol  DEFAULT_NAM_PHONEMES  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  NameType.DEFAULT_NAM_PHONEMES;  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  NameType.DEFAULT_NAM_PHONEMES;	      this.nameType    =    nameType;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_NAM_PHONEMES	30	None	replace
248	[BUG]  [BUGGY]  this.nameType  =  NameType.NAME_PLREFIXES;  [CE]  cannot  find  symbol  NAME_PLREFIXES  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  NameType.NAME_PLREFIXES;  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  NameType.NAME_PLREFIXES;	      this.nameType    =    nameType;    	non-compiled	[CE]  cannot  find  symbol  NAME_PLREFIXES	30	None	replace
249	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRawParameterType(0);  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  nameType.getRawParameterType(0);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  nameType.getRawParameterType(0);	      NameType    ruleType    =    nameType.getReferenceName();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	31	None	replace
250	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(0);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(0);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(0);	      this.phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	10	None	replace
251	[BUG]  [BUGGY]  this.ruleType  =  ruleType  >=  null?  null  :  ruleType;  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  >=  null?  null  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  >=  null?  null  :  ruleType;	  this.ruleType    =    ruleType    {    null?    null    :    ruleType;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	18	None	replace
252	[BUG]  [BUGGY]  NameType  nameType  =  nameType.getRawClass();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  nameType.getRawClass();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  nameType.getRawClass();	      NameType    ruleType    =    nameType.getRawClass();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	29	None	replace
253	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRuleType(ruleType.getRawClass());  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  nameType.getRuleType(ruleType.getRawClass());  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  nameType.getRuleType(ruleType.getRawClass());	      NameType    ruleType    =    nameType.getRawClass();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	29	None	replace
254	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRuleType(RuleType.NAME_PREFIXES);  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  nameType.getRuleType(RuleType.NAME_PREFIXES);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  nameType.getRuleType(RuleType.NAME_PREFIXES);	      NameType    ruleType    =    nameType.getRawClass();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	29	None	replace
255	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRuleType(RuleType.RULES);  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  nameType.getRuleType(RuleType.RULES);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  nameType.getRuleType(RuleType.RULES);	      NameType    ruleType    =    nameType.getRawClass();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	29	None	replace
256	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [CE]  ')'  expected  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;	  	non-compiled	[CE]  ')'  expected	35	None	add
257	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  else  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }  [CE]  ')'  expected  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  else  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  else  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }	  	non-compiled	[CE]  ')'  expected	35	None	add
258	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [CE]  ')'  expected  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;	  	non-compiled	[CE]  ')'  expected	35	None	add
259	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);  [CE]  ')'  expected  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);	  	non-compiled	[CE]  ')'  expected	35	None	add
260	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  NameType  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [CE]  ';'  expected  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  NameType  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    NameType  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;	  	non-compiled	[CE]  ';'  expected	35	None	add
261	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);  else  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }  [CE]  incompatible  types  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);  else  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);  else  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }	  	non-compiled	[CE]  incompatible  types	35	None	add
262	[BUG]  [BUGGY]  NameType  nameType  =  NAME_PREFIXES.getName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  NAME_PREFIXES.getName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  NAME_PREFIXES.getName();	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	3	None	replace
263	[BUG]  [BUGGY]  NameType  nameType  =  RuleType.NAME_PREFIXES.getName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  RuleType.NAME_PREFIXES.getName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  RuleType.NAME_PREFIXES.getName();	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	3	None	replace
264	[BUG]  [BUGGY]  NameType  nameType  =  RuleType.class.getSimpleName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  RuleType.class.getSimpleName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  RuleType.class.getSimpleName();	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	3	None	replace
265	[BUG]  [BUGGY]  NameType  nameType  =  RuleType.class.getName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  RuleType.class.getName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  RuleType.class.getName();	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	3	None	replace
266	[BUG]  [BUGGY]  NameType  nameType  =  RuleType.newInstance(null,  ruleType.getName());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  RuleType.newInstance(null,  ruleType.getName());  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  RuleType.newInstance(null,  ruleType.getName());	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	3	None	replace
267	[BUG]  [BUGGY]  NameType  nameType  =  RuleType.newInstance(ruleType.getName());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  RuleType.newInstance(ruleType.getName());  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  RuleType.newInstance(ruleType.getName());	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	3	None	replace
268	[BUG]  [BUGGY]  this.nameType  =  nameType.getNameElement();  [CE]  cannot  find  symbol  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType.getNameElement();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType.getNameElement();	      this.nameType    =    nameType.getName();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
269	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(this.nameType);  [CE]  cannot  find  symbol  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(this.nameType);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(this.nameType);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
270	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  this.ruleType);  [CE]  cannot  find  symbol  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  this.ruleType);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  this.ruleType);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
271	[BUG]  [BUGGY]  this.ruleType  =  ruleType.guessingType;  [CE]  cannot  find  symbol  guessingType  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.guessingType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.guessingType;	  this.ruleType    =    ruleType.nameType;    	non-compiled	[CE]  cannot  find  symbol  guessingType	13	None	replace
272	[BUG]  [BUGGY]  this.ruleType  =  ruleType.nameElement;  [CE]  cannot  find  symbol  nameElement  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.nameElement;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.nameElement;	  this.ruleType    =    ruleType.nameType;    	non-compiled	[CE]  cannot  find  symbol  nameElement	13	None	replace
273	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRawClass(),  NAME_PREFIXES);  [CE]  cannot  find  symbol  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRawClass(),  NAME_PREFIXES);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getRawClass(),  NAME_PREFIXES);	  this.ruleType    =    new    RuleType(ruleType.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
274	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType,  nameType,  NAME_PREFIXES);  [CE]  enum  types  may  not  be  instantiated  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType,  nameType,  NAME_PREFIXES);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType,  nameType,  NAME_PREFIXES);	  this.ruleType    =    new    RuleType(ruleType,    nameType);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	22	None	replace
275	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(this.nameType,  ruleType);  [CE]  enum  types  may  not  be  instantiated  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(this.nameType,  ruleType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(this.nameType,  ruleType);	  this.ruleType    =    new    RuleType(ruleType,    nameType);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	22	None	replace
276	[BUG]  [BUGGY]  this.nameType  =  nameType.toUpperCase();  [CE]  cannot  find  symbol  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType.toUpperCase();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType.toUpperCase();	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
277	[BUG]  [BUGGY]  this.nameType  =  nameType.toPlainString();  [CE]  cannot  find  symbol  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType.toPlainString();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType.toPlainString();	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
278	[BUG]  [BUGGY]  this.nameType  =  nameType.getNameType();  [CE]  cannot  find  symbol  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType.getNameType();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType.getNameType();	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
279	[BUG]  [BUGGY]  this.nameType  =  nameType.toPath();  [CE]  cannot  find  symbol  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType.toPath();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType.toPath();	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
280	[BUG]  [BUGGY]  this.nameType  =  nameType.toFormatter();  [CE]  cannot  find  symbol  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType.toFormatter();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType.toFormatter();	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
281	[BUG]  [BUGGY]  this.ruleType  =  RuleType.UNKNOWN;  [CE]  cannot  find  symbol  UNKNOWN  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  RuleType.UNKNOWN;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  RuleType.UNKNOWN;	  this.ruleType    =    nameType;    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	11	None	replace
282	[BUG]  [BUGGY]  this.ruleType  =  RuleType.FUNCTION_NAME_PREFIXES;  [CE]  cannot  find  symbol  FUNCTION_NAME_PREFIXES  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  RuleType.FUNCTION_NAME_PREFIXES;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  RuleType.FUNCTION_NAME_PREFIXES;	  this.ruleType    =    nameType;    	non-compiled	[CE]  cannot  find  symbol  FUNCTION_NAME_PREFIXES	11	None	replace
283	[BUG]  [BUGGY]  this.ruleType  =  RuleType.FUNCTION_EXPR_RESULT;  [CE]  cannot  find  symbol  FUNCTION_EXPR_RESULT  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  RuleType.FUNCTION_EXPR_RESULT;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  RuleType.FUNCTION_EXPR_RESULT;	  this.ruleType    =    nameType;    	non-compiled	[CE]  cannot  find  symbol  FUNCTION_EXPR_RESULT	11	None	replace
284	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  rules;  [CE]  cannot  find  symbol  rules  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  rules;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  rules;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).getName()    :    ruleType;    	non-compiled	[CE]  cannot  find  symbol  rules	42	None	replace
285	[BUG]  [BUGGY]  This.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getRawClass()  :  ruleType;  [CE]  cannot  find  symbol  This  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  This.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getRawClass()  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	This.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getRawClass()  :  ruleType;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).getRawClass()    :    ruleType;    	non-compiled	[CE]  cannot  find  symbol  This	37	None	replace
286	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getSimplePreFIXES();  [CE]  cannot  find  symbol  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.getSimplePreFIXES();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.getSimplePreFIXES();	  this.ruleType    =    ruleType.getSimpleName();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
287	[BUG]  [BUGGY]  this.ruleType  =  ruleType.findSimpleName();  [CE]  cannot  find  symbol  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.findSimpleName();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.findSimpleName();	  this.ruleType    =    ruleType.getSimpleName();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
288	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getSimplePrettyPrinter();  [CE]  cannot  find  symbol  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.getSimplePrettyPrinter();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.getSimplePrettyPrinter();	  this.ruleType    =    ruleType.getSimpleName();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
289	[BUG]  [BUGGY]  NameType  ruleType  =  NAME_PREFIXES.getRuleType();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  NAME_PREFIXES.getRuleType();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  NAME_PREFIXES.getRuleType();	      NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	28	None	replace
290	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getRuleType( "ruleType ".getRawClass());  [CE]  cannot  find  symbol  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.getRuleType( "ruleType ".getRawClass());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.getRuleType( "ruleType ".getRawClass());	  this.ruleType    =    ruleType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
291	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getRuleType( "ruleType ").getRawClass();  [CE]  cannot  find  symbol  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.getRuleType( "ruleType ").getRawClass();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.getRuleType( "ruleType ").getRawClass();	  this.ruleType    =    ruleType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
292	[BUG]  [BUGGY]  this.ruleType  =  ruleType.findRawClass();  [CE]  cannot  find  symbol  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.findRawClass();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.findRawClass();	  this.ruleType    =    ruleType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
293	[BUG]  [BUGGY]  this.ruleType  =  ruleType.toString(),  nameType;  [CE]  ';'  expected  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.toString(),  nameType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.toString(),  nameType;	  this.ruleType    =    ruleType.toString();    	non-compiled	[CE]  ';'  expected	15	None	replace
294	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRoleType());  [CE]  cannot  find  symbol  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRoleType());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getRoleType());	  this.ruleType    =    new    RuleType(ruleType.getRuleType());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
295	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.toRuleType());  [CE]  cannot  find  symbol  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.toRuleType());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.toRuleType());	  this.ruleType    =    new    RuleType(ruleType.getRuleType());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
296	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getReferenceName());  [CE]  cannot  find  symbol  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getReferenceName());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getReferenceName());	  this.ruleType    =    new    RuleType(ruleType.getRuleType());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
297	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getNameInfo();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  ruleType.getNameInfo();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  ruleType.getNameInfo();	      NameType    nameType    =    ruleType.getReferenceName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	5	None	replace
298	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getLanguage();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  ruleType.getLanguage();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  ruleType.getLanguage();	      NameType    nameType    =    ruleType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	1	None	replace
299	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.toNameType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  ruleType.toNameType();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  ruleType.toNameType();	      NameType    nameType    =    ruleType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	1	None	replace
300	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName(),  nameType,  NAME_PREFIXES);  [CE]  enum  types  may  not  be  instantiated  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName(),  nameType,  NAME_PREFIXES);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getName(),  nameType,  NAME_PREFIXES);	  this.ruleType    =    new    RuleType(ruleType.getName(),    nameType);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	24	None	replace
301	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName(),  nameType,  ruleType);  [CE]  enum  types  may  not  be  instantiated  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName(),  nameType,  ruleType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getName(),  nameType,  ruleType);	  this.ruleType    =    new    RuleType(ruleType.getName(),    nameType);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	24	None	replace
302	[BUG]  [BUGGY]  NameType  nameType  =  RuleType.getRuleType(nameType);  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  RuleType.getRuleType(nameType);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  RuleType.getRuleType(nameType);	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	7	None	replace
303	[BUG]  [BUGGY]  NameType  nameType  =  titleType.getRuleType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  titleType.getRuleType();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  titleType.getRuleType();	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	7	None	replace
304	[BUG]  [BUGGY]  NameType  nameType  =  rules.getRuleType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  rules.getRuleType();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  rules.getRuleType();	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	7	None	replace
305	[BUG]  [BUGGY]  this.ruleType  =  ruleType.nAME_PREFIXES;  [CE]  cannot  find  symbol  nAME_PREFIXES  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.nAME_PREFIXES;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.nAME_PREFIXES;	  this.ruleType    =    NameType.NAME_PREFIXES;    	non-compiled	[CE]  cannot  find  symbol  nAME_PREFIXES	19	None	replace
306	[BUG]  [BUGGY]  this.ruleType  =  ruleType,  NameType.NAME_PREFIXES;  [CE]  ';'  expected  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType,  NameType.NAME_PREFIXES;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType,  NameType.NAME_PREFIXES;	  this.ruleType    =    NameType.NAME_PREFIXES;    	non-compiled	[CE]  ';'  expected	19	None	replace
307	[BUG]  [BUGGY]  this.ruleType  =  RuleType.NAME_TYPE;  [CE]  cannot  find  symbol  NAME_TYPE  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  RuleType.NAME_TYPE;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  RuleType.NAME_TYPE;	  this.ruleType    =    NameType.NAME_PREFIXES;    	non-compiled	[CE]  cannot  find  symbol  NAME_TYPE	19	None	replace
308	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  null;  [CE]  incompatible  types  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  null;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  null;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).toString()    :    null;    	non-compiled	[CE]  incompatible  types	38	None	replace
309	[BUG]  [BUGGY]  this.ruleType  =  ruleType!=  null?((  RuleType)ruleType).toString()  :  null;  [CE]  incompatible  types  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType!=  null?((  RuleType)ruleType).toString()  :  null;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType!=  null?((  RuleType)ruleType).toString()  :  null;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).toString()    :    null;    	non-compiled	[CE]  incompatible  types	38	None	replace
310	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).toString()  :  null,  nameType;  [CE]  ';'  expected  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).toString()  :  null,  nameType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).toString()  :  null,  nameType;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).toString()    :    null;    	non-compiled	[CE]  ';'  expected	38	None	replace
311	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(new  RuleType[]  {  ruleType  }  );  [CE]  cannot  find  symbol  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(new  RuleType[]  {  ruleType  }  );  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(new  RuleType[]  {  ruleType  }  );	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
312	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.INstance();  [CE]  cannot  find  symbol  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.INstance();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.INstance();	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
313	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getLanguage());  [CE]  cannot  find  symbol  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getLanguage());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getLanguage());	  this.ruleType    =    new    RuleType(ruleType.getName());    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
314	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRawName());  [CE]  cannot  find  symbol  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRawName());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getRawName());	  this.ruleType    =    new    RuleType(ruleType.getName());    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
315	[BUG]  [BUGGY]  NameType  ruleType  =  NAME_PREFIXES.getRuleTypes();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  NAME_PREFIXES.getRuleTypes();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  NAME_PREFIXES.getRuleTypes();	      NameType    ruleType    =    nameType.getRules();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	32	None	replace
316	[BUG]  [BUGGY]  NameType  ruleType  =  this.ruleType.getRules();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  this.ruleType.getRules();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  this.ruleType.getRules();	      NameType    ruleType    =    nameType.getRules();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	32	None	replace
317	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getParameterType(0);  [CE]  cannot  find  symbol  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.getParameterType(0);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.getParameterType(0);	  this.ruleType    =    ruleType.getName();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
318	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getNameType(null);  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  ruleType.getNameType(null);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  ruleType.getNameType(null);	      NameType    nameType    =    ruleType.getNameType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	2	None	replace
319	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getNameType( "name ");  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  ruleType.getNameType( "name ");  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  ruleType.getNameType( "name ");	      NameType    nameType    =    ruleType.getNameType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	2	None	replace
320	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getNameType(defaultRules);  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  ruleType.getNameType(defaultRules);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  ruleType.getNameType(defaultRules);	      NameType    nameType    =    ruleType.getNameType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	2	None	replace
321	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.newNameType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  ruleType.newNameType();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  ruleType.newNameType();	      NameType    nameType    =    ruleType.getNameType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	2	None	replace
322	[BUG]  [BUGGY]  this.ruleType  =  ruleType!=  null?  ruleType.getRuleType()  :  ruleType;  [CE]  cannot  find  symbol  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType!=  null?  ruleType.getRuleType()  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType!=  null?  ruleType.getRuleType()  :  ruleType;	  this.ruleType    =    ruleType.getRuleType();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
323	[BUG]  [BUGGY]  this.ruleType  =  ruleType!=  null?  ruleType.getRuleType()  :  null;  [CE]  cannot  find  symbol  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType!=  null?  ruleType.getRuleType()  :  null;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType!=  null?  ruleType.getRuleType()  :  null;	  this.ruleType    =    ruleType.getRuleType();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
324	[BUG]  [BUGGY]  this.ruleType  =  ruleType.findRuleType(null);  [CE]  cannot  find  symbol  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.findRuleType(null);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.findRuleType(null);	  this.ruleType    =    ruleType.getRuleType();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
325	[BUG]  [BUGGY]  NameType  nameType  =  NAME_PREFIXES.getReferenceName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  NAME_PREFIXES.getReferenceName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  NAME_PREFIXES.getReferenceName();	      NameType    nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	8	None	replace
326	[BUG]  [BUGGY]  NameType  nameType  =  RuleType.class.getReferenceName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  RuleType.class.getReferenceName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  RuleType.class.getReferenceName();	      NameType    nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	8	None	replace
327	[BUG]  [BUGGY]  NameType  nameType  =  RuleType.getReferenceName(nameType);  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  RuleType.getReferenceName(nameType);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  RuleType.getReferenceName(nameType);	      NameType    nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	8	None	replace
328	[BUG]  [BUGGY]  NameType  nameType  =  titleType.getReferenceName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  titleType.getReferenceName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  titleType.getReferenceName();	      NameType    nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	8	None	replace
329	[BUG]  [BUGGY]  This.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getReturnType()  :  ruleType;  [CE]  cannot  find  symbol  This  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  This.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getReturnType()  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	This.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getReturnType()  :  ruleType;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).getReturnType()    :    ruleType;    	non-compiled	[CE]  cannot  find  symbol  This	41	None	replace
330	[BUG]  [BUGGY]  this.ruleType  =  ruleType.restrictByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.restrictByNotNullOrUndefined();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.restrictByNotNullOrUndefined();	  this.ruleType    =    ruleType.getRuleType();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
331	[BUG]  [BUGGY]  this.ruleType  =  ruleType!=  null?  ruleType.getRuleType()  :  NAME_PREFIXES;  [CE]  cannot  find  symbol  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType!=  null?  ruleType.getRuleType()  :  NAME_PREFIXES;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType!=  null?  ruleType.getRuleType()  :  NAME_PREFIXES;	  this.ruleType    =    ruleType.getRuleType();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
332	[BUG]  [BUGGY]  NameType  nameType  =  nameType.getNameType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  nameType.getNameType();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  nameType.getNameType();	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	7	None	replace
333	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRuleType(),  NAME_PREFIXES);  [CE]  cannot  find  symbol  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRuleType(),  NAME_PREFIXES);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getRuleType(),  NAME_PREFIXES);	  this.ruleType    =    new    RuleType(ruleType.getRuleType());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
334	[BUG]  [BUGGY]  NameType  nameType  =  nameType.getRawName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  nameType.getRawName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  nameType.getRawName();	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	3	None	replace
335	[BUG]  [BUGGY]  NameType  nameType  =  nameType.toString();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  nameType.toString();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  nameType.toString();	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	3	None	replace
336	[BUG]  [BUGGY]  NameType  nameType  =  nameType.getSimpleName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  nameType.getSimpleName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  nameType.getSimpleName();	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	3	None	replace
337	[BUG]  [BUGGY]  NameType  nameType  =  nameType.getQualifiedName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  nameType  =  nameType.getQualifiedName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  nameType  =  nameType.getQualifiedName();	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	3	None	replace
338	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getSimplePhonemes();  [CE]  cannot  find  symbol  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.getSimplePhonemes();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.getSimplePhonemes();	  this.ruleType    =    ruleType.getSimpleName();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
339	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getSimpleId();  [CE]  cannot  find  symbol  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.getSimpleId();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.getSimpleId();	  this.ruleType    =    ruleType.getSimpleName();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
340	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  NAME_PREFIXES;  [CE]  incompatible  types  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  NAME_PREFIXES;  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType!=  null?  nameType.getName()  :  NAME_PREFIXES;	      this.nameType    =    nameType.getName();    	non-compiled	[CE]  incompatible  types	33	None	replace
341	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  null;  [CE]  incompatible  types  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  null;  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType!=  null?  nameType.getName()  :  null;	      this.nameType    =    nameType.getName();    	non-compiled	[CE]  incompatible  types	33	None	replace
342	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  : "null ";  [CE]  incompatible  types  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  : "null ";  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType!=  null?  nameType.getName()  : "null ";	      this.nameType    =    nameType.getName();    	non-compiled	[CE]  incompatible  types	33	None	replace
343	[BUG]  [BUGGY]  this.nameType  =  nameType.getName()  &&  nameType.isSimpleName();  [CE]  cannot  find  symbol  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType.getName()  &&  nameType.isSimpleName();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType.getName()  &&  nameType.isSimpleName();	      this.nameType    =    nameType.getName();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
344	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(ruleType,  PhonemeBuilder.DEFAULT_PHONEMES);  [CE]  cannot  find  symbol  DEFAULT_PHONEMES  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(ruleType,  PhonemeBuilder.DEFAULT_PHONEMES);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(ruleType,  PhonemeBuilder.DEFAULT_PHONEMES);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_PHONEMES	27	None	replace
345	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(ruleType,  PhonemeBuilder.DEFAULT_PAX_PHONEMES);  [CE]  cannot  find  symbol  DEFAULT_PAX_PHONEMES  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(ruleType,  PhonemeBuilder.DEFAULT_PAX_PHONEMES);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(ruleType,  PhonemeBuilder.DEFAULT_PAX_PHONEMES);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_PAX_PHONEMES	27	None	replace
346	[BUG]  [BUGGY]  this.ruleType  =  ruleType  ==  null?((  RuleType)ruleType).toString()  :  null;  [CE]  incompatible  types  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  ==  null?((  RuleType)ruleType).toString()  :  null;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  ==  null?((  RuleType)ruleType).toString()  :  null;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).toString()    :    null;    	non-compiled	[CE]  incompatible  types	38	None	replace
347	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getRawParameterType(0);  [CE]  cannot  find  symbol  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.getRawParameterType(0);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.getRawParameterType(0);	  this.ruleType    =    ruleType.toString();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
348	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  NAME_PREFIXES);  [CE]  cannot  find  symbol  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  NAME_PREFIXES);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  NAME_PREFIXES);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
349	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  ruleType;  [CE]  cannot  find  symbol  nameType  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  ruleType;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).nameType    :    nameType;    	non-compiled	[CE]  cannot  find  symbol  nameType	40	None	replace
350	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  type;  [CE]  cannot  find  symbol  nameType  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  type;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  type;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).nameType    :    nameType;    	non-compiled	[CE]  cannot  find  symbol  nameType	40	None	replace
351	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  defaultRuleType;  [CE]  cannot  find  symbol  nameType  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  defaultRuleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  defaultRuleType;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).nameType    :    nameType;    	non-compiled	[CE]  cannot  find  symbol  nameType	40	None	replace
352	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  titleType;  [CE]  cannot  find  symbol  nameType  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  titleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  titleType;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).nameType    :    nameType;    	non-compiled	[CE]  cannot  find  symbol  nameType	40	None	replace
353	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRawParameterTypes();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  nameType.getRawParameterTypes();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  nameType.getRawParameterTypes();	      NameType    ruleType    =    nameType.getRules();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	32	None	replace
354	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(!concat)  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }  [CE]  ')'  expected  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(!concat)  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(!concat)  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }	  	non-compiled	[CE]  ')'  expected	35	None	add
355	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(defaultRules!=  null)  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }  [CE]  ')'  expected  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(defaultRules!=  null)  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(defaultRules!=  null)  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }	  	non-compiled	[CE]  ')'  expected	35	None	add
356	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }  else  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  rule  [CE]  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }  else  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  rule  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }  else  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  rule	  	non-compiled	[CE]  	35	None	add
357	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(this.ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }  else  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }  [CE]  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(this.ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }  else  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(this.ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }  else  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }	  	non-compiled	[CE]  	35	None	add
358	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(defaultRules  ==  null)  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }  [CE]  ')'  expected  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(defaultRules  ==  null)  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(defaultRules  ==  null)  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }	  	non-compiled	[CE]  ')'  expected	35	None	add
359	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }  else  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)rule  [CE]  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }  else  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)rule  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }  else  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)rule	  	non-compiled	[CE]  	35	None	add
360	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }  else  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }  [CE]  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }  else  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType);  if(ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }  else  {  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  }	  	non-compiled	[CE]  	35	None	add
361	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruletype  :  ruleType;  [CE]  cannot  find  symbol  ruletype  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruletype  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruletype  :  ruleType;	  this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    	non-compiled	[CE]  cannot  find  symbol  ruletype	36	None	replace
362	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType!=  null?(RuleType)ruleType  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	add	this.ruleType  =  ruleType!=  null?(RuleType)ruleType  :  ruleType;	  this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    	compilable	  [FE]  ExceptionInInitializerError  	36	4	replace
363	[BUG]  [BUGGY]  this.ruleType  =  ruleType!=  null?(RuleType)ruleType  :  ruleType;  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType!=  null?(RuleType)ruleType  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType!=  null?(RuleType)ruleType  :  ruleType;	  this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    	compilable	  [FE]  ExceptionInInitializerError  	36	4	replace
364	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  ==  null?(RuleType)ruleType  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	add	this.ruleType  =  ruleType  ==  null?(RuleType)ruleType  :  ruleType;	  this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    	compilable	  [FE]  ExceptionInInitializerError  	36	4	replace
365	[BUG]  [BUGGY]  this.ruleType  =  ruleType  ==  null?(RuleType)ruleType  :  ruleType;  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  ==  null?(RuleType)ruleType  :  ruleType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  ==  null?(RuleType)ruleType  :  ruleType;	  this.ruleType    =    ruleType    instanceof    RuleType?(RuleType)ruleType    :    ruleType;    	compilable	  [FE]  ExceptionInInitializerError  	36	4	replace
366	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRawClass(),  rules);  [CE]  cannot  find  symbol  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRawClass(),  rules);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getRawClass(),  rules);	  this.ruleType    =    new    RuleType(ruleType.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
367	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRawClass(),  defaultRules);  [CE]  cannot  find  symbol  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRawClass(),  defaultRules);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getRawClass(),  defaultRules);	  this.ruleType    =    new    RuleType(ruleType.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
368	[BUG]  [BUGGY]  this.phonemeBuilders  =  PhonemeBuilder.instance();  [CE]  cannot  find  symbol  phonemeBuilders  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.phonemeBuilders  =  PhonemeBuilder.instance();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.phonemeBuilders  =  PhonemeBuilder.instance();	      this.phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilders	10	None	replace
369	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRawParameterType(0));  [CE]  cannot  find  symbol  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRawParameterType(0));  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getRawParameterType(0));	  this.ruleType    =    new    RuleType(ruleType.getName());    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
370	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.restrictByNotNullOrUndefined();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  NameType  ruleType  =  nameType.restrictByNotNullOrUndefined();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	NameType  ruleType  =  nameType.restrictByNotNullOrUndefined();	      NameType    ruleType    =    nameType.getRawClass();    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	29	None	replace
371	[BUG]  [BUGGY]  this.ruleType  =  ruleType.restrictByNotNullOrUndefined()?  ruleType.getRawClass()  :  ruleType.getRawClass();  [CE]  cannot  find  symbol  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.restrictByNotNullOrUndefined()?  ruleType.getRawClass()  :  ruleType.getRawClass();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.restrictByNotNullOrUndefined()?  ruleType.getRawClass()  :  ruleType.getRawClass();	  this.ruleType    =    ruleType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
372	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getRuleType(ruleType.getRawClass());  [CE]  cannot  find  symbol  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.getRuleType(ruleType.getRawClass());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.getRuleType(ruleType.getRawClass());	  this.ruleType    =    ruleType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
373	[BUG]  [BUGGY]  this.ruleType  =  ruleType.restrictByNotNullOrUndefined()?  null  :  ruleType.getRawClass();  [CE]  cannot  find  symbol  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.restrictByNotNullOrUndefined()?  null  :  ruleType.getRawClass();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.restrictByNotNullOrUndefined()?  null  :  ruleType.getRawClass();	  this.ruleType    =    ruleType.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
374	[BUG]  [BUGGY]  this.ruleType  =  RuleType.OPTIONAL;  [CE]  cannot  find  symbol  OPTIONAL  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  RuleType.OPTIONAL;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  RuleType.OPTIONAL;	  this.ruleType    =    nameType;    	non-compiled	[CE]  cannot  find  symbol  OPTIONAL	11	None	replace
375	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  phonemes);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  phonemes);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  phonemes);	      this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	4	None	replace
376	[BUG]  [BUGGY]  this.ruleType  =  ruleType  ==  null?  null  :  ruleType.getRawParameterType(0);  [CE]  cannot  find  symbol  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  ==  null?  null  :  ruleType.getRawParameterType(0);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  ==  null?  null  :  ruleType.getRawParameterType(0);	  this.ruleType    =    ruleType    {    null?    null    :    ruleType;    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
377	[BUG]  [BUGGY]  this.ruleType  =  ruleType  ==  null?  null  :  ruleType.name;  [CE]  name  has  private  access  in  RuleType  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  ==  null?  null  :  ruleType.name;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  ==  null?  null  :  ruleType.name;	  this.ruleType    =    ruleType    {    null?    null    :    ruleType;    	non-compiled	[CE]  name  has  private  access  in  RuleType	18	None	replace
378	[BUG]  [BUGGY]  this.ruleType  =  ruleType  ==  null?  null  :  ruleType.getRawClass();  [CE]  cannot  find  symbol  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  ==  null?  null  :  ruleType.getRawClass();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  ==  null?  null  :  ruleType.getRawClass();	  this.ruleType    =    ruleType    {    null?    null    :    ruleType;    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
379	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  NameType?(NameType)nameType  :  NAME_PREFIXES;  [CE]  incompatible  types  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType  instanceof  NameType?(NameType)nameType  :  NAME_PREFIXES;  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType  instanceof  NameType?(NameType)nameType  :  NAME_PREFIXES;	      this.nameType    =    nameType;    	non-compiled	[CE]  incompatible  types	30	None	replace
380	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  NameType?((  NameType)nameType).nameType  :  NAME_PREFIXES;  [CE]  cannot  find  symbol  nameType  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType  instanceof  NameType?((  NameType)nameType).nameType  :  NAME_PREFIXES;  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType  instanceof  NameType?((  NameType)nameType).nameType  :  NAME_PREFIXES;	      this.nameType    =    nameType;    	non-compiled	[CE]  cannot  find  symbol  nameType	30	None	replace
381	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  NameType?((  NameType)nameType).nameType  :  RuleType.NAME_PREFIXES;  [CE]  cannot  find  symbol  nameType  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType  instanceof  NameType?((  NameType)nameType).nameType  :  RuleType.NAME_PREFIXES;  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType  instanceof  NameType?((  NameType)nameType).nameType  :  RuleType.NAME_PREFIXES;	      this.nameType    =    nameType;    	non-compiled	[CE]  cannot  find  symbol  nameType	30	None	replace
382	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  NameType?((  NameType)nameType).nameType  :  nameType;  [CE]  cannot  find  symbol  nameType  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType  instanceof  NameType?((  NameType)nameType).nameType  :  nameType;  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType  instanceof  NameType?((  NameType)nameType).nameType  :  nameType;	      this.nameType    =    nameType;    	non-compiled	[CE]  cannot  find  symbol  nameType	30	None	replace
383	[BUG]  [BUGGY]  this.nameType  =  nameType.toString()  + "_ "  +  nameType.toString();  [CE]  incompatible  types  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType.toString()  + "_ "  +  nameType.toString();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType.toString()  + "_ "  +  nameType.toString();	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  incompatible  types	34	None	replace
384	[BUG]  [BUGGY]  this.nameType  =  nameType.toString(),  NAME_PREFIXES);  [CE]  ';'  expected  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType.toString(),  NAME_PREFIXES);  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType.toString(),  NAME_PREFIXES);	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  ';'  expected	34	None	replace
385	[BUG]  [BUGGY]  this.nameType  =  nameType.toString()  + ": "  +  nameType.toString();  [CE]  incompatible  types  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.nameType  =  nameType.toString()  + ": "  +  nameType.toString();  [BUGGY]    this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.nameType  =  nameType.toString()  + ": "  +  nameType.toString();	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  incompatible  types	34	None	replace
386	[BUG]  [BUGGY]  this.ruleType  =  ruleType.naming;  [CE]  cannot  find  symbol  naming  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.naming;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.naming;	  this.ruleType    =    ruleType.nameType;    	non-compiled	[CE]  cannot  find  symbol  naming	13	None	replace
387	[BUG]  [BUGGY]  this.ruleType  =  ruleType.callType;  [CE]  cannot  find  symbol  callType  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.callType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.callType;	  this.ruleType    =    ruleType.nameType;    	non-compiled	[CE]  cannot  find  symbol  callType	13	None	replace
388	[BUG]  [BUGGY]  this.ruleType  =  ruleType.guessNameType;  [CE]  cannot  find  symbol  guessNameType  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType.guessNameType;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.guessNameType;	  this.ruleType    =    ruleType.nameType;    	non-compiled	[CE]  cannot  find  symbol  guessNameType	13	None	replace
389	[BUG]  [BUGGY]  this.ruleType  =  ruleType  ==  null?((  RuleType)ruleType).toName()  :  null;  [CE]  cannot  find  symbol  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  ruleType  ==  null?((  RuleType)ruleType).toName()  :  null;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  ==  null?((  RuleType)ruleType).toName()  :  null;	  this.ruleType    =    ruleType    instanceof    RuleType?((    RuleType)ruleType).toName()    :    null;    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
390	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType,  nameType,  _maxPhonemes);  [CE]  cannot  find  symbol  _maxPhonemes  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(ruleType,  nameType,  _maxPhonemes);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType,  nameType,  _maxPhonemes);	  this.ruleType    =    new    RuleType(ruleType,    nameType);    	non-compiled	[CE]  cannot  find  symbol  _maxPhonemes	22	None	replace
391	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(namingType,  ruleType);  [CE]  cannot  find  symbol  namingType  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;    [BUGGY]  this.ruleType  =  new  RuleType(namingType,  ruleType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(namingType,  ruleType);	  this.ruleType    =    new    RuleType(ruleType,    nameType);    	non-compiled	[CE]  cannot  find  symbol  namingType	22	None	replace
