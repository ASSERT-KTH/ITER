bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    NameType  nameType  =  ruleType.getName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]    ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]    NameType  nameType  =  ruleType.getName();  [BUGGY]  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	    NameType  nameType  =  ruleType.getName();		non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	10	None	add
2	[BUG]  [BUGGY]    NameType  nameType  =  ruleType.getNameType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]      ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]    NameType  nameType  =  ruleType.getNameType();  [BUGGY]  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	    NameType  nameType  =  ruleType.getNameType();		non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	10	None	add
3	[BUG]  [BUGGY]    NameType  nameType  =  nameType.getName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]        ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]    NameType  nameType  =  nameType.getName();  [BUGGY]  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	    NameType  nameType  =  nameType.getName();		non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	10	None	add
4	[BUG]  [BUGGY]    this.phonemeBuilder  =  PhonemeBuilder.instance(nameType);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]          ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]    this.phonemeBuilder  =  PhonemeBuilder.instance(nameType);  [BUGGY]  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	    this.phonemeBuilder  =  PhonemeBuilder.instance(nameType);		non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	10	None	add
5	[BUG]  [BUGGY]    NameType  nameType  =  ruleType.getReferenceName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]            ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]    NameType  nameType  =  ruleType.getReferenceName();  [BUGGY]  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	    NameType  nameType  =  ruleType.getReferenceName();		non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	10	None	add
6	[BUG]  [BUGGY]    NameType  nameType  =  ruleType.getRuleType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]              ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]    NameType  nameType  =  ruleType.getRuleType();  [BUGGY]  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	    NameType  nameType  =  ruleType.getRuleType();		non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	10	None	add
7	[BUG]  [BUGGY]    NameType  nameType  =  nameType.getRuleType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]    NameType  nameType  =  nameType.getRuleType();  [BUGGY]  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	    NameType  nameType  =  nameType.getRuleType();		non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	10	None	add
8	[BUG]  [BUGGY]    NameType  nameType  =  nameType.getReferenceName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                  ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]    NameType  nameType  =  nameType.getReferenceName();  [BUGGY]  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	    NameType  nameType  =  nameType.getReferenceName();		non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	10	None	add
9	[BUG]  [BUGGY]    NameType  nameType  =  ruleType.getRawClass();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                    ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]    NameType  nameType  =  ruleType.getRawClass();  [BUGGY]  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	    NameType  nameType  =  ruleType.getRawClass();		non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	10	None	add
10	[BUG]  [BUGGY]    this.phonemeBuilder  =  PhonemeBuilder.instance();  [CE]  cannot  find  symbol  phonemeBuilder  [FE]                      ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]    this.phonemeBuilder  =  PhonemeBuilder.instance();  [BUGGY]  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	    this.phonemeBuilder  =  PhonemeBuilder.instance();		non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	10	None	add
11	[BUG]  [BUGGY]  this.ruleType  =  nameType;  [CE]  incompatible  types  [FE]    ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]  this.ruleType  =  nameType;  [BUGGY]  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  nameType;	this.ruleType  =  ruleType;  	non-compiled	[CE]  incompatible  types	9	None	replace
12	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getRuleType();  [CE]  cannot  find  symbol  [FE]      ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]  this.ruleType  =  ruleType.getRuleType();  [BUGGY]  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.getRuleType();	this.ruleType  =  ruleType;  	non-compiled	[CE]  cannot  find  symbol	9	None	replace
13	[BUG]  [BUGGY]  this.ruleType  =  ruleType.nameType;  [CE]  cannot  find  symbol  nameType  [FE]        ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]  this.ruleType  =  ruleType.nameType;  [BUGGY]  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.nameType;	this.ruleType  =  ruleType;  	non-compiled	[CE]  cannot  find  symbol  nameType	9	None	replace
14	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getSimpleName();  [CE]  cannot  find  symbol  [FE]          ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]  this.ruleType  =  ruleType.getSimpleName();  [BUGGY]  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.getSimpleName();	this.ruleType  =  ruleType;  	non-compiled	[CE]  cannot  find  symbol	9	None	replace
15	[BUG]  [BUGGY]  this.ruleType  =  ruleType.toString();  [CE]  incompatible  types  [FE]            ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]  this.ruleType  =  ruleType.toString();  [BUGGY]  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.toString();	this.ruleType  =  ruleType;  	non-compiled	[CE]  incompatible  types	9	None	replace
16	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getName();  [CE]  incompatible  types  [FE]              ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]  this.ruleType  =  ruleType.getName();  [BUGGY]  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.getName();	this.ruleType  =  ruleType;  	non-compiled	[CE]  incompatible  types	9	None	replace
17	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getRawClass();  [CE]  cannot  find  symbol  [FE]                ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]  this.ruleType  =  ruleType.getRawClass();  [BUGGY]  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType.getRawClass();	this.ruleType  =  ruleType;  	non-compiled	[CE]  cannot  find  symbol	9	None	replace
18	[BUG]  [BUGGY]  this.ruleType  =  ruleType  {  null?  null  :  ruleType;  [CE]  ';'  expected  [FE]                  ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]  this.ruleType  =  ruleType  {  null?  null  :  ruleType;  [BUGGY]  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  {  null?  null  :  ruleType;	this.ruleType  =  ruleType;  	non-compiled	[CE]  ';'  expected	9	None	replace
19	[BUG]  [BUGGY]  this.ruleType  =  NameType.NAME_PREFIXES;  [CE]  cannot  find  symbol  NAME_PREFIXES  [FE]    ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]  this.ruleType  =  NameType.NAME_PREFIXES;  [BUGGY]  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  NameType.NAME_PREFIXES;	this.ruleType  =  ruleType;  	non-compiled	[CE]  cannot  find  symbol  NAME_PREFIXES	9	None	replace
20	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRuleType());  [CE]  cannot  find  symbol  [FE]      ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRuleType());  [BUGGY]  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getRuleType());	this.ruleType  =  ruleType;  	non-compiled	[CE]  cannot  find  symbol	9	None	replace
21	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getSimpleName());  [CE]  cannot  find  symbol  [FE]        ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getSimpleName());  [BUGGY]  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getSimpleName());	this.ruleType  =  ruleType;  	non-compiled	[CE]  cannot  find  symbol	9	None	replace
22	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType,  nameType);  [CE]  enum  types  may  not  be  instantiated  [FE]          ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]  this.ruleType  =  new  RuleType(ruleType,  nameType);  [BUGGY]  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType,  nameType);	this.ruleType  =  ruleType;  	non-compiled	[CE]  enum  types  may  not  be  instantiated	9	None	replace
23	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName());  [CE]  enum  types  may  not  be  instantiated  [FE]            ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName());  [BUGGY]  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getName());	this.ruleType  =  ruleType;  	non-compiled	[CE]  enum  types  may  not  be  instantiated	9	None	replace
24	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName(),  nameType);  [CE]  enum  types  may  not  be  instantiated  [FE]              ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getName(),  nameType);  [BUGGY]  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getName(),  nameType);	this.ruleType  =  ruleType;  	non-compiled	[CE]  enum  types  may  not  be  instantiated	9	None	replace
25	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRawClass());  [CE]  cannot  find  symbol  [FE]                ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]  this.ruleType  =  new  RuleType(ruleType.getRawClass());  [BUGGY]  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  new  RuleType(ruleType.getRawClass());	this.ruleType  =  ruleType;  	non-compiled	[CE]  cannot  find  symbol	9	None	replace
26	[BUG]  [BUGGY]    PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType);  [CE]  cannot  find  symbol  [FE]    ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]    PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType);  [BUGGY]  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	    PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType);		non-compiled	[CE]  cannot  find  symbol	10	None	add
27	[BUG]  [BUGGY]    PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance();  [CE]  cannot  find  symbol  [FE]      ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]    PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance();  [BUGGY]  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	    PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance();		non-compiled	[CE]  cannot  find  symbol	10	None	add
28	[BUG]  [BUGGY]    NameType  ruleType  =  nameType.getRuleType();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]        ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]    NameType  ruleType  =  nameType.getRuleType();  [BUGGY]  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	    NameType  ruleType  =  nameType.getRuleType();		non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	10	None	add
29	[BUG]  [BUGGY]    NameType  ruleType  =  nameType.getRawClass();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]    ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]    NameType  ruleType  =  nameType.getRawClass();  [BUGGY]  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	    NameType  ruleType  =  nameType.getRawClass();		non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	10	None	add
30	[BUG]  [BUGGY]    this.nameType  =  nameType;  [CE]  variable  nameType  might  already  have  been  assigned  [FE]      ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]    this.nameType  =  nameType;  [BUGGY]  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	    this.nameType  =  nameType;		non-compiled	[CE]  variable  nameType  might  already  have  been  assigned	10	None	add
31	[BUG]  [BUGGY]    NameType  ruleType  =  nameType.getReferenceName();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]        ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]    NameType  ruleType  =  nameType.getReferenceName();  [BUGGY]  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	    NameType  ruleType  =  nameType.getReferenceName();		non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	10	None	add
32	[BUG]  [BUGGY]    NameType  ruleType  =  nameType.getRules();  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]          ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]    NameType  ruleType  =  nameType.getRules();  [BUGGY]  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	    NameType  ruleType  =  nameType.getRules();		non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	10	None	add
33	[BUG]  [BUGGY]    this.nameType  =  nameType.getName();  [CE]  incompatible  types  [FE]            ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]    this.nameType  =  nameType.getName();  [BUGGY]  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	    this.nameType  =  nameType.getName();		non-compiled	[CE]  incompatible  types	10	None	add
34	[BUG]  [BUGGY]    this.nameType  =  nameType.toString();  [CE]  incompatible  types  [FE]              ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]    this.nameType  =  nameType.toString();  [BUGGY]  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	    this.nameType  =  nameType.toString();		non-compiled	[CE]  incompatible  types	10	None	add
35	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [BUGGY]  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	add	this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;	this.ruleType  =  ruleType;  	compilable	  [FE]  ExceptionInInitializerError  	9	4	replace
36	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [BUGGY]  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;	this.ruleType  =  ruleType;  	compilable	  [FE]  ExceptionInInitializerError  	9	4	replace
37	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getRawClass()  :  ruleType;  [CE]  cannot  find  symbol  [FE]      ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getRawClass()  :  ruleType;  [BUGGY]  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getRawClass()  :  ruleType;	this.ruleType  =  ruleType;  	non-compiled	[CE]  cannot  find  symbol	9	None	replace
38	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).toString()  :  null;  [CE]  incompatible  types  [FE]        ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).toString()  :  null;  [BUGGY]  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).toString()  :  null;	this.ruleType  =  ruleType;  	non-compiled	[CE]  incompatible  types	9	None	replace
39	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).toName()  :  null;  [CE]  cannot  find  symbol  [FE]          ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).toName()  :  null;  [BUGGY]  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).toName()  :  null;	this.ruleType  =  ruleType;  	non-compiled	[CE]  cannot  find  symbol	9	None	replace
40	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  nameType;  [CE]  cannot  find  symbol  nameType  [FE]            ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  nameType;  [BUGGY]  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).nameType  :  nameType;	this.ruleType  =  ruleType;  	non-compiled	[CE]  cannot  find  symbol  nameType	9	None	replace
41	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getReturnType()  :  ruleType;  [CE]  cannot  find  symbol  [FE]              ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getReturnType()  :  ruleType;  [BUGGY]  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getReturnType()  :  ruleType;	this.ruleType  =  ruleType;  	non-compiled	[CE]  cannot  find  symbol	9	None	replace
42	[BUG]  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  ruleType;  [CE]  incompatible  types  [FE]                ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  [BUGGY]  this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  ruleType;  [BUGGY]  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	315	315	4	replace	this.ruleType  =  ruleType  instanceof  RuleType?((  RuleType)ruleType).getName()  :  ruleType;	this.ruleType  =  ruleType;  	non-compiled	[CE]  incompatible  types	9	None	replace
