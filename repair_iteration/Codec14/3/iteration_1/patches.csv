bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=    RuleType.RULES    ||    ruleType    ==    null)    {    if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
2	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=    RuleType.RULES    ||    ruleType    ==    null)    {    if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
3	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  >=  RuleType.RULES  ||  ruleType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  >=  RuleType.RULES  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=    RuleType.RULES    ||    ruleType    ==    null)    {    if(ruleType  >=  RuleType.RULES  ||  ruleType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
4	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=    RuleType.RULES    ||    ruleType    ==    null)    {    if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
5	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  >>  RuleType.RULES  ||  ruleType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  >>  RuleType.RULES  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=    RuleType.RULES    ||    ruleType    ==    null)    {    if(ruleType  >>  RuleType.RULES  ||  ruleType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
6	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType!=  RuleType.RULES  ||  ruleType  >=  null)  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType!=  RuleType.RULES  ||  ruleType  >=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=    RuleType.RULES    ||    ruleType    ==    null)    {    if(ruleType!=  RuleType.RULES  ||  ruleType  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
7	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  If(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  [CE]  ';'  expected  [FE]                IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  If(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=    RuleType.RULES    ||    ruleType    ==    null)    {    If(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
8	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  [Delete]  RuleType.RULES  ||  ruleType  ==  null)  {  [CE]  ')'  expected  [FE]                  IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  [Delete]  RuleType.RULES  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=    RuleType.RULES    ||    ruleType    ==    null)    {    if(ruleType  [Delete]  RuleType.RULES  ||  ruleType  ==  null)  {	  	non-compiled	[CE]  ')'  expected	9	None	add
9	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  >=  RuleType.RULES  ||  ruleType!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  >=  RuleType.RULES  ||  ruleType!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=    RuleType.RULES    ||    ruleType    ==    null)    {    if(ruleType  >=  RuleType.RULES  ||  ruleType!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
10	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRuleType();  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  ruleType.getRuleType();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  ruleType.getRuleType();	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
11	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getRuleType(),  concat);  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getRuleType(),  concat);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  new  NameType(nameType.getRuleType(),  concat);	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
12	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getRuleType());  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getRuleType());  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getRuleType());	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
13	[BUG]  [BUGGY]  NameType  nameType  =  this.nameType.getRuleType();  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  this.nameType.getRuleType();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  this.nameType.getRuleType();	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
14	[BUG]  [BUGGY]  NameType  nameType  =  RuleType.class.getSimpleName();  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  RuleType.class.getSimpleName();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  RuleType.class.getSimpleName();	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
15	[BUG]  [BUGGY]  NameType  nameType  =  type.getRuleType();  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  type.getRuleType();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  type.getRuleType();	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
16	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getRuleType());  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getRuleType());  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  new  NameType(nameType.getRuleType());	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
17	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getRuleType(),  Context.NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getRuleType(),  Context.NAME_PREFIXES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  new  NameType(nameType.getRuleType(),  Context.NAME_PREFIXES);	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
18	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PHONEMES)  {  [CE]  cannot  find  symbol  NAME_PHONEMES  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PHONEMES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PHONEMES)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PHONEMES	24	None	replace
19	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.STRING  ||  ruleType  ==  RuleType.NAME_PREFIXES)  {  [CE]  cannot  find  symbol  STRING  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.STRING  ||  ruleType  ==  RuleType.NAME_PREFIXES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.STRING  ||  ruleType  ==  RuleType.NAME_PREFIXES)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  STRING	24	None	replace
20	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PARENTHESES)  {  [CE]  cannot  find  symbol  NAME_PARENTHESES  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PARENTHESES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PARENTHESES)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PARENTHESES	24	None	replace
21	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_SPACE)  {  [CE]  cannot  find  symbol  NAME_SPACE  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_SPACE)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_SPACE)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_SPACE	24	None	replace
22	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_FIXES)  {  [CE]  cannot  find  symbol  NAME_FIXES  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_FIXES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_FIXES)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_FIXES	24	None	replace
23	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_POINTS)  {  [CE]  cannot  find  symbol  NAME_POINTS  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_POINTS)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_POINTS)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_POINTS	24	None	replace
24	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PLAINS)  {  [CE]  cannot  find  symbol  NAME_PLAINS  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PLAINS)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PLAINS)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PLAINS	24	None	replace
25	[BUG]  [BUGGY]  super(nameType,  ruleType);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType);	      super(nameType);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
26	[BUG]  [BUGGY]  super(nameType,  concat);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  concat);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  concat);	      super(nameType);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
27	[BUG]  [BUGGY]  this(nameType,  ruleType,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  maxPhonemes);	      super(nameType);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
28	[BUG]  [BUGGY]  super(nameType,  ruleType.numberPhonemes);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType.numberPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType.numberPhonemes);	      super(nameType);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
29	[BUG]  [BUGGY]  super(nameType,  ruleType.toString());  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType.toString());  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType.toString());	      super(nameType);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
30	[BUG]  [BUGGY]  super(nameType,  ruleType.null,  concat);  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType.null,  concat);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType.null,  concat);	      super(nameType);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
31	[BUG]  [BUGGY]  super(nameType,  ruleType.generateFunctionNames());  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType.generateFunctionNames());  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType.generateFunctionNames());	      super(nameType);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
32	[BUG]  [BUGGY]  super(nameType,  ruleType.toString(),  concat);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType.toString(),  concat);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType.toString(),  concat);	      super(nameType);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
33	[BUG]  [BUGGY]  super(nameType,  ruleType.getName());  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType.getName());  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType.getName());	      super(nameType);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
34	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES)  {  if(ruleType!=  RuleType.RULES)  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES)  {  if(ruleType!=  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=    RuleType.RULES)    {    if(ruleType!=  RuleType.RULES)  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
35	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES)  {  if(ruleType  ==  RuleType.RULES)  {  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES)  {  if(ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=    RuleType.RULES)    {    if(ruleType  ==  RuleType.RULES)  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
36	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES)  {  if(ruleType  >=  RuleType.RULES)  {  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES)  {  if(ruleType  >=  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=    RuleType.RULES)    {    if(ruleType  >=  RuleType.RULES)  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
37	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES)  {  if(ruleType  >>  RuleType.RULES)  {  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES)  {  if(ruleType  >>  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=    RuleType.RULES)    {    if(ruleType  >>  RuleType.RULES)  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
38	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES)  {  If(ruleType!=  RuleType.RULES)  {  [CE]  ';'  expected  [FE]            IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES)  {  If(ruleType!=  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=    RuleType.RULES)    {    If(ruleType!=  RuleType.RULES)  {	  	non-compiled	[CE]  ';'  expected	34	None	add
39	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES)  {  if(ruleType  [BUGGY]  RuleType.RULES)  {  [CE]  ')'  expected  [FE]              IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES)  {  if(ruleType  [BUGGY]  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=    RuleType.RULES)    {    if(ruleType  [BUGGY]  RuleType.RULES)  {	  	non-compiled	[CE]  ')'  expected	34	None	add
40	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES)  {  if(ruleType  [Delete]  RuleType.RULES)  {  [CE]  ')'  expected  [FE]                IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES)  {  if(ruleType  [Delete]  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=    RuleType.RULES)    {    if(ruleType  [Delete]  RuleType.RULES)  {	  	non-compiled	[CE]  ')'  expected	34	None	add
41	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES)  {  if(ruleType!=  ruleType.RULES)  {  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES)  {  if(ruleType!=  ruleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=    RuleType.RULES)    {    if(ruleType!=  ruleType.RULES)  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
42	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES)  {  if(ruleType  [PATCH]  RuleType.RULES)  {  [CE]  ')'  expected  [FE]                    IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES)  {  if(ruleType  [PATCH]  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=    RuleType.RULES)    {    if(ruleType  [PATCH]  RuleType.RULES)  {	  	non-compiled	[CE]  ')'  expected	34	None	add
43	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType!=  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	add	if(ruleType  ==  null  ||  ruleType!=  RuleType.RULES)  {	  if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    	compilable	  [FE]  IllegalArgumentException  	3	4	replace
44	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  ruleType!=  RuleType.RULES)  {  [FE]  IllegalArgumentException  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType!=  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  ruleType!=  RuleType.RULES)  {	  if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    	compilable	  [FE]  IllegalArgumentException  	3	4	replace
45	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  null  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	add	if(ruleType!=  null  ||  ruleType  ==  RuleType.RULES)  {	  if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    	compilable	  [FE]  IllegalArgumentException  	3	4	replace
46	[BUG]  [BUGGY]  if(ruleType!=  null  ||  ruleType  ==  RuleType.RULES)  {  [FE]  IllegalArgumentException  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  null  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  null  ||  ruleType  ==  RuleType.RULES)  {	  if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    	compilable	  [FE]  IllegalArgumentException  	3	4	replace
47	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.NAME_PREFIXES)  {  [CE]  cannot  find  symbol  NAME_PREFIXES  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.NAME_PREFIXES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  ruleType  ==  RuleType.NAME_PREFIXES)  {	  if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PREFIXES	3	None	replace
48	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_PREFIXES)  {  [CE]  cannot  find  symbol  NAME_PREFIXES  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_PREFIXES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_PREFIXES)  {	  if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PREFIXES	3	None	replace
49	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(nameType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	add	if(nameType  ==  null  ||  ruleType  ==  RuleType.RULES)  {	  if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    	compilable	  [FE]  ExceptionInInitializerError  	3	4	replace
50	[BUG]  [BUGGY]  if(nameType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  [FE]  ExceptionInInitializerError  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(nameType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(nameType  ==  null  ||  ruleType  ==  RuleType.RULES)  {	  if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    	compilable	  [FE]  ExceptionInInitializerError  	3	4	replace
51	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  ruleType  >=  RuleType.RULES)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType  >=  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  ruleType  >=  RuleType.RULES)  {	  if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	3	None	replace
52	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  nameType  ==  RuleType.RULES)  {  [CE]  incomparable  types:  NameType  and  RuleType  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  nameType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  nameType  ==  RuleType.RULES)  {	  if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  incomparable  types:  NameType  and  RuleType	3	None	replace
53	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  ruleType.isUnknownType())  {  [CE]  cannot  find  symbol  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType.isUnknownType())  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  ruleType.isUnknownType())  {	  if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
54	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.NAME_PHONEMES  ||  ruleType  ==  RuleType.RULES)  {  [CE]  cannot  find  symbol  NAME_PHONEMES  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.NAME_PHONEMES  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.NAME_PHONEMES  ||  ruleType  ==  RuleType.RULES)  {	  if(ruleType!=    RuleType.NAME_PREFIXES    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PHONEMES	26	None	replace
55	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.NAME_TYPE  ||  ruleType  ==  RuleType.RULES)  {  [CE]  cannot  find  symbol  NAME_TYPE  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.NAME_TYPE  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.NAME_TYPE  ||  ruleType  ==  RuleType.RULES)  {	  if(ruleType!=    RuleType.NAME_PREFIXES    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_TYPE	26	None	replace
56	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.NAME_PREFIXES  ||  ruleType!=  RuleType.RULES)  {  [CE]  cannot  find  symbol  NAME_PREFIXES  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.NAME_PREFIXES  ||  ruleType!=  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.NAME_PREFIXES  ||  ruleType!=  RuleType.RULES)  {	  if(ruleType!=    RuleType.NAME_PREFIXES    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PREFIXES	26	None	replace
57	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.UNKNOWN  ||  ruleType  ==  RuleType.RULES)  {  [CE]  cannot  find  symbol  UNKNOWN  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.UNKNOWN  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.UNKNOWN  ||  ruleType  ==  RuleType.RULES)  {	  if(ruleType!=    RuleType.NAME_PREFIXES    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	26	None	replace
58	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.STRING  ||  ruleType  ==  RuleType.RULES)  {  [CE]  cannot  find  symbol  STRING  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.STRING  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.STRING  ||  ruleType  ==  RuleType.RULES)  {	  if(ruleType!=    RuleType.NAME_PREFIXES    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  STRING	26	None	replace
59	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType!=  RuleType.NAME_PREFIXES)  {  [CE]  cannot  find  symbol  NAME_PREFIXES  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType!=  RuleType.NAME_PREFIXES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.RULES  ||  ruleType!=  RuleType.NAME_PREFIXES)  {	  if(ruleType!=    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PREFIXES	25	None	replace
60	[BUG]  [BUGGY]  if(ruleType!=  RuleType.DEFAULT_MAX_PHONEMES)  {  [CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.DEFAULT_MAX_PHONEMES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.DEFAULT_MAX_PHONEMES)  {	  if(ruleType!=    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES	25	None	replace
61	[BUG]  [BUGGY]  if(ruleType!=  RuleType.DEFAULT_MAX_PHONEMES  ||  ruleType!=  RuleType.NAME_PREFIXES)  {  [CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.DEFAULT_MAX_PHONEMES  ||  ruleType!=  RuleType.NAME_PREFIXES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.DEFAULT_MAX_PHONEMES  ||  ruleType!=  RuleType.NAME_PREFIXES)  {	  if(ruleType!=    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES	25	None	replace
62	[BUG]  [BUGGY]  if(ruleType!=  RuleType.STRING)  {  [CE]  cannot  find  symbol  STRING  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.STRING)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.STRING)  {	  if(ruleType!=    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  STRING	25	None	replace
63	[BUG]  [BUGGY]  if(ruleType!=  RuleType.NAME_RULES)  {  [CE]  cannot  find  symbol  NAME_RULES  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.NAME_RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.NAME_RULES)  {	  if(ruleType!=    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_RULES	25	None	replace
64	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	add	if(ruleType  ==  RuleType.RULES  ||  nameType  ==  null)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    	compilable	  [FE]  ExceptionInInitializerError  	5	4	replace
65	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  null)  {  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  nameType  ==  null)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    	compilable	  [FE]  ExceptionInInitializerError  	5	4	replace
66	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  ruleType  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	add	if(ruleType  ==  ruleType  ||  ruleType  ==  null)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    	compilable	  [FE]  IllegalArgumentException  	5	4	replace
67	[BUG]  [BUGGY]  if(ruleType  ==  ruleType  ||  ruleType  ==  null)  {  [FE]  IllegalArgumentException  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  ruleType  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  ruleType  ||  ruleType  ==  null)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    	compilable	  [FE]  IllegalArgumentException  	5	4	replace
68	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  concat  ==  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  concat  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  concat  ==  null)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	5	None	replace
69	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null,  concat)  {  [CE]  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null,  concat)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null,  concat)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    	non-compiled	[CE]  	5	None	replace
70	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  concat)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	add	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  concat)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    	compilable	  [FE]  IllegalArgumentException  	5	4	replace
71	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  concat)  {  [FE]  IllegalArgumentException  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  concat)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  concat)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    	compilable	  [FE]  IllegalArgumentException  	5	4	replace
72	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  nameType!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	add	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  nameType!=  null)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    	compilable	  [FE]  IllegalArgumentException  	5	4	replace
73	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  nameType!=  null)  {  [FE]  IllegalArgumentException  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  nameType!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  nameType!=  null)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    	compilable	  [FE]  IllegalArgumentException  	5	4	replace
74	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes);	      this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
75	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES);	      this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
76	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  NAME_PREFIXES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  NAME_PREFIXES);	      this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
77	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES);	      this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
78	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  MAX_PHONEMES,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  MAX_PHONEMES,  DEFAULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  MAX_PHONEMES,  DEFAULT_MAX_PHONEMES);	      this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
79	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  0,  maxPhonemes,  DEFAULT_MAX_PHONEMES);	      this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
80	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes,  DEFAULT_MAX_PHONEMES);	      this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
81	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES);	      this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
82	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType,  concat,  MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType,  concat,  MAX_PHONEMES);	      super(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
83	[BUG]  [BUGGY]  Super(nameType,  ruleType,  concat,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  Super(nameType,  ruleType,  concat,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	Super(nameType,  ruleType,  concat,  maxPhonemes);	      super(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
84	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  minPhonemes);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType,  concat,  minPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType,  concat,  minPhonemes);	      super(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
85	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maximumPhonemes);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType,  concat,  maximumPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType,  concat,  maximumPhonemes);	      super(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
86	[BUG]  [BUGGY]  super(nameType.getName(),  ruleType,  concat);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType.getName(),  ruleType,  concat);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType.getName(),  ruleType,  concat);	      super(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
87	[BUG]  [BUGGY]  super(nameType,  ruleType,  Concat,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType,  Concat,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType,  Concat,  maxPhonemes);	      super(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
88	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  0);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType,  concat,  0);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType,  concat,  0);	      super(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
89	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRuleType( "ruleType ",  concat);  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  nameType.getRuleType( "ruleType ",  concat);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  nameType.getRuleType( "ruleType ",  concat);	      NameType    ruleType    =    nameType.getRuleType(   "ruleType   ");    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
90	[BUG]  [BUGGY]  NameType  nameType  =  nameType.getRuleType( "ruleType ");  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  nameType.getRuleType( "ruleType ");  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  nameType.getRuleType( "ruleType ");	      NameType    ruleType    =    nameType.getRuleType(   "ruleType   ");    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
91	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRuleType( "ruletype ");  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  nameType.getRuleType( "ruletype ");  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  nameType.getRuleType( "ruletype ");	      NameType    ruleType    =    nameType.getRuleType(   "ruleType   ");    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
92	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRuleType( "ruleType. ");  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  nameType.getRuleType( "ruleType. ");  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  nameType.getRuleType( "ruleType. ");	      NameType    ruleType    =    nameType.getRuleType(   "ruleType   ");    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
93	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRuleType( "ruleType ",  null);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  nameType.getRuleType( "ruleType ",  null);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  nameType.getRuleType( "ruleType ",  null);	      NameType    ruleType    =    nameType.getRuleType(   "ruleType   ");    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
94	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRuleType( "ruleType, ");  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  nameType.getRuleType( "ruleType, ");  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  nameType.getRuleType( "ruleType, ");	      NameType    ruleType    =    nameType.getRuleType(   "ruleType   ");    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
95	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    RuleType.RULES    ||    ruleType!=    null)    {    if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
96	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  if(ruleType!=  RuleType.RULES  ||  ruleType!=  null)  {  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  if(ruleType!=  RuleType.RULES  ||  ruleType!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    RuleType.RULES    ||    ruleType!=    null)    {    if(ruleType!=  RuleType.RULES  ||  ruleType!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
97	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  if(ruleType  ==  RuleType.RULES  ||  ruleType  >=  null)  {  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  if(ruleType  ==  RuleType.RULES  ||  ruleType  >=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    RuleType.RULES    ||    ruleType!=    null)    {    if(ruleType  ==  RuleType.RULES  ||  ruleType  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
98	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  if(ruleType  >=  RuleType.RULES  ||  ruleType!=  null)  {  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  if(ruleType  >=  RuleType.RULES  ||  ruleType!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    RuleType.RULES    ||    ruleType!=    null)    {    if(ruleType  >=  RuleType.RULES  ||  ruleType!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
99	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  If(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  [CE]  ';'  expected  [FE]            IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  If(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    RuleType.RULES    ||    ruleType!=    null)    {    If(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {	  	non-compiled	[CE]  ';'  expected	11	None	add
100	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  if(ruleType  ==  RuleType.RULES  ||  ruleType  >>  null)  {  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  if(ruleType  ==  RuleType.RULES  ||  ruleType  >>  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    RuleType.RULES    ||    ruleType!=    null)    {    if(ruleType  ==  RuleType.RULES  ||  ruleType  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
101	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  if(ruleType  ==  RuleType.RULES  ||  ruleType  [BUGGY]  null)  {  [CE]  ')'  expected  [FE]                IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  if(ruleType  ==  RuleType.RULES  ||  ruleType  [BUGGY]  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    RuleType.RULES    ||    ruleType!=    null)    {    if(ruleType  ==  RuleType.RULES  ||  ruleType  [BUGGY]  null)  {	  	non-compiled	[CE]  ')'  expected	11	None	add
102	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  if(ruleType  ==  RuleType.RULES  ||  ruleType  [Delete]  null)  {  [CE]  ')'  expected  [FE]                  IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  if(ruleType  ==  RuleType.RULES  ||  ruleType  [Delete]  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    RuleType.RULES    ||    ruleType!=    null)    {    if(ruleType  ==  RuleType.RULES  ||  ruleType  [Delete]  null)  {	  	non-compiled	[CE]  ')'  expected	11	None	add
103	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  if(ruleType  >>  RuleType.RULES  ||  ruleType!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  if(ruleType  >>  RuleType.RULES  ||  ruleType!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    RuleType.RULES    ||    ruleType!=    null)    {    if(ruleType  >>  RuleType.RULES  ||  ruleType!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
104	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.DEFAULT_MAX_PHONEMES  ||  ruleType  ==  RuleType.RULES)  {  [CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.DEFAULT_MAX_PHONEMES  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.DEFAULT_MAX_PHONEMES  ||  ruleType  ==  RuleType.RULES)  {	  if(ruleType    ==    RuleType.NAME_PREFIXES    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES	6	None	replace
105	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.NAMES  ||  ruleType  ==  RuleType.RULES)  {  [CE]  cannot  find  symbol  NAMES  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.NAMES  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.NAMES  ||  ruleType  ==  RuleType.RULES)  {	  if(ruleType    ==    RuleType.NAME_PREFIXES    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  NAMES	6	None	replace
106	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  null);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  null);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  null);	      this(nameType,    ruleType,    concat,    maxPhonemes,    null);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
107	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  null,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  null,  DEFAULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  null,  DEFAULT_MAX_PHONEMES);	      this(nameType,    ruleType,    concat,    maxPhonemes,    null);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
108	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  nameType,  null);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  nameType,  null);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  nameType,  null);	      this(nameType,    ruleType,    concat,    maxPhonemes,    null);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
109	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  NAME_PREFIXES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  NAME_PREFIXES);	      this(nameType,    ruleType,    concat,    maxPhonemes,    null);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
110	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  null,  nameType);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  null,  nameType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  null,  nameType);	      this(nameType,    ruleType,    concat,    maxPhonemes,    null);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
111	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  NAME_PREFIXES,  null);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  NAME_PREFIXES,  null);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  NAME_PREFIXES,  null);	      this(nameType,    ruleType,    concat,    maxPhonemes,    null);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
112	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  definalRules,  null);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  definalRules,  null);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  definalRules,  null);	      this(nameType,    ruleType,    concat,    maxPhonemes,    null);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
113	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  null,  maxPhonemes,  DEFAULT_MAX_PHONEMES);	      this(nameType,    ruleType,    concat,    null,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
114	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes,  nameType);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes,  nameType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  null,  maxPhonemes,  nameType);	      this(nameType,    ruleType,    concat,    null,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
115	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes);	      this(nameType,    ruleType,    concat,    null,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
116	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  0,  maxPhonemes);	      this(nameType,    ruleType,    concat,    null,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
117	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  null,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  null,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  null,  maxPhonemes);	      this(nameType,    ruleType,    concat,    null,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
118	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes,  NAME_PREFIXES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  null,  maxPhonemes,  NAME_PREFIXES);	      this(nameType,    ruleType,    concat,    null,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
119	[BUG]  [BUGGY]  NameType  ruleType  =  ruleType.getRuleType();  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  ruleType.getRuleType();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  ruleType.getRuleType();	      NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
120	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRawType();  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  nameType.getRawType();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  nameType.getRawType();	      NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
121	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getNameType();  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  nameType.getNameType();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  nameType.getNameType();	      NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
122	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRuleType(null);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  nameType.getRuleType(null);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  nameType.getRuleType(null);	      NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
123	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRuleType(concat);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  nameType.getRuleType(concat);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  nameType.getRuleType(concat);	      NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
124	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_PHONEMES)  {  [CE]  cannot  find  symbol  NAME_PHONEMES  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_PHONEMES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_PHONEMES)  {	  if(ruleType    ==    RuleType.RULES    ||    nameType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PHONEMES	39	None	replace
125	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_FIXES)  {  [CE]  cannot  find  symbol  NAME_FIXES  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_FIXES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_FIXES)  {	  if(ruleType    ==    RuleType.RULES    ||    nameType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_FIXES	39	None	replace
126	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_SPACE)  {  [CE]  cannot  find  symbol  NAME_SPACE  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_SPACE)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_SPACE)  {	  if(ruleType    ==    RuleType.RULES    ||    nameType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_SPACE	39	None	replace
127	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_PARENTHESES)  {  [CE]  cannot  find  symbol  NAME_PARENTHESES  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_PARENTHESES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_PARENTHESES)  {	  if(ruleType    ==    RuleType.RULES    ||    nameType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PARENTHESES	39	None	replace
128	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_HOME)  {  [CE]  cannot  find  symbol  NAME_HOME  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_HOME)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_HOME)  {	  if(ruleType    ==    RuleType.RULES    ||    nameType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_HOME	39	None	replace
129	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_POINTS)  {  [CE]  cannot  find  symbol  NAME_POINTS  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_POINTS)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_POINTS)  {	  if(ruleType    ==    RuleType.RULES    ||    nameType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_POINTS	39	None	replace
130	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_PLAINS)  {  [CE]  cannot  find  symbol  NAME_PLAINS  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_PLAINS)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_PLAINS)  {	  if(ruleType    ==    RuleType.RULES    ||    nameType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PLAINS	39	None	replace
131	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME)  {  [CE]  cannot  find  symbol  NAME  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME)  {	  if(ruleType    ==    RuleType.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  NAME	40	None	replace
132	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.STRING)  {  [CE]  cannot  find  symbol  STRING  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.STRING)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.STRING)  {	  if(ruleType    ==    RuleType.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  STRING	40	None	replace
133	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.UNKNOWN)  {  [CE]  cannot  find  symbol  UNKNOWN  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.UNKNOWN)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.UNKNOWN)  {	  if(ruleType    ==    RuleType.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	40	None	replace
134	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.DECEMBER)  {  [CE]  cannot  find  symbol  DECEMBER  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.DECEMBER)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.DECEMBER)  {	  if(ruleType    ==    RuleType.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  DECEMBER	40	None	replace
135	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.FOR)  {  [CE]  cannot  find  symbol  FOR  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.FOR)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.FOR)  {	  if(ruleType    ==    RuleType.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  FOR	40	None	replace
136	[BUG]  [BUGGY]  this(nameType,  nameType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  nameType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  nameType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES);	      this(nameType,    nameType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
137	[BUG]  [BUGGY]  this(nameType.getName(),  ruleType,  concat,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType.getName(),  ruleType,  concat,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType.getName(),  ruleType,  concat,  maxPhonemes);	      this(nameType,    nameType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
138	[BUG]  [BUGGY]  this(nameType,  nameType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  nameType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  nameType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES);	      this(nameType,    nameType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
139	[BUG]  [BUGGY]  this(nameType,  nameType,  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  nameType,  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  nameType,  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES);	      this(nameType,    nameType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
140	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(nameType  ==  null  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	add	if(nameType  ==  null  ||  ruleType  ==  null)  {	  if(ruleType    ==    null)    {    	compilable	  [FE]  ExceptionInInitializerError  	8	4	replace
141	[BUG]  [BUGGY]  if(nameType  ==  null  ||  ruleType  ==  null)  {  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(nameType  ==  null  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(nameType  ==  null  ||  ruleType  ==  null)  {	  if(ruleType    ==    null)    {    	compilable	  [FE]  ExceptionInInitializerError  	8	4	replace
142	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(nameType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	add	if(nameType  ==  null)  {	  if(ruleType    ==    null)    {    	compilable	  [FE]  ExceptionInInitializerError  	8	4	replace
143	[BUG]  [BUGGY]  if(nameType  ==  null)  {  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(nameType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(nameType  ==  null)  {	  if(ruleType    ==    null)    {    	compilable	  [FE]  ExceptionInInitializerError  	8	4	replace
144	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  nameType.length()  ==  maxPhonemes)  {  [CE]  cannot  find  symbol  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  nameType.length()  ==  maxPhonemes)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  nameType.length()  ==  maxPhonemes)  {	  if(ruleType    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
145	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  nameType.isUnknownType())  {  [CE]  cannot  find  symbol  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  nameType.isUnknownType())  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  nameType.isUnknownType())  {	  if(ruleType    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
146	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	add	if(ruleType!=  null)  {	  if(ruleType    ==    null)    {    	compilable	  [FE]  IllegalArgumentException  	8	4	replace
147	[BUG]  [BUGGY]  if(ruleType!=  null)  {  [FE]  IllegalArgumentException  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  null)  {	  if(ruleType    ==    null)    {    	compilable	  [FE]  IllegalArgumentException  	8	4	replace
148	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  nameType.length()!=  maxPhonemes)  {  [CE]  cannot  find  symbol  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  nameType.length()!=  maxPhonemes)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  nameType.length()!=  maxPhonemes)  {	  if(ruleType    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
149	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  nameType.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  nameType.length()  ==  0)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  nameType.length()  ==  0)  {	  if(ruleType    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
150	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  concat)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	add	if(ruleType  ==  null  ||  concat)  {	  if(ruleType    ==    null)    {    	compilable	  [FE]  IllegalArgumentException  	8	4	replace
151	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  concat)  {  [FE]  IllegalArgumentException  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  concat)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  concat)  {	  if(ruleType    ==    null)    {    	compilable	  [FE]  IllegalArgumentException  	8	4	replace
152	[BUG]  [BUGGY]  if(ruleType.isUnknownType()  ||  ruleType.isUnknownType())  {  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType.isUnknownType()  ||  ruleType.isUnknownType())  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType.isUnknownType()  ||  ruleType.isUnknownType())  {	  if(ruleType!=    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
153	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  NAME_PREFIXES)  {  [CE]  incomparable  types:  RuleType  and  Map<NameType,Set<String>>  [FE]      IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  NAME_PREFIXES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType!=  NAME_PREFIXES)  {	  if(ruleType!=    RuleType.RULES)    {    	non-compiled	[CE]  incomparable  types:  RuleType  and  Map<NameType,Set<String>>	35	None	replace
154	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	add	if(ruleType!=  RuleType.RULES  ||  ruleType!=  null)  {	  if(ruleType!=    RuleType.RULES)    {    	compilable	  [FE]  IllegalArgumentException  	35	4	replace
155	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType!=  null)  {  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.RULES  ||  ruleType!=  null)  {	  if(ruleType!=    RuleType.RULES)    {    	compilable	  [FE]  IllegalArgumentException  	35	4	replace
156	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES);	      this(nameType,    ruleType,    concat,    maxPhonemes,    nameType);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
157	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES);	      this(nameType,    ruleType,    concat,    maxPhonemes,    nameType);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
158	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES);	      this(nameType,    ruleType,    concat,    maxPhonemes,    nameType);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
159	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  0);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  0);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  0);	      this(nameType,    ruleType,    concat,    maxPhonemes,    nameType);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
160	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  i);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  i);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  i);	      this(nameType,    ruleType,    concat,    maxPhonemes,    nameType);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
161	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	add	if(ruleType  ==  RuleType.RULES  ||  nameType!=  null)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType!=    null)    {    	compilable	  [FE]  IllegalArgumentException  	12	4	replace
162	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType!=  null)  {  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  nameType!=  null)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType!=    null)    {    	compilable	  [FE]  IllegalArgumentException  	12	4	replace
163	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  >=  null)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]      IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  >=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  >=  null)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType!=    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	12	None	replace
164	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  ruleType  ||  ruleType!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	add	if(ruleType  ==  ruleType  ||  ruleType!=  null)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType!=    null)    {    	compilable	  [FE]  IllegalArgumentException  	12	4	replace
165	[BUG]  [BUGGY]  if(ruleType  ==  ruleType  ||  ruleType!=  null)  {  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  ruleType  ||  ruleType!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  ruleType  ||  ruleType!=  null)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType!=    null)    {    	compilable	  [FE]  IllegalArgumentException  	12	4	replace
166	[BUG]  [BUGGY]  this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES);	      this(nameType.getName(),    ruleType.getName(),    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
167	[BUG]  [BUGGY]  this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  nameType);  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  nameType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  nameType);	      this(nameType.getName(),    ruleType.getName(),    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
168	[BUG]  [BUGGY]  this(nameType.getName(),  ruleType.getName(),  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType.getName(),  ruleType.getName(),  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType.getName(),  ruleType.getName(),  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes);	      this(nameType.getName(),    ruleType.getName(),    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
169	[BUG]  [BUGGY]  this(nameType,  nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes);	      this(nameType.getName(),    ruleType.getName(),    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
170	[BUG]  [BUGGY]  this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  NAME_PREFIXES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  NAME_PREFIXES);	      this(nameType.getName(),    ruleType.getName(),    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
171	[BUG]  [BUGGY]  this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES);	      this(nameType.getName(),    ruleType.getName(),    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
172	[BUG]  [BUGGY]  this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES);	      this(nameType.getName(),    ruleType.getName(),    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
173	[BUG]  [BUGGY]  this(nameType.getName(),  ruleType.getName(),  concat,  0,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType.getName(),  ruleType.getName(),  concat,  0,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType.getName(),  ruleType.getName(),  concat,  0,  maxPhonemes);	      this(nameType.getName(),    ruleType.getName(),    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
174	[BUG]  [BUGGY]  this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  definal_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  definal_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  definal_MAX_PHONEMES);	      this(nameType.getName(),    ruleType.getName(),    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
175	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  NAME_PREFIXES,  DEFAULT_MAX_PHONEMES)  {  [CE]  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  NAME_PREFIXES,  DEFAULT_MAX_PHONEMES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  NAME_PREFIXES,  DEFAULT_MAX_PHONEMES)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    NAME_PREFIXES)    {    	non-compiled	[CE]  	36	None	replace
176	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  NAME_PREFIXES)  {  [CE]  incomparable  types:  RuleType  and  Map<NameType,Set<String>>  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  NAME_PREFIXES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.RULES  ||  ruleType  ==  NAME_PREFIXES)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    NAME_PREFIXES)    {    	non-compiled	[CE]  incomparable  types:  RuleType  and  Map<NameType,Set<String>>	36	None	replace
177	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  ruleType  ==  NAME_PREFIXES)  {  [CE]  incomparable  types:  RuleType  and  Map<NameType,Set<String>>  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  ruleType  ==  NAME_PREFIXES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  ruleType  ==  NAME_PREFIXES)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    NAME_PREFIXES)    {    	non-compiled	[CE]  incomparable  types:  RuleType  and  Map<NameType,Set<String>>	36	None	replace
178	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  NAME_PREFIXES,  finalRules)  {  [CE]  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  NAME_PREFIXES,  finalRules)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  NAME_PREFIXES,  finalRules)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    NAME_PREFIXES)    {    	non-compiled	[CE]  	36	None	replace
179	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  DEFAULT_MAX_PHONEMES  ||  ruleType  ==  NAME_PREFIXES)  {  [CE]  incomparable  types:  RuleType  and  int  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  DEFAULT_MAX_PHONEMES  ||  ruleType  ==  NAME_PREFIXES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  DEFAULT_MAX_PHONEMES  ||  ruleType  ==  NAME_PREFIXES)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    NAME_PREFIXES)    {    	non-compiled	[CE]  incomparable  types:  RuleType  and  int	36	None	replace
180	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  NAME_PREFIXES,  concat)  {  [CE]  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  NAME_PREFIXES,  concat)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  NAME_PREFIXES,  concat)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    NAME_PREFIXES)    {    	non-compiled	[CE]  	36	None	replace
181	[BUG]  [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null)    {    if(ruleType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
182	[BUG]  [BUGGY]  if(ruleType  ==  null)  {  if(ruleType!=  null)  {  [CE]  illegal  start  of  expression  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null)  {  if(ruleType!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null)    {    if(ruleType!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
183	[BUG]  [BUGGY]  if(ruleType  ==  null)  {  If(ruleType  ==  null)  {  [CE]  ';'  expected  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null)  {  If(ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null)    {    If(ruleType  ==  null)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
184	[BUG]  [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  >=  null)  {  [CE]  illegal  start  of  expression  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  >=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null)    {    if(ruleType  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
185	[BUG]  [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  [BUGGY]  null)  {  [CE]  ')'  expected  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  [BUGGY]  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null)    {    if(ruleType  [BUGGY]  null)  {	  	non-compiled	[CE]  ')'  expected	7	None	add
186	[BUG]  [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  >>  null)  {  [CE]  illegal  start  of  expression  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  >>  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null)    {    if(ruleType  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
187	[BUG]  [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  [Delete]  null)  {  [CE]  ')'  expected  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  [Delete]  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null)    {    if(ruleType  [Delete]  null)  {	  	non-compiled	[CE]  ')'  expected	7	None	add
188	[BUG]  [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  [PATCH]  null)  {  [CE]  ')'  expected  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  [PATCH]  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null)    {    if(ruleType  [PATCH]  null)  {	  	non-compiled	[CE]  ')'  expected	7	None	add
189	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
190	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  [CE]  illegal  start  of  expression  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
191	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
192	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  ==  RuleType.RULES  ||  ruleType  >=  null)  {  [CE]  illegal  start  of  expression  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  ==  RuleType.RULES  ||  ruleType  >=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    if(ruleType  ==  RuleType.RULES  ||  ruleType  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
193	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  If(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  [CE]  ';'  expected  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  If(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    If(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {	  	non-compiled	[CE]  ';'  expected	4	None	add
194	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  >=  RuleType.RULES  ||  ruleType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  >=  RuleType.RULES  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    if(ruleType  >=  RuleType.RULES  ||  ruleType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
195	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  ==  RuleType.RULES  ||  ruleType  >>  null)  {  [CE]  illegal  start  of  expression  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  ==  RuleType.RULES  ||  ruleType  >>  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    if(ruleType  ==  RuleType.RULES  ||  ruleType  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
196	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  ==  RuleType.RULES  ||  ruleType  [BUGGY]  null)  {  [CE]  ')'  expected  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  ==  RuleType.RULES  ||  ruleType  [BUGGY]  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    if(ruleType  ==  RuleType.RULES  ||  ruleType  [BUGGY]  null)  {	  	non-compiled	[CE]  ')'  expected	4	None	add
197	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  >>  RuleType.RULES  ||  ruleType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  >>  RuleType.RULES  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    if(ruleType  >>  RuleType.RULES  ||  ruleType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
198	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES);	      super(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
199	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  nameType);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  nameType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes,  nameType);	      super(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
200	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  NAME_PREFIXES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes,  NAME_PREFIXES);	      super(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
201	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES);	      super(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
202	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES);	      super(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
203	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  null);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  null);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes,  null);	      super(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
204	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES);	      super(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
205	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  definalRules);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  definalRules);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes,  definalRules);	      super(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
206	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  defFullPhonemes);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  defFullPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes,  defFullPhonemes);	      super(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
207	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  true);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  true);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  true);	      this(nameType,    ruleType,    concat,    maxPhonemes,    true);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
208	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  true,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  true,  DEFAULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  true,  DEFAULT_MAX_PHONEMES);	      this(nameType,    ruleType,    concat,    maxPhonemes,    true);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
209	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  true,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  true,  NAME_PREFIXES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  true,  NAME_PREFIXES);	      this(nameType,    ruleType,    concat,    maxPhonemes,    true);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
210	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  true,  null);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  true,  null);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  true,  null);	      this(nameType,    ruleType,    concat,    maxPhonemes,    true);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
211	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  true,  nameType);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  true,  nameType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  true,  nameType);	      this(nameType,    ruleType,    concat,    maxPhonemes,    true);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
212	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES,  true);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES,  true);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES,  true);	      this(nameType,    ruleType,    concat,    maxPhonemes,    true);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
213	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  false);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  false);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  false);	      this(nameType,    ruleType,    concat,    maxPhonemes,    false);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
214	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  false,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  false,  DEFAULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  false,  DEFAULT_MAX_PHONEMES);	      this(nameType,    ruleType,    concat,    maxPhonemes,    false);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
215	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  defalse);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  defalse);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  defalse);	      this(nameType,    ruleType,    concat,    maxPhonemes,    false);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
216	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  false,  nameType);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  false,  nameType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  false,  nameType);	      this(nameType,    ruleType,    concat,    maxPhonemes,    false);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
217	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES,  false);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES,  false);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES,  false);	      this(nameType,    ruleType,    concat,    maxPhonemes,    false);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
218	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  nameType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	add	if(ruleType!=  RuleType.RULES  ||  nameType  ==  null)  {	  if(ruleType!=    RuleType.RULES    ||    ruleType    ==    null)    {    	compilable	  [FE]  IllegalArgumentException  	10	4	replace
219	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  nameType  ==  null)  {  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  nameType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.RULES  ||  nameType  ==  null)  {	  if(ruleType!=    RuleType.RULES    ||    ruleType    ==    null)    {    	compilable	  [FE]  IllegalArgumentException  	10	4	replace
220	[BUG]  [BUGGY]  if(ruleType  >=  RuleType.RULES  ||  ruleType  ==  null)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]      IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  >=  RuleType.RULES  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  >=  RuleType.RULES  ||  ruleType  ==  null)  {	  if(ruleType!=    RuleType.RULES    ||    ruleType    ==    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	10	None	replace
221	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  typeType  ==  null)  {  [CE]  cannot  find  symbol  typeType  [FE]        IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  typeType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  typeType  ==  null)  {	  if(ruleType!=    RuleType.RULES    ||    ruleType    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  typeType	10	None	replace
222	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  [CE]  illegal  start  of  expression  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES)  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
223	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  if(ruleType  ==  null  ||  ruleType!=  RuleType.RULES)  {  [CE]  illegal  start  of  expression  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  if(ruleType  ==  null  ||  ruleType!=  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    if(ruleType  ==  null  ||  ruleType!=  RuleType.RULES)  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
224	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  if(ruleType!=  null  ||  ruleType  ==  RuleType.RULES)  {  [CE]  illegal  start  of  expression  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  if(ruleType!=  null  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    if(ruleType!=  null  ||  ruleType  ==  RuleType.RULES)  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
225	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  if(ruleType  ==  null  ||  ruleType  >=  RuleType.RULES)  {  [CE]  illegal  start  of  expression  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  if(ruleType  ==  null  ||  ruleType  >=  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    if(ruleType  ==  null  ||  ruleType  >=  RuleType.RULES)  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
226	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  If(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  [CE]  ';'  expected  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  If(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    If(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES)  {	  	non-compiled	[CE]  ';'  expected	2	None	add
227	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  if(ruleType  >=  null  ||  ruleType  ==  RuleType.RULES)  {  [CE]  illegal  start  of  expression  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  if(ruleType  >=  null  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    if(ruleType  >=  null  ||  ruleType  ==  RuleType.RULES)  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
228	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  if(ruleType  ==  null  ||  ruleType  >>  RuleType.RULES)  {  [CE]  illegal  start  of  expression  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  if(ruleType  ==  null  ||  ruleType  >>  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    if(ruleType  ==  null  ||  ruleType  >>  RuleType.RULES)  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
229	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  if(ruleType  {  null  ||  ruleType  ==  RuleType.RULES)  {  [CE]  ')'  expected  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  if(ruleType  {  null  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    if(ruleType  {  null  ||  ruleType  ==  RuleType.RULES)  {	  	non-compiled	[CE]  ')'  expected	2	None	add
230	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  if(ruleType  ==  null  ||  ruleType  [BUGGY]  RuleType.RULES)  {  [CE]  ')'  expected  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  if(ruleType  ==  null  ||  ruleType  [BUGGY]  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    if(ruleType  ==  null  ||  ruleType  [BUGGY]  RuleType.RULES)  {	  	non-compiled	[CE]  ')'  expected	2	None	add
231	[BUG]  [BUGGY]  NameType  ruleType  =  ruleType.getReferenceName();  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  ruleType.getReferenceName();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  ruleType.getReferenceName();	      NameType    ruleType    =    nameType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
232	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getReferenceName();  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  ruleType.getReferenceName();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  ruleType.getReferenceName();	      NameType    ruleType    =    nameType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
233	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRawName();  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  nameType.getRawName();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  nameType.getRawName();	      NameType    ruleType    =    nameType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
234	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getName();  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  nameType.getName();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  nameType.getName();	      NameType    ruleType    =    nameType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
235	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getSimpleName();  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  nameType.getSimpleName();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  nameType.getSimpleName();	      NameType    ruleType    =    nameType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
236	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getReferenceName(),  concat;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  nameType.getReferenceName(),  concat;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  nameType.getReferenceName(),  concat;	      NameType    ruleType    =    nameType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
237	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.DEFAULT_MAX_PHONEMES)  {  [CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.DEFAULT_MAX_PHONEMES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.DEFAULT_MAX_PHONEMES)  {	  if(ruleType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES	1	None	replace
238	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.DEFAULT_MAX_PHONEMES  ||  ruleType  ==  RuleType.NAME_PREFIXES)  {  [CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.DEFAULT_MAX_PHONEMES  ||  ruleType  ==  RuleType.NAME_PREFIXES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.DEFAULT_MAX_PHONEMES  ||  ruleType  ==  RuleType.NAME_PREFIXES)  {	  if(ruleType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES	1	None	replace
239	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  RuleType.NAME_PREFIXES)  {  [CE]  cannot  find  symbol  NAME_PREFIXES  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  RuleType.NAME_PREFIXES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType!=  RuleType.NAME_PREFIXES)  {	  if(ruleType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PREFIXES	1	None	replace
240	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.NAME_RULES)  {  [CE]  cannot  find  symbol  NAME_RULES  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.NAME_RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.NAME_RULES)  {	  if(ruleType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_RULES	1	None	replace
241	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  maxPhonemes  ==  RuleType.MAX_PHONEMES)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  maxPhonemes  ==  RuleType.MAX_PHONEMES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  maxPhonemes  ==  RuleType.MAX_PHONEMES)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null    ||    concat    ==    maxPhonemes)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	37	None	replace
242	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  maxPhonemes  ==  ruleType.maxPhonemes)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  maxPhonemes  ==  ruleType.maxPhonemes)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  maxPhonemes  ==  ruleType.maxPhonemes)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null    ||    concat    ==    maxPhonemes)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	37	None	replace
243	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  maxPhonemes  ==  RuleType.DEFAULT_MAX_PHONEMES)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  maxPhonemes  ==  RuleType.DEFAULT_MAX_PHONEMES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  maxPhonemes  ==  RuleType.DEFAULT_MAX_PHONEMES)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null    ||    concat    ==    maxPhonemes)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	37	None	replace
244	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  null  ||  concat  ==  maxPhonemes)  {  [CE]  incomparable  types:  boolean  and  int  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  null  ||  concat  ==  maxPhonemes)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  nameType  ==  null  ||  concat  ==  maxPhonemes)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null    ||    concat    ==    maxPhonemes)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  int	37	None	replace
245	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  concat  ==  ruleType  ||  maxPhonemes  ==  null)  {  [CE]  incomparable  types:  boolean  and  RuleType  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  concat  ==  ruleType  ||  maxPhonemes  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  concat  ==  ruleType  ||  maxPhonemes  ==  null)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null    ||    concat    ==    maxPhonemes)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  RuleType	37	None	replace
246	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  maxPhonemes  ==  RuleType.DECEMBER)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  maxPhonemes  ==  RuleType.DECEMBER)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  maxPhonemes  ==  RuleType.DECEMBER)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null    ||    concat    ==    maxPhonemes)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	37	None	replace
247	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  maxPhonemes  ==  RuleType.ALL)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  maxPhonemes  ==  RuleType.ALL)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  maxPhonemes  ==  RuleType.ALL)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null    ||    concat    ==    maxPhonemes)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	37	None	replace
248	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  maxPhonemes  ==  RuleType.BLOCK)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  maxPhonemes  ==  RuleType.BLOCK)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  maxPhonemes  ==  RuleType.BLOCK)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null    ||    concat    ==    maxPhonemes)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	37	None	replace
249	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES);	      this(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
250	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0);  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  0);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  0);	      this(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
251	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  MAX_PHONEMES);	      this(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
252	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES);	      this(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
253	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES);	      this(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
254	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  minPhonemes);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  minPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  minPhonemes);	      this(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
255	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  null);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  null);	      this(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
256	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getName();  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  ruleType.getName();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  ruleType.getName();	      NameType    nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
257	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getReferenceName(),  concat);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getReferenceName(),  concat);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  new  NameType(nameType.getReferenceName(),  concat);	      NameType    nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
258	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getReferenceName());  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getReferenceName());  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  new  NameType(nameType.getReferenceName());	      NameType    nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
259	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getReferenceName());  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getReferenceName());  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getReferenceName());	      NameType    nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
260	[BUG]  [BUGGY]  NameType  nameType  =  this.nameType.getReferenceName();  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  this.nameType.getReferenceName();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  this.nameType.getReferenceName();	      NameType    nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
261	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRawName();  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  ruleType.getRawName();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  ruleType.getRawName();	      NameType    nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
262	[BUG]  [BUGGY]  NameType  nameType  =  type.getReferenceName();  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  type.getReferenceName();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  type.getReferenceName();	      NameType    nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
263	[BUG]  [BUGGY]  this.ruleType  =  ruleType;  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this.ruleType  =  ruleType;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this.ruleType  =  ruleType;	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
264	[BUG]  [BUGGY]  super(nameType,  ruleType);  this.ruleType  =  ruleType;  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType);  this.ruleType  =  ruleType;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType);  this.ruleType  =  ruleType;	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
265	[BUG]  [BUGGY]  super(nameType,  ruleType.ruleType);  this.ruleType  =  ruleType;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType.ruleType);  this.ruleType  =  ruleType;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType.ruleType);  this.ruleType  =  ruleType;	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
266	[BUG]  [BUGGY]  NameType  nameType  =  nameType.getNameType();  this.ruleType  =  ruleType;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  nameType.getNameType();  this.ruleType  =  ruleType;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  nameType.getNameType();  this.ruleType  =  ruleType;	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
267	[BUG]  [BUGGY]  set(nameType,  ruleType);  this.ruleType  =  ruleType;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  set(nameType,  ruleType);  this.ruleType  =  ruleType;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	set(nameType,  ruleType);  this.ruleType  =  ruleType;	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
268	[BUG]  [BUGGY]  super(nameType.getName(),  ruleType);  this.ruleType  =  ruleType;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType.getName(),  ruleType);  this.ruleType  =  ruleType;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType.getName(),  ruleType);  this.ruleType  =  ruleType;	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
269	[BUG]  [BUGGY]  setRuleType(ruleType);  this.ruleType  =  nameType;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  setRuleType(ruleType);  this.ruleType  =  nameType;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	setRuleType(ruleType);  this.ruleType  =  nameType;	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
270	[BUG]  [BUGGY]  NameType  nameType  =  nameType.getName();  this.ruleType  =  ruleType;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  nameType.getName();  this.ruleType  =  ruleType;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  nameType.getName();  this.ruleType  =  ruleType;	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
271	[BUG]  [BUGGY]  NameType  ruleType  =  ruleType.getRawClass();  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  ruleType.getRawClass();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  ruleType.getRawClass();	      NameType    ruleType    =    nameType.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
272	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRawClass();  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  ruleType.getRawClass();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  ruleType.getRawClass();	      NameType    ruleType    =    nameType.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
273	[BUG]  [BUGGY]  NameType  nameType  =  nameType.getRawClass();  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  nameType.getRawClass();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  nameType.getRawClass();	      NameType    ruleType    =    nameType.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
274	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getReturnType();  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  nameType.getReturnType();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  nameType.getReturnType();	      NameType    ruleType    =    nameType.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
275	[BUG]  [BUGGY]  this.nameType  =  nameType.getName();  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this.nameType  =  nameType.getName();  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this.nameType  =  nameType.getName();	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
276	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.DEFAULT)  {  [CE]  cannot  find  symbol  DEFAULT  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.DEFAULT)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.DEFAULT)  {	  if(ruleType    ==    RuleType.DEFAULT)    {    	non-compiled	[CE]  cannot  find  symbol  DEFAULT	38	None	replace
277	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.NAME_PREFIXES  ||  ruleType  ==  RuleType.DEFAULT)  {  [CE]  cannot  find  symbol  NAME_PREFIXES  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.NAME_PREFIXES  ||  ruleType  ==  RuleType.DEFAULT)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.NAME_PREFIXES  ||  ruleType  ==  RuleType.DEFAULT)  {	  if(ruleType    ==    RuleType.DEFAULT)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PREFIXES	38	None	replace
278	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.DEFAULT  ||  ruleType  ==  null)  {  [CE]  cannot  find  symbol  DEFAULT  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.DEFAULT  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.DEFAULT  ||  ruleType  ==  null)  {	  if(ruleType    ==    RuleType.DEFAULT)    {    	non-compiled	[CE]  cannot  find  symbol  DEFAULT	38	None	replace
279	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  concat);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  concat);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  concat);	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
280	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName());  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName());  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  new  NameType(nameType.getName());	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
281	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  Context.NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  Context.NAME_PREFIXES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  Context.NAME_PREFIXES);	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
282	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getName());  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getName());  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getName());	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
283	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getParameterTypes());  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getParameterTypes());  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getParameterTypes());	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
284	[BUG]  [BUGGY]  NameType  nameType  =  this.nameType.getName();  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  this.nameType.getName();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  this.nameType.getName();	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
285	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getSimpleName());  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getSimpleName());  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getSimpleName());	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
286	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PHONEMES)  {  [CE]  cannot  find  symbol  NAME_PHONEMES  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PHONEMES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PHONEMES)  {	  if(ruleType!=    RuleType.RULES    ||    ruleType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PHONEMES	27	None	replace
287	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PLAIN)  {  [CE]  cannot  find  symbol  NAME_PLAIN  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PLAIN)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PLAIN)  {	  if(ruleType!=    RuleType.RULES    ||    ruleType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PLAIN	27	None	replace
288	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES_FIRST  ||  ruleType  ==  RuleType.NAME_PREFIXES)  {  [CE]  cannot  find  symbol  RULES_FIRST  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES_FIRST  ||  ruleType  ==  RuleType.NAME_PREFIXES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES_FIRST  ||  ruleType  ==  RuleType.NAME_PREFIXES)  {	  if(ruleType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  RULES_FIRST	1	None	replace
289	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.NAME_RULES  ||  ruleType  ==  RuleType.NAME_PREFIXES)  {  [CE]  cannot  find  symbol  NAME_RULES  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.NAME_RULES  ||  ruleType  ==  RuleType.NAME_PREFIXES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.NAME_RULES  ||  ruleType  ==  RuleType.NAME_PREFIXES)  {	  if(ruleType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_RULES	1	None	replace
290	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRuleType( "ruleType ",  false);  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  nameType.getRuleType( "ruleType ",  false);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  nameType.getRuleType( "ruleType ",  false);	      NameType    ruleType    =    nameType.getRuleType(   "ruleType   ");    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
291	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRuleType( ".ruleType ");  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  nameType.getRuleType( ".ruleType ");  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  nameType.getRuleType( ".ruleType ");	      NameType    ruleType    =    nameType.getRuleType(   "ruleType   ");    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
292	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  ==  RuleType.ROLES  ||  ruleType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  ==  RuleType.ROLES  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    if(ruleType  ==  RuleType.ROLES  ||  ruleType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
293	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES);	      super(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
294	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES);	      super(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
295	[BUG]  [BUGGY]  super(nameType,  nameType);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  nameType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  nameType);	      super(nameType);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
296	[BUG]  [BUGGY]  super(nameType,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  maxPhonemes);	      super(nameType);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
297	[BUG]  [BUGGY]  super(nameType,  null);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  null);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  null);	      super(nameType);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
298	[BUG]  [BUGGY]  super(nameType.getName(),  ruleType);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType.getName(),  ruleType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType.getName(),  ruleType);	      super(nameType);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
299	[BUG]  [BUGGY]  super(nameType,  ruleType.null);  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType.null);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType.null);	      super(nameType);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
300	[BUG]  [BUGGY]  super(nameType,  ruleType.defaultRules);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType.defaultRules);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType.defaultRules);	      super(nameType);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
301	[BUG]  [BUGGY]  super(nameType,  ruleType.ruleType);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType.ruleType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType.ruleType);	      super(nameType);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
302	[BUG]  [BUGGY]  this(nameType,  nameType,  concat,  maxPhonemes,  DEFAULT_PHONEMES);  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  nameType,  concat,  maxPhonemes,  DEFAULT_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  nameType,  concat,  maxPhonemes,  DEFAULT_PHONEMES);	      this(nameType,    nameType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
303	[BUG]  [BUGGY]  this(nameType,  RuleType.NAME_PREFIXES,  ruleType,  concat,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  RuleType.NAME_PREFIXES,  ruleType,  concat,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  RuleType.NAME_PREFIXES,  ruleType,  concat,  maxPhonemes);	      this(nameType,    nameType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
304	[BUG]  [BUGGY]  this(nameType,  nameType,  concat,  maxPhonemes,  defULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  nameType,  concat,  maxPhonemes,  defULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  nameType,  concat,  maxPhonemes,  defULT_MAX_PHONEMES);	      this(nameType,    nameType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
305	[BUG]  [BUGGY]  this(nameType,  nameType,  concat,  maxPhonemes,  deFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  nameType,  concat,  maxPhonemes,  deFAULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  nameType,  concat,  maxPhonemes,  deFAULT_MAX_PHONEMES);	      this(nameType,    nameType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
306	[BUG]  [BUGGY]  this(nameType,  RuleType.NAME_PREFIXES,  nameType,  concat,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  RuleType.NAME_PREFIXES,  nameType,  concat,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  RuleType.NAME_PREFIXES,  nameType,  concat,  maxPhonemes);	      this(nameType,    nameType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
307	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.NAME_FIXES  ||  ruleType  ==  RuleType.RULES)  {  [CE]  cannot  find  symbol  NAME_FIXES  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.NAME_FIXES  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.NAME_FIXES  ||  ruleType  ==  RuleType.RULES)  {	  if(ruleType    ==    RuleType.NAME_PREFIXES    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_FIXES	6	None	replace
308	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.DEFAULT_MAX_PHONEMES  ||  ruleType  ==  RuleType.NAME_PREFIXES  ||  ruleType  ==  RuleType.RULES)  {  [CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.DEFAULT_MAX_PHONEMES  ||  ruleType  ==  RuleType.NAME_PREFIXES  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.DEFAULT_MAX_PHONEMES  ||  ruleType  ==  RuleType.NAME_PREFIXES  ||  ruleType  ==  RuleType.RULES)  {	  if(ruleType    ==    RuleType.NAME_PREFIXES    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES	6	None	replace
309	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.NAME  ||  ruleType  ==  RuleType.RULES)  {  [CE]  cannot  find  symbol  NAME  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.NAME  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.NAME  ||  ruleType  ==  RuleType.RULES)  {	  if(ruleType    ==    RuleType.NAME_PREFIXES    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME	6	None	replace
310	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRawParameterType(0);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  nameType.getRawParameterType(0);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  nameType.getRawParameterType(0);	      NameType    ruleType    =    nameType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
311	[BUG]  [BUGGY]  NameType  nameType  =  NAME_PREFIXES.getRuleType();  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  NAME_PREFIXES.getRuleType();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  NAME_PREFIXES.getRuleType();	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
312	[BUG]  [BUGGY]  NameType  nameType  =  RuleType.NAME_PREFIXES.getRuleType();  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  RuleType.NAME_PREFIXES.getRuleType();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  RuleType.NAME_PREFIXES.getRuleType();	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
313	[BUG]  [BUGGY]  NameType  nameType  =  RuleType.getRuleType(nameType);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  RuleType.getRuleType(nameType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  RuleType.getRuleType(nameType);	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
314	[BUG]  [BUGGY]  NameType  nameType  =  rules.getRuleType();  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  rules.getRuleType();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  rules.getRuleType();	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
315	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getRuleType(),  ruleType);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getRuleType(),  ruleType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  new  NameType(nameType.getRuleType(),  ruleType);	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
316	[BUG]  [BUGGY]  super(nameType,  nameType);  this.ruleType  =  ruleType;  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  nameType);  this.ruleType  =  ruleType;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  nameType);  this.ruleType  =  ruleType;	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
317	[BUG]  [BUGGY]  super(nameType.getName());  this.ruleType  =  ruleType;  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType.getName());  this.ruleType  =  ruleType;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType.getName());  this.ruleType  =  ruleType;	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
318	[BUG]  [BUGGY]  super(nameType.getName(),  ruleType.getName());  this.ruleType  =  ruleType;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType.getName(),  ruleType.getName());  this.ruleType  =  ruleType;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType.getName(),  ruleType.getName());  this.ruleType  =  ruleType;	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
319	[BUG]  [BUGGY]  if(ruleType!=  RuleType.NAME_TYPE  ||  ruleType  ==  RuleType.RULES)  {  [CE]  cannot  find  symbol  NAME_TYPE  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.NAME_TYPE  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.NAME_TYPE  ||  ruleType  ==  RuleType.RULES)  {	  if(ruleType!=    RuleType.NAME_PREFIXES    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_TYPE	26	None	replace
320	[BUG]  [BUGGY]  if(ruleType!=  RuleType.NAME_FIXES  ||  ruleType  ==  RuleType.RULES)  {  [CE]  cannot  find  symbol  NAME_FIXES  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.NAME_FIXES  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.NAME_FIXES  ||  ruleType  ==  RuleType.RULES)  {	  if(ruleType!=    RuleType.NAME_PREFIXES    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_FIXES	26	None	replace
321	[BUG]  [BUGGY]  if(ruleType!=  RuleType.STRING  ||  ruleType  ==  RuleType.NAME_PREFIXES)  {  [CE]  cannot  find  symbol  STRING  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.STRING  ||  ruleType  ==  RuleType.NAME_PREFIXES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.STRING  ||  ruleType  ==  RuleType.NAME_PREFIXES)  {	  if(ruleType!=    RuleType.NAME_PREFIXES    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  STRING	26	None	replace
322	[BUG]  [BUGGY]  if(ruleType!=  RuleType.UNKNOWN  ||  ruleType  ==  RuleType.RULES)  {  [CE]  cannot  find  symbol  UNKNOWN  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.UNKNOWN  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.UNKNOWN  ||  ruleType  ==  RuleType.RULES)  {	  if(ruleType!=    RuleType.NAME_PREFIXES    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	26	None	replace
323	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  deFAULT_MAX_PHONEMES,  true);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  deFAULT_MAX_PHONEMES,  true);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  deFAULT_MAX_PHONEMES,  true);	      this(nameType,    ruleType,    concat,    maxPhonemes,    true);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
324	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  defulT_MAX_PHONEMES,  true);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  defulT_MAX_PHONEMES,  true);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  defulT_MAX_PHONEMES,  true);	      this(nameType,    ruleType,    concat,    maxPhonemes,    true);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
325	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  phonemeBuilder,  null);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  phonemeBuilder,  null);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  phonemeBuilder,  null);	      this(nameType,    ruleType,    concat,    maxPhonemes,    null);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
326	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  PhonemeBuilder.DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  PhonemeBuilder.DEFAULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  PhonemeBuilder.DEFAULT_MAX_PHONEMES);	      this(nameType,    ruleType,    concat,    maxPhonemes,    null);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
327	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  concat  ==  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]    IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  concat  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.RULES  ||  concat  ==  null)  {	  if(ruleType!=    RuleType.RULES    ||    ruleType    ==    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	10	None	replace
328	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]      IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  ruleType  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	add	if(ruleType!=  ruleType  ||  ruleType  ==  null)  {	  if(ruleType!=    RuleType.RULES    ||    ruleType    ==    null)    {    	compilable	  [FE]  ExceptionInInitializerError  	10	4	replace
329	[BUG]  [BUGGY]  if(ruleType!=  ruleType  ||  ruleType  ==  null)  {  [FE]  ExceptionInInitializerError  [FE]      IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  ruleType  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  ruleType  ||  ruleType  ==  null)  {	  if(ruleType!=    RuleType.RULES    ||    ruleType    ==    null)    {    	compilable	  [FE]  ExceptionInInitializerError  	10	4	replace
330	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  DEFAULT_MAX_PHONEMES)  {  [CE]  incomparable  types:  RuleType  and  int  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  DEFAULT_MAX_PHONEMES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  DEFAULT_MAX_PHONEMES)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    NAME_PREFIXES)    {    	non-compiled	[CE]  incomparable  types:  RuleType  and  int	36	None	replace
331	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  NAME_PREFIXES,  nameType)  {  [CE]  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  NAME_PREFIXES,  nameType)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  NAME_PREFIXES,  nameType)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    NAME_PREFIXES)    {    	non-compiled	[CE]  	36	None	replace
332	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  null,  ruleType);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  null,  ruleType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  null,  ruleType);	      this(nameType,    ruleType,    concat,    null,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
333	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  maxPhonemes);	      this(nameType,    ruleType,    concat,    null,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
334	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes,  DEFAULT_PHONEMES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes,  DEFAULT_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  null,  maxPhonemes,  DEFAULT_PHONEMES);	      this(nameType,    ruleType,    concat,    null,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
335	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.DEFAULT_MAX_PHONEMES)  {  [CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.DEFAULT_MAX_PHONEMES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.DEFAULT_MAX_PHONEMES)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES	24	None	replace
336	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.PREFIXES)  {  [CE]  cannot  find  symbol  PREFIXES  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.PREFIXES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.PREFIXES)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  PREFIXES	24	None	replace
337	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PARENTHES)  {  [CE]  cannot  find  symbol  NAME_PARENTHES  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PARENTHES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PARENTHES)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PARENTHES	24	None	replace
338	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES_FIRST  ||  ruleType!=  RuleType.NAME_PREFIXES)  {  [CE]  cannot  find  symbol  RULES_FIRST  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES_FIRST  ||  ruleType!=  RuleType.NAME_PREFIXES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.RULES_FIRST  ||  ruleType!=  RuleType.NAME_PREFIXES)  {	  if(ruleType!=    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  RULES_FIRST	25	None	replace
339	[BUG]  [BUGGY]  if(ruleType!=  RuleType.NAME_RULES  ||  ruleType!=  RuleType.NAME_PREFIXES)  {  [CE]  cannot  find  symbol  NAME_RULES  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.NAME_RULES  ||  ruleType!=  RuleType.NAME_PREFIXES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.NAME_RULES  ||  ruleType!=  RuleType.NAME_PREFIXES)  {	  if(ruleType!=    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_RULES	25	None	replace
340	[BUG]  [BUGGY]  if(ruleType!=  RuleType.UNKNOWN)  {  [CE]  cannot  find  symbol  UNKNOWN  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.UNKNOWN)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.UNKNOWN)  {	  if(ruleType!=    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	25	None	replace
341	[BUG]  [BUGGY]  NameType  nameType  =  NAME_PREFIXES.getReferenceName();  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  NAME_PREFIXES.getReferenceName();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  NAME_PREFIXES.getReferenceName();	      NameType    nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
342	[BUG]  [BUGGY]  NameType  nameType  =  RuleType.class.getReferenceName();  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  RuleType.class.getReferenceName();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  RuleType.class.getReferenceName();	      NameType    nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
343	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRawReferenceName();  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  ruleType.getRawReferenceName();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  ruleType.getRawReferenceName();	      NameType    nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
344	[BUG]  [BUGGY]  NameType  nameType  =  rules.getReferenceName();  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  rules.getReferenceName();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  rules.getReferenceName();	      NameType    nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
345	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES,  false);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES,  false);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES,  false);	      this(nameType,    ruleType,    concat,    maxPhonemes,    false);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
346	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  if(ruleType  ==  null  ||  ruleType  ==  RuleType.ROLES)  {  [CE]  illegal  start  of  expression  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES)  {  if(ruleType  ==  null  ||  ruleType  ==  RuleType.ROLES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    if(ruleType  ==  null  ||  ruleType  ==  RuleType.ROLES)  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
347	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  [BUGGY]  RuleType.RULES  ||  ruleType  ==  null)  {  [CE]  ')'  expected  [FE]    IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  [BUGGY]  RuleType.RULES  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=    RuleType.RULES    ||    ruleType    ==    null)    {    if(ruleType  [BUGGY]  RuleType.RULES  ||  ruleType  ==  null)  {	  	non-compiled	[CE]  ')'  expected	9	None	add
348	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType!=  ruleType.RULES  ||  ruleType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType!=  ruleType.RULES  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=    RuleType.RULES    ||    ruleType    ==    null)    {    if(ruleType!=  ruleType.RULES  ||  ruleType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
349	[BUG]  [BUGGY]  this(nameType,  ruleType,  null,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  null,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  null,  maxPhonemes);	      this(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
350	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES);  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES);	      this(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
351	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getNormalizedName();  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  nameType.getNormalizedName();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  nameType.getNormalizedName();	      NameType    ruleType    =    nameType.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
352	[BUG]  [BUGGY]  NameType  nameType  =  nameType.getNameType();  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  nameType.getNameType();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  nameType.getNameType();	      NameType    ruleType    =    nameType.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
353	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  defFullPhonemes);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  defFullPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  defFullPhonemes);	      this(nameType,    ruleType,    concat,    maxPhonemes,    nameType);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
354	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.NAME_PREFIXES  ||  nameType  ==  RuleType.RULES)  {  [CE]  cannot  find  symbol  NAME_PREFIXES  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.NAME_PREFIXES  ||  nameType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.NAME_PREFIXES  ||  nameType  ==  RuleType.RULES)  {	  if(ruleType    ==    RuleType.RULES    ||    nameType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PREFIXES	39	None	replace
355	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME)  {  [CE]  cannot  find  symbol  NAME  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME)  {	  if(ruleType    ==    RuleType.RULES    ||    nameType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME	39	None	replace
356	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_PARENTHES)  {  [CE]  cannot  find  symbol  NAME_PARENTHES  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_PARENTHES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_PARENTHES)  {	  if(ruleType    ==    RuleType.RULES    ||    nameType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PARENTHES	39	None	replace
357	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_TYPE)  {  [CE]  cannot  find  symbol  NAME_TYPE  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_TYPE)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_TYPE)  {	  if(ruleType    ==    RuleType.RULES    ||    nameType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_TYPE	39	None	replace
358	[BUG]  [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null  ||  ruleType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null)    {    if(ruleType  ==  null  ||  ruleType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
359	[BUG]  [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null  ||   "ruleType  must  not  be   "  +  RuleType.RULES);  [CE]  illegal  start  of  expression  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null  ||   "ruleType  must  not  be   "  +  RuleType.RULES);  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null)    {    if(ruleType  ==  null  ||   "ruleType  must  not  be   "  +  RuleType.RULES);	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
360	[BUG]  [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null  ||  (ruleType  ==  null  &&  nameType.isUnknownType()))  {  [CE]  illegal  start  of  expression  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null  ||  (ruleType  ==  null  &&  nameType.isUnknownType()))  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null)    {    if(ruleType  ==  null  ||  (ruleType  ==  null  &&  nameType.isUnknownType()))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
361	[BUG]  [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null  ||  (ruleType  ==  null  &&  nameType.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null  ||  (ruleType  ==  null  &&  nameType.isEmpty()))  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null)    {    if(ruleType  ==  null  ||  (ruleType  ==  null  &&  nameType.isEmpty()))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
362	[BUG]  [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null  ||   "ruleType  does  not  be   "  +  RuleType.RULES);  [CE]  illegal  start  of  expression  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null  ||   "ruleType  does  not  be   "  +  RuleType.RULES);  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null)    {    if(ruleType  ==  null  ||   "ruleType  does  not  be   "  +  RuleType.RULES);	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
363	[BUG]  [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null  ||  (ruleType  ==  null  &&  nameType.length()  >  maxPhonemes))  {  [CE]  illegal  start  of  expression  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null  ||  (ruleType  ==  null  &&  nameType.length()  >  maxPhonemes))  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null)    {    if(ruleType  ==  null  ||  (ruleType  ==  null  &&  nameType.length()  >  maxPhonemes))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
364	[BUG]  [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null  ||  (ruleType  ==  null  &&  nameType.length()  >  0))  {  [CE]  illegal  start  of  expression  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null  ||  (ruleType  ==  null  &&  nameType.length()  >  0))  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null)    {    if(ruleType  ==  null  ||  (ruleType  ==  null  &&  nameType.length()  >  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
365	[BUG]  [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null  ||  (ruleType  ==  null  &&  nameType.isFunctionPrototype()))  {  [CE]  illegal  start  of  expression  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null  ||  (ruleType  ==  null  &&  nameType.isFunctionPrototype()))  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null)    {    if(ruleType  ==  null  ||  (ruleType  ==  null  &&  nameType.isFunctionPrototype()))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
366	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  defULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  defULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes,  defULT_MAX_PHONEMES);	      super(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
367	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType);  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType);	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
368	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance();  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance();  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance();	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
369	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder(nameType.getName());  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder(nameType.getName());  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder(nameType.getName());	      	non-compiled	[CE]  illegal  start  of  type	13	None	replace
370	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.NAME  ||  nameType  ==  RuleType.RULES)  {  [CE]  cannot  find  symbol  NAME  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.NAME  ||  nameType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.NAME  ||  nameType  ==  RuleType.RULES)  {	  if(ruleType    ==    RuleType.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  NAME	40	None	replace
371	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.ROOT)  {  [CE]  cannot  find  symbol  ROOT  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.ROOT)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.ROOT)  {	  if(ruleType    ==    RuleType.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  ROOT	40	None	replace
372	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	add	if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {	  if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    	compilable	  [FE]  ExceptionInInitializerError  	3	4	replace
373	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {	  if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    	compilable	  [FE]  ExceptionInInitializerError  	3	4	replace
374	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.UNKNOWN)  {  [CE]  cannot  find  symbol  UNKNOWN  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.UNKNOWN)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  ruleType  ==  RuleType.UNKNOWN)  {	  if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	3	None	replace
375	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	add	if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {	  if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    	compilable	  [FE]  IllegalArgumentException  	3	4	replace
376	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  [FE]  IllegalArgumentException  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {	  if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    	compilable	  [FE]  IllegalArgumentException  	3	4	replace
377	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES,  concat)  {  [CE]  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES,  concat)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES,  concat)  {	  if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  	3	None	replace
378	[BUG]  [BUGGY]  NameType  ruleType  =  NAME_PREFIXES.getRuleType();  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  NAME_PREFIXES.getRuleType();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  NAME_PREFIXES.getRuleType();	      NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
379	[BUG]  [BUGGY]  NameType  ruleType  =  this.nameType.getRuleType();  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  this.nameType.getRuleType();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  this.nameType.getRuleType();	      NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
380	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.DEFAULT_MAX_PHONEMES)  {  [CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES  [FE]    IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.DEFAULT_MAX_PHONEMES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.DEFAULT_MAX_PHONEMES)  {	  if(ruleType!=    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES	35	None	replace
381	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.DEFAULT)  {  [CE]  cannot  find  symbol  DEFAULT  [FE]      IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.DEFAULT)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.DEFAULT)  {	  if(ruleType!=    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  DEFAULT	35	None	replace
382	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.EXPR_RESULT)  {  [CE]  cannot  find  symbol  EXPR_RESULT  [FE]        IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.EXPR_RESULT)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.EXPR_RESULT)  {	  if(ruleType!=    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  EXPR_RESULT	35	None	replace
383	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.UNKNOWN)  {  [CE]  cannot  find  symbol  UNKNOWN  [FE]          IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.UNKNOWN)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.UNKNOWN)  {	  if(ruleType!=    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	35	None	replace
384	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_TYPE)  {  [CE]  cannot  find  symbol  NAME_TYPE  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_TYPE)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_TYPE)  {	  if(ruleType!=    RuleType.RULES    ||    ruleType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_TYPE	27	None	replace
385	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  nameType!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	add	if(ruleType  ==  null  ||  nameType!=  null)  {	  if(ruleType    ==    null)    {    	compilable	  [FE]  IllegalArgumentException  	8	4	replace
386	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  nameType!=  null)  {  [FE]  IllegalArgumentException  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  nameType!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  nameType!=  null)  {	  if(ruleType    ==    null)    {    	compilable	  [FE]  IllegalArgumentException  	8	4	replace
387	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  nameType!=  RuleType.RULES)  {  [CE]  incomparable  types:  NameType  and  RuleType  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  nameType!=  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  nameType!=  RuleType.RULES)  {	  if(ruleType    ==    null)    {    	non-compiled	[CE]  incomparable  types:  NameType  and  RuleType	8	None	replace
388	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType.RULES!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	add	if(ruleType  ==  null  ||  ruleType.RULES!=  null)  {	  if(ruleType    ==    null)    {    	compilable	  [FE]  IllegalArgumentException  	8	4	replace
389	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  ruleType.RULES!=  null)  {  [FE]  IllegalArgumentException  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType.RULES!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  ruleType.RULES!=  null)  {	  if(ruleType    ==    null)    {    	compilable	  [FE]  IllegalArgumentException  	8	4	replace
390	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  ruleType.Rules!=  null)  {  [CE]  cannot  find  symbol  Rules  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType.Rules!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  ruleType.Rules!=  null)  {	  if(ruleType    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  Rules	8	None	replace
391	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	add	if(ruleType  ==  null  ||  ruleType!=  null)  {	  if(ruleType    ==    null)    {    	compilable	  [FE]  IllegalArgumentException  	8	4	replace
392	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  ruleType!=  null)  {  [FE]  IllegalArgumentException  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  ruleType!=  null)  {	  if(ruleType    ==    null)    {    	compilable	  [FE]  IllegalArgumentException  	8	4	replace
393	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  ruleType  ==  maxPhonemes)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  ruleType  ==  maxPhonemes)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  ruleType  ==  maxPhonemes)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null    ||    concat    ==    maxPhonemes)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	37	None	replace
394	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null  ||  concat  ==  maxPhonemes)  {  [CE]  incomparable  types:  boolean  and  int  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null  ||  concat  ==  maxPhonemes)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null  ||  concat  ==  maxPhonemes)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null    ||    concat    ==    maxPhonemes)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  int	37	None	replace
395	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  concat!=  maxPhonemes)  {  [CE]  incomparable  types:  boolean  and  int  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  concat!=  maxPhonemes)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  concat!=  maxPhonemes)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null    ||    concat    ==    maxPhonemes)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  int	37	None	replace
396	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  concat  ==  null  ||  ruleType  ==  maxPhonemes)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  concat  ==  null  ||  ruleType  ==  maxPhonemes)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.RULES  ||  concat  ==  null  ||  ruleType  ==  maxPhonemes)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null    ||    concat    ==    maxPhonemes)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	37	None	replace
397	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null  ||  concat  ==  maxPhonemes)  {  [CE]  incomparable  types:  boolean  and  int  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null  ||  concat  ==  maxPhonemes)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null  ||  concat  ==  maxPhonemes)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null    ||    concat    ==    maxPhonemes)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  int	37	None	replace
398	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  concat  ==  ruleType  ||  ruleType  ==  null  ||  maxPhonemes  ==  RuleType.MAX_PHONEMES)  {  [CE]  incomparable  types:  boolean  and  RuleType  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  concat  ==  ruleType  ||  ruleType  ==  null  ||  maxPhonemes  ==  RuleType.MAX_PHONEMES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  concat  ==  ruleType  ||  ruleType  ==  null  ||  maxPhonemes  ==  RuleType.MAX_PHONEMES)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null    ||    concat    ==    maxPhonemes)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  RuleType	37	None	replace
399	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  concat!=  null)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]    IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  concat!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  concat!=  null)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType!=    null)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	12	None	replace
400	[BUG]  [BUGGY]  NameType  nameType  =  RuleType.NAME_PREFIXES.getName();  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  RuleType.NAME_PREFIXES.getName();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  RuleType.NAME_PREFIXES.getName();	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
401	[BUG]  [BUGGY]  NameType  nameType  =  NAME_PREFIXES.getName();  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  NAME_PREFIXES.getName();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  NAME_PREFIXES.getName();	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
402	[BUG]  [BUGGY]  NameType  nameType  =  RuleType.class.getName();  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  RuleType.class.getName();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  RuleType.class.getName();	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
403	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getLanguage());  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getLanguage());  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getLanguage());	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
404	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.DEFAULT  ||  ruleType  ==  RuleType.RULES)  {  [CE]  cannot  find  symbol  DEFAULT  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.DEFAULT  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.DEFAULT  ||  ruleType  ==  RuleType.RULES)  {	  if(ruleType    ==    RuleType.DEFAULT)    {    	non-compiled	[CE]  cannot  find  symbol  DEFAULT	38	None	replace
405	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.DEFAULT  ||  ruleType  ==  RuleType.NAME_PREFIXES)  {  [CE]  cannot  find  symbol  DEFAULT  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.DEFAULT  ||  ruleType  ==  RuleType.NAME_PREFIXES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.DEFAULT  ||  ruleType  ==  RuleType.NAME_PREFIXES)  {	  if(ruleType    ==    RuleType.DEFAULT)    {    	non-compiled	[CE]  cannot  find  symbol  DEFAULT	38	None	replace
406	[BUG]  [BUGGY]  this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  DEFAULT_PHONEMES);  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  DEFAULT_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  DEFAULT_PHONEMES);	      this(nameType.getName(),    ruleType.getName(),    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
407	[BUG]  [BUGGY]  this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  defULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  defULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  defULT_MAX_PHONEMES);	      this(nameType.getName(),    ruleType.getName(),    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
408	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  deFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  deFAULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  deFAULT_MAX_PHONEMES);	      this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
409	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MULTIPLE_PHONEMES);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MULTIPLE_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MULTIPLE_PHONEMES);	      this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
410	[BUG]  [BUGGY]  this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  defulT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  defulT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  defulT_MAX_PHONEMES);	      this(nameType.getName(),    ruleType.getName(),    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
411	[BUG]  [BUGGY]  this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  deFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  deFAULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType.getName(),  ruleType.getName(),  concat,  maxPhonemes,  deFAULT_MAX_PHONEMES);	      this(nameType.getName(),    ruleType.getName(),    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
412	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES);	      this(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
413	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  maxPhonemes  ==  RuleType.FINAL)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  maxPhonemes  ==  RuleType.FINAL)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  maxPhonemes  ==  RuleType.FINAL)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null    ||    concat    ==    maxPhonemes)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	37	None	replace
414	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  maxPhonemes  ==  RuleType.FAILED)  {  [CE]  incomparable  types:  boolean  and  <null>  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  maxPhonemes  ==  RuleType.FAILED)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  concat  ==  null  ||  maxPhonemes  ==  RuleType.FAILED)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null    ||    concat    ==    maxPhonemes)    {    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	37	None	replace
415	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PARAM)  {  [CE]  cannot  find  symbol  NAME_PARAM  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PARAM)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PARAM)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PARAM	24	None	replace
416	[BUG]  [BUGGY]  if(ruleType!=  RuleType.NAME_PHONEMES  ||  ruleType  ==  RuleType.RULES)  {  [CE]  cannot  find  symbol  NAME_PHONEMES  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.NAME_PHONEMES  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.NAME_PHONEMES  ||  ruleType  ==  RuleType.RULES)  {	  if(ruleType!=    RuleType.NAME_PREFIXES    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PHONEMES	26	None	replace
417	[BUG]  [BUGGY]  if(ruleType!=  RuleType.NAME_PUBLIC  ||  ruleType  ==  RuleType.RULES)  {  [CE]  cannot  find  symbol  NAME_PUBLIC  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.NAME_PUBLIC  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.NAME_PUBLIC  ||  ruleType  ==  RuleType.RULES)  {	  if(ruleType!=    RuleType.NAME_PREFIXES    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PUBLIC	26	None	replace
418	[BUG]  [BUGGY]  if(ruleType!=  RuleType.NAME_POINT  ||  ruleType  ==  RuleType.RULES)  {  [CE]  cannot  find  symbol  NAME_POINT  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.NAME_POINT  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.NAME_POINT  ||  ruleType  ==  RuleType.RULES)  {	  if(ruleType!=    RuleType.NAME_PREFIXES    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_POINT	26	None	replace
419	[BUG]  [BUGGY]  this(nameType,  nameType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  nameType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  nameType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes);	      this(nameType,    nameType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
420	[BUG]  [BUGGY]  this(nameType.nameType,  ruleType,  concat,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType.nameType,  ruleType,  concat,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType.nameType,  ruleType,  concat,  maxPhonemes);	      this(nameType,    nameType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
421	[BUG]  [BUGGY]  this(nameType,  nameType,  concat,  maxPhonemes,  defulT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  nameType,  concat,  maxPhonemes,  defulT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  nameType,  concat,  maxPhonemes,  defulT_MAX_PHONEMES);	      this(nameType,    nameType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
422	[BUG]  [BUGGY]  This(nameType,  ruleType,  concat,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  This(nameType,  ruleType,  concat,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	This(nameType,  ruleType,  concat,  maxPhonemes);	      this(nameType,    nameType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
423	[BUG]  [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null  ||  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  [CE]  illegal  start  of  expression  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null  ||  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null)    {    if(ruleType  ==  null  ||  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
424	[BUG]  [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null)  <  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  [CE]  illegal  start  of  type  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null)  <  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null)    {    if(ruleType  ==  null)  <  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
425	[BUG]  [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null)  <  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null)  <  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null)    {    if(ruleType  ==  null)  <  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
426	[BUG]  [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null  ||  (ruleType  ==  null  &&  ruleType.RULES.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null  ||  (ruleType  ==  null  &&  ruleType.RULES.isEmpty()))  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null)    {    if(ruleType  ==  null  ||  (ruleType  ==  null  &&  ruleType.RULES.isEmpty()))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
427	[BUG]  [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null  ||  (ruleType  ==  null  &&  ruleType.RuLES.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null  ||  (ruleType  ==  null  &&  ruleType.RuLES.isEmpty()))  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null)    {    if(ruleType  ==  null  ||  (ruleType  ==  null  &&  ruleType.RuLES.isEmpty()))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
428	[BUG]  [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null  ||  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES));  [CE]  illegal  start  of  expression  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null)  {  if(ruleType  ==  null  ||  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES));  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    null)    {    if(ruleType  ==  null  ||  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES));	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
429	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  &&  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	add	if(ruleType!=  RuleType.RULES  &&  ruleType  ==  null)  {	  if(ruleType!=    RuleType.RULES    ||    ruleType    ==    null)    {    	compilable	  [FE]  ExceptionInInitializerError  	10	4	replace
430	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  &&  ruleType  ==  null)  {  [FE]  ExceptionInInitializerError  [FE]    IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  &&  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.RULES  &&  ruleType  ==  null)  {	  if(ruleType!=    RuleType.RULES    ||    ruleType    ==    null)    {    	compilable	  [FE]  ExceptionInInitializerError  	10	4	replace
431	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  regeType  ==  null)  {  [CE]  cannot  find  symbol  regeType  [FE]      IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  regeType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.RULES  ||  regeType  ==  null)  {	  if(ruleType!=    RuleType.RULES    ||    ruleType    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  regeType	10	None	replace
432	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  concat  ==  false)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	add	if(ruleType!=  RuleType.RULES  ||  concat  ==  false)  {	  if(ruleType!=    RuleType.RULES    ||    ruleType    ==    null)    {    	compilable	  [FE]  IllegalArgumentException  	10	4	replace
433	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  concat  ==  false)  {  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  concat  ==  false)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.RULES  ||  concat  ==  false)  {	  if(ruleType!=    RuleType.RULES    ||    ruleType    ==    null)    {    	compilable	  [FE]  IllegalArgumentException  	10	4	replace
434	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  ==  RuleType.RULES  ||  ruleType  {  null)  {  [CE]  ')'  expected  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  ==  RuleType.RULES  ||  ruleType  {  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    if(ruleType  ==  RuleType.RULES  ||  ruleType  {  null)  {	  	non-compiled	[CE]  ')'  expected	4	None	add
435	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  ==  ruleType.RULES  ||  ruleType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType  ==  ruleType.RULES  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    if(ruleType  ==  ruleType.RULES  ||  ruleType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
436	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this.nameType  =  nameType;  this.ruleType  =  ruleType;	      super(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
437	[BUG]  [BUGGY]  supervise(nameType,  ruleType,  concat,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  supervise(nameType,  ruleType,  concat,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	supervise(nameType,  ruleType,  concat,  maxPhonemes);	      super(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
438	[BUG]  [BUGGY]  super(nameType.getName(),  ruleType,  concat,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType.getName(),  ruleType,  concat,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType.getName(),  ruleType,  concat,  maxPhonemes);	      super(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
439	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  defULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  defULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  defULT_MAX_PHONEMES);	      this(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
440	[BUG]  [BUGGY]  if(ruleType!=  RuleType.DEFAULT)  {  [CE]  cannot  find  symbol  DEFAULT  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.DEFAULT)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.DEFAULT)  {	  if(ruleType    ==    RuleType.DEFAULT)    {    	non-compiled	[CE]  cannot  find  symbol  DEFAULT	38	None	replace
441	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.DEFAULT  ||  ruleType  ==  RuleType.ALL)  {  [CE]  cannot  find  symbol  DEFAULT  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.DEFAULT  ||  ruleType  ==  RuleType.ALL)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.DEFAULT  ||  ruleType  ==  RuleType.ALL)  {	  if(ruleType    ==    RuleType.DEFAULT)    {    	non-compiled	[CE]  cannot  find  symbol  DEFAULT	38	None	replace
442	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  maxPhonemes  <  =  ruleType.maxPhonemes)  {  [CE]  illegal  start  of  expression  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  maxPhonemes  <  =  ruleType.maxPhonemes)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  maxPhonemes  <  =  ruleType.maxPhonemes)  {	  if(ruleType    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
443	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  maxPhonemes  <  ruleType.maxPhonemes)  {  [CE]  cannot  find  symbol  maxPhonemes  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  maxPhonemes  <  ruleType.maxPhonemes)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  maxPhonemes  <  ruleType.maxPhonemes)  {	  if(ruleType    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  maxPhonemes	8	None	replace
444	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  maxPhonemes  <  =  RuleType.DEFAULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  expression  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  maxPhonemes  <  =  RuleType.DEFAULT_MAX_PHONEMES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  maxPhonemes  <  =  RuleType.DEFAULT_MAX_PHONEMES)  {	  if(ruleType    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
445	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  maxPhonemes  <  =  RuleType.MAX_PHONEMES)  {  [CE]  illegal  start  of  expression  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  maxPhonemes  <  =  RuleType.MAX_PHONEMES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  maxPhonemes  <  =  RuleType.MAX_PHONEMES)  {	  if(ruleType    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
446	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  maxPhonemes  <  =  RuleType.DECEMBER)  {  [CE]  illegal  start  of  expression  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  maxPhonemes  <  =  RuleType.DECEMBER)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  maxPhonemes  <  =  RuleType.DECEMBER)  {	  if(ruleType    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
447	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes,  defULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes,  defULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  null,  maxPhonemes,  defULT_MAX_PHONEMES);	      this(nameType,    ruleType,    concat,    null,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
448	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  null,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  null,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  null,  maxPhonemes);	      this(nameType,    ruleType,    concat,    null,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
449	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRuleType(ruleType);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  nameType.getRuleType(ruleType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  nameType.getRuleType(ruleType);	      NameType    ruleType    =    nameType.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
450	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.DEFAULT_MAX_PHONEMES)  {  [CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.DEFAULT_MAX_PHONEMES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.DEFAULT_MAX_PHONEMES)  {	  if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES	3	None	replace
451	[BUG]  [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES  ||  ruleType  ==  NAME_PREFIXES)  {  [CE]  incomparable  types:  RuleType  and  Map<NameType,Set<String>>  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES  ||  ruleType  ==  NAME_PREFIXES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  null  ||  ruleType  ==  RuleType.RULES  ||  ruleType  ==  NAME_PREFIXES)  {	  if(ruleType    ==    null    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  incomparable  types:  RuleType  and  Map<NameType,Set<String>>	3	None	replace
452	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRawNameType();  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  ruleType.getRawNameType();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  ruleType.getRawNameType();	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
453	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getNameType();  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  ruleType.getNameType();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  ruleType.getNameType();	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
454	[BUG]  [BUGGY]  NameType  nameType  =  rule.getRuleType();  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  rule.getRuleType();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  rule.getRuleType();	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
455	[BUG]  [BUGGY]  NameType  nameType  =  RuleType.NAME_PREFIXES.get(nameType);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  RuleType.NAME_PREFIXES.get(nameType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  RuleType.NAME_PREFIXES.get(nameType);	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
456	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PLAIN)  {  [CE]  cannot  find  symbol  NAME_PLAIN  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PLAIN)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PLAIN)  {	  if(ruleType!=    RuleType.RULES    ||    ruleType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PLAIN	27	None	replace
457	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_SPACE)  {  [CE]  cannot  find  symbol  NAME_SPACE  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_SPACE)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_SPACE)  {	  if(ruleType!=    RuleType.RULES    ||    ruleType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_SPACE	27	None	replace
458	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_POINTS)  {  [CE]  cannot  find  symbol  NAME_POINTS  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_POINTS)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_POINTS)  {	  if(ruleType!=    RuleType.RULES    ||    ruleType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_POINTS	27	None	replace
459	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PARAM)  {  [CE]  cannot  find  symbol  NAME_PARAM  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PARAM)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.NAME_PARAM)  {	  if(ruleType!=    RuleType.RULES    ||    ruleType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PARAM	27	None	replace
460	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  NAME_PREFIXES,  maxPhonemes)  {  [CE]  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  NAME_PREFIXES,  maxPhonemes)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  NAME_PREFIXES,  maxPhonemes)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    NAME_PREFIXES)    {    	non-compiled	[CE]  	36	None	replace
461	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  NAME_PREFIXES,  null)  {  [CE]  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  NAME_PREFIXES,  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  NAME_PREFIXES,  null)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    NAME_PREFIXES)    {    	non-compiled	[CE]  	36	None	replace
462	[BUG]  [BUGGY]  if(ruleType!=  RuleType.NAME)  {  [CE]  cannot  find  symbol  NAME  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.NAME)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.NAME)  {	  if(ruleType!=    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME	25	None	replace
463	[BUG]  [BUGGY]  if(ruleType!=  RuleType.DECEMBER)  {  [CE]  cannot  find  symbol  DECEMBER  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.DECEMBER)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.DECEMBER)  {	  if(ruleType!=    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  DECEMBER	25	None	replace
464	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  if(ruleType  ==  ruleType.RULES  ||  ruleType!=  null)  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType!=  null)  {  if(ruleType  ==  ruleType.RULES  ||  ruleType!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType    ==    RuleType.RULES    ||    ruleType!=    null)    {    if(ruleType  ==  ruleType.RULES  ||  ruleType!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
465	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  defPhonemes);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  defPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  defPhonemes);	      this(nameType,    ruleType,    concat,    maxPhonemes,    nameType);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
466	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  0,  nameType);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  0,  nameType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  0,  nameType);	      this(nameType,    ruleType,    concat,    maxPhonemes,    nameType);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
467	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  i,  nameType);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  i,  nameType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  i,  nameType);	      this(nameType,    ruleType,    concat,    maxPhonemes,    nameType);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
468	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.restrictByNotNullOrUndefined();  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  nameType.restrictByNotNullOrUndefined();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  nameType.restrictByNotNullOrUndefined();	      NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
469	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRightType();  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  nameType.getRightType();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  nameType.getRightType();	      NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
470	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RELATIVE  ||  ruleType  ==  RuleType.NAME_PREFIXES)  {  [CE]  cannot  find  symbol  RELATIVE  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RELATIVE  ||  ruleType  ==  RuleType.NAME_PREFIXES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RELATIVE  ||  ruleType  ==  RuleType.NAME_PREFIXES)  {	  if(ruleType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  RELATIVE	1	None	replace
471	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_PLAIN)  {  [CE]  cannot  find  symbol  NAME_PLAIN  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_PLAIN)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_PLAIN)  {	  if(ruleType    ==    RuleType.RULES    ||    nameType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PLAIN	39	None	replace
472	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_PUBLIC)  {  [CE]  cannot  find  symbol  NAME_PUBLIC  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_PUBLIC)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_PUBLIC)  {	  if(ruleType    ==    RuleType.RULES    ||    nameType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PUBLIC	39	None	replace
473	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_PARAM)  {  [CE]  cannot  find  symbol  NAME_PARAM  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_PARAM)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  nameType  ==  RuleType.NAME_PARAM)  {	  if(ruleType    ==    RuleType.RULES    ||    nameType    ==    RuleType.NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PARAM	39	None	replace
474	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.NAME  ||  ruleType  ==  null)  {  [CE]  cannot  find  symbol  NAME  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.NAME  ||  ruleType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.NAME  ||  ruleType  ==  null)  {	  if(ruleType    ==    RuleType.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  NAME	40	None	replace
475	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.NOT)  {  [CE]  cannot  find  symbol  NOT  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.NOT)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.NOT)  {	  if(ruleType    ==    RuleType.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  NOT	40	None	replace
476	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.NAME_PUBLIC  ||  ruleType  ==  RuleType.RULES)  {  [CE]  cannot  find  symbol  NAME_PUBLIC  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.NAME_PUBLIC  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.NAME_PUBLIC  ||  ruleType  ==  RuleType.RULES)  {	  if(ruleType    ==    RuleType.NAME_PREFIXES    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PUBLIC	6	None	replace
477	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.NAME_POINT  ||  ruleType  ==  RuleType.RULES)  {  [CE]  cannot  find  symbol  NAME_POINT  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.NAME_POINT  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.NAME_POINT  ||  ruleType  ==  RuleType.RULES)  {	  if(ruleType    ==    RuleType.NAME_PREFIXES    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_POINT	6	None	replace
478	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.NAME_FIELD  ||  ruleType  ==  RuleType.RULES)  {  [CE]  cannot  find  symbol  NAME_FIELD  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.NAME_FIELD  ||  ruleType  ==  RuleType.RULES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.NAME_FIELD  ||  ruleType  ==  RuleType.RULES)  {	  if(ruleType    ==    RuleType.NAME_PREFIXES    ||    ruleType    ==    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_FIELD	6	None	replace
479	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.referenceName();  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  nameType  =  ruleType.referenceName();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  nameType  =  ruleType.referenceName();	      NameType    nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
480	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType!=  RuleType.RULES  ||  ruleType  {  null)  {  [CE]  ')'  expected  [FE]    IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  null)  {  if(ruleType!=  RuleType.RULES  ||  ruleType  {  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=    RuleType.RULES    ||    ruleType    ==    null)    {    if(ruleType!=  RuleType.RULES  ||  ruleType  {  null)  {	  	non-compiled	[CE]  ')'  expected	9	None	add
481	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  NAME_PREFIXES,  false);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  NAME_PREFIXES,  false);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  NAME_PREFIXES,  false);	      this(nameType,    ruleType,    concat,    maxPhonemes,    false);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
482	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  defulT_MAX_PHONEMES,  false);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  defulT_MAX_PHONEMES,  false);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  defulT_MAX_PHONEMES,  false);	      this(nameType,    ruleType,    concat,    maxPhonemes,    false);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
483	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  false);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  false);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  false);	      this(nameType,    ruleType,    concat,    maxPhonemes,    false);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
484	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  null,  defULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  null,  defULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  null,  defULT_MAX_PHONEMES);	      this(nameType,    ruleType,    concat,    maxPhonemes,    null);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
485	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  null,  defulT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  null,  defulT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  null,  defulT_MAX_PHONEMES);	      this(nameType,    ruleType,    concat,    maxPhonemes,    null);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
486	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  true);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  true);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  true);	      this(nameType,    ruleType,    concat,    maxPhonemes,    true);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
487	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  defult_MAX_PHONEMES,  true);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  defult_MAX_PHONEMES,  true);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  defult_MAX_PHONEMES,  true);	      this(nameType,    ruleType,    concat,    maxPhonemes,    true);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
488	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  defFactory);  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  defFactory);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes,  defFactory);	      super(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
489	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  defFull_PHONEMES);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  defFull_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes,  defFull_PHONEMES);	      super(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
490	[BUG]  [BUGGY]  NameType  ruleType  =  ruleType.getRuleType( "ruleType ");  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  ruleType.getRuleType( "ruleType ");  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  ruleType.getRuleType( "ruleType ");	      NameType    ruleType    =    nameType.getRuleType(   "ruleType   ");    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
491	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRuleType( "ruleType ",  ruleType);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  nameType.getRuleType( "ruleType ",  ruleType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  nameType.getRuleType( "ruleType ",  ruleType);	      NameType    ruleType    =    nameType.getRuleType(   "ruleType   ");    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
492	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRuleType( "ruleType ".getName());  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  NameType  ruleType  =  nameType.getRuleType( "ruleType ".getName());  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	NameType  ruleType  =  nameType.getRuleType( "ruleType ".getName());	      NameType    ruleType    =    nameType.getRuleType(   "ruleType   ");    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
493	[BUG]  [BUGGY]  super(nameType,  ruleType.narrowBy(maxPhonemes));  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType.narrowBy(maxPhonemes));  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType.narrowBy(maxPhonemes));	      super(nameType);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
494	[BUG]  [BUGGY]  super(nameType,  ruleType.narrowBy(concat),  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType.narrowBy(concat),  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType.narrowBy(concat),  maxPhonemes);	      super(nameType);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
495	[BUG]  [BUGGY]  super(nameType.getName(),  ruleType.getName());  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType.getName(),  ruleType.getName());  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType.getName(),  ruleType.getName());	      super(nameType);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
496	[BUG]  [BUGGY]  super(nameType,  ruleType.narrowBy(maxPhonemes),  nameType);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType.narrowBy(maxPhonemes),  nameType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType.narrowBy(maxPhonemes),  nameType);	      super(nameType);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
497	[BUG]  [BUGGY]  super(nameType,  ruleType.narrowBy(maxPhonemes),  concat);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType.narrowBy(maxPhonemes),  concat);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType.narrowBy(maxPhonemes),  concat);	      super(nameType);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
498	[BUG]  [BUGGY]  this.nameType  =  nameType;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this.nameType  =  nameType;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this.nameType  =  nameType;	      super(nameType);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
499	[BUG]  [BUGGY]  super(nameType,  ruleType.generateFunctionNames);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  super(nameType,  ruleType.generateFunctionNames);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	super(nameType,  ruleType.generateFunctionNames);	      super(nameType);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
500	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
501	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
502	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
503	[BUG]  [BUGGY]  if(nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
504	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
505	[BUG]  [BUGGY]  if(nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
506	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
507	[BUG]  [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.DECEMBER)  {  [CE]  cannot  find  symbol  DECEMBER  [FE]    IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.DECEMBER)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType!=  RuleType.RULES  ||  ruleType  ==  RuleType.DECEMBER)  {	  if(ruleType!=    RuleType.RULES)    {    	non-compiled	[CE]  cannot  find  symbol  DECEMBER	35	None	replace
508	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  regeType  ==  null)  {  [CE]  cannot  find  symbol  regeType  [FE]    IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  regeType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  regeType  ==  null)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  regeType	12	None	replace
509	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  prefix!=  null)  {  [CE]  cannot  find  symbol  prefix  [FE]      IllegalArgumentException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  prefix!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  prefix!=  null)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  prefix	12	None	replace
510	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  maxPhonemes  <  =  RuleType.MAX_PHONEMES)  {  [CE]  illegal  start  of  expression  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  maxPhonemes  <  =  RuleType.MAX_PHONEMES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  maxPhonemes  <  =  RuleType.MAX_PHONEMES)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
511	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  maxPhonemes  <  RuleType.MAX_PHONEMES)  {  [CE]  cannot  find  symbol  MAX_PHONEMES  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  maxPhonemes  <  RuleType.MAX_PHONEMES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  maxPhonemes  <  RuleType.MAX_PHONEMES)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  MAX_PHONEMES	5	None	replace
512	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  nameType  ==  RuleType.NAME_PREFIXES)  {  [CE]  cannot  find  symbol  NAME_PREFIXES  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  nameType  ==  RuleType.NAME_PREFIXES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  nameType  ==  RuleType.NAME_PREFIXES)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  NAME_PREFIXES	5	None	replace
513	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  maxPhonemes  >  RuleType.MAX_PHONEMES)  {  [CE]  cannot  find  symbol  MAX_PHONEMES  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  maxPhonemes  >  RuleType.MAX_PHONEMES)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  maxPhonemes  >  RuleType.MAX_PHONEMES)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  MAX_PHONEMES	5	None	replace
514	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  nameType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	add	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  nameType  ==  null)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    	compilable	  [FE]  ExceptionInInitializerError  	5	4	replace
515	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  nameType  ==  null)  {  [FE]  ExceptionInInitializerError  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  nameType  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	if(ruleType  ==  RuleType.RULES  ||  ruleType  ==  null  ||  nameType  ==  null)  {	  if(ruleType    ==    RuleType.RULES    ||    ruleType    ==    null)    {    	compilable	  [FE]  ExceptionInInitializerError  	5	4	replace
516	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  1,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {    [BUGGY]  this(nameType,  ruleType,  concat,  1,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	311	311	4	replace	this(nameType,  ruleType,  concat,  1,  maxPhonemes,  DEFAULT_MAX_PHONEMES);	      this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
