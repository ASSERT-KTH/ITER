bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.concat  =  concat  +  2;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  +  2;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  +  2;	  this.concat    =    concat    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	1	None	replace
2	[BUG]  [BUGGY]  this.concat  =  concat  +  1L;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  +  1L;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  +  1L;	  this.concat    =    concat    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	1	None	replace
3	[BUG]  [BUGGY]  this.concat  =  concat  +  3;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  +  3;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  +  3;	  this.concat    =    concat    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	1	None	replace
4	[BUG]  [BUGGY]  this.concat  =  concat  +  4;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  +  4;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  +  4;	  this.concat    =    concat    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	1	None	replace
5	[BUG]  [BUGGY]  this.concat  =  concat  +  5;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  +  5;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  +  5;	  this.concat    =    concat    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	1	None	replace
6	[BUG]  [BUGGY]  this.concat  =  concat  +  1,  maxPhonemes;  [CE]  ';'  expected  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  +  1,  maxPhonemes;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  +  1,  maxPhonemes;	  this.concat    =    concat    +    1;    	non-compiled	[CE]  ';'  expected	1	None	replace
7	[BUG]  [BUGGY]  this.concat  =  concat?  concat  +  1  :  concat;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  concat  +  1  :  concat;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat?  concat  +  1  :  concat;	  this.concat    =    concat    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	1	None	replace
8	[BUG]  [BUGGY]  this.concat  =  concat  ||  ruleType.isInitializingMethod();  [CE]  cannot  find  symbol  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||  ruleType.isInitializingMethod();  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  ||  ruleType.isInitializingMethod();	  this.concat    =    concat    &&    ruleType.isInitializingMethod();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
9	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.initializingMethod();  [CE]  cannot  find  symbol  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.initializingMethod();  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.initializingMethod();	  this.concat    =    concat    &&    ruleType.isInitializingMethod();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
10	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.isInitializingMethod();  [CE]  cannot  find  symbol  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.isInitializingMethod();  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  nameType.isInitializingMethod();	  this.concat    =    concat    &&    ruleType.isInitializingMethod();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
11	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.nameType.isInitializingMethod();  [CE]  cannot  find  symbol  nameType  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.nameType.isInitializingMethod();  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.nameType.isInitializingMethod();	  this.concat    =    concat    &&    ruleType.isInitializingMethod();    	non-compiled	[CE]  cannot  find  symbol  nameType	32	None	replace
12	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.idInitializingMethod();  [CE]  cannot  find  symbol  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.idInitializingMethod();  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.idInitializingMethod();	  this.concat    =    concat    &&    ruleType.isInitializingMethod();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
13	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.isInitializingMethod(concat);  [CE]  cannot  find  symbol  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.isInitializingMethod(concat);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.isInitializingMethod(concat);	  this.concat    =    concat    &&    ruleType.isInitializingMethod();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
14	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.hasInitializingMethod();  [CE]  cannot  find  symbol  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.hasInitializingMethod();  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.hasInitializingMethod();	  this.concat    =    concat    &&    ruleType.isInitializingMethod();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
15	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.getInitializingMethod();  [CE]  cannot  find  symbol  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.getInitializingMethod();  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.getInitializingMethod();	  this.concat    =    concat    &&    ruleType.isInitializingMethod();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
16	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getSimpleName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.getSimpleName();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.getSimpleName();	      NameType    nameType    =    ruleType.getRawName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	34	None	replace
17	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getNAME_PREFIXES();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.getNAME_PREFIXES();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.getNAME_PREFIXES();	      NameType    nameType    =    ruleType.getRawName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	34	None	replace
18	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getFunctionName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.getFunctionName();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.getFunctionName();	      NameType    nameType    =    ruleType.getRawName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	34	None	replace
19	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getQualifiedName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.getQualifiedName();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.getQualifiedName();	      NameType    nameType    =    ruleType.getRawName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	34	None	replace
20	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getFullName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.getFullName();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.getFullName();	      NameType    nameType    =    ruleType.getRawName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	34	None	replace
21	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  ruleType);  [CE]  cannot  find  symbol  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  ruleType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  ruleType);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance(nameType,    nameType);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
22	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType,  maxPhonemes);  [CE]  cannot  find  symbol  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType,  maxPhonemes);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType,  maxPhonemes);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance(nameType,    nameType);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
23	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType,  concat);  [CE]  cannot  find  symbol  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType,  concat);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType,  concat);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance(nameType,    nameType);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
24	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  this.ruleType);  [CE]  cannot  find  symbol  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  this.ruleType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  this.ruleType);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance(nameType,    nameType);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
25	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  maxPhonemes);  [CE]  cannot  find  symbol  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  maxPhonemes);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  maxPhonemes);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance(nameType,    nameType);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
26	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType,  NAME_PREFIXES);  [CE]  cannot  find  symbol  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType,  NAME_PREFIXES);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType,  NAME_PREFIXES);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance(nameType,    nameType);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
27	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  type);  [CE]  cannot  find  symbol  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  type);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  type);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance(nameType,    nameType);    	non-compiled	[CE]  cannot  find  symbol  type	25	None	replace
28	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType,  this.maxPhonemes);  [CE]  cannot  find  symbol  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType,  this.maxPhonemes);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType,  this.maxPhonemes);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance(nameType,    nameType);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
29	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRuleType( "name ",  nameType);  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.getRuleType( "name ",  nameType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.getRuleType( "name ",  nameType);	      NameType    nameType    =    ruleType.getRuleType(   "name   ");    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	26	None	replace
30	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRuleType( "nametype ");  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.getRuleType( "nametype ");  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.getRuleType( "nametype ");	      NameType    nameType    =    ruleType.getRuleType(   "name   ");    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	26	None	replace
31	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRuleType( "name ",  null);  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.getRuleType( "name ",  null);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.getRuleType( "name ",  null);	      NameType    nameType    =    ruleType.getRuleType(   "name   ");    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	26	None	replace
32	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRuleType( ".name ");  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.getRuleType( ".name ");  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.getRuleType( ".name ");	      NameType    nameType    =    ruleType.getRuleType(   "name   ");    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	26	None	replace
33	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRuleType( "name_type ");  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.getRuleType( "name_type ");  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.getRuleType( "name_type ");	      NameType    nameType    =    ruleType.getRuleType(   "name   ");    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	26	None	replace
34	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRuleType( "name ",  false);  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.getRuleType( "name ",  false);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.getRuleType( "name ",  false);	      NameType    nameType    =    ruleType.getRuleType(   "name   ");    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	26	None	replace
35	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRuleType( "name, ");  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.getRuleType( "name, ");  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.getRuleType( "name, ");	      NameType    nameType    =    ruleType.getRuleType(   "name   ");    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	26	None	replace
36	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  RuleType.DEFAULT_MAX_PHONEMES;  [CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  RuleType.DEFAULT_MAX_PHONEMES;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  <  RuleType.DEFAULT_MAX_PHONEMES;	  this.concat    =    concat    &&    maxPhonemes    <    RuleType.MAX_PHONEMES;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES	29	None	replace
37	[BUG]  [BUGGY]  this.concat  =  concat  ||  maxPhonemes  <  RuleType.MAX_PHONEMES;  [CE]  cannot  find  symbol  MAX_PHONEMES  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||  maxPhonemes  <  RuleType.MAX_PHONEMES;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  ||  maxPhonemes  <  RuleType.MAX_PHONEMES;	  this.concat    =    concat    &&    maxPhonemes    <    RuleType.MAX_PHONEMES;    	non-compiled	[CE]  cannot  find  symbol  MAX_PHONEMES	29	None	replace
38	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  RuleType.MAX_PHONEMES  ||  maxPhonemes  <  RuleType.MAX_PHONEMES;  [CE]  cannot  find  symbol  MAX_PHONEMES  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  RuleType.MAX_PHONEMES  ||  maxPhonemes  <  RuleType.MAX_PHONEMES;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  <  RuleType.MAX_PHONEMES  ||  maxPhonemes  <  RuleType.MAX_PHONEMES;	  this.concat    =    concat    &&    maxPhonemes    <    RuleType.MAX_PHONEMES;    	non-compiled	[CE]  cannot  find  symbol  MAX_PHONEMES	29	None	replace
39	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  RuleType.NAME_PREFIXES;  [CE]  cannot  find  symbol  NAME_PREFIXES  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  RuleType.NAME_PREFIXES;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  <  RuleType.NAME_PREFIXES;	  this.concat    =    concat    &&    maxPhonemes    <    RuleType.MAX_PHONEMES;    	non-compiled	[CE]  cannot  find  symbol  NAME_PREFIXES	29	None	replace
40	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  >=  RuleType.MAX_PHONEMES;  [CE]  cannot  find  symbol  MAX_PHONEMES  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  >=  RuleType.MAX_PHONEMES;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  >=  RuleType.MAX_PHONEMES;	  this.concat    =    concat    &&    maxPhonemes    <    RuleType.MAX_PHONEMES;    	non-compiled	[CE]  cannot  find  symbol  MAX_PHONEMES	29	None	replace
41	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  RuleType.MAX_PHONES;  [CE]  cannot  find  symbol  MAX_PHONES  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  RuleType.MAX_PHONES;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  <  RuleType.MAX_PHONES;	  this.concat    =    concat    &&    maxPhonemes    <    RuleType.MAX_PHONEMES;    	non-compiled	[CE]  cannot  find  symbol  MAX_PHONES	29	None	replace
42	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  RuleType.MAIN_PHONEMES;  [CE]  cannot  find  symbol  MAIN_PHONEMES  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  RuleType.MAIN_PHONEMES;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  <  RuleType.MAIN_PHONEMES;	  this.concat    =    concat    &&    maxPhonemes    <    RuleType.MAX_PHONEMES;    	non-compiled	[CE]  cannot  find  symbol  MAIN_PHONEMES	29	None	replace
43	[BUG]  [BUGGY]  this.concat  =  concat  ||  ruleType.isInstance(concat);  [CE]  cannot  find  symbol  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||  ruleType.isInstance(concat);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  ||  ruleType.isInstance(concat);	  this.concat    =    concat    &&    ruleType.isInstance(concat);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
44	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.isInstance(concat,  maxPhonemes);  [CE]  cannot  find  symbol  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.isInstance(concat,  maxPhonemes);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.isInstance(concat,  maxPhonemes);	  this.concat    =    concat    &&    ruleType.isInstance(concat);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
45	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.equals(concat);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	this.concat  =  concat  &&  ruleType.equals(concat);	  this.concat    =    concat    &&    ruleType.isInstance(concat);    	compilable	  [FE]  ExceptionInInitializerError  	11	4	replace
46	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.equals(concat);  [FE]  ExceptionInInitializerError  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.equals(concat);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.equals(concat);	  this.concat    =    concat    &&    ruleType.isInstance(concat);    	compilable	  [FE]  ExceptionInInitializerError  	11	4	replace
47	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.isConstructor(concat);  [CE]  cannot  find  symbol  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.isConstructor(concat);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.isConstructor(concat);	  this.concat    =    concat    &&    ruleType.isInstance(concat);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
48	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.isInstance(concat);  [CE]  cannot  find  symbol  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.isInstance(concat);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  nameType.isInstance(concat);	  this.concat    =    concat    &&    ruleType.isInstance(concat);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
49	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.instance(concat);  [CE]  cannot  find  symbol  [FE]                                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.instance(concat);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.instance(concat);	  this.concat    =    concat    &&    ruleType.isInstance(concat);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
50	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.isInstance(CONCAT);  [CE]  cannot  find  symbol  CONCAT  [FE]                                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.isInstance(CONCAT);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.isInstance(CONCAT);	  this.concat    =    concat    &&    ruleType.isInstance(concat);    	non-compiled	[CE]  cannot  find  symbol  CONCAT	11	None	replace
51	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.isInterface(concat);  [CE]  cannot  find  symbol  [FE]                                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.isInterface(concat);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.isInterface(concat);	  this.concat    =    concat    &&    ruleType.isInstance(concat);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
52	[BUG]  [BUGGY]  NameType  nameType  =  this.ruleType.getRuleType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  this.ruleType.getRuleType();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  this.ruleType.getRuleType();	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	27	None	replace
53	[BUG]  [BUGGY]  NameType  nameType  =  this.nameType.getRuleType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  this.nameType.getRuleType();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  this.nameType.getRuleType();	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	27	None	replace
54	[BUG]  [BUGGY]  NameType  nameType  =  type.getRuleType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  type.getRuleType();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  type.getRuleType();	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	27	None	replace
55	[BUG]  [BUGGY]  NameType  nameType  =  RuleType.getRuleType(ruleType);  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  RuleType.getRuleType(ruleType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  RuleType.getRuleType(ruleType);	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	27	None	replace
56	[BUG]  [BUGGY]  NameType  nameType  =  rules.getRuleType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  rules.getRuleType();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  rules.getRuleType();	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	27	None	replace
57	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRawType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.getRawType();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.getRawType();	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	27	None	replace
58	[BUG]  [BUGGY]  NameType  nameType  =  RuleType.getRuleType(nameType);  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  RuleType.getRuleType(nameType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  RuleType.getRuleType(nameType);	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	27	None	replace
59	[BUG]  [BUGGY]  this.concat  =  concat?  true  :  false;  this.concat  =  concat?  true  :  false;  [CE]  variable  concat  might  already  have  been  assigned  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  true  :  false;  this.concat  =  concat?  true  :  false;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat?    true    :    false;    this.concat  =  concat?  true  :  false;	  	non-compiled	[CE]  variable  concat  might  already  have  been  assigned	4	None	add
60	[BUG]  [BUGGY]  this.concat  =  concat?  true  :  false;  if(concat)  {  this.concat  =  concat?  true  :  false;  }  else  {  this.concat  =  concat?  true  :  false;  }  [CE]  variable  concat  might  already  have  been  assigned  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  true  :  false;  if(concat)  {  this.concat  =  concat?  true  :  false;  }  else  {  this.concat  =  concat?  true  :  false;  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat?    true    :    false;    if(concat)  {  this.concat  =  concat?  true  :  false;  }  else  {  this.concat  =  concat?  true  :  false;  }	  	non-compiled	[CE]  variable  concat  might  already  have  been  assigned	4	None	add
61	[BUG]  [BUGGY]  this.concat  =  concat?  true  :  false;  if(concat)  {  this.concat  =  concat?  true  :  false;  }  [CE]  variable  concat  might  already  have  been  assigned  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  true  :  false;  if(concat)  {  this.concat  =  concat?  true  :  false;  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat?    true    :    false;    if(concat)  {  this.concat  =  concat?  true  :  false;  }	  	non-compiled	[CE]  variable  concat  might  already  have  been  assigned	4	None	add
62	[BUG]  [BUGGY]  this.concat  =  concat?  true  :  false;  if(concat)  {  this.concat  =  concat?  true  :  false;  }  else  {  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CE]  variable  concat  might  already  have  been  assigned  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  true  :  false;  if(concat)  {  this.concat  =  concat?  true  :  false;  }  else  {  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat?    true    :    false;    if(concat)  {  this.concat  =  concat?  true  :  false;  }  else  {  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }	  	non-compiled	[CE]  variable  concat  might  already  have  been  assigned	4	None	add
63	[BUG]  [BUGGY]  this.concat  =  concat?  true  :  false;  if(concat)  {  this.concat  =  concat?  true  :  false;  }  else  {  this.lang  =  lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CE]  variable  concat  might  already  have  been  assigned  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  true  :  false;  if(concat)  {  this.concat  =  concat?  true  :  false;  }  else  {  this.lang  =  lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat?    true    :    false;    if(concat)  {  this.concat  =  concat?  true  :  false;  }  else  {  this.lang  =  lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }	  	non-compiled	[CE]  variable  concat  might  already  have  been  assigned	4	None	add
64	[BUG]  [BUGGY]  this.concat  =  concat?  true  :  false;  if(concat)  {  this.concat  =  concat?  true  :  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  concat  might  already  have  been  assigned  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  true  :  false;  if(concat)  {  this.concat  =  concat?  true  :  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat?    true    :    false;    if(concat)  {  this.concat  =  concat?  true  :  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  variable  concat  might  already  have  been  assigned	4	None	add
65	[BUG]  [BUGGY]  this.concat  =  concat?  true  :  false;  ExceptionInInitializerError  =  concat?  true  :  false;  [CE]  cannot  find  symbol  ExceptionInInitializerError  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  true  :  false;  ExceptionInInitializerError  =  concat?  true  :  false;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat?    true    :    false;    ExceptionInInitializerError  =  concat?  true  :  false;	  	non-compiled	[CE]  cannot  find  symbol  ExceptionInInitializerError	4	None	add
66	[BUG]  [BUGGY]  this.concat  =  concat?  true  :  false;  if(concat)  {  this.concat  =  concat?  true  :  false;  }  else  {  System.arraycopy(nameType,  0,  this.maxPhonemes,  0,  nameType.length);  }  [CE]  cannot  find  symbol  length  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  true  :  false;  if(concat)  {  this.concat  =  concat?  true  :  false;  }  else  {  System.arraycopy(nameType,  0,  this.maxPhonemes,  0,  nameType.length);  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat?    true    :    false;    if(concat)  {  this.concat  =  concat?  true  :  false;  }  else  {  System.arraycopy(nameType,  0,  this.maxPhonemes,  0,  nameType.length);  }	  	non-compiled	[CE]  cannot  find  symbol  length	4	None	add
67	[BUG]  [BUGGY]  NameType  nameType  =  this.nameType.getNameType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  this.nameType.getNameType();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  this.nameType.getNameType();	      NameType    nameType    =    nameType.getNameType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	17	None	replace
68	[BUG]  [BUGGY]  NameType  nameType  =  RuleType.class.getSimpleName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  RuleType.class.getSimpleName();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  RuleType.class.getSimpleName();	      NameType    nameType    =    nameType.getNameType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	17	None	replace
69	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getNameType(),  ruleType.getParameterTypes());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getNameType(),  ruleType.getParameterTypes());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  new  NameType(nameType.getNameType(),  ruleType.getParameterTypes());	      NameType    nameType    =    nameType.getNameType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	17	None	replace
70	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getNameType(),  ruleType.getSimpleName());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getNameType(),  ruleType.getSimpleName());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  new  NameType(nameType.getNameType(),  ruleType.getSimpleName());	      NameType    nameType    =    nameType.getNameType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	17	None	replace
71	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getNameType(),  ruleType.getNameSuffix());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getNameType(),  ruleType.getNameSuffix());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  new  NameType(nameType.getNameType(),  ruleType.getNameSuffix());	      NameType    nameType    =    nameType.getNameType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	17	None	replace
72	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getNameType());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getNameType());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  new  NameType(nameType.getNameType());	      NameType    nameType    =    nameType.getNameType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	17	None	replace
73	[BUG]  [BUGGY]  NameType  nameType  =  type.getNameType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  type.getNameType();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  type.getNameType();	      NameType    nameType    =    nameType.getNameType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	17	None	replace
74	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat;  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.getName(),  concat;	      NameType    nameType    =    ruleType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	14	None	replace
75	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.nameType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.nameType();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.nameType();	      NameType    nameType    =    ruleType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	14	None	replace
76	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  false  :  false;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	this.concat  =  concat?  false  :  false;	  this.concat    =    concat?    true    :    false;    	compilable	  [FE]  ExceptionInInitializerError  	5	4	replace
77	[BUG]  [BUGGY]  this.concat  =  concat?  false  :  false;  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  false  :  false;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat?  false  :  false;	  this.concat    =    concat?    true    :    false;    	compilable	  [FE]  ExceptionInInitializerError  	5	4	replace
78	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  null  :  false;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	this.concat  =  concat?  null  :  false;	  this.concat    =    concat?    true    :    false;    	compilable	  [FE]  NullPointerException  	5	4	replace
79	[BUG]  [BUGGY]  this.concat  =  concat?  null  :  false;  [FE]  NullPointerException  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  null  :  false;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat?  null  :  false;	  this.concat    =    concat?    true    :    false;    	compilable	  [FE]  NullPointerException  	5	4	replace
80	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  false  :  true;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	this.concat  =  concat?  false  :  true;	  this.concat    =    concat?    true    :    false;    	compilable	  [FE]  ExceptionInInitializerError  	5	4	replace
81	[BUG]  [BUGGY]  this.concat  =  concat?  false  :  true;  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  false  :  true;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat?  false  :  true;	  this.concat    =    concat?    true    :    false;    	compilable	  [FE]  ExceptionInInitializerError  	5	4	replace
82	[BUG]  [BUGGY]  this.concat?  concat  :  false;  [CE]  not  a  statement  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat?  concat  :  false;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat?  concat  :  false;	  this.concat    =    concat?    true    :    false;    	non-compiled	[CE]  not  a  statement	5	None	replace
83	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  false);  [CE]  cannot  find  symbol  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  false);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  false);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
84	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  null);  [CE]  cannot  find  symbol  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  null);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  null);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
85	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  locale);  [CE]  cannot  find  symbol  locale  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  locale);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  locale);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol  locale	23	None	replace
86	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  this.maxPhonemes);  [CE]  cannot  find  symbol  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  this.maxPhonemes);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  this.maxPhonemes);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
87	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(ruleType);  [CE]  cannot  find  symbol  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(ruleType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(ruleType);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
88	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getReferenceName()  +  1;  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.getReferenceName()  +  1;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.getReferenceName()  +  1;	      NameType    nameType    =    ruleType.getReferenceName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	18	None	replace
89	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  maxPhonemes);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  maxPhonemes);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  maxPhonemes);	      this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	16	None	replace
90	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  concat);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  concat);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  concat);	      this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	16	None	replace
91	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  false);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  false);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  false);	      this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	16	None	replace
92	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(ruleType);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(ruleType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(ruleType);	      this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	16	None	replace
93	[BUG]  [BUGGY]  this.phonemes  =  PhonemeBuilder.instance(nameType);  [CE]  cannot  find  symbol  phonemes  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.phonemes  =  PhonemeBuilder.instance(nameType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.phonemes  =  PhonemeBuilder.instance(nameType);	      this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol  phonemes	16	None	replace
94	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  null);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  null);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  null);	      this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	16	None	replace
95	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  ruleType);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  ruleType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  ruleType);	      this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	16	None	replace
96	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType);  this.concat  =  concat  &&  nameType.equals(ruleType);  [CE]  variable  concat  might  already  have  been  assigned  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType);  this.concat  =  concat  &&  nameType.equals(ruleType);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType);    this.concat  =  concat  &&  nameType.equals(ruleType);	  	non-compiled	[CE]  variable  concat  might  already  have  been  assigned	36	None	add
97	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType);  This.concat  =  concat  &&  nameType.equals(ruleType);  [CE]  cannot  find  symbol  This  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType);  This.concat  =  concat  &&  nameType.equals(ruleType);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType);    This.concat  =  concat  &&  nameType.equals(ruleType);	  	non-compiled	[CE]  cannot  find  symbol  This	36	None	add
98	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType);  if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType);  }  [CE]  variable  concat  might  already  have  been  assigned  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType);  if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType);  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType);    if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType);  }	  	non-compiled	[CE]  variable  concat  might  already  have  been  assigned	36	None	add
99	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType);  if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  concat  might  already  have  been  assigned  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType);  if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType);    if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  variable  concat  might  already  have  been  assigned	36	None	add
100	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType);  ExceptionInInitializerError  =  concat  &&  nameType.equals(ruleType);  [CE]  cannot  find  symbol  ExceptionInInitializerError  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType);  ExceptionInInitializerError  =  concat  &&  nameType.equals(ruleType);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType);    ExceptionInInitializerError  =  concat  &&  nameType.equals(ruleType);	  	non-compiled	[CE]  cannot  find  symbol  ExceptionInInitializerError	36	None	add
101	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType);  if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType);  }  else  {  nameType  =  null;  }  [CE]  variable  concat  might  already  have  been  assigned  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType);  if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType);  }  else  {  nameType  =  null;  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType);    if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType);  }  else  {  nameType  =  null;  }	  	non-compiled	[CE]  variable  concat  might  already  have  been  assigned	36	None	add
102	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType);  if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType);  }  else  {  NameType  nameType  =  ruleType.getReferenceName();  }  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType);  if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType);  }  else  {  NameType  nameType  =  ruleType.getReferenceName();  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType);    if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType);  }  else  {  NameType  nameType  =  ruleType.getReferenceName();  }	  	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	36	None	add
103	[BUG]  [BUGGY]  this.concat  =  concat  ||  ruleType.isConstructor();  [CE]  cannot  find  symbol  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||  ruleType.isConstructor();  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  ||  ruleType.isConstructor();	  this.concat    =    concat    &&    ruleType.isConstructor();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
104	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.isConstructor();  [CE]  cannot  find  symbol  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.isConstructor();  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  nameType.isConstructor();	  this.concat    =    concat    &&    ruleType.isConstructor();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
105	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.nameType.isConstructor();  [CE]  cannot  find  symbol  nameType  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.nameType.isConstructor();  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.nameType.isConstructor();	  this.concat    =    concat    &&    ruleType.isConstructor();    	non-compiled	[CE]  cannot  find  symbol  nameType	10	None	replace
106	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.getConstructor();  [CE]  cannot  find  symbol  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.getConstructor();  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.getConstructor();	  this.concat    =    concat    &&    ruleType.isConstructor();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
107	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.hasConstructor();  [CE]  cannot  find  symbol  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.hasConstructor();  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.hasConstructor();	  this.concat    =    concat    &&    ruleType.isConstructor();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
108	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.isInterface();  [CE]  cannot  find  symbol  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.isInterface();  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.isInterface();	  this.concat    =    concat    &&    ruleType.isConstructor();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
109	[BUG]  [BUGGY]  if(concat)  {  this.concat  =  concat;  }  else  {  final  int  DEFAULT_MAX_PHONEMES  =  DEFAULT_MAX_PHONEMES;  }  [CE]  variable  DEFAULT_MAX_PHONEMES  might  not  have  been  initialized  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  if(concat)  {  this.concat  =  concat;  }  else  {  final  int  DEFAULT_MAX_PHONEMES  =  DEFAULT_MAX_PHONEMES;  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	if(concat)  {  this.concat  =  concat;  }  else  {  final  int  DEFAULT_MAX_PHONEMES  =  DEFAULT_MAX_PHONEMES;  }	  this.concat    =    concat,    maxPhonemes;    	non-compiled	[CE]  variable  DEFAULT_MAX_PHONEMES  might  not  have  been  initialized	6	None	replace
110	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  if(concat)  {  this.concat  =  concat;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	if(concat)  {  this.concat  =  concat;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.concat    =    concat,    maxPhonemes;    	compilable	  [FE]  ExceptionInInitializerError  	6	4	replace
111	[BUG]  [BUGGY]  if(concat)  {  this.concat  =  concat;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ExceptionInInitializerError  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  if(concat)  {  this.concat  =  concat;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	if(concat)  {  this.concat  =  concat;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.concat    =    concat,    maxPhonemes;    	compilable	  [FE]  ExceptionInInitializerError  	6	4	replace
112	[BUG]  [BUGGY]  this.concat  =  concat,  maxPhonemes  +  1;  [CE]  ';'  expected  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat,  maxPhonemes  +  1;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat,  maxPhonemes  +  1;	  this.concat    =    concat,    maxPhonemes;    	non-compiled	[CE]  ';'  expected	6	None	replace
113	[BUG]  [BUGGY]  this.concat  =  concat?  concat  :  maxPhonemes;  [CE]  incompatible  types  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  concat  :  maxPhonemes;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat?  concat  :  maxPhonemes;	  this.concat    =    concat,    maxPhonemes;    	non-compiled	[CE]  incompatible  types	6	None	replace
114	[BUG]  [BUGGY]  if(concat)  {  this.concat  =  concat,  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  if(concat)  {  this.concat  =  concat,  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	if(concat)  {  this.concat  =  concat,  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.concat    =    concat,    maxPhonemes;    	non-compiled	[CE]  	6	None	replace
115	[BUG]  [BUGGY]  if(concat)  {  this.concat  =  concat;  }  else  {  final  int  maxPhonemes  =  DEFAULT_MAX_PHONEMES;  }  [CE]  variable  maxPhonemes  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  if(concat)  {  this.concat  =  concat;  }  else  {  final  int  maxPhonemes  =  DEFAULT_MAX_PHONEMES;  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	if(concat)  {  this.concat  =  concat;  }  else  {  final  int  maxPhonemes  =  DEFAULT_MAX_PHONEMES;  }	  this.concat    =    concat,    maxPhonemes;    	non-compiled	[CE]  variable  maxPhonemes  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	6	None	replace
116	[BUG]  [BUGGY]  if(concat)  {  this.concat  =  concat;  }  else  {  System.arraycopy(nameType,  0,  this.maxPhonemes,  0,  concat);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  if(concat)  {  this.concat  =  concat;  }  else  {  System.arraycopy(nameType,  0,  this.maxPhonemes,  0,  concat);  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	if(concat)  {  this.concat  =  concat;  }  else  {  System.arraycopy(nameType,  0,  this.maxPhonemes,  0,  concat);  }	  this.concat    =    concat,    maxPhonemes;    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	6	None	replace
117	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.isAssignableFrom(concat);  [CE]  cannot  find  symbol  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.isAssignableFrom(concat);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  nameType.isAssignableFrom(concat);	  this.concat    =    concat    &&    ruleType.isAssignableFrom(concat);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
118	[BUG]  [BUGGY]  this.concat  =  concat  ||  ruleType.isAssignableFrom(concat);  [CE]  cannot  find  symbol  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||  ruleType.isAssignableFrom(concat);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  ||  ruleType.isAssignableFrom(concat);	  this.concat    =    concat    &&    ruleType.isAssignableFrom(concat);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
119	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.isAssignableFrom(concat,  maxPhonemes);  [CE]  cannot  find  symbol  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.isAssignableFrom(concat,  maxPhonemes);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.isAssignableFrom(concat,  maxPhonemes);	  this.concat    =    concat    &&    ruleType.isAssignableFrom(concat);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
120	[BUG]  [BUGGY]  this.concat  =  concat  &&  type.isAssignableFrom(concat);  [CE]  cannot  find  symbol  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  type.isAssignableFrom(concat);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  type.isAssignableFrom(concat);	  this.concat    =    concat    &&    ruleType.isAssignableFrom(concat);    	non-compiled	[CE]  cannot  find  symbol  type	7	None	replace
121	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.isAssignableFrom(conscat);  [CE]  cannot  find  symbol  conscat  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.isAssignableFrom(conscat);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.isAssignableFrom(conscat);	  this.concat    =    concat    &&    ruleType.isAssignableFrom(concat);    	non-compiled	[CE]  cannot  find  symbol  conscat	7	None	replace
122	[BUG]  [BUGGY]  this.concat  =  concat  &&  rules.isAssignableFrom(concat);  [CE]  cannot  find  symbol  rules  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  rules.isAssignableFrom(concat);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  rules.isAssignableFrom(concat);	  this.concat    =    concat    &&    ruleType.isAssignableFrom(concat);    	non-compiled	[CE]  cannot  find  symbol  rules	7	None	replace
123	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.isAssignableFrom(ruleType);  [CE]  cannot  find  symbol  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.isAssignableFrom(ruleType);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  nameType.isAssignableFrom(ruleType);	  this.concat    =    concat    &&    ruleType.isAssignableFrom(concat);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
124	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(numberType);  [CE]  cannot  find  symbol  numberType  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(numberType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(numberType);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol  numberType	24	None	replace
125	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(defaultRules);  [CE]  cannot  find  symbol  defaultRules  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(defaultRules);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(defaultRules);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol  defaultRules	24	None	replace
126	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(false);  [CE]  cannot  find  symbol  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(false);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(false);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
127	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(null);  [CE]  cannot  find  symbol  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(null);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(null);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
128	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.newInstance();  [CE]  cannot  find  symbol  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.newInstance();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.newInstance();	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
129	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  [CE]  variable  concat  might  already  have  been  assigned  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.toString());    this.concat  =  concat  &&  nameType.equals(ruleType.toString());	  	non-compiled	[CE]  variable  concat  might  already  have  been  assigned	42	None	add
130	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  This.concat  =  concat  &&  nameType.equals(ruleType.toString());  [CE]  cannot  find  symbol  This  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  This.concat  =  concat  &&  nameType.equals(ruleType.toString());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.toString());    This.concat  =  concat  &&  nameType.equals(ruleType.toString());	  	non-compiled	[CE]  cannot  find  symbol  This	42	None	add
131	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  ExceptionInInitializerError  =  concat  &&  nameType.equals(ruleType.toString());  [CE]  cannot  find  symbol  ExceptionInInitializerError  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  ExceptionInInitializerError  =  concat  &&  nameType.equals(ruleType.toString());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.toString());    ExceptionInInitializerError  =  concat  &&  nameType.equals(ruleType.toString());	  	non-compiled	[CE]  cannot  find  symbol  ExceptionInInitializerError	42	None	add
132	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  NameType  nameType  =  nameType.toString()  &&  nameType.equals(ruleType.toString());  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  NameType  nameType  =  nameType.toString()  &&  nameType.equals(ruleType.toString());  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.toString());    NameType  nameType  =  nameType.toString()  &&  nameType.equals(ruleType.toString());  this.concat  =  concat  &&  nameType.equals(ruleType.toString());	  	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	42	None	add
133	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  NameType  nameType  =  nameType  &&  nameType.equals(ruleType.toString());  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  NameType  nameType  =  nameType  &&  nameType.equals(ruleType.toString());  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.toString());    NameType  nameType  =  nameType  &&  nameType.equals(ruleType.toString());  this.concat  =  concat  &&  nameType.equals(ruleType.toString());	  	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	42	None	add
134	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  }  [CE]  variable  concat  might  already  have  been  assigned  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.toString());    if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  }	  	non-compiled	[CE]  variable  concat  might  already  have  been  assigned	42	None	add
135	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  }  else  {  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  }  [CE]  variable  concat  might  already  have  been  assigned  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  }  else  {  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.toString());    if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  }  else  {  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  }	  	non-compiled	[CE]  variable  concat  might  already  have  been  assigned	42	None	add
136	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  concat  might  already  have  been  assigned  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.toString());    if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  variable  concat  might  already  have  been  assigned	42	None	add
137	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  NameType  nameType  =  nameType  &&  nameType.equals(ruleType.toString());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  NameType  nameType  =  nameType  &&  nameType.equals(ruleType.toString());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.toString());    NameType  nameType  =  nameType  &&  nameType.equals(ruleType.toString());	  	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	42	None	add
138	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  int  concat  =  concat  &&  nameType.equals(ruleType.toString());  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  int  concat  =  concat  &&  nameType.equals(ruleType.toString());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.toString());    int  concat  =  concat  &&  nameType.equals(ruleType.toString());	  	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	42	None	add
139	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.equals(ruleType.toString());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	this.concat  =  concat  &&  ruleType.equals(ruleType.toString());	  this.concat    =    concat    &&    nameType.equals(ruleType.toString());    	compilable	  [FE]  ExceptionInInitializerError  	43	4	replace
140	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.equals(ruleType.toString());  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.equals(ruleType.toString());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.equals(ruleType.toString());	  this.concat    =    concat    &&    nameType.equals(ruleType.toString());    	compilable	  [FE]  ExceptionInInitializerError  	43	4	replace
141	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.equals(nameType.toString());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	this.concat  =  concat  &&  ruleType.equals(nameType.toString());	  this.concat    =    concat    &&    nameType.equals(ruleType.toString());    	compilable	  [FE]  ExceptionInInitializerError  	43	4	replace
142	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.equals(nameType.toString());  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.equals(nameType.toString());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.equals(nameType.toString());	  this.concat    =    concat    &&    nameType.equals(ruleType.toString());    	compilable	  [FE]  ExceptionInInitializerError  	43	4	replace
143	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||  nameType.equals(ruleType.toString());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	this.concat  =  concat  ||  nameType.equals(ruleType.toString());	  this.concat    =    concat    &&    nameType.equals(ruleType.toString());    	compilable	  [FE]  ExceptionInInitializerError  	43	4	replace
144	[BUG]  [BUGGY]  this.concat  =  concat  ||  nameType.equals(ruleType.toString());  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||  nameType.equals(ruleType.toString());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  ||  nameType.equals(ruleType.toString());	  this.concat    =    concat    &&    nameType.equals(ruleType.toString());    	compilable	  [FE]  ExceptionInInitializerError  	43	4	replace
145	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.toString().equals(ruleType.toString());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	this.concat  =  concat  &&  ruleType.toString().equals(ruleType.toString());	  this.concat    =    concat    &&    nameType.equals(ruleType.toString());    	compilable	  [FE]  ExceptionInInitializerError  	43	4	replace
146	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.toString().equals(ruleType.toString());  [FE]  ExceptionInInitializerError  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.toString().equals(ruleType.toString());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.toString().equals(ruleType.toString());	  this.concat    =    concat    &&    nameType.equals(ruleType.toString());    	compilable	  [FE]  ExceptionInInitializerError  	43	4	replace
147	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||  ruleType.equals(ruleType.toString());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	this.concat  =  concat  ||  ruleType.equals(ruleType.toString());	  this.concat    =    concat    &&    nameType.equals(ruleType.toString());    	compilable	  [FE]  ExceptionInInitializerError  	43	4	replace
148	[BUG]  [BUGGY]  this.concat  =  concat  ||  ruleType.equals(ruleType.toString());  [FE]  ExceptionInInitializerError  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||  ruleType.equals(ruleType.toString());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  ||  ruleType.equals(ruleType.toString());	  this.concat    =    concat    &&    nameType.equals(ruleType.toString());    	compilable	  [FE]  ExceptionInInitializerError  	43	4	replace
149	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.equals(ruleType.getName());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	this.concat  =  concat  &&  ruleType.equals(ruleType.getName());	  this.concat    =    concat    &&    nameType.equals(ruleType.toString());    	compilable	  [FE]  ExceptionInInitializerError  	43	4	replace
150	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.equals(ruleType.getName());  [FE]  ExceptionInInitializerError  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.equals(ruleType.getName());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.equals(ruleType.getName());	  this.concat    =    concat    &&    nameType.equals(ruleType.toString());    	compilable	  [FE]  ExceptionInInitializerError  	43	4	replace
151	[BUG]  [BUGGY]  this.concat  =  concat  &&  rules.equals(ruleType.toString());  [CE]  cannot  find  symbol  rules  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  rules.equals(ruleType.toString());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  rules.equals(ruleType.toString());	  this.concat    =    concat    &&    nameType.equals(ruleType.toString());    	non-compiled	[CE]  cannot  find  symbol  rules	43	None	replace
152	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  [CE]  variable  concat  might  already  have  been  assigned  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.getName());    this.concat  =  concat  &&  nameType.equals(ruleType.getName());	  	non-compiled	[CE]  variable  concat  might  already  have  been  assigned	39	None	add
153	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  ExceptionInInitializerError  =  concat  &&  nameType.equals(ruleType.getName());  [CE]  cannot  find  symbol  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  ExceptionInInitializerError  =  concat  &&  nameType.equals(ruleType.getName());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.getName());    ExceptionInInitializerError  =  concat  &&  nameType.equals(ruleType.getName());	  	non-compiled	[CE]  cannot  find  symbol  ExceptionInInitializerError	39	None	add
154	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  This.concat  =  concat  &&  nameType.equals(ruleType.getName());  [CE]  cannot  find  symbol  This  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  This.concat  =  concat  &&  nameType.equals(ruleType.getName());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.getName());    This.concat  =  concat  &&  nameType.equals(ruleType.getName());	  	non-compiled	[CE]  cannot  find  symbol  This	39	None	add
155	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  NameType  nameType  =  nameType.getName()  &&  nameType.equals(ruleType.getName());  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  NameType  nameType  =  nameType.getName()  &&  nameType.equals(ruleType.getName());  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.getName());    NameType  nameType  =  nameType.getName()  &&  nameType.equals(ruleType.getName());  this.concat  =  concat  &&  nameType.equals(ruleType.getName());	  	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	39	None	add
156	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  }  [CE]  variable  concat  might  already  have  been  assigned  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.getName());    if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  }	  	non-compiled	[CE]  variable  concat  might  already  have  been  assigned	39	None	add
157	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  NameType  nameType  =  nameType.getName();  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  NameType  nameType  =  nameType.getName();  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.getName());    NameType  nameType  =  nameType.getName();  this.concat  =  concat  &&  nameType.equals(ruleType.getName());	  	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	39	None	add
158	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  NameType  nameType  =  nameType  &&  nameType.equals(ruleType.getName());  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  NameType  nameType  =  nameType  &&  nameType.equals(ruleType.getName());  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.getName());    NameType  nameType  =  nameType  &&  nameType.equals(ruleType.getName());  this.concat  =  concat  &&  nameType.equals(ruleType.getName());	  	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	39	None	add
159	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  }  else  {  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  }  [CE]  variable  concat  might  already  have  been  assigned  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  }  else  {  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.getName());    if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  }  else  {  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  }	  	non-compiled	[CE]  variable  concat  might  already  have  been  assigned	39	None	add
160	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  concat  might  already  have  been  assigned  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.getName());    if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  variable  concat  might  already  have  been  assigned	39	None	add
161	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  NameType  nameType  =  nameType.getName()  &&  nameType.equals(ruleType.getName());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  NameType  nameType  =  nameType.getName()  &&  nameType.equals(ruleType.getName());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.getName());    NameType  nameType  =  nameType.getName()  &&  nameType.equals(ruleType.getName());	  	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	39	None	add
162	[BUG]  [BUGGY]  this.concat  =  concat  ||!concat;  this.concat  =  concat  ||!concat;  [CE]  variable  concat  might  already  have  been  assigned  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||!concat;  this.concat  =  concat  ||!concat;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    ||!concat;    this.concat  =  concat  ||!concat;	  	non-compiled	[CE]  variable  concat  might  already  have  been  assigned	8	None	add
163	[BUG]  [BUGGY]  this.concat  =  concat  ||!concat;  if(concat)  {  ExceptionInInitializerError  <  NameType>  exceptionInInitializerError  =  exceptionInInitializerError;  }  [CE]  type  ExceptionInInitializerError  does  not  take  parameters  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||!concat;  if(concat)  {  ExceptionInInitializerError  <  NameType>  exceptionInInitializerError  =  exceptionInInitializerError;  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    ||!concat;    if(concat)  {  ExceptionInInitializerError  <  NameType>  exceptionInInitializerError  =  exceptionInInitializerError;  }	  	non-compiled	[CE]  type  ExceptionInInitializerError  does  not  take  parameters	8	None	add
164	[BUG]  [BUGGY]  this.concat  =  concat  ||!concat;  if(concat)  {  ExceptionInInitializerError  <  NameType>  exceptionInInitializerError  =  new  ExceptionInInitializerError();  }  [CE]  type  ExceptionInInitializerError  does  not  take  parameters  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||!concat;  if(concat)  {  ExceptionInInitializerError  <  NameType>  exceptionInInitializerError  =  new  ExceptionInInitializerError();  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    ||!concat;    if(concat)  {  ExceptionInInitializerError  <  NameType>  exceptionInInitializerError  =  new  ExceptionInInitializerError();  }	  	non-compiled	[CE]  type  ExceptionInInitializerError  does  not  take  parameters	8	None	add
165	[BUG]  [BUGGY]  this.concat  =  concat  ||!concat;  if(concat  ==  null)  {  if(!concat)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||!concat;  if(concat  ==  null)  {  if(!concat)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    ||!concat;    if(concat  ==  null)  {  if(!concat)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
166	[BUG]  [BUGGY]  this.concat  =  concat  ||!concat;  ExceptionInInitializerError  =  concat  ||!concat;  [CE]  cannot  find  symbol  ExceptionInInitializerError  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||!concat;  ExceptionInInitializerError  =  concat  ||!concat;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    ||!concat;    ExceptionInInitializerError  =  concat  ||!concat;	  	non-compiled	[CE]  cannot  find  symbol  ExceptionInInitializerError	8	None	add
167	[BUG]  [BUGGY]  this.concat  =  concat  ||!concat;  if(concat)  {  this.concat  =  concat  ||!concat;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  concat  might  already  have  been  assigned  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||!concat;  if(concat)  {  this.concat  =  concat  ||!concat;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    ||!concat;    if(concat)  {  this.concat  =  concat  ||!concat;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  variable  concat  might  already  have  been  assigned	8	None	add
168	[BUG]  [BUGGY]  this.concat  =  concat  ||!concat;  if(concat)  {  ExceptionInInitializerError  <  RuleType>  exceptionInInitializerError  =  exceptionInInitializerError;  }  [CE]  type  ExceptionInInitializerError  does  not  take  parameters  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||!concat;  if(concat)  {  ExceptionInInitializerError  <  RuleType>  exceptionInInitializerError  =  exceptionInInitializerError;  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    ||!concat;    if(concat)  {  ExceptionInInitializerError  <  RuleType>  exceptionInInitializerError  =  exceptionInInitializerError;  }	  	non-compiled	[CE]  type  ExceptionInInitializerError  does  not  take  parameters	8	None	add
169	[BUG]  [BUGGY]  this.concat  =  concat  ||!concat;  if(concat  ==  Concat)  {  this.concat  =  concat  ||!concat;  }  [CE]  cannot  find  symbol  Concat  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||!concat;  if(concat  ==  Concat)  {  this.concat  =  concat  ||!concat;  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    ||!concat;    if(concat  ==  Concat)  {  this.concat  =  concat  ||!concat;  }	  	non-compiled	[CE]  cannot  find  symbol  Concat	8	None	add
170	[BUG]  [BUGGY]  this.concat  =  concat  ||!concat;  if(concat  ==  null)  {  this.concat  =  concat  ||!concat;  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||!concat;  if(concat  ==  null)  {  this.concat  =  concat  ||!concat;  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    ||!concat;    if(concat  ==  null)  {  this.concat  =  concat  ||!concat;  }	  	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	8	None	add
171	[BUG]  [BUGGY]  this.concat  =  concat  ||!concat;  if(concat)  {  this.concat  =  concat  ||!concat;  }  [CE]  variable  concat  might  already  have  been  assigned  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||!concat;  if(concat)  {  this.concat  =  concat  ||!concat;  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    ||!concat;    if(concat)  {  this.concat  =  concat  ||!concat;  }	  	non-compiled	[CE]  variable  concat  might  already  have  been  assigned	8	None	add
172	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.name.equals(nameType);  [CE]  name  has  private  access  in  RuleType  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.name.equals(nameType);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.name.equals(nameType);	  this.concat    =    concat    &&    nameType.equals(ruleType.name);    	non-compiled	[CE]  name  has  private  access  in  RuleType	41	None	replace
173	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.equals(nameType);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	this.concat  =  concat  &&  ruleType.equals(nameType);	  this.concat    =    concat    &&    nameType.equals(ruleType.name);    	compilable	  [FE]  ExceptionInInitializerError  	41	4	replace
174	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.equals(nameType);  [FE]  ExceptionInInitializerError  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.equals(nameType);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.equals(nameType);	  this.concat    =    concat    &&    nameType.equals(ruleType.name);    	compilable	  [FE]  ExceptionInInitializerError  	41	4	replace
175	[BUG]  [BUGGY]  this.concat  =  concat  ||  nameType.equals(ruleType.name);  [CE]  name  has  private  access  in  RuleType  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||  nameType.equals(ruleType.name);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  ||  nameType.equals(ruleType.name);	  this.concat    =    concat    &&    nameType.equals(ruleType.name);    	non-compiled	[CE]  name  has  private  access  in  RuleType	41	None	replace
176	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.equals(name);  [CE]  cannot  find  symbol  name  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.equals(name);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.equals(name);	  this.concat    =    concat    &&    nameType.equals(ruleType.name);    	non-compiled	[CE]  cannot  find  symbol  name	41	None	replace
177	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.name.equals(ruleType.name);  [CE]  name  has  private  access  in  RuleType  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.name.equals(ruleType.name);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.name.equals(ruleType.name);	  this.concat    =    concat    &&    nameType.equals(ruleType.name);    	non-compiled	[CE]  name  has  private  access  in  RuleType	41	None	replace
178	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.name,  nameType);  [CE]  name  has  private  access  in  RuleType  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.name,  nameType);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  nameType.equals(ruleType.name,  nameType);	  this.concat    =    concat    &&    nameType.equals(ruleType.name);    	non-compiled	[CE]  name  has  private  access  in  RuleType	41	None	replace
179	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.equals(ruleType.name);  [CE]  name  has  private  access  in  RuleType  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.equals(ruleType.name);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.equals(ruleType.name);	  this.concat    =    concat    &&    nameType.equals(ruleType.name);    	non-compiled	[CE]  name  has  private  access  in  RuleType	41	None	replace
180	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.name.equals(name);  [CE]  cannot  find  symbol  name  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.name.equals(name);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.name.equals(name);	  this.concat    =    concat    &&    nameType.equals(ruleType.name);    	non-compiled	[CE]  cannot  find  symbol  name	41	None	replace
181	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType,  concat);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType,  concat);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType,  concat);	      this.phonemeBuilder    =    PhonemeBuilder.instance(nameType,    nameType);    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	35	None	replace
182	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType,  maxPhonemes);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType,  maxPhonemes);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType,  maxPhonemes);	      this.phonemeBuilder    =    PhonemeBuilder.instance(nameType,    nameType);    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	35	None	replace
183	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  type);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  type);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  type);	      this.phonemeBuilder    =    PhonemeBuilder.instance(nameType,    nameType);    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	35	None	replace
184	[BUG]  [BUGGY]  this.phonemesBuilder  =  PhonemeBuilder.instance(nameType,  nameType);  [CE]  cannot  find  symbol  phonemesBuilder  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.phonemesBuilder  =  PhonemeBuilder.instance(nameType,  nameType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.phonemesBuilder  =  PhonemeBuilder.instance(nameType,  nameType);	      this.phonemeBuilder    =    PhonemeBuilder.instance(nameType,    nameType);    	non-compiled	[CE]  cannot  find  symbol  phonemesBuilder	35	None	replace
185	[BUG]  [BUGGY]  this.concat  =  concat?  null  :  concat;  this.concat  =  concat?  null  :  concat;  [CE]  variable  concat  might  already  have  been  assigned  [FE]    NullPointerException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  null  :  concat;  this.concat  =  concat?  null  :  concat;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat?    null    :    concat;    this.concat  =  concat?  null  :  concat;	  	non-compiled	[CE]  variable  concat  might  already  have  been  assigned	2	None	add
186	[BUG]  [BUGGY]  this.concat  =  concat?  null  :  concat;  This.concat  =  concat?  null  :  concat;  [CE]  cannot  find  symbol  This  [FE]      NullPointerException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  null  :  concat;  This.concat  =  concat?  null  :  concat;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat?    null    :    concat;    This.concat  =  concat?  null  :  concat;	  	non-compiled	[CE]  cannot  find  symbol  This	2	None	add
187	[BUG]  [BUGGY]  this.concat  =  concat?  null  :  concat;  int  concat  =  concat?  null  :  concat;  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]        NullPointerException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  null  :  concat;  int  concat  =  concat?  null  :  concat;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat?    null    :    concat;    int  concat  =  concat?  null  :  concat;	  	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	2	None	add
188	[BUG]  [BUGGY]  this.concat  =  concat?  null  :  concat;  if(  concat?  null  :  concat;  [CE]  ')'  expected  [FE]          NullPointerException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  null  :  concat;  if(  concat?  null  :  concat;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat?    null    :    concat;    if(  concat?  null  :  concat;	  	non-compiled	[CE]  ')'  expected	2	None	add
189	[BUG]  [BUGGY]  this.concat  =  concat?  null  :  concat;  this.concat  =  concat?  null  :  Concat;  [CE]  cannot  find  symbol  Concat  [FE]            NullPointerException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  null  :  concat;  this.concat  =  concat?  null  :  Concat;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat?    null    :    concat;    this.concat  =  concat?  null  :  Concat;	  	non-compiled	[CE]  cannot  find  symbol  Concat	2	None	add
190	[BUG]  [BUGGY]  this.concat  =  concat?  null  :  concat;  that.concat  =  concat?  null  :  concat;  [CE]  cannot  find  symbol  that  [FE]              NullPointerException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  null  :  concat;  that.concat  =  concat?  null  :  concat;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat?    null    :    concat;    that.concat  =  concat?  null  :  concat;	  	non-compiled	[CE]  cannot  find  symbol  that	2	None	add
191	[BUG]  [BUGGY]  this.concat  =  concat?  null  :  concat;  this.concat  =  concat?  null  :  concat);  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  null  :  concat;  this.concat  =  concat?  null  :  concat);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat?    null    :    concat;    this.concat  =  concat?  null  :  concat);	  	non-compiled	[CE]  ';'  expected	2	None	add
192	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||  nameType.equals(ruleType);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	this.concat  =  concat  ||  nameType.equals(ruleType);	  this.concat    =    concat    &&    nameType.equals(ruleType);    	compilable	  [FE]  ExceptionInInitializerError  	37	4	replace
193	[BUG]  [BUGGY]  this.concat  =  concat  ||  nameType.equals(ruleType);  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||  nameType.equals(ruleType);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  ||  nameType.equals(ruleType);	  this.concat    =    concat    &&    nameType.equals(ruleType);    	compilable	  [FE]  ExceptionInInitializerError  	37	4	replace
194	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.equals(ruleType);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	this.concat  =  concat  &&  ruleType.equals(ruleType);	  this.concat    =    concat    &&    nameType.equals(ruleType);    	compilable	  [FE]  ExceptionInInitializerError  	37	4	replace
195	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.equals(ruleType);  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.equals(ruleType);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.equals(ruleType);	  this.concat    =    concat    &&    nameType.equals(ruleType);    	compilable	  [FE]  ExceptionInInitializerError  	37	4	replace
196	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(nameType);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	this.concat  =  concat  &&  nameType.equals(nameType);	  this.concat    =    concat    &&    nameType.equals(ruleType);    	compilable	  [FE]  ExceptionInInitializerError  	37	4	replace
197	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(nameType);  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(nameType);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  nameType.equals(nameType);	  this.concat    =    concat    &&    nameType.equals(ruleType);    	compilable	  [FE]  ExceptionInInitializerError  	37	4	replace
198	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.nameType);  [CE]  cannot  find  symbol  nameType  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.nameType);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  nameType.equals(ruleType.nameType);	  this.concat    =    concat    &&    nameType.equals(ruleType);    	non-compiled	[CE]  cannot  find  symbol  nameType	37	None	replace
199	[BUG]  [BUGGY]  this.phonemes  =  PhonemeBuilder.instance();  [CE]  cannot  find  symbol  phonemes  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.phonemes  =  PhonemeBuilder.instance();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.phonemes  =  PhonemeBuilder.instance();	      this.phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol  phonemes	33	None	replace
200	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(null);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(null);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(null);	      this.phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	33	None	replace
201	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(numberType);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(numberType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(numberType);	      this.phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	33	None	replace
202	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(false);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(false);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(false);	      this.phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	33	None	replace
203	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(defaultRules);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(defaultRules);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(defaultRules);	      this.phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	33	None	replace
204	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(defaultRuleType);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(defaultRuleType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(defaultRuleType);	      this.phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	33	None	replace
205	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRawNameType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.getRawNameType();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.getRawNameType();	      NameType    nameType    =    ruleType.getNameType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	13	None	replace
206	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getSimpleNameType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.getSimpleNameType();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.getSimpleNameType();	      NameType    nameType    =    ruleType.getNameType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	13	None	replace
207	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getNameType(),  concat;  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.getNameType(),  concat;  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.getNameType(),  concat;	      NameType    nameType    =    ruleType.getNameType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	13	None	replace
208	[BUG]  [BUGGY]  NameType  nameType  =  this.nameType.getName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  this.nameType.getName();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  this.nameType.getName();	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	15	None	replace
209	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getName());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getName());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getName());	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	15	None	replace
210	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getSimpleName());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getSimpleName());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getSimpleName());	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	15	None	replace
211	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getParameterTypes());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getParameterTypes());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getParameterTypes());	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	15	None	replace
212	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  new  NameType(nameType.getName());	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	15	None	replace
213	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getLanguage());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getLanguage());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getLanguage());	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	15	None	replace
214	[BUG]  [BUGGY]  NameType  nameType  =  _nameType.getName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  _nameType.getName();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  _nameType.getName();	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	15	None	replace
215	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  >  ruleType.maxPhonemes);  [CE]  ';'  expected  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  >  ruleType.maxPhonemes);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  >  ruleType.maxPhonemes);	  this.concat    =    concat    &&    maxPhonemes    <    ruleType.maxPhonemes);    	non-compiled	[CE]  ';'  expected	30	None	replace
216	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  >=  ruleType.maxPhonemes);  [CE]  ';'  expected  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  >=  ruleType.maxPhonemes);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  >=  ruleType.maxPhonemes);	  this.concat    =    concat    &&    maxPhonemes    <    ruleType.maxPhonemes);    	non-compiled	[CE]  ';'  expected	30	None	replace
217	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  ==  ruleType.maxPhonemes);  [CE]  ';'  expected  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  ==  ruleType.maxPhonemes);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  ==  ruleType.maxPhonemes);	  this.concat    =    concat    &&    maxPhonemes    <    ruleType.maxPhonemes);    	non-compiled	[CE]  ';'  expected	30	None	replace
218	[BUG]  [BUGGY]  this.concat  =  concat  ||  maxPhonemes  <  ruleType.maxPhonemes);  [CE]  ';'  expected  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||  maxPhonemes  <  ruleType.maxPhonemes);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  ||  maxPhonemes  <  ruleType.maxPhonemes);	  this.concat    =    concat    &&    maxPhonemes    <    ruleType.maxPhonemes);    	non-compiled	[CE]  ';'  expected	30	None	replace
219	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  =  ruleType.maxPhonemes);  [CE]  illegal  start  of  expression  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  =  ruleType.maxPhonemes);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  <  =  ruleType.maxPhonemes);	  this.concat    =    concat    &&    maxPhonemes    <    ruleType.maxPhonemes);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
220	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes!=  ruleType.maxPhonemes);  [CE]  ';'  expected  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes!=  ruleType.maxPhonemes);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes!=  ruleType.maxPhonemes);	  this.concat    =    concat    &&    maxPhonemes    <    ruleType.maxPhonemes);    	non-compiled	[CE]  ';'  expected	30	None	replace
221	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  ruleType.maxPhonemes  +  1);  [CE]  ';'  expected  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  ruleType.maxPhonemes  +  1);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  <  ruleType.maxPhonemes  +  1);	  this.concat    =    concat    &&    maxPhonemes    <    ruleType.maxPhonemes);    	non-compiled	[CE]  ';'  expected	30	None	replace
222	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  >>  ruleType.maxPhonemes);  [CE]  ';'  expected  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  >>  ruleType.maxPhonemes);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  >>  ruleType.maxPhonemes);	  this.concat    =    concat    &&    maxPhonemes    <    ruleType.maxPhonemes);    	non-compiled	[CE]  ';'  expected	30	None	replace
223	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getFunctionType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.getFunctionType();  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.getFunctionType();	      	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	12	None	replace
224	[BUG]  [BUGGY]  this.concat  =  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [CE]  ';'  expected  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES);	  this.concat    =    concat,    maxPhonemes);    	non-compiled	[CE]  ';'  expected	38	None	replace
225	[BUG]  [BUGGY]  this.concat  =  concat,  maxPhonemes  -  1);  [CE]  ';'  expected  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat,  maxPhonemes  -  1);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat,  maxPhonemes  -  1);	  this.concat    =    concat,    maxPhonemes);    	non-compiled	[CE]  ';'  expected	38	None	replace
226	[BUG]  [BUGGY]  this.concat  =  concat?  concat  :  maxPhonemes);  [CE]  ';'  expected  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  concat  :  maxPhonemes);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat?  concat  :  maxPhonemes);	  this.concat    =    concat,    maxPhonemes);    	non-compiled	[CE]  ';'  expected	38	None	replace
227	[BUG]  [BUGGY]  this.concat  =  concat,  maxPhonemes  +  1);  [CE]  ';'  expected  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat,  maxPhonemes  +  1);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat,  maxPhonemes  +  1);	  this.concat    =    concat,    maxPhonemes);    	non-compiled	[CE]  ';'  expected	38	None	replace
228	[BUG]  [BUGGY]  this.concat  =  concat,  maxPhonemes  -  2;  [CE]  ';'  expected  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat,  maxPhonemes  -  2;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat,  maxPhonemes  -  2;	  this.concat    =    concat,    maxPhonemes);    	non-compiled	[CE]  ';'  expected	38	None	replace
229	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.equals(nameType.getName());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	this.concat  =  concat  &&  ruleType.equals(nameType.getName());	  this.concat    =    concat    &&    nameType.equals(ruleType.getName());    	compilable	  [FE]  ExceptionInInitializerError  	40	4	replace
230	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.equals(nameType.getName());  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.equals(nameType.getName());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.equals(nameType.getName());	  this.concat    =    concat    &&    nameType.equals(ruleType.getName());    	compilable	  [FE]  ExceptionInInitializerError  	40	4	replace
231	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||  nameType.equals(ruleType.getName());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	this.concat  =  concat  ||  nameType.equals(ruleType.getName());	  this.concat    =    concat    &&    nameType.equals(ruleType.getName());    	compilable	  [FE]  ExceptionInInitializerError  	40	4	replace
232	[BUG]  [BUGGY]  this.concat  =  concat  ||  nameType.equals(ruleType.getName());  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||  nameType.equals(ruleType.getName());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  ||  nameType.equals(ruleType.getName());	  this.concat    =    concat    &&    nameType.equals(ruleType.getName());    	compilable	  [FE]  ExceptionInInitializerError  	40	4	replace
233	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.getName().equals(ruleType.getName());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	this.concat  =  concat  &&  ruleType.getName().equals(ruleType.getName());	  this.concat    =    concat    &&    nameType.equals(ruleType.getName());    	compilable	  [FE]  ExceptionInInitializerError  	40	4	replace
234	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.getName().equals(ruleType.getName());  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.getName().equals(ruleType.getName());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.getName().equals(ruleType.getName());	  this.concat    =    concat    &&    nameType.equals(ruleType.getName());    	compilable	  [FE]  ExceptionInInitializerError  	40	4	replace
235	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.getName().equals(nameType.getName());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	this.concat  =  concat  &&  ruleType.getName().equals(nameType.getName());	  this.concat    =    concat    &&    nameType.equals(ruleType.getName());    	compilable	  [FE]  ExceptionInInitializerError  	40	4	replace
236	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.getName().equals(nameType.getName());  [FE]  ExceptionInInitializerError  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.getName().equals(nameType.getName());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.getName().equals(nameType.getName());	  this.concat    =    concat    &&    nameType.equals(ruleType.getName());    	compilable	  [FE]  ExceptionInInitializerError  	40	4	replace
237	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName())||  nameType.equals(ruleType.getName());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	this.concat  =  concat  &&  nameType.equals(ruleType.getName())||  nameType.equals(ruleType.getName());	  this.concat    =    concat    &&    nameType.equals(ruleType.getName());    	compilable	  [FE]  ExceptionInInitializerError  	40	4	replace
238	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName())||  nameType.equals(ruleType.getName());  [FE]  ExceptionInInitializerError  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName())||  nameType.equals(ruleType.getName());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  nameType.equals(ruleType.getName())||  nameType.equals(ruleType.getName());	  this.concat    =    concat    &&    nameType.equals(ruleType.getName());    	compilable	  [FE]  ExceptionInInitializerError  	40	4	replace
239	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.equals(ruleType.getConstructor());  [CE]  cannot  find  symbol  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.equals(ruleType.getConstructor());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.equals(ruleType.getConstructor());	  this.concat    =    concat    &&    nameType.equals(ruleType.getName());    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
240	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.equals(defaultRuleType.getName());  [CE]  cannot  find  symbol  defaultRuleType  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.equals(defaultRuleType.getName());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.equals(defaultRuleType.getName());	  this.concat    =    concat    &&    nameType.equals(ruleType.getName());    	non-compiled	[CE]  cannot  find  symbol  defaultRuleType	40	None	replace
241	[BUG]  [BUGGY]  NameType  nameType  =  this.nameType.getRawClass();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  this.nameType.getRawClass();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  this.nameType.getRawClass();	      NameType    nameType    =    nameType.getRawClass();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	22	None	replace
242	[BUG]  [BUGGY]  NameType  nameType  =  type.getRawClass();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  type.getRawClass();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  type.getRawClass();	      NameType    nameType    =    nameType.getRawClass();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	22	None	replace
243	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRootClass();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.getRootClass();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.getRootClass();	      NameType    nameType    =    nameType.getRawClass();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	22	None	replace
244	[BUG]  [BUGGY]  NameType  nameType  =  rules.getRawClass();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  rules.getRawClass();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  rules.getRawClass();	      NameType    nameType    =    nameType.getRawClass();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	22	None	replace
245	[BUG]  [BUGGY]  NameType  nameType  =  this.nameType.getReferenceName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  this.nameType.getReferenceName();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  this.nameType.getReferenceName();	      NameType    nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	19	None	replace
246	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRawReferenceName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.getRawReferenceName();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.getRawReferenceName();	      NameType    nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	19	None	replace
247	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getReferenceName());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getReferenceName());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  new  NameType(nameType.getReferenceName());	      NameType    nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	19	None	replace
248	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getReferenceName());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getReferenceName());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  ruleType.getReferenceName());	      NameType    nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	19	None	replace
249	[BUG]  [BUGGY]  this.concat  =  concat  ||  maxPhonemes  <  RuleType.MIN_PHONEMES;  [CE]  cannot  find  symbol  MIN_PHONEMES  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||  maxPhonemes  <  RuleType.MIN_PHONEMES;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  ||  maxPhonemes  <  RuleType.MIN_PHONEMES;	  this.concat    =    concat    &&    maxPhonemes    <    RuleType.MIN_PHONEMES;    	non-compiled	[CE]  cannot  find  symbol  MIN_PHONEMES	31	None	replace
250	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  >=  RuleType.MIN_PHONEMES;  [CE]  cannot  find  symbol  MIN_PHONEMES  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  >=  RuleType.MIN_PHONEMES;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  >=  RuleType.MIN_PHONEMES;	  this.concat    =    concat    &&    maxPhonemes    <    RuleType.MIN_PHONEMES;    	non-compiled	[CE]  cannot  find  symbol  MIN_PHONEMES	31	None	replace
251	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  RuleType.MIN_PHONEMES  ||  maxPhonemes  <  RuleType.MAX_PHONEMES;  [CE]  cannot  find  symbol  MIN_PHONEMES  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  RuleType.MIN_PHONEMES  ||  maxPhonemes  <  RuleType.MAX_PHONEMES;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  <  RuleType.MIN_PHONEMES  ||  maxPhonemes  <  RuleType.MAX_PHONEMES;	  this.concat    =    concat    &&    maxPhonemes    <    RuleType.MIN_PHONEMES;    	non-compiled	[CE]  cannot  find  symbol  MIN_PHONEMES	31	None	replace
252	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  RuleType.MIN_PHONES;  [CE]  cannot  find  symbol  MIN_PHONES  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  RuleType.MIN_PHONES;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  <  RuleType.MIN_PHONES;	  this.concat    =    concat    &&    maxPhonemes    <    RuleType.MIN_PHONEMES;    	non-compiled	[CE]  cannot  find  symbol  MIN_PHONES	31	None	replace
253	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  RuleType.MILLIS;  [CE]  cannot  find  symbol  MILLIS  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  RuleType.MILLIS;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  <  RuleType.MILLIS;	  this.concat    =    concat    &&    maxPhonemes    <    RuleType.MIN_PHONEMES;    	non-compiled	[CE]  cannot  find  symbol  MILLIS	31	None	replace
254	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&!concat;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	this.concat  =  concat  &&!concat;	  this.concat    =    concat    ||!concat;    	compilable	  [FE]  ExceptionInInitializerError  	9	4	replace
255	[BUG]  [BUGGY]  this.concat  =  concat  &&!concat;  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&!concat;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&!concat;	  this.concat    =    concat    ||!concat;    	compilable	  [FE]  ExceptionInInitializerError  	9	4	replace
256	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  concat  :!concat;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	this.concat  =  concat?  concat  :!concat;	  this.concat    =    concat    ||!concat;    	compilable	  [FE]  ExceptionInInitializerError  	9	4	replace
257	[BUG]  [BUGGY]  this.concat  =  concat?  concat  :!concat;  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  concat  :!concat;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat?  concat  :!concat;	  this.concat    =    concat    ||!concat;    	compilable	  [FE]  ExceptionInInitializerError  	9	4	replace
258	[BUG]  [BUGGY]  this.concat  =  concat  ||(concat!=  null  &&!concat);  [CE]  incomparable  types:  boolean  and  <null>  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||(concat!=  null  &&!concat);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  ||(concat!=  null  &&!concat);	  this.concat    =    concat    ||!concat;    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	9	None	replace
259	[BUG]  [BUGGY]  this.concat  =  concat  ||!concat  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||!concat  +  1;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  ||!concat  +  1;	  this.concat    =    concat    ||!concat;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	9	None	replace
260	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    NullPointerException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  false  :  concat;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	this.concat  =  concat?  false  :  concat;	  this.concat    =    concat?    null    :    concat;    	compilable	  [FE]  ExceptionInInitializerError  	3	4	replace
261	[BUG]  [BUGGY]  this.concat  =  concat?  false  :  concat;  [FE]  ExceptionInInitializerError  [FE]    NullPointerException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  false  :  concat;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat?  false  :  concat;	  this.concat    =    concat?    null    :    concat;    	compilable	  [FE]  ExceptionInInitializerError  	3	4	replace
262	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]      NullPointerException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  true  :  concat;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	this.concat  =  concat?  true  :  concat;	  this.concat    =    concat?    null    :    concat;    	compilable	  [FE]  ExceptionInInitializerError  	3	4	replace
263	[BUG]  [BUGGY]  this.concat  =  concat?  true  :  concat;  [FE]  ExceptionInInitializerError  [FE]      NullPointerException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  true  :  concat;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat?  true  :  concat;	  this.concat    =    concat?    null    :    concat;    	compilable	  [FE]  ExceptionInInitializerError  	3	4	replace
264	[BUG]  [BUGGY]  this.concat  =  concat?  null  :  concat  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        NullPointerException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  null  :  concat  +  1;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat?  null  :  concat  +  1;	  this.concat    =    concat?    null    :    concat;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	3	None	replace
265	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  ruleType.minPhonemes;  [CE]  cannot  find  symbol  minPhonemes  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  ruleType.minPhonemes;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  <  ruleType.minPhonemes;	  this.concat    =    concat    &&    maxPhonemes    <    ruleType.maxPhonemes;    	non-compiled	[CE]  cannot  find  symbol  minPhonemes	28	None	replace
266	[BUG]  [BUGGY]  this.concat  =  concat  ||  maxPhonemes  <  ruleType.maxPhonemes;  [CE]  cannot  find  symbol  maxPhonemes  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||  maxPhonemes  <  ruleType.maxPhonemes;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  ||  maxPhonemes  <  ruleType.maxPhonemes;	  this.concat    =    concat    &&    maxPhonemes    <    ruleType.maxPhonemes;    	non-compiled	[CE]  cannot  find  symbol  maxPhonemes	28	None	replace
267	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  ruleType.numberPhonemes;  [CE]  cannot  find  symbol  numberPhonemes  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  ruleType.numberPhonemes;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  <  ruleType.numberPhonemes;	  this.concat    =    concat    &&    maxPhonemes    <    ruleType.maxPhonemes;    	non-compiled	[CE]  cannot  find  symbol  numberPhonemes	28	None	replace
268	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  ruleType.minimumPhonemes;  [CE]  cannot  find  symbol  minimumPhonemes  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  ruleType.minimumPhonemes;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  <  ruleType.minimumPhonemes;	  this.concat    =    concat    &&    maxPhonemes    <    ruleType.maxPhonemes;    	non-compiled	[CE]  cannot  find  symbol  minimumPhonemes	28	None	replace
269	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  ruleType.maxPhoneMES;  [CE]  cannot  find  symbol  maxPhoneMES  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  ruleType.maxPhoneMES;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  <  ruleType.maxPhoneMES;	  this.concat    =    concat    &&    maxPhonemes    <    ruleType.maxPhonemes;    	non-compiled	[CE]  cannot  find  symbol  maxPhoneMES	28	None	replace
270	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  ruleType.nextPhonemes;  [CE]  cannot  find  symbol  nextPhonemes  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  ruleType.nextPhonemes;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  <  ruleType.nextPhonemes;	  this.concat    =    concat    &&    maxPhonemes    <    ruleType.maxPhonemes;    	non-compiled	[CE]  cannot  find  symbol  nextPhonemes	28	None	replace
271	[BUG]  [BUGGY]  this.concat  =  concat  &&  minPhonemes  <  ruleType.maxPhonemes;  [CE]  cannot  find  symbol  minPhonemes  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  minPhonemes  <  ruleType.maxPhonemes;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  minPhonemes  <  ruleType.maxPhonemes;	  this.concat    =    concat    &&    maxPhonemes    <    ruleType.maxPhonemes;    	non-compiled	[CE]  cannot  find  symbol  minPhonemes	28	None	replace
272	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  ruleType.maxPhonemes  +  1;  [CE]  cannot  find  symbol  maxPhonemes  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  ruleType.maxPhonemes  +  1;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  <  ruleType.maxPhonemes  +  1;	  this.concat    =    concat    &&    maxPhonemes    <    ruleType.maxPhonemes);    	non-compiled	[CE]  cannot  find  symbol  maxPhonemes	30	None	replace
273	[BUG]  [BUGGY]  this.concat  =  concat  ||!concat;  if(concat)  {  ExceptionInInitializerError  <  NameType>  exceptionInInitializerError  =  new  ExceptionInInitializerError();  for(RuleType  ruleType  :  ruleType.nameInInitializerErrors)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||!concat;  if(concat)  {  ExceptionInInitializerError  <  NameType>  exceptionInInitializerError  =  new  ExceptionInInitializerError();  for(RuleType  ruleType  :  ruleType.nameInInitializerErrors)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    ||!concat;    if(concat)  {  ExceptionInInitializerError  <  NameType>  exceptionInInitializerError  =  new  ExceptionInInitializerError();  for(RuleType  ruleType  :  ruleType.nameInInitializerErrors)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
274	[BUG]  [BUGGY]  this.concat  =  concat  ||!concat;  NameType  concat  =  concat  ||!concat;  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||!concat;  NameType  concat  =  concat  ||!concat;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    ||!concat;    NameType  concat  =  concat  ||!concat;	  	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	8	None	add
275	[BUG]  [BUGGY]  this.concat  =  concat  ||!concat;  if(concat)  {  ExceptionInInitializerError  <  NameType>  exceptionInInitializerError  =  new  ExceptionInInitializerError();  for(RuleType  ruleType  :  ruleType.rules)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||!concat;  if(concat)  {  ExceptionInInitializerError  <  NameType>  exceptionInInitializerError  =  new  ExceptionInInitializerError();  for(RuleType  ruleType  :  ruleType.rules)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    ||!concat;    if(concat)  {  ExceptionInInitializerError  <  NameType>  exceptionInInitializerError  =  new  ExceptionInInitializerError();  for(RuleType  ruleType  :  ruleType.rules)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
276	[BUG]  [BUGGY]  this.concat  =  concat  ||!concat;  if(concat)  {  ExceptionInInitializerError  <  RuleType>  exceptionInInitializerError  =  new  ExceptionInInitializerError();  }  [CE]  type  ExceptionInInitializerError  does  not  take  parameters  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||!concat;  if(concat)  {  ExceptionInInitializerError  <  RuleType>  exceptionInInitializerError  =  new  ExceptionInInitializerError();  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    ||!concat;    if(concat)  {  ExceptionInInitializerError  <  RuleType>  exceptionInInitializerError  =  new  ExceptionInInitializerError();  }	  	non-compiled	[CE]  type  ExceptionInInitializerError  does  not  take  parameters	8	None	add
277	[BUG]  [BUGGY]  this.concat  =  concat  ||!concat;  if(concat)  {  ExceptionInInitializerError  <  NameType>  exceptionInInitializerError  =  new  ExceptionInInitializerError();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  type  ExceptionInInitializerError  does  not  take  parameters  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||!concat;  if(concat)  {  ExceptionInInitializerError  <  NameType>  exceptionInInitializerError  =  new  ExceptionInInitializerError();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    ||!concat;    if(concat)  {  ExceptionInInitializerError  <  NameType>  exceptionInInitializerError  =  new  ExceptionInInitializerError();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  type  ExceptionInInitializerError  does  not  take  parameters	8	None	add
278	[BUG]  [BUGGY]  this.concat  =  concat  ||!concat;  if(concat)  {  ExceptionInInitializerError  <  NameType>  exceptionInInitializerError  =  new  ExceptionInInitializerError();  System.arraycopy(nameType,  0,  this.exceptionInInitializerError,  exceptionInIn  [CE]  ')'  expected  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||!concat;  if(concat)  {  ExceptionInInitializerError  <  NameType>  exceptionInInitializerError  =  new  ExceptionInInitializerError();  System.arraycopy(nameType,  0,  this.exceptionInInitializerError,  exceptionInIn  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    ||!concat;    if(concat)  {  ExceptionInInitializerError  <  NameType>  exceptionInInitializerError  =  new  ExceptionInInitializerError();  System.arraycopy(nameType,  0,  this.exceptionInInitializerError,  exceptionInIn	  	non-compiled	[CE]  ')'  expected	8	None	add
279	[BUG]  [BUGGY]  this.concat  =  concat  ||!concat;  if(concat)  {  ExceptionInInitializerError!=  ExceptionInInitializerError;  }  [CE]  not  a  statement  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||!concat;  if(concat)  {  ExceptionInInitializerError!=  ExceptionInInitializerError;  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    ||!concat;    if(concat)  {  ExceptionInInitializerError!=  ExceptionInInitializerError;  }	  	non-compiled	[CE]  not  a  statement	8	None	add
280	[BUG]  [BUGGY]  this.concat  =  concat  ||!concat;  if(concat)  {  ExceptionInInitializerError  ==  ExceptionInInitializerError;  }  [CE]  not  a  statement  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||!concat;  if(concat)  {  ExceptionInInitializerError  ==  ExceptionInInitializerError;  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    ||!concat;    if(concat)  {  ExceptionInInitializerError  ==  ExceptionInInitializerError;  }	  	non-compiled	[CE]  not  a  statement	8	None	add
281	[BUG]  [BUGGY]  if(concat)  {  this.concat  =  concat;  }  else  {  PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder();  }  [CE]  no  suitable  constructor  found  for  PhonemeBuilder()  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  if(concat)  {  this.concat  =  concat;  }  else  {  PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder();  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	if(concat)  {  this.concat  =  concat;  }  else  {  PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder();  }	  this.concat    =    concat,    maxPhonemes;    	non-compiled	[CE]  no  suitable  constructor  found  for  PhonemeBuilder()	6	None	replace
282	[BUG]  [BUGGY]  if(concat)  {  this.concat  =  concat;  }  else  {  PhonemeBuilder  phonemeBuilder  =  null;  }  [CE]  variable  concat  might  not  have  been  initialized  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  if(concat)  {  this.concat  =  concat;  }  else  {  PhonemeBuilder  phonemeBuilder  =  null;  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	if(concat)  {  this.concat  =  concat;  }  else  {  PhonemeBuilder  phonemeBuilder  =  null;  }	  this.concat    =    concat,    maxPhonemes;    	non-compiled	[CE]  variable  concat  might  not  have  been  initialized	6	None	replace
283	[BUG]  [BUGGY]  if(concat)  {  this.concat  =  concat;  }  else  {  finalRules  =  new  Set  <  RuleType>();  }  [CE]  cannot  find  symbol  finalRules  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  if(concat)  {  this.concat  =  concat;  }  else  {  finalRules  =  new  Set  <  RuleType>();  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	if(concat)  {  this.concat  =  concat;  }  else  {  finalRules  =  new  Set  <  RuleType>();  }	  this.concat    =    concat,    maxPhonemes;    	non-compiled	[CE]  cannot  find  symbol  finalRules	6	None	replace
284	[BUG]  [BUGGY]  if(concat)  {  this.concat  =  concat;  }  else  {  PhonemeBuilder  phonemeBuilder  =  new  PhonemBuilder();  }  [CE]  cannot  find  symbol  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  if(concat)  {  this.concat  =  concat;  }  else  {  PhonemeBuilder  phonemeBuilder  =  new  PhonemBuilder();  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	if(concat)  {  this.concat  =  concat;  }  else  {  PhonemeBuilder  phonemeBuilder  =  new  PhonemBuilder();  }	  this.concat    =    concat,    maxPhonemes;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
285	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRuleType( "name. ");  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.getRuleType( "name. ");  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.getRuleType( "name. ");	      NameType    nameType    =    ruleType.getRuleType(   "name   ");    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	26	None	replace
286	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getNameType( "name ");  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.getNameType( "name ");  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.getNameType( "name ");	      NameType    nameType    =    ruleType.getRuleType(   "name   ");    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	26	None	replace
287	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.iInitializingMethod();  [CE]  cannot  find  symbol  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.iInitializingMethod();  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.iInitializingMethod();	  this.concat    =    concat    &&    ruleType.isInitializingMethod();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
288	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.isInitializingDeclaration();  [CE]  cannot  find  symbol  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.isInitializingDeclaration();  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.isInitializingDeclaration();	  this.concat    =    concat    &&    ruleType.isInitializingMethod();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
289	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.equals(ruleType.isConstructor());  [CE]  cannot  find  symbol  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.equals(ruleType.isConstructor());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.equals(ruleType.isConstructor());	  this.concat    =    concat    &&    ruleType.isConstructor();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
290	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.isConstructor(false);  [CE]  cannot  find  symbol  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.isConstructor(false);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.isConstructor(false);	  this.concat    =    concat    &&    ruleType.isConstructor();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
291	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.toConstructor();  [CE]  cannot  find  symbol  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.toConstructor();  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.toConstructor();	  this.concat    =    concat    &&    ruleType.isConstructor();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
292	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  RuleType.ALL;  [CE]  cannot  find  symbol  ALL  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  RuleType.ALL;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  <  RuleType.ALL;	  this.concat    =    concat    &&    maxPhonemes    <    RuleType.MIN_PHONEMES;    	non-compiled	[CE]  cannot  find  symbol  ALL	31	None	replace
293	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  RuleType.MEMBER;  [CE]  cannot  find  symbol  MEMBER  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  RuleType.MEMBER;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  <  RuleType.MEMBER;	  this.concat    =    concat    &&    maxPhonemes    <    RuleType.MIN_PHONEMES;    	non-compiled	[CE]  cannot  find  symbol  MEMBER	31	None	replace
294	[BUG]  [BUGGY]  this.concat  =  concat?  NAME_PREFIXES  :  null;  [CE]  incompatible  types  [FE]    NullPointerException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  NAME_PREFIXES  :  null;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat?  NAME_PREFIXES  :  null;	  this.concat    =    concat?    null    :    concat;    	non-compiled	[CE]  incompatible  types	3	None	replace
295	[BUG]  [BUGGY]  this.concat  =  concat?  NAME_PREFIXES  :  concat;  [CE]  incompatible  types  [FE]      NullPointerException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  NAME_PREFIXES  :  concat;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat?  NAME_PREFIXES  :  concat;	  this.concat    =    concat?    null    :    concat;    	non-compiled	[CE]  incompatible  types	3	None	replace
296	[BUG]  [BUGGY]  this.concat  =  concat  |  null  :  concat;  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  |  null  :  concat;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  |  null  :  concat;	  this.concat    =    concat?    null    :    concat;    	non-compiled	[CE]  ';'  expected	3	None	replace
297	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType);  NameType  nameType  =  nameType  &&  nameType.equals(ruleType);  this.concat  =  concat  &&  nameType.equals(ruleType);  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType);  NameType  nameType  =  nameType  &&  nameType.equals(ruleType);  this.concat  =  concat  &&  nameType.equals(ruleType);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType);    NameType  nameType  =  nameType  &&  nameType.equals(ruleType);  this.concat  =  concat  &&  nameType.equals(ruleType);	  	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	36	None	add
298	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType);  NameType  nameType  =  nameType  &&  nameType.equals(ruleType);  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType);  NameType  nameType  =  nameType  &&  nameType.equals(ruleType);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType);    NameType  nameType  =  nameType  &&  nameType.equals(ruleType);	  	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	36	None	add
299	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType);  NameType  nameType  =  nameType.getName();  this.concat  =  concat  &&  nameType.equals(ruleType);  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType);  NameType  nameType  =  nameType.getName();  this.concat  =  concat  &&  nameType.equals(ruleType);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType);    NameType  nameType  =  nameType.getName();  this.concat  =  concat  &&  nameType.equals(ruleType);	  	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	36	None	add
300	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType);  if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType);  }  else  {  PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder();  }  [CE]  no  suitable  constructor  found  for  PhonemeBuilder()  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType);  if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType);  }  else  {  PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder();  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType);    if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType);  }  else  {  PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder();  }	  	non-compiled	[CE]  no  suitable  constructor  found  for  PhonemeBuilder()	36	None	add
301	[BUG]  [BUGGY]  this.concat  =  concat?  true  :  false;  if(concat)  {  this.concat  =  concat?  true  :  false;  }  else  {  PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder();  }  [CE]  no  suitable  constructor  found  for  PhonemeBuilder()  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  true  :  false;  if(concat)  {  this.concat  =  concat?  true  :  false;  }  else  {  PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder();  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat?    true    :    false;    if(concat)  {  this.concat  =  concat?  true  :  false;  }  else  {  PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder();  }	  	non-compiled	[CE]  no  suitable  constructor  found  for  PhonemeBuilder()	4	None	add
302	[BUG]  [BUGGY]  this.concat  =  concat?  true  :  false;  NameType  nameType  =  ruleType.getNameType();  this.concat  =  concat?  true  :  false;  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  true  :  false;  NameType  nameType  =  ruleType.getNameType();  this.concat  =  concat?  true  :  false;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat?    true    :    false;    NameType  nameType  =  ruleType.getNameType();  this.concat  =  concat?  true  :  false;	  	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	4	None	add
303	[BUG]  [BUGGY]  this.concat  =  concat?  true  :  false;  NameType  nameType  =  nameType.getName();  this.concat  =  concat?  true  :  false;  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  true  :  false;  NameType  nameType  =  nameType.getName();  this.concat  =  concat?  true  :  false;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat?    true    :    false;    NameType  nameType  =  nameType.getName();  this.concat  =  concat?  true  :  false;	  	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	4	None	add
304	[BUG]  [BUGGY]  this.concat  =  concat?  true  :  false;  NameType  nameType  =  nameType.getRuleType();  this.concat  =  concat?  true  :  false;  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  true  :  false;  NameType  nameType  =  nameType.getRuleType();  this.concat  =  concat?  true  :  false;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat?    true    :    false;    NameType  nameType  =  nameType.getRuleType();  this.concat  =  concat?  true  :  false;	  	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	4	None	add
305	[BUG]  [BUGGY]  this.concat  =  concat?  true  :  false;  NameType  nameType  =  ruleType.getName();  this.concat  =  concat?  true  :  false;  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  true  :  false;  NameType  nameType  =  ruleType.getName();  this.concat  =  concat?  true  :  false;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat?    true    :    false;    NameType  nameType  =  ruleType.getName();  this.concat  =  concat?  true  :  false;	  	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	4	None	add
306	[BUG]  [BUGGY]  this.concat  =  concat?  true  :  false;  This.concat  =  concat?  true  :  false;  [CE]  cannot  find  symbol  This  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  true  :  false;  This.concat  =  concat?  true  :  false;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat?    true    :    false;    This.concat  =  concat?  true  :  false;	  	non-compiled	[CE]  cannot  find  symbol  This	4	None	add
307	[BUG]  [BUGGY]  this.concat  =  concat?  true  :  false;  if(concat)  {  this.concat  =  concat?  true  :  false;  }  else  {  PhonemeBuilder  phonemeBuilder  =  null;  }  [CE]  variable  concat  might  already  have  been  assigned  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  true  :  false;  if(concat)  {  this.concat  =  concat?  true  :  false;  }  else  {  PhonemeBuilder  phonemeBuilder  =  null;  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat?    true    :    false;    if(concat)  {  this.concat  =  concat?  true  :  false;  }  else  {  PhonemeBuilder  phonemeBuilder  =  null;  }	  	non-compiled	[CE]  variable  concat  might  already  have  been  assigned	4	None	add
308	[BUG]  [BUGGY]  this.concat  =  concat  ||(concat  instanceof  RuleType)?((  RuleType)concat).instance  :  null;  [CE]  unexpected  type  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||(concat  instanceof  RuleType)?((  RuleType)concat).instance  :  null;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  ||(concat  instanceof  RuleType)?((  RuleType)concat).instance  :  null;	  this.concat    =    concat    ||!concat;    	non-compiled	[CE]  unexpected  type	9	None	replace
309	[BUG]  [BUGGY]  this.concat  =  concat  ||(concat  instanceof  RuleType)?((  RuleType)concat).getName()  :  nameType;  [CE]  unexpected  type  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||(concat  instanceof  RuleType)?((  RuleType)concat).getName()  :  nameType;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  ||(concat  instanceof  RuleType)?((  RuleType)concat).getName()  :  nameType;	  this.concat    =    concat    ||!concat;    	non-compiled	[CE]  unexpected  type	9	None	replace
310	[BUG]  [BUGGY]  this.concat  =  concat  ||(concat  instanceof  NameType)?((  NameType)concat).getName()  :  nameType;  [CE]  unexpected  type  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  ||(concat  instanceof  NameType)?((  NameType)concat).getName()  :  nameType;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  ||(concat  instanceof  NameType)?((  NameType)concat).getName()  :  nameType;	  this.concat    =    concat    ||!concat;    	non-compiled	[CE]  unexpected  type	9	None	replace
311	[BUG]  [BUGGY]  this.concat  =  concat  &  |!concat;  [CE]  illegal  start  of  expression  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &  |!concat;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &  |!concat;	  this.concat    =    concat    ||!concat;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
312	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(0);  [CE]  cannot  find  symbol  phonemeBuilder  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(0);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(0);	      this.phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol  phonemeBuilder	33	None	replace
313	[BUG]  [BUGGY]  this.concat  =  concat  &&  regType.isAssignableFrom(concat);  [CE]  cannot  find  symbol  regType  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  regType.isAssignableFrom(concat);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  regType.isAssignableFrom(concat);	  this.concat    =    concat    &&    ruleType.isAssignableFrom(concat);    	non-compiled	[CE]  cannot  find  symbol  regType	7	None	replace
314	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  RuleType.MAX_PHONEMS;  [CE]  cannot  find  symbol  MAX_PHONEMS  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  RuleType.MAX_PHONEMS;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  <  RuleType.MAX_PHONEMS;	  this.concat    =    concat    &&    maxPhonemes    <    RuleType.MAX_PHONEMES;    	non-compiled	[CE]  cannot  find  symbol  MAX_PHONEMS	29	None	replace
315	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  RuleType.MAX_PARAM;  [CE]  cannot  find  symbol  MAX_PARAM  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  RuleType.MAX_PARAM;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  <  RuleType.MAX_PARAM;	  this.concat    =    concat    &&    maxPhonemes    <    RuleType.MAX_PHONEMES;    	non-compiled	[CE]  cannot  find  symbol  MAX_PARAM	29	None	replace
316	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  boolean  concat  =  concat  &&  nameType.equals(ruleType.getName());  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  boolean  concat  =  concat  &&  nameType.equals(ruleType.getName());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.getName());    boolean  concat  =  concat  &&  nameType.equals(ruleType.getName());	  	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	39	None	add
317	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  NameType  nameType  =  ruleType.getName()  &&  nameType.equals(ruleType.getName());  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  NameType  nameType  =  ruleType.getName()  &&  nameType.equals(ruleType.getName());  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.getName());    NameType  nameType  =  ruleType.getName()  &&  nameType.equals(ruleType.getName());  this.concat  =  concat  &&  nameType.equals(ruleType.getName());	  	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	39	None	add
318	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  }  else  {  nameType  =  ruleType.getName();  }  [CE]  incompatible  types  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  }  else  {  nameType  =  ruleType.getName();  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.getName());    if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType.getName());  }  else  {  nameType  =  ruleType.getName();  }	  	non-compiled	[CE]  incompatible  types	39	None	add
319	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  ruleType.MAX_PHONEMES;  [CE]  cannot  find  symbol  MAX_PHONEMES  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  <  ruleType.MAX_PHONEMES;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  <  ruleType.MAX_PHONEMES;	  this.concat    =    concat    &&    maxPhonemes    <    ruleType.maxPhonemes;    	non-compiled	[CE]  cannot  find  symbol  MAX_PHONEMES	28	None	replace
320	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhonemes  >=  ruleType.maxPhonemes;  [CE]  cannot  find  symbol  maxPhonemes  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhonemes  >=  ruleType.maxPhonemes;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhonemes  >=  ruleType.maxPhonemes;	  this.concat    =    concat    &&    maxPhonemes    <    ruleType.maxPhonemes;    	non-compiled	[CE]  cannot  find  symbol  maxPhonemes	28	None	replace
321	[BUG]  [BUGGY]  this.concat  =  concat  &&  maxPhoneMES  <  ruleType.maxPhonemes;  [CE]  cannot  find  symbol  maxPhoneMES  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  maxPhoneMES  <  ruleType.maxPhonemes;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  maxPhoneMES  <  ruleType.maxPhonemes;	  this.concat    =    concat    &&    maxPhonemes    <    ruleType.maxPhonemes;    	non-compiled	[CE]  cannot  find  symbol  maxPhoneMES	28	None	replace
322	[BUG]  [BUGGY]  NameType  nameType  =  NAME_PREFIXES.getRawClass();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  NAME_PREFIXES.getRawClass();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  NAME_PREFIXES.getRawClass();	      NameType    nameType    =    nameType.getRawClass();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	22	None	replace
323	[BUG]  [BUGGY]  NameType  nameType  =  RuleType.class.getRawClass();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  RuleType.class.getRawClass();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  RuleType.class.getRawClass();	      NameType    nameType    =    nameType.getRawClass();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	22	None	replace
324	[BUG]  [BUGGY]  NameType  nameType  =  RuleType.getRawClass();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  RuleType.getRawClass();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  RuleType.getRawClass();	      NameType    nameType    =    nameType.getRawClass();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	22	None	replace
325	[BUG]  [BUGGY]  NameType  nameType  =  titleType.getRawClass();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  titleType.getRawClass();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  titleType.getRawClass();	      NameType    nameType    =    nameType.getRawClass();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	22	None	replace
326	[BUG]  [BUGGY]  NameType  nameType  =  NAME_PREFIXES.getRuleType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  NAME_PREFIXES.getRuleType();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  NAME_PREFIXES.getRuleType();	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	27	None	replace
327	[BUG]  [BUGGY]  NameType  nameType  =  titleType.getRuleType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  titleType.getRuleType();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  titleType.getRuleType();	      NameType    nameType    =    nameType.getRuleType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	27	None	replace
328	[BUG]  [BUGGY]  NameType  nameType  =  NAME_PREFIXES.getName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  NAME_PREFIXES.getName();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  NAME_PREFIXES.getName();	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	15	None	replace
329	[BUG]  [BUGGY]  NameType  nameType  =  RuleType.NAME_PREFIXES.getName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  RuleType.NAME_PREFIXES.getName();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  RuleType.NAME_PREFIXES.getName();	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	15	None	replace
330	[BUG]  [BUGGY]  NameType  nameType  =  RuleType.class.getName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  RuleType.class.getName();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  RuleType.class.getName();	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	15	None	replace
331	[BUG]  [BUGGY]  NameType  nameType  =  titleType.getName();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  titleType.getName();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  titleType.getName();	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	15	None	replace
332	[BUG]  [BUGGY]  NameType  nameType  =  RuleType.newInstance(null,  ruleType.getName());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  RuleType.newInstance(null,  ruleType.getName());  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  RuleType.newInstance(null,  ruleType.getName());	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	15	None	replace
333	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.equals(defaultRules);  [CE]  cannot  find  symbol  defaultRules  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.equals(defaultRules);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.equals(defaultRules);	  this.concat    =    concat    &&    nameType.equals(ruleType);    	non-compiled	[CE]  cannot  find  symbol  defaultRules	37	None	replace
334	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType,  nameType);  [CE]  no  suitable  method  found  for  equals(RuleType,NameType)  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType,  nameType);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  nameType.equals(ruleType,  nameType);	  this.concat    =    concat    &&    nameType.equals(ruleType);    	non-compiled	[CE]  no  suitable  method  found  for  equals(RuleType,NameType)	37	None	replace
335	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.startsWith(ruleType);  [CE]  cannot  find  symbol  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.startsWith(ruleType);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  nameType.startsWith(ruleType);	  this.concat    =    concat    &&    nameType.equals(ruleType);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
336	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  NameType  nameType  =  nameType.toString();  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  NameType  nameType  =  nameType.toString();  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.toString());    NameType  nameType  =  nameType.toString();  this.concat  =  concat  &&  nameType.equals(ruleType.toString());	  	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	42	None	add
337	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  NameType  nameType  =  nameType.toString()  &&  nameType.equals(ruleType.toString());  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  NameType  nameType  =  nameType.toString()  &&  nameType.equals(ruleType.toString());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.toString());    NameType  nameType  =  nameType.toString()  &&  nameType.equals(ruleType.toString());	  	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	42	None	add
338	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  boolean  concat  =  concat  &&  nameType.equals(ruleType.toString());  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  boolean  concat  =  concat  &&  nameType.equals(ruleType.toString());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.toString());    boolean  concat  =  concat  &&  nameType.equals(ruleType.toString());	  	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	42	None	add
339	[BUG]  [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  }  else  {  nameType  =  ruleType.toString();  }  [CE]  incompatible  types  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  }  else  {  nameType  =  ruleType.toString();  }  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat    =    concat    &&    nameType.equals(ruleType.toString());    if(concat)  {  this.concat  =  concat  &&  nameType.equals(ruleType.toString());  }  else  {  nameType  =  ruleType.toString();  }	  	non-compiled	[CE]  incompatible  types	42	None	add
340	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.isConstructor()?  nameType  :  ruleType.name;  [CE]  cannot  find  symbol  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.isConstructor()?  nameType  :  ruleType.name;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.isConstructor()?  nameType  :  ruleType.name;	  this.concat    =    concat    &&    nameType.equals(ruleType.name);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
341	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	this.concat  =  concat?  Boolean.TRUE  :  Boolean.FALSE;	  this.concat    =    concat?    true    :    false;    	compilable	  [FE]  ExceptionInInitializerError  	5	4	replace
342	[BUG]  [BUGGY]  this.concat  =  concat?  Boolean.TRUE  :  Boolean.FALSE;  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat?  Boolean.TRUE  :  Boolean.FALSE;	  this.concat    =    concat?    true    :    false;    	compilable	  [FE]  ExceptionInInitializerError  	5	4	replace
343	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  Boolean.FALSE  :  Boolean.TRUE;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	this.concat  =  concat?  Boolean.FALSE  :  Boolean.TRUE;	  this.concat    =    concat?    true    :    false;    	compilable	  [FE]  ExceptionInInitializerError  	5	4	replace
344	[BUG]  [BUGGY]  this.concat  =  concat?  Boolean.FALSE  :  Boolean.TRUE;  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  Boolean.FALSE  :  Boolean.TRUE;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat?  Boolean.FALSE  :  Boolean.TRUE;	  this.concat    =    concat?    true    :    false;    	compilable	  [FE]  ExceptionInInitializerError  	5	4	replace
345	[BUG]  [BUGGY]  this.concat  =  concat  &  true  :  false;  [CE]  ';'  expected  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &  true  :  false;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &  true  :  false;	  this.concat    =    concat?    true    :    false;    	non-compiled	[CE]  ';'  expected	5	None	replace
346	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  false  :  null;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	add	this.concat  =  concat?  false  :  null;	  this.concat    =    concat?    true    :    false;    	compilable	  [FE]  ExceptionInInitializerError  	5	4	replace
347	[BUG]  [BUGGY]  this.concat  =  concat?  false  :  null;  [FE]  ExceptionInInitializerError  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  false  :  null;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat?  false  :  null;	  this.concat    =    concat?    true    :    false;    	compilable	  [FE]  ExceptionInInitializerError  	5	4	replace
348	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.isInstance(config);  [CE]  cannot  find  symbol  config  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.isInstance(config);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.isInstance(config);	  this.concat    =    concat    &&    ruleType.isInstance(concat);    	non-compiled	[CE]  cannot  find  symbol  config	11	None	replace
349	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.isInstance(defaultRules);  [CE]  cannot  find  symbol  defaultRules  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.isInstance(defaultRules);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.isInstance(defaultRules);	  this.concat    =    concat    &&    ruleType.isInstance(concat);    	non-compiled	[CE]  cannot  find  symbol  defaultRules	11	None	replace
350	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.isInstance(nameType);  [CE]  cannot  find  symbol  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.isInstance(nameType);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.isInstance(nameType);	  this.concat    =    concat    &&    ruleType.isInstance(concat);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
351	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  callType);  [CE]  cannot  find  symbol  callType  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  callType);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  callType);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  cannot  find  symbol  callType	23	None	replace
352	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.toNameType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.toNameType();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.toNameType();	      NameType    nameType    =    ruleType.getName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	14	None	replace
353	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  PhonemeBuilder.DEFAULT_MAX_PHONEMES);  [CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  PhonemeBuilder.DEFAULT_MAX_PHONEMES);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  PhonemeBuilder.DEFAULT_MAX_PHONEMES);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES	24	None	replace
354	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  PhonemeBuilder.DEFAULT_PHONEMES);  [CE]  cannot  find  symbol  DEFAULT_PHONEMES  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  PhonemeBuilder.DEFAULT_PHONEMES);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(nameType,  PhonemeBuilder.DEFAULT_PHONEMES);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_PHONEMES	24	None	replace
355	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(ruleType,  PhonemeBuilder.DEFAULT_MAX_PHONEMES);  [CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(ruleType,  PhonemeBuilder.DEFAULT_MAX_PHONEMES);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	PhonemeBuilder  phonemeBuilder  =  PhonemeBuilder.instance(ruleType,  PhonemeBuilder.DEFAULT_MAX_PHONEMES);	      PhonemeBuilder    phonemeBuilder    =    PhonemeBuilder.instance();    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_MAX_PHONEMES	24	None	replace
356	[BUG]  [BUGGY]  this.concat  =  concat  &&  ruleType.equals(defaultRules.getName());  [CE]  cannot  find  symbol  defaultRules  [FE]    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  ruleType.equals(defaultRules.getName());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  ruleType.equals(defaultRules.getName());	  this.concat    =    concat    &&    nameType.equals(ruleType.getName());    	non-compiled	[CE]  cannot  find  symbol  defaultRules	40	None	replace
357	[BUG]  [BUGGY]  this.concat  =  concat  &&  rules.equals(ruleType.getName());  [CE]  cannot  find  symbol  rules  [FE]      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &&  rules.equals(ruleType.getName());  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &&  rules.equals(ruleType.getName());	  this.concat    =    concat    &&    nameType.equals(ruleType.getName());    	non-compiled	[CE]  cannot  find  symbol  rules	40	None	replace
358	[BUG]  [BUGGY]  this.concat  =  concat  &  maxPhonemes);  [CE]  ';'  expected  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &  maxPhonemes);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &  maxPhonemes);	  this.concat    =    concat,    maxPhonemes);    	non-compiled	[CE]  ';'  expected	38	None	replace
359	[BUG]  [BUGGY]  this.concat  =  concat,  maxPhonemes  -  2);  [CE]  ';'  expected  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat,  maxPhonemes  -  2);  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat,  maxPhonemes  -  2);	  this.concat    =    concat,    maxPhonemes);    	non-compiled	[CE]  ';'  expected	38	None	replace
360	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getNameInfo();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.getNameInfo();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.getNameInfo();	      NameType    nameType    =    ruleType.getReferenceName();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	18	None	replace
361	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getNameType(null);  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.getNameType(null);  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.getNameType(null);	      NameType    nameType    =    ruleType.getNameType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	13	None	replace
362	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.newNameType();  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  NameType  nameType  =  ruleType.newNameType();  [BUGGY]    this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	NameType  nameType  =  ruleType.newNameType();	      NameType    nameType    =    ruleType.getNameType();    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine(NameType,RuleType,boolean,int)	13	None	replace
363	[BUG]  [BUGGY]  this.concat  =  concat  &  1;  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat  &  1;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat  &  1;	  this.concat    =    concat    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	1	None	replace
364	[BUG]  [BUGGY]  this.concat  =  concat?  concat  +  1  :  0,  maxPhonemes;  [CE]  ';'  expected  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;    [BUGGY]  this.concat  =  concat?  concat  +  1  :  0,  maxPhonemes;  [BUGGY]    this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	316	316	4	replace	this.concat  =  concat?  concat  +  1  :  0,  maxPhonemes;	  this.concat    =    concat    +    1;    	non-compiled	[CE]  ';'  expected	1	None	replace
