bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.ruleType  =  ruleType;  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.ruleType  =  ruleType;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  ruleType;	  this.ruleType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
2	[BUG]  [BUGGY]  this.ruleType;  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.ruleType;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType;	  this.ruleType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
3	[BUG]  [BUGGY]  this.ruleType  =  RuleType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.ruleType  =  RuleType.NAME_PREFIXES;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  RuleType.NAME_PREFIXES;	  this.ruleType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
4	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getSimpleName());  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getSimpleName());  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getSimpleName());	  this.ruleType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
5	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getRawClass(),  ruleType.getRawClass());  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.ruleType  =  new  RuleType(nameType.getRawClass(),  ruleType.getRawClass());  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getRawClass(),  ruleType.getRawClass());	  this.ruleType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
6	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.toString(),  ruleType.toString());  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.ruleType  =  new  RuleType(nameType.toString(),  ruleType.toString());  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.toString(),  ruleType.toString());	  this.ruleType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
7	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getParameterTypes());  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getParameterTypes());  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getParameterTypes());	  this.ruleType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
8	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getSimpleName());  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getSimpleName());  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getSimpleName());	  this.ruleType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
9	[BUG]  [BUGGY]  nameType,  ruleType,  concat,  [CE]  <identifier>  expected  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  nameType,  ruleType,  concat,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat,	      this.nameType,    nameType,    concat,    	non-compiled	[CE]  <identifier>  expected	10	None	replace
10	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(nameType,  ruleType,  concat,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,	      this.nameType,    nameType,    concat,    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
11	[BUG]  [BUGGY]  This.nameType,  nameType,  concat,  [CE]  <identifier>  expected  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  This.nameType,  nameType,  concat,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType,  nameType,  concat,	      this.nameType,    nameType,    concat,    	non-compiled	[CE]  <identifier>  expected	10	None	replace
12	[BUG]  [BUGGY]  this.nameType,  nameType,  Concat,  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType,  nameType,  Concat,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  Concat,	      this.nameType,    nameType,    concat,    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
13	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  NAME_PREFIXES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
14	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
15	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
16	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  nameType);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  nameType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  nameType);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
17	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
18	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
19	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
20	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  MAX_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  MAX_PHONEMES,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  MAX_PHONEMES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
21	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat);  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  ruleType,  concat);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat);	      	non-compiled	[CE]  <identifier>  expected	9	None	replace
22	[BUG]  [BUGGY]  NameType  nameType,  ruleType.getSimpleName());  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  ruleType.getSimpleName());  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.getSimpleName());	      	non-compiled	[CE]  <identifier>  expected	9	None	replace
23	[BUG]  [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes;  [CE]  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  ruleType.maxPhonemes;	  final    int    maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  	26	None	replace
24	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  -  1;  [CE]  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  -  1;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes  -  1;	  final    int    maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  	26	None	replace
25	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  +  1;  [CE]  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  +  1;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes  +  1;	  final    int    maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  	26	None	replace
26	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  -  2;  [CE]  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  -  2;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes  -  2;	  final    int    maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  	26	None	replace
27	[BUG]  [BUGGY]  this.maxPhonemes  =  nameType.maxPhonemes;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.maxPhonemes  =  nameType.maxPhonemes;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  nameType.maxPhonemes;	  final    int    maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
28	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  /  2;  [CE]  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  /  2;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes  /  2;	  final    int    maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  	26	None	replace
29	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  &  1;  [CE]  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  &  1;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes  &  1;	  final    int    maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  	26	None	replace
30	[BUG]  [BUGGY]  this.nameType  =  nameType.getName(),  concat;  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType.getName(),  concat;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getName(),  concat;	  this.nameType    =    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
31	[BUG]  [BUGGY]  this.nameType  =  nameType.getName()  +  1;  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType.getName()  +  1;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getName()  +  1;	  this.nameType    =    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
32	[BUG]  [BUGGY]  this.nameType  =  ruleType.getName();  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  ruleType.getName();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType.getName();	  this.nameType    =    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
33	[BUG]  [BUGGY]  this.nameType  =  nameType.getSimpleName();  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType.getSimpleName();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getSimpleName();	  this.nameType    =    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
34	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  null;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  null;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getName()  :  null;	  this.nameType    =    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
35	[BUG]  [BUGGY]  this.nameType  =  nameType.toName();  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType.toName();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toName();	  this.nameType    =    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
36	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  : "null ";  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  : "null ";  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getName()  : "null ";	  this.nameType    =    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
37	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  [CE]  <identifier>  expected  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.maxPhonemes,	      NameType    nameType,    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	12	None	replace
38	[BUG]  [BUGGY]  NameType  nameType,  ruleType.nameType,  concat,  [CE]  <identifier>  expected  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  ruleType.nameType,  concat,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.nameType,  concat,	      NameType    nameType,    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	12	None	replace
39	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.numberPhonemes,	      NameType    nameType,    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	12	None	replace
40	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat;  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  ruleType,  concat;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat;	      NameType    nameType,    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	12	None	replace
41	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  ruleType,  concat  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat	      NameType    nameType,    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	12	None	replace
42	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  boolean  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes,  final  boolean  concat)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  boolean  concat)  {	  final    int    maxPhonemes,    boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	5	None	replace
43	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  int  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes,  final  int  concat)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  int  concat)  {	  final    int    maxPhonemes,    boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	5	None	replace
44	[BUG]  [BUGGY]  final  int  maxPhonemes,  String  nameType,  boolean  concat)  {  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes,  String  nameType,  boolean  concat)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  String  nameType,  boolean  concat)  {	  final    int    maxPhonemes,    boolean    concat)    {    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	5	None	replace
45	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  Integer  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes,  final  Integer  concat)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  Integer  concat)  {	  final    int    maxPhonemes,    boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	5	None	replace
46	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  String  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes,  final  String  concat)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  String  concat)  {	  final    int    maxPhonemes,    boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	5	None	replace
47	[BUG]  [BUGGY]  final  int  maxPhonemes,  long  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes,  long  concat)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  long  concat)  {	  final    int    maxPhonemes,    boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	5	None	replace
48	[BUG]  [BUGGY]  final  int  maxPhonemes,  Integer  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes,  Integer  concat)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  Integer  concat)  {	  final    int    maxPhonemes,    boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	5	None	replace
49	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  concat)  {  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes,  final  concat)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  concat)  {	  final    int    maxPhonemes,    boolean    concat)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
50	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  boolean  concat);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  RuleType  ruleType,  boolean  concat);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  boolean  concat);	      NameType    nameType,    RuleType    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
51	[BUG]  [BUGGY]  nameType,  ruleType,  concat);  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  nameType,  ruleType,  concat);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat);	      NameType    nameType,    RuleType    ruleType,    concat);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
52	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  Concat);  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  RuleType  ruleType,  Concat);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  Concat);	      NameType    nameType,    RuleType    ruleType,    concat);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
53	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat,  null);  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat,  null);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  concat,  null);	      NameType    nameType,    RuleType    ruleType,    concat);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
54	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat,  false);  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat,  false);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  concat,  false);	      NameType    nameType,    RuleType    ruleType,    concat);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
55	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat,  this);  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat,  this);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  concat,  this);	      NameType    nameType,    RuleType    ruleType,    concat);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
56	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat)  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat)  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  concat)	      NameType    nameType,    RuleType    ruleType,    concat);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
57	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES);  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
58	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  NAME_PREFIXES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
59	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
60	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
61	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
62	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PARENTHESES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PARENTHESES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PARENTHESES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
63	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
64	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
65	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
66	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  false,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
67	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0)  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  0)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0)  {	  this(nameType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
68	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  nameType)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  nameType)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  nameType)  {	  this(nameType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
69	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  true,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  true,  maxPhonemes)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  true,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
70	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
71	[BUG]  [BUGGY]  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.maxPhonemes  =  maxPhonemes;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  maxPhonemes;	  super(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
72	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType;  this.maxPhonemes  =  maxPhonemes;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.maxPhonemes  =  maxPhonemes;	  super(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
73	[BUG]  [BUGGY]  super(nameType);  this.maxPhonemes  =  concat;  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(nameType);  this.maxPhonemes  =  concat;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType);  this.maxPhonemes  =  concat;	  super(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
74	[BUG]  [BUGGY]  super(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;	  super(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
75	[BUG]  [BUGGY]  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;	  super(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
76	[BUG]  [BUGGY]  this.minPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.minPhonemes  =  maxPhonemes;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.minPhonemes  =  maxPhonemes;	  super(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
77	[BUG]  [BUGGY]  this.phonemeBuilder  =  new  PhonemeBuilder(nameType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.phonemeBuilder  =  new  PhonemeBuilder(nameType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  new  PhonemeBuilder(nameType);  this.maxPhonemes  =  maxPhonemes;	  super(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
78	[BUG]  [BUGGY]  this.maxPhonemes  =  concat;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.maxPhonemes  =  concat;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  concat;	  super(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
79	[BUG]  [BUGGY]  this.nameType  =  ruleType.toString();  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  ruleType.toString();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType.toString();	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
80	[BUG]  [BUGGY]  this.nameType  =  nameType.toLowerCase();  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType.toLowerCase();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toLowerCase();	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
81	[BUG]  [BUGGY]  this.nameType  =  nameType.restrictByNotNullOrUndefined();  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType.restrictByNotNullOrUndefined();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.restrictByNotNullOrUndefined();	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
82	[BUG]  [BUGGY]  this.nameType  =  nameType.toString(),  concat;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType.toString(),  concat;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toString(),  concat;	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
83	[BUG]  [BUGGY]  this.nameType  =  nameType.substring(0,  nameType.length()  -  1);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType.substring(0,  nameType.length()  -  1);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.substring(0,  nameType.length()  -  1);	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
84	[BUG]  [BUGGY]  this.nameType  =  nameType.toUpperCase();  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType.toUpperCase();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toUpperCase();	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
85	[BUG]  [BUGGY]  this.nameType  =  nameType.toString()  +  1;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType.toString()  +  1;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toString()  +  1;	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
86	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  concat);  [CE]  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  concat);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  concat);	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  	20	None	replace
87	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName());  [CE]  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName());  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  new  NameType(nameType.getName());	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  	20	None	replace
88	[BUG]  [BUGGY]  NameType  nameType  =  nameType.getName(),  concat;  [CE]  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType  =  nameType.getName(),  concat;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  nameType.getName(),  concat;	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  	20	None	replace
89	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getSimpleName();  [CE]  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType  =  ruleType.getSimpleName();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getSimpleName();	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  	20	None	replace
90	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRawName();  [CE]  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType  =  ruleType.getRawName();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getRawName();	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  	20	None	replace
91	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getReferenceName();  [CE]  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType  =  ruleType.getReferenceName();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getReferenceName();	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  	20	None	replace
92	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }	      NameType    nameType)    {    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
93	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }	      NameType    nameType)    {    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
94	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(!concat)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(!concat)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(!concat)  {  throw  new  IllegalArgumentException( " ");  }	      NameType    nameType)    {    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
95	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }	      NameType    nameType)    {    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
96	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( " ");  }	      NameType    nameType)    {    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
97	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }	      NameType    nameType)    {    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
98	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType)  {  this.nameType  =  ruleType;  }  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  ruleType;  }	      NameType    nameType)    {    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
99	[BUG]  [BUGGY]  nameType)  {  this.nameType  =  nameType;  }  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  nameType)  {  this.nameType  =  nameType;  }  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType)  {  this.nameType  =  nameType;  }	      NameType    nameType)    {    this.nameType    =    nameType;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
100	[BUG]  [BUGGY]  super(nameType,  ruleType);  this.ruleType  =  ruleType;  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(nameType,  ruleType);  this.ruleType  =  ruleType;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType);  this.ruleType  =  ruleType;	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
101	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType;  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.ruleType  =  ruleType;	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
102	[BUG]  [BUGGY]  NameType  nameType  =  nameType.getNameType();  this.ruleType  =  ruleType;  [CE]  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType  =  nameType.getNameType();  this.ruleType  =  ruleType;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  nameType.getNameType();  this.ruleType  =  ruleType;	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  	27	None	replace
103	[BUG]  [BUGGY]  NameType  nameType  =  nameType.getName();  this.ruleType  =  ruleType;  [CE]  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType  =  nameType.getName();  this.ruleType  =  ruleType;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  nameType.getName();  this.ruleType  =  ruleType;	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  	27	None	replace
104	[BUG]  [BUGGY]  NameType  nameType  =  nameType.toString();  this.ruleType  =  ruleType;  [CE]  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType  =  nameType.toString();  this.ruleType  =  ruleType;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  nameType.toString();  this.ruleType  =  ruleType;	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  	27	None	replace
105	[BUG]  [BUGGY]  super();  this.ruleType  =  ruleType;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super();  this.ruleType  =  ruleType;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super();  this.ruleType  =  ruleType;	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
106	[BUG]  [BUGGY]  super(nameType);  this.ruleType  =  ruleType,  concat;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(nameType);  this.ruleType  =  ruleType,  concat;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType);  this.ruleType  =  ruleType,  concat;	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
107	[BUG]  [BUGGY]  this.nameType,  ruleType,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType,  ruleType,  maxPhonemes)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  maxPhonemes)  {	  final    boolean    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
108	[BUG]  [BUGGY]  (final  boolean  maxPhonemes))  {  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  (final  boolean  maxPhonemes))  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	(final  boolean  maxPhonemes))  {	  final    boolean    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
109	[BUG]  [BUGGY]  this.phonemeBuilder,  nameType,  ruleType,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.phonemeBuilder,  nameType,  ruleType,  maxPhonemes)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder,  nameType,  ruleType,  maxPhonemes)  {	  final    boolean    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
110	[BUG]  [BUGGY]  this.ruleType,  ruleType,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.ruleType,  ruleType,  maxPhonemes)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  ruleType,  maxPhonemes)  {	  final    boolean    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
111	[BUG]  [BUGGY]  this.lang,  nameType,  ruleType,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.lang,  nameType,  ruleType,  maxPhonemes)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.lang,  nameType,  ruleType,  maxPhonemes)  {	  final    boolean    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
112	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes));  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes));  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes));	  final    boolean    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
113	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  true);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  true);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  true);	      this(nameType,    ruleType,    concat,    false);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
114	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  false,  maxPhonemes);	      this(nameType,    ruleType,    concat,    false);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
115	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  null);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null);	      this(nameType,    ruleType,    concat,    false);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
116	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  true);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType,  ruleType,  concat,  true);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  true);	      this(nameType,    ruleType,    concat,    false);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
117	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  false,  null);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  false,  null);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  false,  null);	      this(nameType,    ruleType,    concat,    false);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
118	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  false);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(nameType,  ruleType,  concat,  false);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  false);	      this(nameType,    ruleType,    concat,    false);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
119	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  false,  nameType);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  false,  nameType);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  false,  nameType);	      this(nameType,    ruleType,    concat,    false);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
120	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType,  ruleType,  concat);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat);	      this.nameType,    nameType,    concat);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
121	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType,  nameType,  concat,  DEFAULT_MAX_PHONEMES);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  DEFAULT_MAX_PHONEMES);	      this.nameType,    nameType,    concat);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
122	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType,  nameType,  concat,  NAME_PREFIXES);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  NAME_PREFIXES);	      this.nameType,    nameType,    concat);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
123	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  null);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType,  nameType,  concat,  null);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  null);	      this.nameType,    nameType,    concat);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
124	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType,  nameType,  concat,  maxPhonemes);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  maxPhonemes);	      this.nameType,    nameType,    concat);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
125	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  NAME_PREFIXES)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  NAME_PREFIXES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
126	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  nameType)  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  nameType)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  nameType)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
127	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
128	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
129	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i,  maxPhonemes)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
130	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
131	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
132	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  false)  {  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  false)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  false)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
133	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType,  ruleType,  concat;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat;	      this.nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
134	[BUG]  [BUGGY]  This.nameType,  ruleType,  concat,  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  This.nameType,  ruleType,  concat,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType,  ruleType,  concat,	      this.nameType,    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	16	None	replace
135	[BUG]  [BUGGY]  this.nameType,  ruleType,  Concat,  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType,  ruleType,  Concat,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  Concat,	      this.nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
136	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat;  [CE]  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getName(),  concat;	      NameType    nameType    =    ruleType.getName();    	non-compiled	[CE]  	21	None	replace
137	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getQualifiedName();  [CE]  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType  =  ruleType.getQualifiedName();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getQualifiedName();	      NameType    nameType    =    ruleType.getName();    	non-compiled	[CE]  	21	None	replace
138	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getFunctionName();  [CE]  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType  =  ruleType.getFunctionName();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getFunctionName();	      NameType    nameType    =    ruleType.getName();    	non-compiled	[CE]  	21	None	replace
139	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getName()  +  1;  [CE]  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType  =  ruleType.getName()  +  1;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getName()  +  1;	      NameType    nameType    =    ruleType.getName();    	non-compiled	[CE]  	21	None	replace
140	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat);  [CE]  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getName(),  concat);	      NameType    nameType    =    ruleType.getName();    	non-compiled	[CE]  	21	None	replace
141	[BUG]  [BUGGY]  this.nameType  =  ruleType.getReferenceName();  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  ruleType.getReferenceName();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType.getReferenceName();	      this.nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
142	[BUG]  [BUGGY]  this.nameType  =  nameType.getRawName();  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType.getRawName();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getRawName();	      this.nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
143	[BUG]  [BUGGY]  this.nameType  =  nameType.getReferenceName(),  concat;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType.getReferenceName(),  concat;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getReferenceName(),  concat;	      this.nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
144	[BUG]  [BUGGY]  this.nameType  =  nameType.getReferenceName()  +  1;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType.getReferenceName()  +  1;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getReferenceName()  +  1;	      this.nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
145	[BUG]  [BUGGY]  this.nameType  =  nameType.getDeclaredName();  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType.getDeclaredName();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getDeclaredName();	      this.nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
146	[BUG]  [BUGGY]  this.nameType  =  nameType  {  null?  NameType.NAME_PREFIXES  :  nameType;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType  {  null?  NameType.NAME_PREFIXES  :  nameType;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  {  null?  NameType.NAME_PREFIXES  :  nameType;	      this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
147	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :  nameType;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :  nameType;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?  nameType  :  nameType;	      this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
148	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  nameType  :  nameType;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  nameType  :  nameType;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  NameType?  nameType  :  nameType;	      this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
149	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).getName();  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).getName();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).getName();	      this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
150	[BUG]  [BUGGY]  this.nameType  =  nameType,  concat;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType,  concat;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType,  concat;	      this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
151	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :  NameType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :  NameType.NAME_PREFIXES;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?  nameType  :  NameType.NAME_PREFIXES;	      this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
152	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?((  RuleType)nameType).getName()  :  nameType;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?((  RuleType)nameType).getName()  :  nameType;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?((  RuleType)nameType).getName()  :  nameType;	      this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
153	[BUG]  [BUGGY]  this.nameType  =  NameType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  NameType.NAME_PREFIXES;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  NameType.NAME_PREFIXES;	      this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
154	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat);	      super(nameType,    ruleType);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
155	[BUG]  [BUGGY]  super(nameType.getName(),  ruleType);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(nameType.getName(),  ruleType);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType.getName(),  ruleType);	      super(nameType,    ruleType);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
156	[BUG]  [BUGGY]  super(nameType,  ruleType.concat);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(nameType,  ruleType.concat);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.concat);	      super(nameType,    ruleType);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
157	[BUG]  [BUGGY]  super(ruleType,  nameType);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(ruleType,  nameType);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(ruleType,  nameType);	      super(nameType,    ruleType);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
158	[BUG]  [BUGGY]  setRuleType(nameType,  ruleType);  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  setRuleType(nameType,  ruleType);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	setRuleType(nameType,  ruleType);	      super(nameType,    ruleType);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
159	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  final  int  maxPhonemes,  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  RuleType  ruleType,  final  int  maxPhonemes,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  final  int  maxPhonemes,	      NameType    nameType,    RuleType    ruleType,    boolean    concat,    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
160	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  int  maxPhonemes,  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  RuleType  ruleType,  int  maxPhonemes,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  int  maxPhonemes,	      NameType    nameType,    RuleType    ruleType,    boolean    concat,    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
161	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  final  concat,  [CE]  <identifier>  expected  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  RuleType  ruleType,  final  concat,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  final  concat,	      NameType    nameType,    RuleType    ruleType,    boolean    concat,    	non-compiled	[CE]  <identifier>  expected	19	None	replace
162	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  Concat,  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  RuleType  ruleType,  Concat,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  Concat,	      NameType    nameType,    RuleType    ruleType,    boolean    concat,    	non-compiled	[CE]  <identifier>  expected	19	None	replace
163	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  final  boolean  concat,  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  RuleType  ruleType,  final  boolean  concat,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  final  boolean  concat,	      NameType    nameType,    RuleType    ruleType,    boolean    concat,    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
164	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  Boolean  concat,  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  RuleType  ruleType,  Boolean  concat,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  Boolean  concat,	      NameType    nameType,    RuleType    ruleType,    boolean    concat,    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
165	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  null);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(nameType,  ruleType,  concat,  null);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  null);	  super(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
166	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  true);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(nameType,  ruleType,  concat,  true);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  true);	  super(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
167	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes);	  super(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
168	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(nameType,  ruleType,  concat,  NAME_PREFIXES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  NAME_PREFIXES);	  super(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
169	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  0);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(nameType,  ruleType,  concat,  0);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  0);	  super(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
170	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES);	  super(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
171	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES);	  super(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
172	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat  [CE]  <identifier>  expected  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  concat	      NameType    nameType,    RuleType    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	11	None	replace
173	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat;  [CE]  <identifier>  expected  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  concat;	      NameType    nameType,    RuleType    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	11	None	replace
174	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  finalRules,  [CE]  <identifier>  expected  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  RuleType  ruleType,  finalRules,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  finalRules,	      NameType    nameType,    RuleType    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	11	None	replace
175	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
176	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  maxPhonemes);	  this(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
177	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  0);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0);	  this(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
178	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
179	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
180	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  0);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  0);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  0);	  this(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
181	[BUG]  [BUGGY]  super(nameType,  concat);  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(nameType,  concat);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  concat);	  super(nameType);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
182	[BUG]  [BUGGY]  super(ruleType);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(ruleType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(ruleType);	  super(nameType);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
183	[BUG]  [BUGGY]  super(nameType.getName());  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(nameType.getName());  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType.getName());	  super(nameType);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
184	[BUG]  [BUGGY]  super(ruleType,  concat);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(ruleType,  concat);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(ruleType,  concat);	  super(nameType);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
185	[BUG]  [BUGGY]  super(nameType,  Concat);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(nameType,  Concat);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  Concat);	  super(nameType);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
186	[BUG]  [BUGGY]  final  int  maxPhonemes  =  ruleType.getMaxPhonemes();  [CE]  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes  =  ruleType.getMaxPhonemes();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  ruleType.getMaxPhonemes();	  final    int    maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  	24	None	replace
187	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  -  1;  [CE]  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  -  1;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.getMaxPhonemes()  -  1;	  final    int    maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  	24	None	replace
188	[BUG]  [BUGGY]  this.maxPhonemes  =  nameType.getMaxPhonemes();  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.maxPhonemes  =  nameType.getMaxPhonemes();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  nameType.getMaxPhonemes();	  final    int    maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
189	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  +  1;  [CE]  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  +  1;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.getMaxPhonemes()  +  1;	  final    int    maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  	24	None	replace
190	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  -  2;  [CE]  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  -  2;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.getMaxPhonemes()  -  2;	  final    int    maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  	24	None	replace
191	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  /  2;  [CE]  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  /  2;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.getMaxPhonemes()  /  2;	  final    int    maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  	24	None	replace
192	[BUG]  [BUGGY]  final  int  maxPhonemes  =  ruleType.getMinPhonemes();  [CE]  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes  =  ruleType.getMinPhonemes();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  ruleType.getMinPhonemes();	  final    int    maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  	24	None	replace
193	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.toNameType();  [CE]  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType  =  ruleType.toNameType();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.toNameType();	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  	20	None	replace
194	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getLanguage();  [CE]  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType  =  ruleType.getLanguage();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getLanguage();	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  	20	None	replace
195	[BUG]  [BUGGY]  NameType  nameType  =  rules.getName();  [CE]  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType  =  rules.getName();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  rules.getName();	      NameType    nameType    =    nameType.getName();    	non-compiled	[CE]  	20	None	replace
196	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  NameType  nameType)  {  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  boolean  maxPhonemes,  NameType  nameType)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  NameType  nameType)  {	  final    boolean    maxPhonemes)    {    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	23	None	replace
197	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  int  nameType)  {  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  boolean  maxPhonemes,  int  nameType)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  int  nameType)  {	  final    boolean    maxPhonemes)    {    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	23	None	replace
198	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  String  nameType)  {  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  boolean  maxPhonemes,  String  nameType)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  String  nameType)  {	  final    boolean    maxPhonemes)    {    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	23	None	replace
199	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  Locale.getDefault())  {  [CE]  <identifier>  expected  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  boolean  maxPhonemes,  Locale.getDefault())  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  Locale.getDefault())  {	  final    boolean    maxPhonemes)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
200	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  RuleType  ruleType)  {  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  boolean  maxPhonemes,  RuleType  ruleType)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  RuleType  ruleType)  {	  final    boolean    maxPhonemes)    {    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine	23	None	replace
201	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  RuleType  nameType)  {  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  boolean  maxPhonemes,  RuleType  nameType)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  RuleType  nameType)  {	  final    boolean    maxPhonemes)    {    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	23	None	replace
202	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  nameType.getName();  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  nameType.getName();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getName()  :  nameType.getName();	  this.nameType    =    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
203	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  nameType.getName();  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  nameType.getName();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.getName()  :  nameType.getName();	  this.nameType    =    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
204	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  boolean  concat,  [CE]  <identifier>  expected  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  ruleType,  boolean  concat,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  boolean  concat,	      NameType    nameType,    RuleType    ruleType,    boolean    concat,    	non-compiled	[CE]  <identifier>  expected	19	None	replace
205	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  short  concat,  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  RuleType  ruleType,  short  concat,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  short  concat,	      NameType    nameType,    RuleType    ruleType,    boolean    concat,    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
206	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.nameType  =  nameType;  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType;  this.nameType  =  nameType;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.nameType  =  nameType;	      this.nameType,    nameType,    concat,    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
207	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat,  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat,	      this.nameType,    nameType,    concat,    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
208	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.nameType,  concat,  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType;  this.nameType,  concat,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.nameType,  concat,	      this.nameType,    nameType,    concat,    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
209	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
210	[BUG]  [BUGGY]  this.nameType  =  nameType.getName());  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType.getName());  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getName());	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
211	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
212	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
213	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  1);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  1);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  1);	  this(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
214	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
215	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
216	[BUG]  [BUGGY]  static  final  int  maxPhonemes  =  nameType.getMaxPhonemes();  [CE]  modifier  static  not  allowed  here  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  static  final  int  maxPhonemes  =  nameType.getMaxPhonemes();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  int  maxPhonemes  =  nameType.getMaxPhonemes();	  final    int    maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  modifier  static  not  allowed  here	24	None	replace
217	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  nameType);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(nameType,  ruleType,  concat,  nameType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  nameType);	  super(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
218	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PREFIXES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PREFIXES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_PREFIXES);	  super(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
219	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
220	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
221	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes  +  1);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes  +  1);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes  +  1);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
222	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType);  this.maxPhonemes  =  maxPhonemes;	  super(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
223	[BUG]  [BUGGY]  super(ruleType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(ruleType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(ruleType);  this.maxPhonemes  =  maxPhonemes;	  super(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
224	[BUG]  [BUGGY]  this(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;	  super(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
225	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  concat);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  concat);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  concat);  this.maxPhonemes  =  maxPhonemes;	  super(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
226	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType);	  super(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
227	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME_PREFIXES);  }  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME_PREFIXES);  }  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME_PREFIXES);  }	      NameType    nameType)    {    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
228	[BUG]  [BUGGY]  super(new  NameType(nameType,  ruleType),  concat);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(new  NameType(nameType,  ruleType),  concat);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(nameType,  ruleType),  concat);	      super(nameType,    ruleType);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
229	[BUG]  [BUGGY]  super(new  NameType(nameType),  ruleType);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(new  NameType(nameType),  ruleType);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(nameType),  ruleType);	      super(nameType,    ruleType);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
230	[BUG]  [BUGGY]  this(nameType,  ruleType);  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType);	  super(nameType);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
231	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  Concat);  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  ruleType,  Concat);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  Concat);	      NameType    nameType,    RuleType    ruleType,    concat);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
232	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType,  ruleType);  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.ruleType  =  new  RuleType(nameType,  ruleType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType,  ruleType);	  this.ruleType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
233	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType);  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.ruleType  =  new  RuleType(nameType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType);	  this.ruleType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
234	[BUG]  [BUGGY]  This.ruleType  =  ruleType;  [CE]  <identifier>  expected  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  This.ruleType  =  ruleType;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.ruleType  =  ruleType;	  this.ruleType    =    nameType;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
235	[BUG]  [BUGGY]  this.ruleType  = "ruleType ";  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.ruleType  = "ruleType ";  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  = "ruleType ";	  this.ruleType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
236	[BUG]  [BUGGY]  this.nameType  =  nameType.getLanguage();  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType.getLanguage();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getLanguage();	      this.nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
237	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getNameType();  [CE]  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType  =  ruleType.getNameType();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getNameType();	      NameType    nameType,    RuleType    ruleType,    concat,    	non-compiled	[CE]  	11	None	replace
238	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getFullName();  [CE]  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType  =  ruleType.getFullName();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getFullName();	      NameType    nameType    =    ruleType.getName();    	non-compiled	[CE]  	21	None	replace
239	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.toString()  :  nameType.toString();  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType!=  null?  nameType.toString()  :  nameType.toString();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.toString()  :  nameType.toString();	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
240	[BUG]  [BUGGY]  this.nameType  =  nameType.getNameType();  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType.getNameType();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getNameType();	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
241	[BUG]  [BUGGY]  this.nameType  =  nameType.toPlainString();  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType.toPlainString();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toPlainString();	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
242	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.ruleType,  concat,  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType;  this.ruleType,  concat,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.ruleType,  concat,	      this.nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
243	[BUG]  [BUGGY]  final  int  maxPhonemes,  String.valueOf(concat))  {  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes,  String.valueOf(concat))  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  String.valueOf(concat))  {	  final    int    maxPhonemes,    boolean    concat)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
244	[BUG]  [BUGGY]  final  int  maxPhonemes,  Integer.MAX_VALUE)  {  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes,  Integer.MAX_VALUE)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  Integer.MAX_VALUE)  {	  final    int    maxPhonemes,    boolean    concat)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
245	[BUG]  [BUGGY]  final  int  maxPhonemes,  int  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes,  int  concat)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  int  concat)  {	  final    int    maxPhonemes,    boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	5	None	replace
246	[BUG]  [BUGGY]  final  int  maxPhonemes,  finalRules)  {  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes,  finalRules)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  finalRules)  {	  final    int    maxPhonemes,    boolean    concat)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
247	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  DEFAULT_PHONEMES);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType,  nameType,  concat,  DEFAULT_PHONEMES);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  DEFAULT_PHONEMES);	      this.nameType,    nameType,    concat);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
248	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  0);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType,  nameType,  concat,  0);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  0);	      this.nameType,    nameType,    concat);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
249	[BUG]  [BUGGY]  if(nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  if(nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
250	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
251	[BUG]  [BUGGY]  if(nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  if(nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
252	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
253	[BUG]  [BUGGY]  if(nameType!=  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  if(nameType!=  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
254	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
255	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  +  2;  [CE]  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  +  2;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes  +  2;	  final    int    maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  	26	None	replace
256	[BUG]  [BUGGY]  static  final  int  maxPhonemes  =  nameType.maxPhonemes;  [CE]  modifier  static  not  allowed  here  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  static  final  int  maxPhonemes  =  nameType.maxPhonemes;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  int  maxPhonemes  =  nameType.maxPhonemes;	  final    int    maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  modifier  static  not  allowed  here	26	None	replace
257	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  -  4;  [CE]  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  -  4;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes  -  4;	  final    int    maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  	26	None	replace
258	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  false);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  false);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  false);	      this(nameType,    ruleType,    concat,    false);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
259	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  false);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  false);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  false);	      this(nameType,    ruleType,    concat,    false);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
260	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  maxPhonemes)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
261	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
262	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  Concat,  [CE]  <identifier>  expected  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  ruleType,  Concat,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  Concat,	      NameType    nameType,    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	12	None	replace
263	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  nameType;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  nameType;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  nameType;	      this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
264	[BUG]  [BUGGY]  this.nameType  =  NameType.DEFAULT_NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  NameType.DEFAULT_NAME_PREFIXES;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  NameType.DEFAULT_NAME_PREFIXES;	      this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
265	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).nameType;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).nameType;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).nameType;	      this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
266	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  nameType  :(NameType)nameType;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  nameType  :(NameType)nameType;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  NameType?  nameType  :(NameType)nameType;	      this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
267	[BUG]  [BUGGY]  this.nameType  =  nameType.getQualifiedName();  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType.getQualifiedName();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getQualifiedName();	      this.nameType    =    nameType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
268	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType,  ruleType,  concat,  maxPhonemes)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  maxPhonemes)  {	  final    boolean    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
269	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  final  Map  NAME_PREFIXES)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  boolean  maxPhonemes,  final  Map  NAME_PREFIXES)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  final  Map  NAME_PREFIXES)  {	  final    boolean    maxPhonemes)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	23	None	replace
270	[BUG]  [BUGGY]  this.ruleType,  ruleType,  concat,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.ruleType,  ruleType,  concat,  maxPhonemes)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  ruleType,  concat,  maxPhonemes)  {	  final    boolean    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
271	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  final  RuleType  ruleType)  {  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  boolean  maxPhonemes,  final  RuleType  ruleType)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  final  RuleType  ruleType)  {	  final    boolean    maxPhonemes)    {    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine	23	None	replace
272	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  Boolean  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes,  final  Boolean  concat)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  Boolean  concat)  {	  final    int    maxPhonemes,    boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	5	None	replace
273	[BUG]  [BUGGY]  final  char  maxPhonemes,  boolean  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  char  maxPhonemes,  boolean  concat)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  char  maxPhonemes,  boolean  concat)  {	  final    int    maxPhonemes,    boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	5	None	replace
274	[BUG]  [BUGGY]  final  int  maxPhonemes,  Boolean  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes,  Boolean  concat)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  Boolean  concat)  {	  final    int    maxPhonemes,    boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	5	None	replace
275	[BUG]  [BUGGY]  final  int  maxPhonemes,  boolean  concat,  NameType  ruleType)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes,  boolean  concat,  NameType  ruleType)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  boolean  concat,  NameType  ruleType)  {	  final    int    maxPhonemes,    boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	5	None	replace
276	[BUG]  [BUGGY]  final  int  maxPhonemes,  boolean  concat,  boolean  lang)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  int  maxPhonemes,  boolean  concat,  boolean  lang)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  boolean  concat,  boolean  lang)  {	  final    int    maxPhonemes,    boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	5	None	replace
277	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType;  concat,  false);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType;  concat,  false);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.ruleType  =  ruleType;  concat,  false);	      this(nameType,    ruleType,    concat,    false);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
278	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes  [CE]  <identifier>  expected  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.maxPhonemes	      NameType    nameType,    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	12	None	replace
279	[BUG]  [BUGGY]  final  NameType  nameType,  ruleType,  concat,  [CE]  <identifier>  expected  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  NameType  nameType,  ruleType,  concat,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType,  ruleType,  concat,	      NameType    nameType,    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	12	None	replace
280	[BUG]  [BUGGY]  NameType  ruleType,  nameType,  concat,  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  ruleType,  nameType,  concat,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType,  nameType,  concat,	      NameType    nameType,    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	12	None	replace
281	[BUG]  [BUGGY]  this.phonemeBuilder  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.phonemeBuilder  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;	  super(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
282	[BUG]  [BUGGY]  this.phonemeBuilder  =  Locale.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.phonemeBuilder  =  Locale.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Locale.instance(nameType);  this.maxPhonemes  =  maxPhonemes;	  super(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
283	[BUG]  [BUGGY]  this.phonemeBuilder  =  Lang.instance(nameType);  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.phonemeBuilder  =  Lang.instance(nameType);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Lang.instance(nameType);	  super(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
284	[BUG]  [BUGGY]  this.minimumPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.minimumPhonemes  =  maxPhonemes;  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.minimumPhonemes  =  maxPhonemes;	  super(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
285	[BUG]  [BUGGY]  final  NameType  nameType,  RuleType  ruleType,  boolean  concat,  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  NameType  nameType,  RuleType  ruleType,  boolean  concat,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType,  RuleType  ruleType,  boolean  concat,	      NameType    nameType,    RuleType    ruleType,    boolean    concat,    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
286	[BUG]  [BUGGY]  NameType  ruleType,  RuleType  ruleType,  boolean  concat,  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  ruleType,  RuleType  ruleType,  boolean  concat,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType,  RuleType  ruleType,  boolean  concat,	      NameType    nameType,    RuleType    ruleType,    boolean    concat,    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
287	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  this.maxPhonemes);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(nameType,  ruleType,  concat,  this.maxPhonemes);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  this.maxPhonemes);	  super(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
288	[BUG]  [BUGGY]  this.nameType,  new  RuleType(ruleType,  concat),  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType,  new  RuleType(ruleType,  concat),  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  new  RuleType(ruleType,  concat),	      this.nameType,    nameType,    concat,    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
289	[BUG]  [BUGGY]  this.nameType,  nameType,  ruleType,  concat,  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType,  nameType,  ruleType,  concat,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  ruleType,  concat,	      this.nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
290	[BUG]  [BUGGY]  this.nameType  =  nameType,  ruleType,  concat,  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType,  ruleType,  concat,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType,  ruleType,  concat,	      this.nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
291	[BUG]  [BUGGY]  this.nameType,  new  RuleType(ruleType),  concat,  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType,  new  RuleType(ruleType),  concat,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  new  RuleType(ruleType),  concat,	      this.nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
292	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  defULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  defULT_MAX_PHONEMES)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  defULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
293	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
294	[BUG]  [BUGGY]  if(nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  if(nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      super(nameType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
295	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRuleType();  [CE]  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  ruleType  =  nameType.getRuleType();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType  =  nameType.getRuleType();	      	non-compiled	[CE]  	9	None	replace
296	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0)  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
297	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  maxPhonemes)  {  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
298	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
299	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  ruleType.getName();  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  ruleType.getName();  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getName()  :  ruleType.getName();	  this.nameType    =    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
300	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  : "null ";  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  : "null ";  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.getName()  : "null ";	  this.nameType    =    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
301	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.toString()  :  nameType.toString();  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.toString()  :  nameType.toString();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.toString()  :  nameType.toString();	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
302	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.toString()  : "null ";  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.toString()  : "null ";  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.toString()  : "null ";	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
303	[BUG]  [BUGGY]  this.nameType  =  nameType.toString()  + "_ "  +  ruleType.toString();  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType.toString()  + "_ "  +  ruleType.toString();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toString()  + "_ "  +  ruleType.toString();	      this.nameType    =    nameType.toString();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
304	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType  :  NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType  :  NAME_PREFIXES;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType  :  NAME_PREFIXES;	      this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
305	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType  :  null;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType  :  null;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType  :  null;	      this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
306	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType  :  ruleType;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType  :  ruleType;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType  :  ruleType;	      this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
307	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.getName()  :  null;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.getName()  :  null;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.getName()  :  null;	      this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
308	[BUG]  [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.getName()  :  null;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.getName()  :  null;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.getName()  :  null;	      this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
309	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.getName()  :  nameType;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.getName()  :  nameType;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.getName()  :  nameType;	      this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
310	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType  :  nameType;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType  ==  null?  nameType  :  nameType;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType  :  nameType;	      this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
311	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.toString()  :  nameType;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.toString()  :  nameType;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.toString()  :  nameType;	      this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
312	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC);  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
313	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_FREFIXES);  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_FREFIXES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_FREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
314	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PLAIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PLAIN_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PLAIN_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
315	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PARAMS);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PARAMS);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PARAMS);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
316	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PREFIXES);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PREFIXES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
317	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_RANGE_PHONEMES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_RANGE_PHONEMES);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_RANGE_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
318	[BUG]  [BUGGY]  final  NameType  nameType,  RuleType  ruleType,  concat,  [CE]  <identifier>  expected  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  final  NameType  nameType,  RuleType  ruleType,  concat,  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType,  RuleType  ruleType,  concat,	      NameType    nameType,    RuleType    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	11	None	replace
319	[BUG]  [BUGGY]  super(nameType,  ruleType.ruleType);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(nameType,  ruleType.ruleType);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.ruleType);	      super(nameType,    ruleType);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
320	[BUG]  [BUGGY]  super(nameType,  ruleType.nameType);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  super(nameType,  ruleType.nameType);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.nameType);	      super(nameType,    ruleType);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
321	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  ruleType);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType,  nameType,  concat,  ruleType);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  ruleType);	      this.nameType,    nameType,    concat);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
322	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  defULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType,  nameType,  concat,  defULT_MAX_PHONEMES);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  defULT_MAX_PHONEMES);	      this.nameType,    nameType,    concat);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
323	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  defult_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.nameType,  nameType,  concat,  defult_MAX_PHONEMES);  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  defult_MAX_PHONEMES);	      this.nameType,    nameType,    concat);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
324	[BUG]  [BUGGY]  NameType  nameType,  final  RuleType  ruleType)  {  this.nameType  =  nameType;  }  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  final  RuleType  ruleType)  {  this.nameType  =  nameType;  }  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  final  RuleType  ruleType)  {  this.nameType  =  nameType;  }	      NameType    nameType)    {    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
325	[BUG]  [BUGGY]  Preconditions.checkState(nameType!=  null);  this.nameType  =  nameType;  [CE]  <identifier>  expected  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  Preconditions.checkState(nameType!=  null);  this.nameType  =  nameType;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Preconditions.checkState(nameType!=  null);  this.nameType  =  nameType;	      NameType    nameType)    {    this.nameType    =    nameType;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
326	[BUG]  [BUGGY]  NameType  nameType,  final  RuleType  ruleType)  {  this.nameType  =  nameType;  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  final  RuleType  ruleType)  {  this.nameType  =  nameType;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  final  RuleType  ruleType)  {  this.nameType  =  nameType;	      NameType    nameType)    {    this.nameType    =    nameType;    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	18	None	replace
327	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  3);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  3);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  3);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
328	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  2);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  2);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  2);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
329	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  4);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  4);  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  4);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
330	[BUG]  [BUGGY]  if(nameType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  if(nameType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }	  final    int    maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
331	[BUG]  [BUGGY]  if(nameType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }  else  {  PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder();  }  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  if(nameType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }  else  {  PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder();  }  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }  else  {  PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder();  }	  final    int    maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
332	[BUG]  [BUGGY]  if(nameType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  if(nameType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  final    int    maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
333	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  ArrayList  <  RuleType>();  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  ArrayList  <  RuleType>();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  ArrayList  <  RuleType>();	      NameType    nameType,    RuleType    ruleType,    concat);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
334	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  HashSet  <  Rule>();  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  HashSet  <  Rule>();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  HashSet  <  Rule>();	      NameType    nameType,    RuleType    ruleType,    concat);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
335	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat?  super.nameType  :  null;  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  ruleType,  concat?  super.nameType  :  null;  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat?  super.nameType  :  null;	      NameType    nameType,    RuleType    ruleType,    concat);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
336	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  LinkedHashMap  <  String,  Rule>();  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  LinkedHashMap  <  String,  Rule>();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  LinkedHashMap  <  String,  Rule>();	      NameType    nameType,    RuleType    ruleType,    concat);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
337	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  LinkedList  <  RuleType>();  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  LinkedList  <  RuleType>();  [BUGGY]    final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  LinkedList  <  RuleType>();	      NameType    nameType,    RuleType    ruleType,    concat);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
338	[BUG]  [BUGGY]  this.ruleType  = "ruletype ";  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError    [CONTEXT]    public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,    [BUGGY]  this.ruleType  = "ruletype ";  [BUGGY]    if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(   "ruleType  must  not  be     "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  = "ruletype ";	  this.ruleType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
