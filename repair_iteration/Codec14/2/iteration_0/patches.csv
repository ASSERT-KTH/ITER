bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]    ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES);  [BUGGY]  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES);	final  int  maxPhonemes)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  this.nameType  =  nameType.getName();  [CE]  illegal  start  of  type  [FE]      ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]  this.nameType  =  nameType.getName();  [BUGGY]  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getName();	final  int  maxPhonemes)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes)  {  [BUGGY]  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes)  {	final  int  maxPhonemes)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes);  [BUGGY]  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes);	final  int  maxPhonemes)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  final  int  maxPhonemes,  boolean  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]            ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]  final  int  maxPhonemes,  boolean  concat)  {  [BUGGY]  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  boolean  concat)  {	final  int  maxPhonemes)  {  	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	3	None	replace
6	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {  [BUGGY]  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {	final  int  maxPhonemes)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes);  [BUGGY]  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes);	final  int  maxPhonemes)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]  super(nameType,  ruleType,  concat);  [BUGGY]  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat);	final  int  maxPhonemes)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
9	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]    [BUGGY]  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	  	final  int  maxPhonemes)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
10	[BUG]  [BUGGY]    this.nameType,  nameType,  concat,  [CE]  illegal  start  of  type  [FE]    ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]    this.nameType,  nameType,  concat,  [BUGGY]  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	    this.nameType,  nameType,  concat,		non-compiled	[CE]  illegal  start  of  type	4	None	add
11	[BUG]  [BUGGY]    NameType  nameType,  RuleType  ruleType,  concat,  [CE]  <identifier>  expected  [FE]      ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]    NameType  nameType,  RuleType  ruleType,  concat,  [BUGGY]  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	    NameType  nameType,  RuleType  ruleType,  concat,		non-compiled	[CE]  <identifier>  expected	4	None	add
12	[BUG]  [BUGGY]    NameType  nameType,  ruleType,  concat,  [CE]  <identifier>  expected  [FE]        ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]    NameType  nameType,  ruleType,  concat,  [BUGGY]  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	    NameType  nameType,  ruleType,  concat,		non-compiled	[CE]  <identifier>  expected	4	None	add
13	[BUG]  [BUGGY]    this.nameType,  nameType,  concat);  [CE]  illegal  start  of  type  [FE]          ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]    this.nameType,  nameType,  concat);  [BUGGY]  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	    this.nameType,  nameType,  concat);		non-compiled	[CE]  illegal  start  of  type	4	None	add
14	[BUG]  [BUGGY]    this(nameType,  ruleType,  concat,  false);  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]    this(nameType,  ruleType,  concat,  false);  [BUGGY]  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	    this(nameType,  ruleType,  concat,  false);		non-compiled	[CE]  illegal  start  of  type	4	None	add
15	[BUG]  [BUGGY]    super(nameType,  ruleType);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]    super(nameType,  ruleType);  [BUGGY]  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	    super(nameType,  ruleType);		non-compiled	[CE]  illegal  start  of  type	4	None	add
16	[BUG]  [BUGGY]    this.nameType,  ruleType,  concat,  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]    this.nameType,  ruleType,  concat,  [BUGGY]  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	    this.nameType,  ruleType,  concat,		non-compiled	[CE]  illegal  start  of  type	4	None	add
17	[BUG]  [BUGGY]    NameType  nameType,  RuleType  ruleType,  concat);  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]    NameType  nameType,  RuleType  ruleType,  concat);  [BUGGY]  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	    NameType  nameType,  RuleType  ruleType,  concat);		non-compiled	[CE]  <identifier>  expected	4	None	add
18	[BUG]  [BUGGY]    NameType  nameType)  {  this.nameType  =  nameType;  [CE]  ';'  expected  [FE]    ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]    NameType  nameType)  {  this.nameType  =  nameType;  [BUGGY]  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	    NameType  nameType)  {  this.nameType  =  nameType;		non-compiled	[CE]  ';'  expected	4	None	add
19	[BUG]  [BUGGY]    NameType  nameType,  RuleType  ruleType,  boolean  concat,  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]      ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]    NameType  nameType,  RuleType  ruleType,  boolean  concat,  [BUGGY]  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	    NameType  nameType,  RuleType  ruleType,  boolean  concat,		non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	4	None	add
20	[BUG]  [BUGGY]    NameType  nameType  =  nameType.getName();  [CE]  ')'  expected  [FE]        ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]    NameType  nameType  =  nameType.getName();  [BUGGY]  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	    NameType  nameType  =  nameType.getName();		non-compiled	[CE]  ')'  expected	4	None	add
21	[BUG]  [BUGGY]    NameType  nameType  =  ruleType.getName();  [CE]  ')'  expected  [FE]          ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]    NameType  nameType  =  ruleType.getName();  [BUGGY]  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	    NameType  nameType  =  ruleType.getName();		non-compiled	[CE]  ')'  expected	4	None	add
22	[BUG]  [BUGGY]    this.nameType  =  nameType;  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]    this.nameType  =  nameType;  [BUGGY]  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	    this.nameType  =  nameType;		non-compiled	[CE]  illegal  start  of  type	4	None	add
23	[BUG]  [BUGGY]  final  boolean  maxPhonemes)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]    ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]  final  boolean  maxPhonemes)  {  [BUGGY]  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes)  {	final  int  maxPhonemes)  {  	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	3	None	replace
24	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.getMaxPhonemes();  [CE]  [FE]      ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]  final  int  maxPhonemes  =  nameType.getMaxPhonemes();  [BUGGY]  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.getMaxPhonemes();	final  int  maxPhonemes)  {  	non-compiled	[CE]  	3	None	replace
25	[BUG]  [BUGGY]  super(nameType);  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]  super(nameType);  [BUGGY]  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType);	final  int  maxPhonemes)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
26	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes;  [CE]  [FE]          ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes;  [BUGGY]  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes;	final  int  maxPhonemes)  {  	non-compiled	[CE]  	3	None	replace
27	[BUG]  [BUGGY]    super(nameType);  this.ruleType  =  ruleType;  [CE]  illegal  start  of  type  [FE]    ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]    super(nameType);  this.ruleType  =  ruleType;  [BUGGY]  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	    super(nameType);  this.ruleType  =  ruleType;		non-compiled	[CE]  illegal  start  of  type	4	None	add
28	[BUG]  [BUGGY]    this.nameType  =  nameType.toString();  [CE]  illegal  start  of  type  [FE]      ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]    this.nameType  =  nameType.toString();  [BUGGY]  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	    this.nameType  =  nameType.toString();		non-compiled	[CE]  illegal  start  of  type	4	None	add
29	[BUG]  [BUGGY]    this.nameType  =  nameType.getReferenceName();  [CE]  illegal  start  of  type  [FE]        ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]    this.nameType  =  nameType.getReferenceName();  [BUGGY]  final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	    this.nameType  =  nameType.getReferenceName();		non-compiled	[CE]  illegal  start  of  type	4	None	add
30	[BUG]  [BUGGY]  super(nameType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]    ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]  super(nameType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType);  this.maxPhonemes  =  maxPhonemes;	final  int  maxPhonemes)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
31	[BUG]  [BUGGY]  this.ruleType  =  nameType;  [CE]  illegal  start  of  type  [FE]      ExceptionInInitializerError  [CONTEXT]  public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]  this.ruleType  =  nameType;  [BUGGY]  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException( "ruleType  must  not  be   "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  nameType;	final  int  maxPhonemes)  {  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
