bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.nameType  =  nameType.getNameType(),  concat;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getNameType(),  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getNameType(),  concat;	  this.nameType    =    nameType.getNameType();    	non-compiled	[CE]  illegal  start  of  type	240	None	replace
2	[BUG]  [BUGGY]  this.nameType  =  ruleType.getNameType();  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType.getNameType();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType.getNameType();	  this.nameType    =    nameType.getNameType();    	non-compiled	[CE]  illegal  start  of  type	240	None	replace
3	[BUG]  [BUGGY]  this.nameType  =  nameType.getNameType()  +  1;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getNameType()  +  1;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getNameType()  +  1;	  this.nameType    =    nameType.getNameType();    	non-compiled	[CE]  illegal  start  of  type	240	None	replace
4	[BUG]  [BUGGY]  this.nameType  =  nameType.toNameType();  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toNameType();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toNameType();	  this.nameType    =    nameType.getNameType();    	non-compiled	[CE]  illegal  start  of  type	240	None	replace
5	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat,  false);  [CE]  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getName(),  concat,  false);	  NameType    nameType    =    ruleType.getName(),    concat);    	non-compiled	[CE]  	140	None	replace
6	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat,  null);  [CE]  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getName(),  concat,  null);	  NameType    nameType    =    ruleType.getName(),    concat);    	non-compiled	[CE]  	140	None	replace
7	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat,  true);  [CE]  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat,  true);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getName(),  concat,  true);	  NameType    nameType    =    ruleType.getName(),    concat);    	non-compiled	[CE]  	140	None	replace
8	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat,  this);  [CE]  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat,  this);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getName(),  concat,  this);	  NameType    nameType    =    ruleType.getName(),    concat);    	non-compiled	[CE]  	140	None	replace
9	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat,  hashCode);  [CE]  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat,  hashCode);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getName(),  concat,  hashCode);	  NameType    nameType    =    ruleType.getName(),    concat);    	non-compiled	[CE]  	140	None	replace
10	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat,  def);  [CE]  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat,  def);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getName(),  concat,  def);	  NameType    nameType    =    ruleType.getName(),    concat);    	non-compiled	[CE]  	140	None	replace
11	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getSimpleName(),  concat);  [CE]  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getSimpleName(),  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getSimpleName(),  concat);	  NameType    nameType    =    ruleType.getName(),    concat);    	non-compiled	[CE]  	140	None	replace
12	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    nameType);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
13	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes,  nameType);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes,  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes,  nameType);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    nameType);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
14	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_REFIXES);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_REFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_REFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    nameType);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
15	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  def);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  def);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  def);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    nameType);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
16	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0,  nameType);  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0,  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0,  nameType);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    nameType);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
17	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
18	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
19	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  MAX_PHONEMES,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  MAX_PHONEMES,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  MAX_PHONEMES,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
20	[BUG]  [BUGGY]  this.nameType,  nameType,  new  RuleType(ruleType,  concat),  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  new  RuleType(ruleType,  concat),  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  new  RuleType(ruleType,  concat),	  this.nameType,    new    RuleType(ruleType,    concat),    	non-compiled	[CE]  illegal  start  of  type	288	None	replace
21	[BUG]  [BUGGY]  this.nameType,  new  RuleType(nameType,  ruleType,  concat),  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  new  RuleType(nameType,  ruleType,  concat),  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  new  RuleType(nameType,  ruleType,  concat),	  this.nameType,    new    RuleType(ruleType,    concat),    	non-compiled	[CE]  illegal  start  of  type	288	None	replace
22	[BUG]  [BUGGY]  this.nameType,  new  RuleType(nameType,  concat),  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  new  RuleType(nameType,  concat),  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  new  RuleType(nameType,  concat),	  this.nameType,    new    RuleType(ruleType,    concat),    	non-compiled	[CE]  illegal  start  of  type	288	None	replace
23	[BUG]  [BUGGY]  this.nameType,  new  RuleType(ruleType,  concat,  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  new  RuleType(ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  new  RuleType(ruleType,  concat,	  this.nameType,    new    RuleType(ruleType,    concat),    	non-compiled	[CE]  illegal  start  of  type	288	None	replace
24	[BUG]  [BUGGY]  this.nameType,  new  RuleType(ruleType,  concat)  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  new  RuleType(ruleType,  concat)  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  new  RuleType(ruleType,  concat)	  this.nameType,    new    RuleType(ruleType,    concat),    	non-compiled	[CE]  illegal  start  of  type	288	None	replace
25	[BUG]  [BUGGY]  this.nameType,  nameType,  new  RuleType(ruleType,  concat)  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  new  RuleType(ruleType,  concat)  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  new  RuleType(ruleType,  concat)	  this.nameType,    new    RuleType(ruleType,    concat),    	non-compiled	[CE]  illegal  start  of  type	288	None	replace
26	[BUG]  [BUGGY]  this.nameType,  new  RuleType(ruleType,  concat);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  new  RuleType(ruleType,  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  new  RuleType(ruleType,  concat);	  this.nameType,    new    RuleType(ruleType,    concat),    	non-compiled	[CE]  illegal  start  of  type	288	None	replace
27	[BUG]  [BUGGY]  this.nameType,  new  RuleType(ruleType,  concat,  false);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  new  RuleType(ruleType,  concat,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  new  RuleType(ruleType,  concat,  false);	  this.nameType,    new    RuleType(ruleType,    concat),    	non-compiled	[CE]  illegal  start  of  type	288	None	replace
28	[BUG]  [BUGGY]  this.nameType  =  nameType,  NameType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType,  NameType.NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType,  NameType.NAME_PREFIXES;	  this.nameType    =    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
29	[BUG]  [BUGGY]  this.nameType  =  NameType.NAME_PREFIXES  +  DEFAULT_MAX_PHONEMES;  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  NameType.NAME_PREFIXES  +  DEFAULT_MAX_PHONEMES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  NameType.NAME_PREFIXES  +  DEFAULT_MAX_PHONEMES;	  this.nameType    =    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
30	[BUG]  [BUGGY]  this.nameType  =  nameType,  RuleType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType,  RuleType.NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType,  RuleType.NAME_PREFIXES;	  this.nameType    =    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
31	[BUG]  [BUGGY]  this.nameType  =  NameType.NAME_PREFIXES  |  Locale.getDefault();  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  NameType.NAME_PREFIXES  |  Locale.getDefault();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  NameType.NAME_PREFIXES  |  Locale.getDefault();	  this.nameType    =    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
32	[BUG]  [BUGGY]  this.nameType  =  NameType.NAME_PREFIXES  |  nameType;  [CE]  illegal  start  of  type  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  NameType.NAME_PREFIXES  |  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  NameType.NAME_PREFIXES  |  nameType;	  this.nameType    =    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
33	[BUG]  [BUGGY]  this.nameType  =  nameType,  ruleType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType,  ruleType.NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType,  ruleType.NAME_PREFIXES;	  this.nameType    =    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
34	[BUG]  [BUGGY]  this.nameType  =  NameType.NAME_PREFIXES?  nameType.toString()  :  null;  [CE]  illegal  start  of  type  [FE]                                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  NameType.NAME_PREFIXES?  nameType.toString()  :  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  NameType.NAME_PREFIXES?  nameType.toString()  :  null;	  this.nameType    =    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
35	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  NameType.NAME_PREFIXES  :  nameType;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  NameType.NAME_PREFIXES  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  NameType.NAME_PREFIXES  :  nameType;	  this.nameType    =    nameType    {    null?    NameType.NAME_PREFIXES    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
36	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  NameType.NAME_PREFIXES  :  NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  NameType.NAME_PREFIXES  :  NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  NameType.NAME_PREFIXES  :  NAME_PREFIXES;	  this.nameType    =    nameType    {    null?    NameType.NAME_PREFIXES    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
37	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  NameType.NAME_PREFIXES  :  nameType;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  NameType.NAME_PREFIXES  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  NameType.NAME_PREFIXES  :  nameType;	  this.nameType    =    nameType    {    null?    NameType.NAME_PREFIXES    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
38	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  NameType.NAME_PREFIXES  :  ruleType;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  NameType.NAME_PREFIXES  :  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  NameType.NAME_PREFIXES  :  ruleType;	  this.nameType    =    nameType    {    null?    NameType.NAME_PREFIXES    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
39	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  NameType.NAME_PREFIXES  :  nameType,  concat;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  NameType.NAME_PREFIXES  :  nameType,  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  NameType.NAME_PREFIXES  :  nameType,  concat;	  this.nameType    =    nameType    {    null?    NameType.NAME_PREFIXES    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
40	[BUG]  [BUGGY]  this.nameType  =  ruleType  ==  null?  NameType.NAME_PREFIXES  :  nameType;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType  ==  null?  NameType.NAME_PREFIXES  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType  ==  null?  NameType.NAME_PREFIXES  :  nameType;	  this.nameType    =    nameType    {    null?    NameType.NAME_PREFIXES    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
41	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  NameType.NAME_PREFIXES  :  nameType);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  NameType.NAME_PREFIXES  :  nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  NameType.NAME_PREFIXES  :  nameType);	  this.nameType    =    nameType    {    null?    NameType.NAME_PREFIXES    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
42	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).name;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).name;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).name;	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :((    RuleType)nameType).nameType;    	non-compiled	[CE]  illegal  start  of  type	265	None	replace
43	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)ruleType).nameType;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)ruleType).nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)ruleType).nameType;	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :((    RuleType)nameType).nameType;    	non-compiled	[CE]  illegal  start  of  type	265	None	replace
44	[BUG]  [BUGGY]  NameType  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).nameType;  [CE]  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).nameType;	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :((    RuleType)nameType).nameType;    	non-compiled	[CE]  	265	None	replace
45	[BUG]  [BUGGY]  This.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).nameType;  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).nameType;	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :((    RuleType)nameType).nameType;    	non-compiled	[CE]  <identifier>  expected	265	None	replace
46	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).nametype;  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).nametype;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).nametype;	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :((    RuleType)nameType).nameType;    	non-compiled	[CE]  illegal  start  of  type	265	None	replace
47	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;	  this.phonemeBuilder    =    PhonemeBuilder.instance(nameType,    concat);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	225	None	replace
48	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  concat);  this.maxPhonemes  =  0;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  concat);  this.maxPhonemes  =  0;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  concat);  this.maxPhonemes  =  0;	  this.phonemeBuilder    =    PhonemeBuilder.instance(nameType,    concat);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	225	None	replace
49	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType);  this.maxPhonemes  =  maxPhonemes;	  this.phonemeBuilder    =    PhonemeBuilder.instance(nameType,    concat);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	225	None	replace
50	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  ruleType);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  ruleType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  ruleType);	  this.phonemeBuilder    =    PhonemeBuilder.instance(nameType,    concat);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	225	None	replace
51	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(ruleType,  concat);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(ruleType,  concat);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(ruleType,  concat);  this.maxPhonemes  =  maxPhonemes;	  this.phonemeBuilder    =    PhonemeBuilder.instance(nameType,    concat);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	225	None	replace
52	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  concat);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  concat);	  this.phonemeBuilder    =    PhonemeBuilder.instance(nameType,    concat);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	225	None	replace
53	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(concat,  nameType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(concat,  nameType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(concat,  nameType);  this.maxPhonemes  =  maxPhonemes;	  this.phonemeBuilder    =    PhonemeBuilder.instance(nameType,    concat);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	225	None	replace
54	[BUG]  [BUGGY]  this.ruleType,  nameType);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType,  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  nameType);	  this.ruleType;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
55	[BUG]  [BUGGY]  this.ruleType,  nameType;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType,  nameType;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  nameType;	  this.ruleType;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
56	[BUG]  [BUGGY]  this.ruleType,  null);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType,  null);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  null);	  this.ruleType;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
57	[BUG]  [BUGGY]  this.ruleType  =  null;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  null;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  null;	  this.ruleType;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
58	[BUG]  [BUGGY]  this.ruleType,  concat;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType,  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  concat;	  this.ruleType;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
59	[BUG]  [BUGGY]  this.ruleType,  ruleType);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType,  ruleType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  ruleType);	  this.ruleType;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
60	[BUG]  [BUGGY]  this.nameType  =  ruleType.toName();  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType.toName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType.toName();	  this.nameType    =    nameType.toName();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
61	[BUG]  [BUGGY]  this.nameType  =  nameType.toSimpleName();  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toSimpleName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toSimpleName();	  this.nameType    =    nameType.toName();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
62	[BUG]  [BUGGY]  this.nameType  =  nameType.toName(),  concat;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toName(),  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toName(),  concat;	  this.nameType    =    nameType.toName();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
63	[BUG]  [BUGGY]  this.nameType  =  nameType.toName()  +  1;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toName()  +  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toName()  +  1;	  this.nameType    =    nameType.toName();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
64	[BUG]  [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
65	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
66	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  Il  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  Il  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  Il	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
67	[BUG]  [BUGGY]  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
68	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  ruleType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  ruleType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  ruleType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
69	[BUG]  [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
70	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType;  concat,  true);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType;  concat,  true);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.ruleType  =  ruleType;  concat,  true);	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    concat,    false);    	non-compiled	[CE]  illegal  start  of  type	277	None	replace
71	[BUG]  [BUGGY]  This.nameType  =  nameType;  this.ruleType  =  ruleType;  concat,  false);  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.nameType  =  nameType;  this.ruleType  =  ruleType;  concat,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType  =  nameType;  this.ruleType  =  ruleType;  concat,  false);	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    concat,    false);    	non-compiled	[CE]  <identifier>  expected	277	None	replace
72	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType;  Concat,  false);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType;  Concat,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.ruleType  =  ruleType;  Concat,  false);	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    concat,    false);    	non-compiled	[CE]  illegal  start  of  type	277	None	replace
73	[BUG]  [BUGGY]  this.nameType  =  ruleType;  this.ruleType  =  nameType;  concat,  false);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType;  this.ruleType  =  nameType;  concat,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType;  this.ruleType  =  nameType;  concat,  false);	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    concat,    false);    	non-compiled	[CE]  illegal  start  of  type	277	None	replace
74	[BUG]  [BUGGY]  NameType  nameType  =  nameType;  this.ruleType  =  ruleType;  concat,  false);  [CE]  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  nameType;  this.ruleType  =  ruleType;  concat,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  nameType;  this.ruleType  =  ruleType;  concat,  false);	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    concat,    false);    	non-compiled	[CE]  	277	None	replace
75	[BUG]  [BUGGY]  (nameType  ==  ruleType))  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  (nameType  ==  ruleType))  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	(nameType  ==  ruleType))  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(nameType!=    ruleType)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	294	None	replace
76	[BUG]  [BUGGY]  ||  nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  ||  nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	||  nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(nameType!=    ruleType)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	294	None	replace
77	[BUG]  [BUGGY]  @SuppressWarnings( "unchecked ")||  nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  @SuppressWarnings( "unchecked ")||  nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	@SuppressWarnings( "unchecked ")||  nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(nameType!=    ruleType)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	294	None	replace
78	[BUG]  [BUGGY]  @SuppressWarnings( "unchecked "))  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  @SuppressWarnings( "unchecked "))  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	@SuppressWarnings( "unchecked "))  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(nameType!=    ruleType)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	294	None	replace
79	[BUG]  [BUGGY]  @SuppressWarnings( "unchecked ")||  nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  @SuppressWarnings( "unchecked ")||  nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	@SuppressWarnings( "unchecked ")||  nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }	  if(nameType!=    ruleType)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	294	None	replace
80	[BUG]  [BUGGY]  @SuppressWarnings( "unchecked "))  {  super(nameType);  this.ruleType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  @SuppressWarnings( "unchecked "))  {  super(nameType);  this.ruleType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	@SuppressWarnings( "unchecked "))  {  super(nameType);  this.ruleType  =  ruleType;  }	  if(nameType!=    ruleType)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	294	None	replace
81	[BUG]  [BUGGY]  @SuppressWarnings( "unchecked "))  {  if(nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  @SuppressWarnings( "unchecked "))  {  if(nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	@SuppressWarnings( "unchecked "))  {  if(nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }	  if(nameType!=    ruleType)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	294	None	replace
82	[BUG]  [BUGGY]  this.nameType  =  nameType.getName(),  concat);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getName(),  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getName(),  concat);	  this.nameType    =    nameType.getName());    	non-compiled	[CE]  illegal  start  of  type	210	None	replace
83	[BUG]  [BUGGY]  this.nameType  =  nameType.getSimpleName());  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getSimpleName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getSimpleName());	  this.nameType    =    nameType.getName());    	non-compiled	[CE]  illegal  start  of  type	210	None	replace
84	[BUG]  [BUGGY]  this.nameType  =  ruleType.getName());  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType.getName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType.getName());	  this.nameType    =    nameType.getName());    	non-compiled	[CE]  illegal  start  of  type	210	None	replace
85	[BUG]  [BUGGY]  this.nameType  =  nameType.toString());  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toString());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toString());	  this.nameType    =    nameType.getName());    	non-compiled	[CE]  illegal  start  of  type	210	None	replace
86	[BUG]  [BUGGY]  this.nameType  =  nameType.getName()  + ": "  +  ruleType.getName());  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getName()  + ": "  +  ruleType.getName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getName()  + ": "  +  ruleType.getName());	  this.nameType    =    nameType.getName());    	non-compiled	[CE]  illegal  start  of  type	210	None	replace
87	[BUG]  [BUGGY]  this.nameType,  nameType,  new  RuleType(ruleType),  concat,  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  new  RuleType(ruleType),  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  new  RuleType(ruleType),  concat,	  this.nameType,    new    RuleType(ruleType),    concat,    	non-compiled	[CE]  illegal  start  of  type	291	None	replace
88	[BUG]  [BUGGY]  this.nameType,  ruleType,  new  RuleType(concat,  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  new  RuleType(concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  new  RuleType(concat,	  this.nameType,    new    RuleType(ruleType),    concat,    	non-compiled	[CE]  illegal  start  of  type	291	None	replace
89	[BUG]  [BUGGY]  this.nameType,  new  RuleType(ruleType),  nameType,  concat,  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  new  RuleType(ruleType),  nameType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  new  RuleType(ruleType),  nameType,  concat,	  this.nameType,    new    RuleType(ruleType),    concat,    	non-compiled	[CE]  illegal  start  of  type	291	None	replace
90	[BUG]  [BUGGY]  this.nameType,  new  RuleType(nameType),  concat,  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  new  RuleType(nameType),  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  new  RuleType(nameType),  concat,	  this.nameType,    new    RuleType(ruleType),    concat,    	non-compiled	[CE]  illegal  start  of  type	291	None	replace
91	[BUG]  [BUGGY]  NameType  nameType,  new  RuleType(ruleType),  concat,  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  new  RuleType(ruleType),  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  new  RuleType(ruleType),  concat,	  this.nameType,    new    RuleType(ruleType),    concat,    	non-compiled	[CE]  illegal  start  of  type	291	None	replace
92	[BUG]  [BUGGY]  this.nameType,  new  RuleType(ruleType),  concat,  nameType,  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  new  RuleType(ruleType),  concat,  nameType,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  new  RuleType(ruleType),  concat,  nameType,	  this.nameType,    new    RuleType(ruleType),    concat,    	non-compiled	[CE]  illegal  start  of  type	291	None	replace
93	[BUG]  [BUGGY]  this.maxPhonemes  =  ruleType.maxPhonemes;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  ruleType.maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  ruleType.maxPhonemes;	  this.maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
94	[BUG]  [BUGGY]  this.maxPhonemes  =  concat?  NameType.maxPhonemes  :  nameType.maxPhonemes;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  concat?  NameType.maxPhonemes  :  nameType.maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  concat?  NameType.maxPhonemes  :  nameType.maxPhonemes;	  this.maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
95	[BUG]  [BUGGY]  this.maxPhonemes  =  concat?  nameType.maxPhonemes  :  1;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  concat?  nameType.maxPhonemes  :  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  concat?  nameType.maxPhonemes  :  1;	  this.maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
96	[BUG]  [BUGGY]  this.maxPhonemes  =  concat?  nameType.maxPhonemes  :  DEFAULT_MAX_PHONEMES;  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  concat?  nameType.maxPhonemes  :  DEFAULT_MAX_PHONEMES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  concat?  nameType.maxPhonemes  :  DEFAULT_MAX_PHONEMES;	  this.maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
97	[BUG]  [BUGGY]  this.maxPhonemes  =  concat?  nameType.maxPhonemes  :  0;  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  concat?  nameType.maxPhonemes  :  0;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  concat?  nameType.maxPhonemes  :  0;	  this.maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
98	[BUG]  [BUGGY]  this.maxPhonemes  =  concat?  NameType.MAX_PHONEMES  :  nameType.maxPhonemes;  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  concat?  NameType.MAX_PHONEMES  :  nameType.maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  concat?  NameType.MAX_PHONEMES  :  nameType.maxPhonemes;	  this.maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
99	[BUG]  [BUGGY]  this.maxPhonemes  =  concat?  null  :  nameType.maxPhonemes;  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  concat?  null  :  nameType.maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  concat?  null  :  nameType.maxPhonemes;	  this.maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
100	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  RuleType  ruleType)  {  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  RuleType  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  RuleType  ruleType)  {	  final    boolean    maxPhonemes,    final    RuleType    ruleType)    {    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine	271	None	replace
101	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  final  RuleType  ruleType)  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  final  RuleType  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  final  RuleType  ruleType)  {	  final    boolean    maxPhonemes,    final    RuleType    ruleType)    {    	non-compiled	[CE]  illegal  start  of  type	271	None	replace
102	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  final  int  ruleType)  {  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  final  int  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  final  int  ruleType)  {	  final    boolean    maxPhonemes,    final    RuleType    ruleType)    {    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine	271	None	replace
103	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  final  RuleType  nameType)  {  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  final  RuleType  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  final  RuleType  nameType)  {	  final    boolean    maxPhonemes,    final    RuleType    ruleType)    {    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	271	None	replace
104	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  final  RuleType  ruleType,  final  boolean  concat)  {  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  final  RuleType  ruleType,  final  boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  final  RuleType  ruleType,  final  boolean  concat)  {	  final    boolean    maxPhonemes,    final    RuleType    ruleType)    {    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine	271	None	replace
105	[BUG]  [BUGGY]  ruleType,  final  boolean  maxPhonemes)  {  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  ruleType,  final  boolean  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	ruleType,  final  boolean  maxPhonemes)  {	  final    boolean    maxPhonemes,    final    RuleType    ruleType)    {    	non-compiled	[CE]  <identifier>  expected	271	None	replace
106	[BUG]  [BUGGY]  this.ruleType,  maxPhonemes,  ruleType)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType,  maxPhonemes,  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  maxPhonemes,  ruleType)  {	  final    boolean    maxPhonemes,    final    RuleType    ruleType)    {    	non-compiled	[CE]  illegal  start  of  type	271	None	replace
107	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getSimpleName(),  concat);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getSimpleName(),  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getSimpleName(),  concat);	  this.ruleType    =    new    RuleType(nameType.getName(),    ruleType.getSimpleName());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
108	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getSimpleName()  +  1);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getSimpleName()  +  1);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getSimpleName()  +  1);	  this.ruleType    =    new    RuleType(nameType.getName(),    ruleType.getSimpleName());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
109	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  nameType.getSimpleName());  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  nameType.getSimpleName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  nameType.getSimpleName());	  this.ruleType    =    new    RuleType(nameType.getName(),    ruleType.getSimpleName());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
110	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getFunctionName());  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getFunctionName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getFunctionName());	  this.ruleType    =    new    RuleType(nameType.getName(),    ruleType.getSimpleName());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
111	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getLanguage());  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getLanguage());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getLanguage());	  this.ruleType    =    new    RuleType(nameType.getName(),    ruleType.getSimpleName());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
112	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getConstructor());  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getConstructor());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getConstructor());	  this.ruleType    =    new    RuleType(nameType.getName(),    ruleType.getSimpleName());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
113	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getSimpleName()  +  1,  concat);  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getSimpleName()  +  1,  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getSimpleName()  +  1,  concat);	  this.ruleType    =    new    RuleType(nameType.getName(),    ruleType.getSimpleName());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
114	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getRawSimpleName());  [CE]  illegal  start  of  type  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getRawSimpleName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getRawSimpleName());	  this.ruleType    =    new    RuleType(nameType.getName(),    ruleType.getSimpleName());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
115	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  boolean  concat,  NameType  ruleType)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  boolean  concat,  NameType  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  boolean  concat,  NameType  ruleType)  {	  final    int    maxPhonemes,    boolean    concat,    NameType    ruleType)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	275	None	replace
116	[BUG]  [BUGGY]  final  int  maxPhonemes,  NameType  ruleType,  boolean  concat)  {  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  NameType  ruleType,  boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  NameType  ruleType,  boolean  concat)  {	  final    int    maxPhonemes,    boolean    concat,    NameType    ruleType)    {    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine	275	None	replace
117	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  ruleType,  boolean  concat)  {  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  ruleType,  boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  ruleType,  boolean  concat)  {	  final    int    maxPhonemes,    boolean    concat,    NameType    ruleType)    {    	non-compiled	[CE]  <identifier>  expected	275	None	replace
118	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  ruleType,  NameType  ruleType)  {  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  ruleType,  NameType  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  ruleType,  NameType  ruleType)  {	  final    int    maxPhonemes,    boolean    concat,    NameType    ruleType)    {    	non-compiled	[CE]  <identifier>  expected	275	None	replace
119	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  int  concat,  NameType  ruleType)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  int  concat,  NameType  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  int  concat,  NameType  ruleType)  {	  final    int    maxPhonemes,    boolean    concat,    NameType    ruleType)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	275	None	replace
120	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  RuleType  ruleType,  boolean  concat)  {  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  RuleType  ruleType,  boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  RuleType  ruleType,  boolean  concat)  {	  final    int    maxPhonemes,    boolean    concat,    NameType    ruleType)    {    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine	275	None	replace
121	[BUG]  [BUGGY]  final  int  maxPhonemes,  boolean  concat,  NameType  nameType)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  boolean  concat,  NameType  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  boolean  concat,  NameType  nameType)  {	  final    int    maxPhonemes,    boolean    concat,    NameType    ruleType)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	275	None	replace
122	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  Concat  ruleType,  NameType  ruleType)  {  [CE]  cannot  find  symbol  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  Concat  ruleType,  NameType  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  Concat  ruleType,  NameType  ruleType)  {	  final    int    maxPhonemes,    boolean    concat,    NameType    ruleType)    {    	non-compiled	[CE]  cannot  find  symbol	275	None	replace
123	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  nameType);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  nameType);	  this.nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
124	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES);	  this.nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
125	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  false);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  false);	  this.nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
126	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  null);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  null);	  this.nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
127	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  0);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  0);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  0);	  this.nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
128	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  NAME_PREFIXES,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    NAME_PREFIXES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	220	None	replace
129	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    NAME_PREFIXES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	220	None	replace
130	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    NAME_PREFIXES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	220	None	replace
131	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  DEFAULT_MAX_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  DEFAULT_MAX_PHONEMES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  NAME_PREFIXES,  DEFAULT_MAX_PHONEMES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    NAME_PREFIXES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	220	None	replace
132	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    NAME_PREFIXES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	220	None	replace
133	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  1);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  1);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  1);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
134	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  0);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  0);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  0);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
135	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  DEFAULT_PREFIXES);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  DEFAULT_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  DEFAULT_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
136	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?((  RuleType)nameType).getName()  :  ruleType;  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?((  RuleType)nameType).getName()  :  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?((  RuleType)nameType).getName()  :  ruleType;	  this.nameType    =    nameType    instanceof    RuleType?((    RuleType)nameType).getName()    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
137	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?((  RuleType)nameType).getName()  :  null;  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?((  RuleType)nameType).getName()  :  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?((  RuleType)nameType).getName()  :  null;	  this.nameType    =    nameType    instanceof    RuleType?((    RuleType)nameType).getName()    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
138	[BUG]  [BUGGY]  NameType  nameType  instanceof  RuleType?((  RuleType)nameType).getName()  :  nameType;  [CE]  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  instanceof  RuleType?((  RuleType)nameType).getName()  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  instanceof  RuleType?((  RuleType)nameType).getName()  :  nameType;	  this.nameType    =    nameType    instanceof    RuleType?((    RuleType)nameType).getName()    :    nameType;    	non-compiled	[CE]  	152	None	replace
139	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?((  RuleType)nameType).getName()  +  1  :  nameType;  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?((  RuleType)nameType).getName()  +  1  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?((  RuleType)nameType).getName()  +  1  :  nameType;	  this.nameType    =    nameType    instanceof    RuleType?((    RuleType)nameType).getName()    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
140	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?((  RuleType)nameType).getName()  :  type;  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?((  RuleType)nameType).getName()  :  type;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?((  RuleType)nameType).getName()  :  type;	  this.nameType    =    nameType    instanceof    RuleType?((    RuleType)nameType).getName()    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
141	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  true,  nameType);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  true,  nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  true,  nameType);	  this(nameType,    ruleType,    concat,    false,    nameType);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
142	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  true,  null);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  true,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  true,  null);	  this(nameType,    ruleType,    concat,    false,    nameType);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
143	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  false,  nameType,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  false,  nameType,  maxPhonemes);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  false,  nameType,  maxPhonemes);	  this(nameType,    ruleType,    concat,    false,    nameType);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
144	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  true,  false);  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  true,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  true,  false);	  this(nameType,    ruleType,    concat,    false,    nameType);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
145	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  false,  nameType,  null);  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  false,  nameType,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  false,  nameType,  null);	  this(nameType,    ruleType,    concat,    false,    nameType);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
146	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  false,  nameType.toString());  [CE]  illegal  start  of  type  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  false,  nameType.toString());  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  false,  nameType.toString());	  this(nameType,    ruleType,    concat,    false,    nameType);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
147	[BUG]  [BUGGY]  NameType  nameType,  final  RuleType  ruleType,  final  concat,  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  final  RuleType  ruleType,  final  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  final  RuleType  ruleType,  final  concat,	  NameType    nameType,    RuleType    ruleType,    final    concat,    	non-compiled	[CE]  <identifier>  expected	161	None	replace
148	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  final  concat  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  final  concat  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  final  concat	  NameType    nameType,    RuleType    ruleType,    final    concat,    	non-compiled	[CE]  <identifier>  expected	161	None	replace
149	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  ruleType.getName()  :  null;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  ruleType.getName()  :  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  ruleType.getName()  :  null;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	307	None	replace
150	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.getName()  :  NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.getName()  :  NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.getName()  :  NAME_PREFIXES;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	307	None	replace
151	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.toString()  :  null;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.toString()  :  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.toString()  :  null;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	307	None	replace
152	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.getName()  :  ruleType.getName();  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.getName()  :  ruleType.getName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.getName()  :  ruleType.getName();	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	307	None	replace
153	[BUG]  [BUGGY]  final  int  maxPhonemes,  Integer  minPhonemes)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  Integer  minPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  Integer  minPhonemes)  {	  final    int    maxPhonemes,    Integer    concat)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	48	None	replace
154	[BUG]  [BUGGY]  final  int  maxPhonemes,  Integer  ruleType)  {  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  Integer  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  Integer  ruleType)  {	  final    int    maxPhonemes,    Integer    concat)    {    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine	48	None	replace
155	[BUG]  [BUGGY]  final  int  maxPhonemes,  Integer  i)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  Integer  i)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  Integer  i)  {	  final    int    maxPhonemes,    Integer    concat)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	48	None	replace
156	[BUG]  [BUGGY]  final  int  maxPhonemes,  Integer  count,  concat)  {  [CE]  <identifier>  expected  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  Integer  count,  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  Integer  count,  concat)  {	  final    int    maxPhonemes,    Integer    concat)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
157	[BUG]  [BUGGY]  final  int  maxPhonemes,  Integer  lang)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  Integer  lang)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  Integer  lang)  {	  final    int    maxPhonemes,    Integer    concat)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	48	None	replace
158	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  /  1;  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  /  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.getMaxPhonemes()  /  1;	  final    int    maxPhonemes    =    nameType.getMaxPhonemes()    +    1;    	non-compiled	[CE]  	189	None	replace
159	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.getMinPhonemes();  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.getMinPhonemes();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.getMinPhonemes();	  final    int    maxPhonemes    =    nameType.getMaxPhonemes()    +    1;    	non-compiled	[CE]  	189	None	replace
160	[BUG]  [BUGGY]  final  int  maxPhonemes  =  ruleType.getMaxPhonemes()  /  1;  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  ruleType.getMaxPhonemes()  /  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  ruleType.getMaxPhonemes()  /  1;	  final    int    maxPhonemes    =    nameType.getMaxPhonemes()    +    1;    	non-compiled	[CE]  	189	None	replace
161	[BUG]  [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  &  1;  [CE]  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  &  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  ruleType.maxPhonemes  &  1;	  final    int    maxPhonemes    =    nameType.maxPhonemes    &    1;    	non-compiled	[CE]  	29	None	replace
162	[BUG]  [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  -  1;  [CE]  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  -  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  ruleType.maxPhonemes  -  1;	  final    int    maxPhonemes    =    nameType.maxPhonemes    &    1;    	non-compiled	[CE]  	29	None	replace
163	[BUG]  [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  /  1;  [CE]  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  /  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  ruleType.maxPhonemes  /  1;	  final    int    maxPhonemes    =    nameType.maxPhonemes    &    1;    	non-compiled	[CE]  	29	None	replace
164	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  /  1;  [CE]  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  /  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes  /  1;	  final    int    maxPhonemes    =    nameType.maxPhonemes    &    1;    	non-compiled	[CE]  	29	None	replace
165	[BUG]  [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  %  1;  [CE]  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  %  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  ruleType.maxPhonemes  %  1;	  final    int    maxPhonemes    =    nameType.maxPhonemes    &    1;    	non-compiled	[CE]  	29	None	replace
166	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  &  1L;  [CE]  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  &  1L;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes  &  1L;	  final    int    maxPhonemes    =    nameType.maxPhonemes    &    1;    	non-compiled	[CE]  	29	None	replace
167	[BUG]  [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType  :  ruleType;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType  :  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType  :  ruleType;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType    :    ruleType;    	non-compiled	[CE]  illegal  start  of  type	306	None	replace
168	[BUG]  [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType  :  NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType  :  NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType  :  NAME_PREFIXES;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType    :    ruleType;    	non-compiled	[CE]  illegal  start  of  type	306	None	replace
169	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType  :  ruleType,  concat;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType  :  ruleType,  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType  :  ruleType,  concat;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType    :    ruleType;    	non-compiled	[CE]  illegal  start  of  type	306	None	replace
170	[BUG]  [BUGGY]  this.nameType  =  ruleType  ==  RuleType.NAME_PREFIXES?  nameType  :  ruleType;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType  ==  RuleType.NAME_PREFIXES?  nameType  :  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType  ==  RuleType.NAME_PREFIXES?  nameType  :  ruleType;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType    :    ruleType;    	non-compiled	[CE]  illegal  start  of  type	306	None	replace
171	[BUG]  [BUGGY]  final  int  maxPhonemes,  Integer  maxPhonemes)  {  [CE]  variable  maxPhonemes  is  already  defined  in  constructor  PhoneticEngine  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  Integer  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  Integer  maxPhonemes)  {	  final    int    maxPhonemes,    long    concat)    {    	non-compiled	[CE]  variable  maxPhonemes  is  already  defined  in  constructor  PhoneticEngine	47	None	replace
172	[BUG]  [BUGGY]  final  int  maxPhonemes,  String  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  String  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  String  concat)  {	  final    int    maxPhonemes,    long    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	47	None	replace
173	[BUG]  [BUGGY]  final  int  maxPhonemes,  byte  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  byte  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  byte  concat)  {	  final    int    maxPhonemes,    long    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	47	None	replace
174	[BUG]  [BUGGY]  final  int  maxPhonemes,  short  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  short  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  short  concat)  {	  final    int    maxPhonemes,    long    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	47	None	replace
175	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  true,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  true,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  true,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    true,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
176	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  true,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  true,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  true,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    true,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
177	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  true,  maxPhonemes,  false)  {  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  true,  maxPhonemes,  false)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  true,  maxPhonemes,  false)  {	  this(nameType,    ruleType,    concat,    true,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
178	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  true,  maxPhonemes,  nameType)  {  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  true,  maxPhonemes,  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  true,  maxPhonemes,  nameType)  {	  this(nameType,    ruleType,    concat,    true,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
179	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  true,  maxPhonemes,  null)  {  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  true,  maxPhonemes,  null)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  true,  maxPhonemes,  null)  {	  this(nameType,    ruleType,    concat,    true,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
180	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  true,  DEFAULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  true,  DEFAULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  true,  DEFAULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    true,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
181	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  : "  <  null> ";  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  : "  <  null> ";  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getName()  : "  <  null> ";	  this.nameType    =    nameType!=    null?    nameType.getName()    :   "null   ";    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
182	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  ruleType.getName()  : "null ";  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  ruleType.getName()  : "null ";  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  ruleType.getName()  : "null ";	  this.nameType    =    nameType!=    null?    nameType.getName()    :   "null   ";    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
183	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  : "  <  null> ";  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  : "  <  null> ";  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.getName()  : "  <  null> ";	  this.nameType    =    nameType!=    null?    nameType.getName()    :   "null   ";    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
184	[BUG]  [BUGGY]  this.nameType  =  ruleType.toString(),  concat;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType.toString(),  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType.toString(),  concat;	  this.nameType    =    nameType.toString(),    concat;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
185	[BUG]  [BUGGY]  this.nameType  =  nameType.toString(),  concat,  false;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toString(),  concat,  false;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toString(),  concat,  false;	  this.nameType    =    nameType.toString(),    concat;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
186	[BUG]  [BUGGY]  this.nameType  =  nameType.toString(),  concat,  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toString(),  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toString(),  concat,	  this.nameType    =    nameType.toString(),    concat;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
187	[BUG]  [BUGGY]  this.nameType  =  nameType.toString(),  concat,  false);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toString(),  concat,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toString(),  concat,  false);	  this.nameType    =    nameType.toString(),    concat;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
188	[BUG]  [BUGGY]  this.nameType  =  nameType.toString(),  concat,  null;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toString(),  concat,  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toString(),  concat,  null;	  this.nameType    =    nameType.toString(),    concat;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
189	[BUG]  [BUGGY]  this.nameType  =  nameType.toString(),  concat,  true;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toString(),  concat,  true;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toString(),  concat,  true;	  this.nameType    =    nameType.toString(),    concat;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
190	[BUG]  [BUGGY]  this.nameType  =  nameType.toString(),  concat,  DEFAULT_MAX_PHONEMES;  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toString(),  concat,  DEFAULT_MAX_PHONEMES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toString(),  concat,  DEFAULT_MAX_PHONEMES;	  this.nameType    =    nameType.toString(),    concat;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
191	[BUG]  [BUGGY]  this.nameType  =  nameType.toString(),  concat,  int  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toString(),  concat,  int  maxPhonemes;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toString(),  concat,  int  maxPhonemes;	  this.nameType    =    nameType.toString(),    concat;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
192	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    0,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
193	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  nameType)  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  maxPhonemes,  nameType)  {	  this(nameType,    ruleType,    concat,    0,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
194	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  0)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  0)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  0)  {	  this(nameType,    ruleType,    concat,    0,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
195	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  null)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  null)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  maxPhonemes,  null)  {	  this(nameType,    ruleType,    concat,    0,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
196	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  false)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  false)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  maxPhonemes,  false)  {	  this(nameType,    ruleType,    concat,    0,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
197	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  0)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  0)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  maxPhonemes,  0)  {	  this(nameType,    ruleType,    concat,    0,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
198	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  0);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  0);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  maxPhonemes,  0);	  this(nameType,    ruleType,    concat,    0,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
199	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    0,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
200	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES);	  super(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	170	None	replace
201	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  NAME_PREFIXES);	  super(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	170	None	replace
202	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0);  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0);	  super(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	170	None	replace
203	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES);	  super(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	170	None	replace
204	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES);	  super(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	170	None	replace
205	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  MAX_PHONEMES);	  super(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	170	None	replace
206	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PARENTHESES);  [CE]  illegal  start  of  type  [FE]                                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PARENTHESES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PARENTHESES);	  super(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	170	None	replace
207	[BUG]  [BUGGY]  this.maxPhonemes,  final  boolean  concat)  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes,  final  boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes,  final  boolean  concat)  {	  final    int    maxPhonemes,    final    boolean    concat)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
208	[BUG]  [BUGGY]  this.maxPhonemes,  maxPhonemes,  concat)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes,  maxPhonemes,  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes,  maxPhonemes,  concat)  {	  final    int    maxPhonemes,    final    boolean    concat)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
209	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  byte  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  byte  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  byte  concat)  {	  final    int    maxPhonemes,    final    boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	42	None	replace
210	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  long  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  long  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  long  concat)  {	  final    int    maxPhonemes,    final    boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	42	None	replace
211	[BUG]  [BUGGY]  nameType,  ruleType,  Concat,  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  Concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  Concat,	  this.nameType,    nameType,    Concat,    	non-compiled	[CE]  <identifier>  expected	12	None	replace
212	[BUG]  [BUGGY]  This.nameType,  ruleType,  Concat,  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.nameType,  ruleType,  Concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType,  ruleType,  Concat,	  this.nameType,    nameType,    Concat,    	non-compiled	[CE]  <identifier>  expected	12	None	replace
213	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType,  concat,  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.ruleType  =  ruleType,  concat,	  this.nameType    =    nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	290	None	replace
214	[BUG]  [BUGGY]  this.nameType  =  nameType,  ruleType,  concat;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType,  ruleType,  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType,  ruleType,  concat;	  this.nameType    =    nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	290	None	replace
215	[BUG]  [BUGGY]  this.nameType  =  ruleType,  nameType,  concat,  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType,  nameType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType,  nameType,  concat,	  this.nameType    =    nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	290	None	replace
216	[BUG]  [BUGGY]  this.nameType  =  nameType,  ruleType,  concat,  @SuppressWarnings( "unchecked ")  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType,  ruleType,  concat,  @SuppressWarnings( "unchecked ")  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType,  ruleType,  concat,  @SuppressWarnings( "unchecked ")	  this.nameType    =    nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	290	None	replace
217	[BUG]  [BUGGY]  This.nameType  =  nameType,  ruleType,  concat,  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.nameType  =  nameType,  ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType  =  nameType,  ruleType,  concat,	  this.nameType    =    nameType,    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	290	None	replace
218	[BUG]  [BUGGY]  this.nameType  =  nameType,  ruleType,  Concat,  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType,  ruleType,  Concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType,  ruleType,  Concat,	  this.nameType    =    nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	290	None	replace
219	[BUG]  [BUGGY]  NameType  nameType  =  ruleType,  nameType,  concat,  [CE]  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType,  nameType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType,  nameType,  concat,	  this.nameType    =    nameType,    ruleType,    concat,    	non-compiled	[CE]  	290	None	replace
220	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  false,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  false,  maxPhonemes);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  false,  maxPhonemes);	  super(nameType,    ruleType,    concat,    false);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
221	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  false,  null);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  false,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  false,  null);	  super(nameType,    ruleType,    concat,    false);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
222	[BUG]  [BUGGY]  Super(nameType,  ruleType,  concat,  true);  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Super(nameType,  ruleType,  concat,  true);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Super(nameType,  ruleType,  concat,  true);	  super(nameType,    ruleType,    concat,    false);    	non-compiled	[CE]  <identifier>  expected	118	None	replace
223	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(ruleType.getName());  [CE]  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  new  NameType(ruleType.getName());  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  new  NameType(ruleType.getName());	  NameType    nameType    =    new    NameType(nameType.getName());    	non-compiled	[CE]  	87	None	replace
224	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.toString());  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  new  NameType(nameType.toString());  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  new  NameType(nameType.toString());	  NameType    nameType    =    new    NameType(nameType.getName());    	non-compiled	[CE]  	87	None	replace
225	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getSimpleName());  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  new  NameType(nameType.getSimpleName());  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  new  NameType(nameType.getSimpleName());	  NameType    nameType    =    new    NameType(nameType.getName());    	non-compiled	[CE]  	87	None	replace
226	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getQualifiedName());  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  new  NameType(nameType.getQualifiedName());  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  new  NameType(nameType.getQualifiedName());	  NameType    nameType    =    new    NameType(nameType.getName());    	non-compiled	[CE]  	87	None	replace
227	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getLanguage());  [CE]  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  new  NameType(nameType.getLanguage());  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  new  NameType(nameType.getLanguage());	  NameType    nameType    =    new    NameType(nameType.getName());    	non-compiled	[CE]  	87	None	replace
228	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName()  + ",  concat ");  [CE]  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName()  + ",  concat ");  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  new  NameType(nameType.getName()  + ",  concat ");	  NameType    nameType    =    new    NameType(nameType.getName());    	non-compiled	[CE]  	87	None	replace
229	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName()  +  1);  [CE]  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName()  +  1);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  new  NameType(nameType.getName()  +  1);	  NameType    nameType    =    new    NameType(nameType.getName());    	non-compiled	[CE]  	87	None	replace
230	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  null);  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  null);	  NameType    nameType,    RuleType    ruleType,    concat,    null);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
231	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this);  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this);	  NameType    nameType,    RuleType    ruleType,    concat,    null);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
232	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  NAME_PREFIXES);  [CE]  <identifier>  expected  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  NAME_PREFIXES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  NAME_PREFIXES);	  NameType    nameType,    RuleType    ruleType,    concat,    null);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
233	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat,  NAME_PREFIXES);  [CE]  <identifier>  expected  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat,  NAME_PREFIXES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  concat,  NAME_PREFIXES);	  NameType    nameType,    RuleType    ruleType,    concat,    null);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
234	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat,  null,  null);  [CE]  <identifier>  expected  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat,  null,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  concat,  null,  null);	  NameType    nameType,    RuleType    ruleType,    concat,    null);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
235	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  0);  [CE]  <identifier>  expected  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  0);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  0);	  NameType    nameType,    RuleType    ruleType,    concat,    null);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
236	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  null,  null);  [CE]  <identifier>  expected  [FE]                                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  null,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  null,  null);	  NameType    nameType,    RuleType    ruleType,    concat,    null);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
237	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.toString()  :  ruleType.toString();  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.toString()  :  ruleType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.toString()  :  ruleType.toString();	  this.nameType    =    nameType    ==    null?    nameType.toString()    :    nameType.toString();    	non-compiled	[CE]  illegal  start  of  type	301	None	replace
238	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.toString()  :  ruleType.toString();  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.toString()  :  ruleType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.toString()  :  ruleType.toString();	  this.nameType    =    nameType    ==    null?    nameType.toString()    :    nameType.toString();    	non-compiled	[CE]  illegal  start  of  type	301	None	replace
239	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  ruleType.toString()  :  nameType.toString();  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  ruleType.toString()  :  nameType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  ruleType.toString()  :  nameType.toString();	  this.nameType    =    nameType    ==    null?    nameType.toString()    :    nameType.toString();    	non-compiled	[CE]  illegal  start  of  type	301	None	replace
240	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  nameType.toString();  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  nameType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.getName()  :  nameType.toString();	  this.nameType    =    nameType    ==    null?    nameType.toString()    :    nameType.toString();    	non-compiled	[CE]  illegal  start  of  type	301	None	replace
241	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  defULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  defULT_MAX_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  defULT_MAX_PHONEMES);	  this.nameType,    nameType,    concat,    defULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	322	None	replace
242	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  defULT_MAX_PHONEMES);  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  defULT_MAX_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  defULT_MAX_PHONEMES);	  this.nameType,    nameType,    concat,    defULT_MAX_PHONEMES);    	non-compiled	[CE]  <identifier>  expected	322	None	replace
243	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  defulT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  defulT_MAX_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  defulT_MAX_PHONEMES);	  this.nameType,    nameType,    concat,    defULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	322	None	replace
244	[BUG]  [BUGGY]  nameType,  ruleType,  concat,  defULT_MAX_PHONEMES);  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  concat,  defULT_MAX_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat,  defULT_MAX_PHONEMES);	  this.nameType,    nameType,    concat,    defULT_MAX_PHONEMES);    	non-compiled	[CE]  <identifier>  expected	322	None	replace
245	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  defULT_MAX_PHONEMES,  DEFAULT_PREFIXES);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  concat,  defULT_MAX_PHONEMES,  DEFAULT_PREFIXES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  defULT_MAX_PHONEMES,  DEFAULT_PREFIXES);	  this.nameType,    nameType,    concat,    defULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	322	None	replace
246	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes  +  1);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes  +  1);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes  +  1);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes    +    1);    	non-compiled	[CE]  illegal  start  of  type	221	None	replace
247	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes  +  2);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes  +  2);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes  +  2);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes    +    1);    	non-compiled	[CE]  illegal  start  of  type	221	None	replace
248	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes  +  1,  nameType);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes  +  1,  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes  +  1,  nameType);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes    +    1);    	non-compiled	[CE]  illegal  start  of  type	221	None	replace
249	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes  +  1,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes  +  1,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes  +  1,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes    +    1);    	non-compiled	[CE]  illegal  start  of  type	221	None	replace
250	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes  +  1);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes  +  1);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes  +  1);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes    +    1);    	non-compiled	[CE]  illegal  start  of  type	221	None	replace
251	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes  +  1);  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes  +  1);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  maxPhonemes  +  1);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes    +    1);    	non-compiled	[CE]  illegal  start  of  type	221	None	replace
252	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i  +  1,  maxPhonemes  +  1);  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i  +  1,  maxPhonemes  +  1);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i  +  1,  maxPhonemes  +  1);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes    +    1);    	non-compiled	[CE]  illegal  start  of  type	221	None	replace
253	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes  +  3);  [CE]  illegal  start  of  type  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes  +  3);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes  +  3);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes    +    1);    	non-compiled	[CE]  illegal  start  of  type	221	None	replace
254	[BUG]  [BUGGY]  this.nameType  =  nameType,  ruleType.getName();  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType,  ruleType.getName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType,  ruleType.getName();	  this.nameType    =    ruleType.getName();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
255	[BUG]  [BUGGY]  This.nameType  =  nameType.getName();  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.nameType  =  nameType.getName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType  =  nameType.getName();	  this.nameType    =    ruleType.getName();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
256	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  0,  0);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  0,  0);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  0,  0);	  this.nameType,    nameType,    concat,    0);    	non-compiled	[CE]  illegal  start  of  type	248	None	replace
257	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  1);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  concat,  1);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  1);	  this.nameType,    nameType,    concat,    0);    	non-compiled	[CE]  illegal  start  of  type	248	None	replace
258	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  0,  0);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  concat,  0,  0);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  0,  0);	  this.nameType,    nameType,    concat,    0);    	non-compiled	[CE]  illegal  start  of  type	248	None	replace
259	[BUG]  [BUGGY]  nameType,  ruleType,  concat,  0);  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  concat,  0);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat,  0);	  this.nameType,    nameType,    concat,    0);    	non-compiled	[CE]  <identifier>  expected	248	None	replace
260	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  false);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  concat,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  false);	  this.nameType,    nameType,    concat,    0);    	non-compiled	[CE]  illegal  start  of  type	248	None	replace
261	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  0,  null);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  concat,  0,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  0,  null);	  this.nameType,    nameType,    concat,    0);    	non-compiled	[CE]  illegal  start  of  type	248	None	replace
262	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
263	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
264	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_NAME_PREFIXES,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_NAME_PREFIXES,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_NAME_PREFIXES,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
265	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_PREFIXES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
266	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  DEFAULT_PREFIXES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  DEFAULT_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  DEFAULT_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
267	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PLREFIXES,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PLREFIXES,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PLREFIXES,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
268	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
269	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  nameType);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  nameType);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
270	[BUG]  [BUGGY]  this.phonemeBuilder  =  Lang.instance(nameType);  this.maxPhonemes  =  concat;  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Lang.instance(nameType);  this.maxPhonemes  =  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Lang.instance(nameType);  this.maxPhonemes  =  concat;	  this.phonemeBuilder    =    Lang.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	281	None	replace
271	[BUG]  [BUGGY]  this.phonemeBuilder  =  Lang.instance(nameType,  concat);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Lang.instance(nameType,  concat);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Lang.instance(nameType,  concat);  this.maxPhonemes  =  maxPhonemes;	  this.phonemeBuilder    =    Lang.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	281	None	replace
272	[BUG]  [BUGGY]  this.phonemeBuilder  =  Lang.instance(ruleType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Lang.instance(ruleType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Lang.instance(ruleType);  this.maxPhonemes  =  maxPhonemes;	  this.phonemeBuilder    =    Lang.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	281	None	replace
273	[BUG]  [BUGGY]  this.phonemeBuilder  =  Long.instance(nameType);  this.maxPhonemes  =  concat;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Long.instance(nameType);  this.maxPhonemes  =  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Long.instance(nameType);  this.maxPhonemes  =  concat;	  this.phonemeBuilder    =    Lang.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	281	None	replace
274	[BUG]  [BUGGY]  this.phonemeBuilder  =  lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;	  this.phonemeBuilder    =    Lang.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	281	None	replace
275	[BUG]  [BUGGY]  this.phonemeBuilder  =  Lang.instance(nameType);  this.maxPhonemes  =  concat?  maxPhonemes  :  1;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Lang.instance(nameType);  this.maxPhonemes  =  concat?  maxPhonemes  :  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Lang.instance(nameType);  this.maxPhonemes  =  concat?  maxPhonemes  :  1;	  this.phonemeBuilder    =    Lang.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	281	None	replace
276	[BUG]  [BUGGY]  this.phonemeBuilder  =  Lang.instance(nameType);  this.maxPhonemes  =  0;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Lang.instance(nameType);  this.maxPhonemes  =  0;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Lang.instance(nameType);  this.maxPhonemes  =  0;	  this.phonemeBuilder    =    Lang.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	281	None	replace
277	[BUG]  [BUGGY]  Preconditions.checkState(nameType  ==  null);  this.nameType  =  nameType;  [CE]  <identifier>  expected  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Preconditions.checkState(nameType  ==  null);  this.nameType  =  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Preconditions.checkState(nameType  ==  null);  this.nameType  =  nameType;	  Preconditions.checkState(nameType!=    null);    this.nameType    =    nameType;    	non-compiled	[CE]  <identifier>  expected	325	None	replace
278	[BUG]  [BUGGY]  Preconditions.checkState(nameType!=  null);  this.nameType  =  ruleType;  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Preconditions.checkState(nameType!=  null);  this.nameType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Preconditions.checkState(nameType!=  null);  this.nameType  =  ruleType;	  Preconditions.checkState(nameType!=    null);    this.nameType    =    nameType;    	non-compiled	[CE]  <identifier>  expected	325	None	replace
279	[BUG]  [BUGGY]  Preconditions.checkState(nameType  ==  null);  this.nameType  =  ruleType;  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Preconditions.checkState(nameType  ==  null);  this.nameType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Preconditions.checkState(nameType  ==  null);  this.nameType  =  ruleType;	  Preconditions.checkState(nameType!=    null);    this.nameType    =    nameType;    	non-compiled	[CE]  <identifier>  expected	325	None	replace
280	[BUG]  [BUGGY]  Preconditions.checkNotNull(nameType);  this.nameType  =  nameType;  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Preconditions.checkNotNull(nameType);  this.nameType  =  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Preconditions.checkNotNull(nameType);  this.nameType  =  nameType;	  Preconditions.checkState(nameType!=    null);    this.nameType    =    nameType;    	non-compiled	[CE]  <identifier>  expected	325	None	replace
281	[BUG]  [BUGGY]  Preconditions.checkState(ruleType!=  null);  this.nameType  =  nameType;  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Preconditions.checkState(ruleType!=  null);  this.nameType  =  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Preconditions.checkState(ruleType!=  null);  this.nameType  =  nameType;	  Preconditions.checkState(nameType!=    null);    this.nameType    =    nameType;    	non-compiled	[CE]  <identifier>  expected	325	None	replace
282	[BUG]  [BUGGY]  Context.checkState(nameType!=  null);  this.nameType  =  nameType;  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Context.checkState(nameType!=  null);  this.nameType  =  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Context.checkState(nameType!=  null);  this.nameType  =  nameType;	  Preconditions.checkState(nameType!=    null);    this.nameType    =    nameType;    	non-compiled	[CE]  <identifier>  expected	325	None	replace
283	[BUG]  [BUGGY]  Preconditions.checkArgument(nameType!=  null);  this.nameType  =  nameType;  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Preconditions.checkArgument(nameType!=  null);  this.nameType  =  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Preconditions.checkArgument(nameType!=  null);  this.nameType  =  nameType;	  Preconditions.checkState(nameType!=    null);    this.nameType    =    nameType;    	non-compiled	[CE]  <identifier>  expected	325	None	replace
284	[BUG]  [BUGGY]  this.nameType  =  nameType.getName();  this.ruleType,  concat,  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getName();  this.ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getName();  this.ruleType,  concat,	  this.nameType    =    nameType;    this.ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	242	None	replace
285	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,	  this.nameType    =    nameType;    this.ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	242	None	replace
286	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  maxPhonemes  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  maxPhonemes  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  maxPhonemes	  NameType    nameType,    ruleType,    concat,    this.maxPhonemes    	non-compiled	[CE]  <identifier>  expected	278	None	replace
287	[BUG]  [BUGGY]  nameType,  ruleType,  concat,  this.maxPhonemes  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  concat,  this.maxPhonemes  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat,  this.maxPhonemes	  NameType    nameType,    ruleType,    concat,    this.maxPhonemes    	non-compiled	[CE]  <identifier>  expected	278	None	replace
288	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes;  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.maxPhonemes;	  NameType    nameType,    ruleType,    concat,    this.maxPhonemes    	non-compiled	[CE]  <identifier>  expected	278	None	replace
289	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  false,  this.maxPhonemes  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  false,  this.maxPhonemes  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  false,  this.maxPhonemes	  NameType    nameType,    ruleType,    concat,    this.maxPhonemes    	non-compiled	[CE]  <identifier>  expected	278	None	replace
290	[BUG]  [BUGGY]  nameType,  ruleType,  concat,  maxPhonemes  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  concat,  maxPhonemes  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat,  maxPhonemes	  NameType    nameType,    ruleType,    concat,    this.maxPhonemes    	non-compiled	[CE]  <identifier>  expected	278	None	replace
291	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  null,  this.maxPhonemes  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  null,  this.maxPhonemes  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  null,  this.maxPhonemes	  NameType    nameType,    ruleType,    concat,    this.maxPhonemes    	non-compiled	[CE]  <identifier>  expected	278	None	replace
292	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.minPhonemes  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.minPhonemes  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.minPhonemes	  NameType    nameType,    ruleType,    concat,    this.maxPhonemes    	non-compiled	[CE]  <identifier>  expected	278	None	replace
293	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes  +  1;  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes  +  1;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.maxPhonemes  +  1;	  NameType    nameType,    ruleType,    concat,    this.maxPhonemes    	non-compiled	[CE]  <identifier>  expected	278	None	replace
294	[BUG]  [BUGGY]  this.minPhonemes  =  concat;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.minPhonemes  =  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.minPhonemes  =  concat;	  this.minPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
295	[BUG]  [BUGGY]  this.minPhonemes  =  DEFAULT_MAX_PHONEMES;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.minPhonemes  =  DEFAULT_MAX_PHONEMES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.minPhonemes  =  DEFAULT_MAX_PHONEMES;	  this.minPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
296	[BUG]  [BUGGY]  this.minPhonemes  =  minPhonemes;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.minPhonemes  =  minPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.minPhonemes  =  minPhonemes;	  this.minPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
297	[BUG]  [BUGGY]  this.minPhonemes  =  DEFAULT_MIN_PHONEMES;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.minPhonemes  =  DEFAULT_MIN_PHONEMES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.minPhonemes  =  DEFAULT_MIN_PHONEMES;	  this.minPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
298	[BUG]  [BUGGY]  this.minPhonemes  =  0;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.minPhonemes  =  0;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.minPhonemes  =  0;	  this.minPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
299	[BUG]  [BUGGY]  this.minPhonemes  =  maxPhonemes  -  1;  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.minPhonemes  =  maxPhonemes  -  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.minPhonemes  =  maxPhonemes  -  1;	  this.minPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
300	[BUG]  [BUGGY]  this.minPhonemes  =  maxPhonemes  +  1;  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.minPhonemes  =  maxPhonemes  +  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.minPhonemes  =  maxPhonemes  +  1;	  this.minPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
301	[BUG]  [BUGGY]  this.minPhonemes  =  MAX_PHONEMES;  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.minPhonemes  =  MAX_PHONEMES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.minPhonemes  =  MAX_PHONEMES;	  this.minPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
302	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES  ||  nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES  ||  nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES  ||  nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }	  if(nameType    ==    RuleType.NAME_PREFIXES)    {    super(nameType);    this.ruleType    =    ruleType;    }    	non-compiled	[CE]  illegal  start  of  type	252	None	replace
303	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  }	  if(nameType    ==    RuleType.NAME_PREFIXES)    {    super(nameType);    this.ruleType    =    ruleType;    }    	non-compiled	[CE]  illegal  start  of  type	252	None	replace
304	[BUG]  [BUGGY]  NameType  nameType  =  nameType.getReferenceName();  this.ruleType  =  ruleType;  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  nameType.getReferenceName();  this.ruleType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  nameType.getReferenceName();  this.ruleType  =  ruleType;	  if(nameType    ==    RuleType.NAME_PREFIXES)    {    super(nameType);    this.ruleType    =    ruleType;    }    	non-compiled	[CE]  	252	None	replace
305	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  type	312	None	replace
306	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_SYNTHETIC);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_SYNTHETIC);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_SYNTHETIC);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  type	312	None	replace
307	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_SYNTHETIC,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_SYNTHETIC,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_SYNTHETIC,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  type	312	None	replace
308	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_NAME_PREFIXES,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_NAME_PREFIXES,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_NAME_PREFIXES,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  type	312	None	replace
309	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC,  nameType);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC,  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC,  nameType);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  type	312	None	replace
310	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC,  0);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC,  0);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC,  0);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  type	312	None	replace
311	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC,  DEFAULT_PREFIXES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC,  DEFAULT_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC,  DEFAULT_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  type	312	None	replace
312	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  type	312	None	replace
313	[BUG]  [BUGGY]  This.nameType  =  nameType.getReferenceName();  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.nameType  =  nameType.getReferenceName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType  =  nameType.getReferenceName();	  this.nameType    =    ruleType.getReferenceName();    	non-compiled	[CE]  <identifier>  expected	141	None	replace
314	[BUG]  [BUGGY]  this.nameType  =  nameType.getRefName();  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getRefName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getRefName();	  this.nameType    =    ruleType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
315	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  int  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  int  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  int  concat)  {	  final    boolean    maxPhonemes,    int    nameType)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	197	None	replace
316	[BUG]  [BUGGY]  final  int  maxPhonemes,  int  nameType)  {  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  int  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  int  nameType)  {	  final    boolean    maxPhonemes,    int    nameType)    {    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	197	None	replace
317	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  int  ruleType)  {  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  int  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  int  ruleType)  {	  final    boolean    maxPhonemes,    int    nameType)    {    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine	197	None	replace
318	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  long  nameType)  {  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  long  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  long  nameType)  {	  final    boolean    maxPhonemes,    int    nameType)    {    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	197	None	replace
319	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  Integer  nameType)  {  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  Integer  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  Integer  nameType)  {	  final    boolean    maxPhonemes,    int    nameType)    {    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	197	None	replace
320	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  final  int  nameType)  {  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  final  int  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  final  int  nameType)  {	  final    boolean    maxPhonemes,    int    nameType)    {    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	197	None	replace
321	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  int  type)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  int  type)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  int  type)  {	  final    boolean    maxPhonemes,    int    nameType)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	197	None	replace
322	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getQualifiedName(),  concat;  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getQualifiedName(),  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getQualifiedName(),  concat;	  NameType    nameType    =    ruleType.getQualifiedName();    	non-compiled	[CE]  	137	None	replace
323	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getQualifiedName()  +  1;  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getQualifiedName()  +  1;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getQualifiedName()  +  1;	  NameType    nameType    =    ruleType.getQualifiedName();    	non-compiled	[CE]  	137	None	replace
324	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRawQualifiedName();  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getRawQualifiedName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getRawQualifiedName();	  NameType    nameType    =    ruleType.getQualifiedName();    	non-compiled	[CE]  	137	None	replace
325	[BUG]  [BUGGY]  Preconditions.checkState(nameType.getName().equals(ruleType.getName()),  ruleType,  concat,  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Preconditions.checkState(nameType.getName().equals(ruleType.getName()),  ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Preconditions.checkState(nameType.getName().equals(ruleType.getName()),  ruleType,  concat,	  This.nameType,    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	134	None	replace
326	[BUG]  [BUGGY]  Preconditions.checkState(nameType.getName().equals(ruleType.getName()));  this.nameType,  ruleType,  concat,  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Preconditions.checkState(nameType.getName().equals(ruleType.getName()));  this.nameType,  ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Preconditions.checkState(nameType.getName().equals(ruleType.getName()));  this.nameType,  ruleType,  concat,	  This.nameType,    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	134	None	replace
327	[BUG]  [BUGGY]  Preconditions.checkState(nameType.getName().equals( "name "));  this.nameType,  ruleType,  concat,  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Preconditions.checkState(nameType.getName().equals( "name "));  this.nameType,  ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Preconditions.checkState(nameType.getName().equals( "name "));  this.nameType,  ruleType,  concat,	  This.nameType,    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	134	None	replace
328	[BUG]  [BUGGY]  Preconditions.checkState(nameType.isUnknownType());  this.nameType,  ruleType,  concat,  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Preconditions.checkState(nameType.isUnknownType());  this.nameType,  ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Preconditions.checkState(nameType.isUnknownType());  this.nameType,  ruleType,  concat,	  This.nameType,    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	134	None	replace
329	[BUG]  [BUGGY]  Preconditions.checkState(nameType.getName().equals(ruleType.getName()),  nameType,  concat,  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Preconditions.checkState(nameType.getName().equals(ruleType.getName()),  nameType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Preconditions.checkState(nameType.getName().equals(ruleType.getName()),  nameType,  concat,	  This.nameType,    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	134	None	replace
330	[BUG]  [BUGGY]  this.maxPhonemes,  concat)  {  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes,  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes,  concat)  {	  final    int    maxPhonemes,    final    concat)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
331	[BUG]  [BUGGY]  this.nameType  =  nameType.getName();  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getName();  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getName();  this.maxPhonemes  =  maxPhonemes;	  final    int    maxPhonemes,    final    concat)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
332	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  false);  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  false);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  false);	  final    int    maxPhonemes,    final    concat)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
333	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  null);  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  null);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  null);	  final    int    maxPhonemes,    final    concat)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
334	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  1);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  1);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  1);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    0);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
335	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0,  0);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0,  0);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0,  0);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    0);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
336	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  2);  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  2);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  2);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    0);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
337	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0,  null);  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0,  null);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0,  null);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    0);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
338	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  3);  [CE]  illegal  start  of  type  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  3);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  3);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    0);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
339	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0);  [CE]  illegal  start  of  type  [FE]                                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    0);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
340	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  4);  [CE]  illegal  start  of  type  [FE]                                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  4);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  4);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    0);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
341	[BUG]  [BUGGY]  this.nameType  =  ruleType.toLowerCase();  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType.toLowerCase();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType.toLowerCase();	  this.nameType    =    nameType.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
342	[BUG]  [BUGGY]  this.nameType  =  nameType.toLowerCase(concat);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toLowerCase(concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toLowerCase(concat);	  this.nameType    =    nameType.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
343	[BUG]  [BUGGY]  this.nameType  =  nameType.toLowerCase(),  concat;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toLowerCase(),  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toLowerCase(),  concat;	  this.nameType    =    nameType.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
344	[BUG]  [BUGGY]  this.nameType  =  nameType.toLowerCase()  +  1;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toLowerCase()  +  1;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toLowerCase()  +  1;	  this.nameType    =    nameType.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
345	[BUG]  [BUGGY]  this.nameType  =  nameType.toLowerCase(),  concat);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toLowerCase(),  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toLowerCase(),  concat);	  this.nameType    =    nameType.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
346	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  NAME_PREFIXES,  null)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  NAME_PREFIXES,  null)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  NAME_PREFIXES,  null)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    null)    {    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
347	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  null)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  null)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  null)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    null)    {    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
348	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null,  NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null,  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null,  NAME_PREFIXES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    null)    {    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
349	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null,  nameType)  {  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null,  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null,  nameType)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    null)    {    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
350	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i,  maxPhonemes,  null)  {  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i,  maxPhonemes,  null)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i,  maxPhonemes,  null)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    null)    {    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
351	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  nameType,  null)  {  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  nameType,  null)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  nameType,  null)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    null)    {    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
352	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes,  null)  {  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes,  null)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes,  null)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    null)    {    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
353	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  false);  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  false);	  this.nameType,    ruleType,    concat,    true);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
354	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  true);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  concat,  true);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  true);	  this.nameType,    ruleType,    concat,    true);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
355	[BUG]  [BUGGY]  This.nameType,  ruleType,  concat,  false);  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.nameType,  ruleType,  concat,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType,  ruleType,  concat,  false);	  this.nameType,    ruleType,    concat,    true);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
356	[BUG]  [BUGGY]  nameType,  ruleType,  concat,  false);  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  concat,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat,  false);	  this.nameType,    ruleType,    concat,    true);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
357	[BUG]  [BUGGY]  this.nameType,  ruleType,  Concat,  false);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  Concat,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  Concat,  false);	  this.nameType,    ruleType,    concat,    true);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
358	[BUG]  [BUGGY]  NameType  ruleType,  final  ruleType,  concat,  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType,  final  ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType,  final  ruleType,  concat,	  NameType    ruleType,    nameType,    concat,    	non-compiled	[CE]  <identifier>  expected	280	None	replace
359	[BUG]  [BUGGY]  RuleType  ruleType,  nameType,  concat,  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  RuleType  ruleType,  nameType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	RuleType  ruleType,  nameType,  concat,	  NameType    ruleType,    nameType,    concat,    	non-compiled	[CE]  <identifier>  expected	280	None	replace
360	[BUG]  [BUGGY]  NameType  ruleType,  boolean  concat,  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType,  boolean  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType,  boolean  concat,	  NameType    ruleType,    nameType,    concat,    	non-compiled	[CE]  illegal  start  of  type	280	None	replace
361	[BUG]  [BUGGY]  NameType  ruleType,  null,  concat,  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType,  null,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType,  null,  concat,	  NameType    ruleType,    nameType,    concat,    	non-compiled	[CE]  illegal  start  of  type	280	None	replace
362	[BUG]  [BUGGY]  NameType  ruleType,  concat,  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType,  concat,	  NameType    ruleType,    nameType,    concat,    	non-compiled	[CE]  <identifier>  expected	280	None	replace
363	[BUG]  [BUGGY]  NameType  ruleType,  nameType,  Concat,  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType,  nameType,  Concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType,  nameType,  Concat,	  NameType    ruleType,    nameType,    concat,    	non-compiled	[CE]  <identifier>  expected	280	None	replace
364	[BUG]  [BUGGY]  Preconditions.checkState(nameType.equals(ruleType.nameType));  this.nameType,  nameType,  concat,  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Preconditions.checkState(nameType.equals(ruleType.nameType));  this.nameType,  nameType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Preconditions.checkState(nameType.equals(ruleType.nameType));  this.nameType,  nameType,  concat,	  This.nameType,    nameType,    concat,    	non-compiled	[CE]  <identifier>  expected	11	None	replace
365	[BUG]  [BUGGY]  super(nameType,  ruleType.nameType,  concat);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType.nameType,  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.nameType,  concat);	  super(nameType,    ruleType.nameType);    	non-compiled	[CE]  illegal  start  of  type	320	None	replace
366	[BUG]  [BUGGY]  this(nameType,  ruleType.nameType,  concat);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType.nameType,  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType.nameType,  concat);	  super(nameType,    ruleType.nameType);    	non-compiled	[CE]  illegal  start  of  type	320	None	replace
367	[BUG]  [BUGGY]  super(nameType,  ruleType.name);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType.name);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.name);	  super(nameType,    ruleType.nameType);    	non-compiled	[CE]  illegal  start  of  type	320	None	replace
368	[BUG]  [BUGGY]  super(ruleType,  nameType.nameType);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(ruleType,  nameType.nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(ruleType,  nameType.nameType);	  super(nameType,    ruleType.nameType);    	non-compiled	[CE]  illegal  start  of  type	320	None	replace
369	[BUG]  [BUGGY]  super(nameType.nameType,  ruleType.nameType);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType.nameType,  ruleType.nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType.nameType,  ruleType.nameType);	  super(nameType,    ruleType.nameType);    	non-compiled	[CE]  illegal  start  of  type	320	None	replace
370	[BUG]  [BUGGY]  super(nameType.getName(),  concat);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType.getName(),  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType.getName(),  concat);	  super(nameType.getName());    	non-compiled	[CE]  illegal  start  of  type	183	None	replace
371	[BUG]  [BUGGY]  super(nameType,  ruleType.getName());  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType.getName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.getName());	  super(nameType.getName());    	non-compiled	[CE]  illegal  start  of  type	183	None	replace
372	[BUG]  [BUGGY]  super(nameType.getSimpleName());  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType.getSimpleName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType.getSimpleName());	  super(nameType.getName());    	non-compiled	[CE]  illegal  start  of  type	183	None	replace
373	[BUG]  [BUGGY]  super(ruleType.getName());  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(ruleType.getName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(ruleType.getName());	  super(nameType.getName());    	non-compiled	[CE]  illegal  start  of  type	183	None	replace
374	[BUG]  [BUGGY]  super(nameType.getQualifiedName());  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType.getQualifiedName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType.getQualifiedName());	  super(nameType.getName());    	non-compiled	[CE]  illegal  start  of  type	183	None	replace
375	[BUG]  [BUGGY]  super(nameType.getName()  + ", "  +  concat);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType.getName()  + ", "  +  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType.getName()  + ", "  +  concat);	  super(nameType.getName());    	non-compiled	[CE]  illegal  start  of  type	183	None	replace
376	[BUG]  [BUGGY]  super(nameType.toString());  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType.toString());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType.toString());	  super(nameType.getName());    	non-compiled	[CE]  illegal  start  of  type	183	None	replace
377	[BUG]  [BUGGY]  nameType,  ruleType,  concat,  null);  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  concat,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat,  null);	  nameType,    ruleType,    concat);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
378	[BUG]  [BUGGY]  nameType,  ruleType,  concat,  true);  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  concat,  true);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat,  true);	  nameType,    ruleType,    concat);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
379	[BUG]  [BUGGY]  nameType,  ruleType,  concat,  this);  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  concat,  this);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat,  this);	  nameType,    ruleType,    concat);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
380	[BUG]  [BUGGY]  super(nameType,  ruleType);  this.ruleType  =  concat;  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType);  this.ruleType  =  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType);  this.ruleType  =  concat;	  super(nameType,    ruleType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
381	[BUG]  [BUGGY]  setRuleType(ruleType,  nameType);  this.ruleType  =  ruleType;  [CE]  <identifier>  expected  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  setRuleType(ruleType,  nameType);  this.ruleType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	setRuleType(ruleType,  nameType);  this.ruleType  =  ruleType;	  super(nameType,    ruleType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
382	[BUG]  [BUGGY]  super(nameType,  ruleType);  this.ruleType  =  null;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType);  this.ruleType  =  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType);  this.ruleType  =  null;	  super(nameType,    ruleType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
383	[BUG]  [BUGGY]  set(nameType,  ruleType);  this.ruleType  =  ruleType;  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  set(nameType,  ruleType);  this.ruleType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	set(nameType,  ruleType);  this.ruleType  =  ruleType;	  super(nameType,    ruleType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  <identifier>  expected	100	None	replace
384	[BUG]  [BUGGY]  super(nameType,  ruleType);  this.ruleType  =  new  RuleType();  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType);  this.ruleType  =  new  RuleType();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType);  this.ruleType  =  new  RuleType();	  super(nameType,    ruleType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
385	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  NAME_PREFIXES,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    NAME_PREFIXES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	215	None	replace
386	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  DEFAULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  DEFAULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  NAME_PREFIXES,  DEFAULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    NAME_PREFIXES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	215	None	replace
387	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    NAME_PREFIXES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	215	None	replace
388	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    NAME_PREFIXES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	215	None	replace
389	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes)	  this(nameType,    ruleType,    concat,    NAME_PREFIXES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	215	None	replace
390	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes));  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes));  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes));	  this(nameType,    ruleType,    concat,    NAME_PREFIXES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	215	None	replace
391	[BUG]  [BUGGY]  this.phonemeBuilder  =  new  PhonemeBuilder(nameType);  this.maxPhonemes  =  concat;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  new  PhonemeBuilder(nameType);  this.maxPhonemes  =  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  new  PhonemeBuilder(nameType);  this.maxPhonemes  =  concat;	  this.phonemeBuilder    =    new    PhonemeBuilder(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
392	[BUG]  [BUGGY]  this.phonemeBuilder  =  new  PhonemeBuilder(nameType,  concat);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  new  PhonemeBuilder(nameType,  concat);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  new  PhonemeBuilder(nameType,  concat);  this.maxPhonemes  =  maxPhonemes;	  this.phonemeBuilder    =    new    PhonemeBuilder(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
393	[BUG]  [BUGGY]  this.phonemeBuilder  =  new  PhonemeBuilder(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  new  PhonemeBuilder(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  new  PhonemeBuilder(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;	  this.phonemeBuilder    =    new    PhonemeBuilder(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
394	[BUG]  [BUGGY]  this.phonemeBuilder  =  new  PhonemeBuilder(this.nameType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  new  PhonemeBuilder(this.nameType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  new  PhonemeBuilder(this.nameType);  this.maxPhonemes  =  maxPhonemes;	  this.phonemeBuilder    =    new    PhonemeBuilder(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
395	[BUG]  [BUGGY]  this.phonemeBuilder  =  new  PhonemeBuilder(nameType);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  new  PhonemeBuilder(nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  new  PhonemeBuilder(nameType);	  this.phonemeBuilder    =    new    PhonemeBuilder(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
396	[BUG]  [BUGGY]  this.phonemeBuilder  =  new  PhonemeBuilder(ruleType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  new  PhonemeBuilder(ruleType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  new  PhonemeBuilder(ruleType);  this.maxPhonemes  =  maxPhonemes;	  this.phonemeBuilder    =    new    PhonemeBuilder(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
397	[BUG]  [BUGGY]  this.phonemeBuilder  =  new  PhonemeBuilder(numberType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  new  PhonemeBuilder(numberType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  new  PhonemeBuilder(numberType);  this.maxPhonemes  =  maxPhonemes;	  this.phonemeBuilder    =    new    PhonemeBuilder(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
398	[BUG]  [BUGGY]  this.phonemeBuilder  =  new  PhonemeBuilder(concat);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  new  PhonemeBuilder(concat);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  new  PhonemeBuilder(concat);  this.maxPhonemes  =  maxPhonemes;	  this.phonemeBuilder    =    new    PhonemeBuilder(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
399	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  this.maxPhonemes);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  this.maxPhonemes);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  this.maxPhonemes);	  this.nameType,    nameType,    concat,    ruleType);    	non-compiled	[CE]  illegal  start  of  type	321	None	replace
400	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.nameType);  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.nameType);	  this.nameType,    nameType,    concat,    ruleType);    	non-compiled	[CE]  <identifier>  expected	321	None	replace
401	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.nameSequence);  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.nameSequence);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.nameSequence);	  this.nameType,    nameType,    concat,    ruleType);    	non-compiled	[CE]  <identifier>  expected	321	None	replace
402	[BUG]  [BUGGY]  setRuleType(nameType,  concat);  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  setRuleType(nameType,  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	setRuleType(nameType,  concat);	  setRuleType(nameType,    ruleType);    	non-compiled	[CE]  <identifier>  expected	158	None	replace
403	[BUG]  [BUGGY]  setRuleType(ruleType,  nameType);  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  setRuleType(ruleType,  nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	setRuleType(ruleType,  nameType);	  setRuleType(nameType,    ruleType);    	non-compiled	[CE]  <identifier>  expected	158	None	replace
404	[BUG]  [BUGGY]  setRuleType(nameType,  ruleType,  concat);  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  setRuleType(nameType,  ruleType,  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	setRuleType(nameType,  ruleType,  concat);	  setRuleType(nameType,    ruleType);    	non-compiled	[CE]  <identifier>  expected	158	None	replace
405	[BUG]  [BUGGY]  setNameType(nameType,  ruleType);  [CE]  <identifier>  expected  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  setNameType(nameType,  ruleType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	setNameType(nameType,  ruleType);	  setRuleType(nameType,    ruleType);    	non-compiled	[CE]  <identifier>  expected	158	None	replace
406	[BUG]  [BUGGY]  setFunctionType(nameType,  ruleType);  [CE]  <identifier>  expected  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  setFunctionType(nameType,  ruleType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	setFunctionType(nameType,  ruleType);	  setRuleType(nameType,    ruleType);    	non-compiled	[CE]  <identifier>  expected	158	None	replace
407	[BUG]  [BUGGY]  setConstructor(nameType,  concat);  [CE]  <identifier>  expected  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  setConstructor(nameType,  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	setConstructor(nameType,  concat);	  setRuleType(nameType,    ruleType);    	non-compiled	[CE]  <identifier>  expected	158	None	replace
408	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PHONEMES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	298	None	replace
409	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_PHONEMES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	298	None	replace
410	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	298	None	replace
411	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	298	None	replace
412	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  MAX_PHONEMES,  DEFAULT_PHONEMES);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  MAX_PHONEMES,  DEFAULT_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  MAX_PHONEMES,  DEFAULT_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	298	None	replace
413	[BUG]  [BUGGY]  this.nameType  =  ruleType.getLanguage();  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType.getLanguage();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType.getLanguage();	  this.nameType    =    nameType.getLanguage();    	non-compiled	[CE]  illegal  start  of  type	236	None	replace
414	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat)  {  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat)  {	  this.nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
415	[BUG]  [BUGGY]  this.nameType,  nameType,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  maxPhonemes)  {	  this.nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
416	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes)  {	  this.nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
417	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat)  {  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat)  {	  this.nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  <identifier>  expected	107	None	replace
418	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat);  this.nameType  =  nameType;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat);  this.nameType  =  nameType;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat);  this.nameType  =  nameType;	  this.nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
419	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes)  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes)  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes)	  this.nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
420	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :  NameType.NAME_PREFIXES  ||  nameType  instanceof  RuleType?  nameType  :  NameType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :  NameType.NAME_PREFIXES  ||  nameType  instanceof  RuleType?  nameType  :  NameType.NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?  nameType  :  NameType.NAME_PREFIXES  ||  nameType  instanceof  RuleType?  nameType  :  NameType.NAME_PREFIXES;	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
421	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :  NameType.NAME_PREFIXES,  concat;  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :  NameType.NAME_PREFIXES,  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?  nameType  :  NameType.NAME_PREFIXES,  concat;	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
422	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  NameType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  NameType.NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  NameType.NAME_PREFIXES;	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
423	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :  NameType.NAME_PREFIXES  ||  nameType  instanceof  RuleType;  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :  NameType.NAME_PREFIXES  ||  nameType  instanceof  RuleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?  nameType  :  NameType.NAME_PREFIXES  ||  nameType  instanceof  RuleType;	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
424	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :  NameType.NAME_PREFIXES  +  1;  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :  NameType.NAME_PREFIXES  +  1;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?  nameType  :  NameType.NAME_PREFIXES  +  1;	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
425	[BUG]  [BUGGY]  this.nameType  =  ruleType  instanceof  RuleType?  nameType  :  NameType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType  instanceof  RuleType?  nameType  :  NameType.NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType  instanceof  RuleType?  nameType  :  NameType.NAME_PREFIXES;	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
426	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.toString(),  concat,  ruleType.toString());  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.toString(),  concat,  ruleType.toString());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.toString(),  concat,  ruleType.toString());	  this.ruleType    =    new    RuleType(nameType.toString(),    ruleType.toString());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
427	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.toString(),  nameType.toString());  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.toString(),  nameType.toString());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.toString(),  nameType.toString());	  this.ruleType    =    new    RuleType(nameType.toString(),    ruleType.toString());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
428	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.toString(),  concat);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.toString(),  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.toString(),  concat);	  this.ruleType    =    new    RuleType(nameType.toString(),    ruleType.toString());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
429	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.toString(),  ruleType.toString(),  concat);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.toString(),  ruleType.toString(),  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.toString(),  ruleType.toString(),  concat);	  this.ruleType    =    new    RuleType(nameType.toString(),    ruleType.toString());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
430	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.toString(),  ruleType.toString()  +  1);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.toString(),  ruleType.toString()  +  1);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.toString(),  ruleType.toString()  +  1);	  this.ruleType    =    new    RuleType(nameType.toString(),    ruleType.toString());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
431	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType,  nameType.toString(),  ruleType.toString());  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType,  nameType.toString(),  ruleType.toString());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType,  nameType.toString(),  ruleType.toString());	  this.ruleType    =    new    RuleType(nameType.toString(),    ruleType.toString());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
432	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.toString(),  rules.toString());  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.toString(),  rules.toString());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.toString(),  rules.toString());	  this.ruleType    =    new    RuleType(nameType.toString(),    ruleType.toString());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
433	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType,  ruleType.toString(),  concat);  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType,  ruleType.toString(),  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType,  ruleType.toString(),  concat);	  this.ruleType    =    new    RuleType(nameType.toString(),    ruleType.toString());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
434	[BUG]  [BUGGY]  NameType  nameType,  ruleType)  {  this.nameType  =  nameType;  }  [CE]  <identifier>  expected  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType)  {  this.nameType  =  nameType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType)  {  this.nameType  =  nameType;  }	  NameType    nameType,    final    RuleType    ruleType)    {    this.nameType    =    nameType;    }    	non-compiled	[CE]  <identifier>  expected	324	None	replace
435	[BUG]  [BUGGY]  nameType,  ruleType)  {  this.nameType  =  nameType;  }  [CE]  <identifier>  expected  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType)  {  this.nameType  =  nameType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType)  {  this.nameType  =  nameType;  }	  NameType    nameType,    final    RuleType    ruleType)    {    this.nameType    =    nameType;    }    	non-compiled	[CE]  <identifier>  expected	324	None	replace
436	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType)  {  this.nameType  =  nameType;  }  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType)  {  this.nameType  =  nameType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType)  {  this.nameType  =  nameType;  }	  NameType    nameType,    final    RuleType    ruleType)    {    this.nameType    =    nameType;    }    	non-compiled	[CE]  illegal  start  of  type	324	None	replace
437	[BUG]  [BUGGY]  NameType  nameType,  final  RuleType  ruleType)  {  this.nameType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  final  RuleType  ruleType)  {  this.nameType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  final  RuleType  ruleType)  {  this.nameType  =  ruleType;  }	  NameType    nameType,    final    RuleType    ruleType)    {    this.nameType    =    nameType;    }    	non-compiled	[CE]  illegal  start  of  type	324	None	replace
438	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  @SuppressWarnings( "unchecked ")  [CE]  <identifier>  expected  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  @SuppressWarnings( "unchecked ")  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  @SuppressWarnings( "unchecked ")	  NameType    nameType,    ruleType,    boolean    concat,    	non-compiled	[CE]  <identifier>  expected	204	None	replace
439	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  @SuppressWarnings( "resource ")  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  @SuppressWarnings( "resource ")  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  @SuppressWarnings( "resource ")	  NameType    nameType,    ruleType,    boolean    concat,    	non-compiled	[CE]  <identifier>  expected	204	None	replace
440	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  @SuppressWarnings( "msg.unchecked.name ")  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  @SuppressWarnings( "msg.unchecked.name ")  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  @SuppressWarnings( "msg.unchecked.name ")	  NameType    nameType,    ruleType,    boolean    concat,    	non-compiled	[CE]  <identifier>  expected	204	None	replace
441	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat,  null;  [CE]  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat,  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getName(),  concat,  null;	  NameType    nameType    =    ruleType.getName(),    concat;    	non-compiled	[CE]  	136	None	replace
442	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat  +  1;  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat  +  1;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getName(),  concat  +  1;	  NameType    nameType    =    ruleType.getName(),    concat;    	non-compiled	[CE]  	136	None	replace
443	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat,  false;  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat,  false;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getName(),  concat,  false;	  NameType    nameType    =    ruleType.getName(),    concat;    	non-compiled	[CE]  	136	None	replace
444	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getSimpleName(),  concat;  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getSimpleName(),  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getSimpleName(),  concat;	  NameType    nameType    =    ruleType.getName(),    concat;    	non-compiled	[CE]  	136	None	replace
445	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat,  true;  [CE]  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getName(),  concat,  true;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getName(),  concat,  true;	  NameType    nameType    =    ruleType.getName(),    concat;    	non-compiled	[CE]  	136	None	replace
446	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getReferenceName(),  concat;  [CE]  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getReferenceName(),  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getReferenceName(),  concat;	  NameType    nameType    =    ruleType.getName(),    concat;    	non-compiled	[CE]  	136	None	replace
447	[BUG]  [BUGGY]  final  int  maxPhonemes,  String.valueOf(nameType))  {  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  String.valueOf(nameType))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  String.valueOf(nameType))  {	  final    int    maxPhonemes,    String.valueOf(concat))    {    	non-compiled	[CE]  <identifier>  expected	243	None	replace
448	[BUG]  [BUGGY]  final  int  maxPhonemes,  String.valueOf(concat));  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  String.valueOf(concat));  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  String.valueOf(concat));	  final    int    maxPhonemes,    String.valueOf(concat))    {    	non-compiled	[CE]  <identifier>  expected	243	None	replace
449	[BUG]  [BUGGY]  final  int  maxPhonemes,  String.valueOf(concat),  nameType)  {  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  String.valueOf(concat),  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  String.valueOf(concat),  nameType)  {	  final    int    maxPhonemes,    String.valueOf(concat))    {    	non-compiled	[CE]  <identifier>  expected	243	None	replace
450	[BUG]  [BUGGY]  final  int  maxPhonemes,  String.valueOf(maxPhonemes))  {  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  String.valueOf(maxPhonemes))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  String.valueOf(maxPhonemes))  {	  final    int    maxPhonemes,    String.valueOf(concat))    {    	non-compiled	[CE]  <identifier>  expected	243	None	replace
451	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  String.valueOf(concat))  {  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  String.valueOf(concat))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  String.valueOf(concat))  {	  final    int    maxPhonemes,    String.valueOf(concat))    {    	non-compiled	[CE]  <identifier>  expected	243	None	replace
452	[BUG]  [BUGGY]  this.maxPhonemes,  String.valueOf(concat))  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes,  String.valueOf(concat))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes,  String.valueOf(concat))  {	  final    int    maxPhonemes,    String.valueOf(concat))    {    	non-compiled	[CE]  illegal  start  of  type	243	None	replace
453	[BUG]  [BUGGY]  final  int  maxPhonemes,  String.valueOf(concat)&&  nameType.equals(ruleType.nameType))  {  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  String.valueOf(concat)&&  nameType.equals(ruleType.nameType))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  String.valueOf(concat)&&  nameType.equals(ruleType.nameType))  {	  final    int    maxPhonemes,    String.valueOf(concat))    {    	non-compiled	[CE]  <identifier>  expected	243	None	replace
454	[BUG]  [BUGGY]  final  int  maxPhonemes,  String.valueOf(concat)+  1)  {  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  String.valueOf(concat)+  1)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  String.valueOf(concat)+  1)  {	  final    int    maxPhonemes,    String.valueOf(concat))    {    	non-compiled	[CE]  <identifier>  expected	243	None	replace
455	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  finalRules);  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  finalRules);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  finalRules);	  NameType    nameType,    RuleType    ruleType,    Concat);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
456	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  null);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  null);	  NameType    nameType,    RuleType    ruleType,    Concat);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
457	[BUG]  [BUGGY]  nameType,  ruleType,  Concat);  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  Concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  Concat);	  NameType    nameType,    RuleType    ruleType,    Concat);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
458	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType);	  NameType    nameType,    RuleType    ruleType,    Concat);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
459	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(ruleType);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(ruleType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(ruleType);	  this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  illegal  start  of  type	226	None	replace
460	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(concat);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(concat);	  this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  illegal  start  of  type	226	None	replace
461	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType);	  this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  illegal  start  of  type	226	None	replace
462	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(this.nameType);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(this.nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(this.nameType);	  this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  illegal  start  of  type	226	None	replace
463	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(null);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(null);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(null);	  this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  illegal  start  of  type	226	None	replace
464	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(numberType);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(numberType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(numberType);	  this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  illegal  start  of  type	226	None	replace
465	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  0)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  0)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  0)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0)    {    	non-compiled	[CE]  illegal  start  of  type	296	None	replace
466	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  1)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  1)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  1)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0)    {    	non-compiled	[CE]  illegal  start  of  type	296	None	replace
467	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  null)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  null)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  null)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0)    {    	non-compiled	[CE]  illegal  start  of  type	296	None	replace
468	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  DEFAULT_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  DEFAULT_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  DEFAULT_PREFIXES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0)    {    	non-compiled	[CE]  illegal  start  of  type	296	None	replace
469	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  0)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  0)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  0)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0)    {    	non-compiled	[CE]  illegal  start  of  type	296	None	replace
470	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  false)  {  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  false)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  false)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0)    {    	non-compiled	[CE]  illegal  start  of  type	296	None	replace
471	[BUG]  [BUGGY]  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,	  NameType    nameType,    RuleType    ruleType,    final    boolean    concat,    	non-compiled	[CE]  illegal  start  of  type	163	None	replace
472	[BUG]  [BUGGY]  final  NameType  nameType,  RuleType  ruleType,  final  boolean  concat,  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType,  RuleType  ruleType,  final  boolean  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType,  RuleType  ruleType,  final  boolean  concat,	  NameType    nameType,    RuleType    ruleType,    final    boolean    concat,    	non-compiled	[CE]  illegal  start  of  type	163	None	replace
473	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  final  int  minPhonemes,  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  final  int  minPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  final  int  minPhonemes,	  NameType    nameType,    RuleType    ruleType,    final    boolean    concat,    	non-compiled	[CE]  illegal  start  of  type	163	None	replace
474	[BUG]  [BUGGY]  this.maxPhonemes  =  ruleType.getMaxPhonemes();  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  ruleType.getMaxPhonemes();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  ruleType.getMaxPhonemes();	  final    int    maxPhonemes    =    ruleType.getMinPhonemes();    	non-compiled	[CE]  illegal  start  of  type	192	None	replace
475	[BUG]  [BUGGY]  static  final  int  maxPhonemes  =  ruleType.getMaxPhonemes();  [CE]  modifier  static  not  allowed  here  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  static  final  int  maxPhonemes  =  ruleType.getMaxPhonemes();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  int  maxPhonemes  =  ruleType.getMaxPhonemes();	  final    int    maxPhonemes    =    ruleType.getMinPhonemes();    	non-compiled	[CE]  modifier  static  not  allowed  here	192	None	replace
476	[BUG]  [BUGGY]  final  int  maxPhonemes  =  ruleType.getMinPhonemes()  -  1;  [CE]  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  ruleType.getMinPhonemes()  -  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  ruleType.getMinPhonemes()  -  1;	  final    int    maxPhonemes    =    ruleType.getMinPhonemes();    	non-compiled	[CE]  	192	None	replace
477	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  0);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  0);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  0);	  this(nameType,    ruleType,    concat,    0);    	non-compiled	[CE]  illegal  start  of  type	177	None	replace
478	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  null);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  null);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  null);	  this(nameType,    ruleType,    concat,    0);    	non-compiled	[CE]  illegal  start  of  type	177	None	replace
479	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  false);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  false);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  false);	  this(nameType,    ruleType,    concat,    0);    	non-compiled	[CE]  illegal  start  of  type	177	None	replace
480	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  nameType.length);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  nameType.length);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  nameType.length);	  this(nameType,    ruleType,    concat,    0);    	non-compiled	[CE]  illegal  start  of  type	177	None	replace
481	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  true);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  true);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  true);	  this(nameType,    ruleType,    concat,    0);    	non-compiled	[CE]  illegal  start  of  type	177	None	replace
482	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  5);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  5);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  5);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    4);    	non-compiled	[CE]  illegal  start  of  type	329	None	replace
483	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  10);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  10);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  10);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    4);    	non-compiled	[CE]  illegal  start  of  type	329	None	replace
484	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  8);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  8);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  8);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    4);    	non-compiled	[CE]  illegal  start  of  type	329	None	replace
485	[BUG]  [BUGGY]  nameType  =  ruleType.getName(),  concat;  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType  =  ruleType.getName(),  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType  =  ruleType.getName(),  concat;	  NameType    nameType    =    nameType.getName(),    concat;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
486	[BUG]  [BUGGY]  NameType  nameType  =  rules.getName(),  concat;  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  rules.getName(),  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  rules.getName(),  concat;	  NameType    nameType    =    nameType.getName(),    concat;    	non-compiled	[CE]  	88	None	replace
487	[BUG]  [BUGGY]  NameType  nameType  =  type.getName(),  concat;  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  type.getName(),  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  type.getName(),  concat;	  NameType    nameType    =    nameType.getName(),    concat;    	non-compiled	[CE]  	88	None	replace
488	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRawName(),  concat;  [CE]  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getRawName(),  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getRawName(),  concat;	  NameType    nameType    =    nameType.getName(),    concat;    	non-compiled	[CE]  	88	None	replace
489	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  boolean  concat  [CE]  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  boolean  concat  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  boolean  concat	  NameType    nameType,    RuleType    ruleType,    concat    	non-compiled	[CE]  	172	None	replace
490	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  int  maxPhonemes  [CE]  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  int  maxPhonemes  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  int  maxPhonemes	  NameType    nameType,    RuleType    ruleType,    concat    	non-compiled	[CE]  	172	None	replace
491	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  Concat  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  Concat  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  Concat	  NameType    nameType,    RuleType    ruleType,    concat    	non-compiled	[CE]  <identifier>  expected	172	None	replace
492	[BUG]  [BUGGY]  nameType,  ruleType,  concat  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  concat  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat	  NameType    nameType,    RuleType    ruleType,    concat    	non-compiled	[CE]  <identifier>  expected	172	None	replace
493	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,	  NameType    nameType,    RuleType    ruleType,    concat    	non-compiled	[CE]  illegal  start  of  type	172	None	replace
494	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  maxPhonemes);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  maxPhonemes);	  this.nameType,    nameType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
495	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  maxPhonemes);  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  maxPhonemes);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  maxPhonemes);	  this.nameType,    nameType,    concat,    maxPhonemes);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
496	[BUG]  [BUGGY]  nameType,  ruleType,  concat,  maxPhonemes);  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  concat,  maxPhonemes);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat,  maxPhonemes);	  this.nameType,    nameType,    concat,    maxPhonemes);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
497	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  0,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  concat,  0,  maxPhonemes);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  0,  maxPhonemes);	  this.nameType,    nameType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
498	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES);	  this.nameType,    nameType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
499	[BUG]  [BUGGY]  titleType,  nameType,  concat,  maxPhonemes);  [CE]  <identifier>  expected  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  titleType,  nameType,  concat,  maxPhonemes);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	titleType,  nameType,  concat,  maxPhonemes);	  this.nameType,    nameType,    concat,    maxPhonemes);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
500	[BUG]  [BUGGY]  this.nameType  =  nameType.restrictByNotNullOrUndefined()?  null  :  nameType.restrictByNotNullOrUndefined();  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.restrictByNotNullOrUndefined()?  null  :  nameType.restrictByNotNullOrUndefined();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.restrictByNotNullOrUndefined()?  null  :  nameType.restrictByNotNullOrUndefined();	  super(ruleType,    nameType);    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
501	[BUG]  [BUGGY]  this.nameType  =  nameType.restrictByNotNullOrUndefined()?  nameType.restrictByNotNullOrUndefined()  :  nameType;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.restrictByNotNullOrUndefined()?  nameType.restrictByNotNullOrUndefined()  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.restrictByNotNullOrUndefined()?  nameType.restrictByNotNullOrUndefined()  :  nameType;	  super(ruleType,    nameType);    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
502	[BUG]  [BUGGY]  this.nameType  =  nameType.toLowerCase()?  null  :  nameType.toLowerCase();  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toLowerCase()?  null  :  nameType.toLowerCase();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toLowerCase()?  null  :  nameType.toLowerCase();	  super(ruleType,    nameType);    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
503	[BUG]  [BUGGY]  this.nameType  =  nameType.equals(ruleType.nameType)?  null  :  nameType.equals(ruleType.nameType);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.equals(ruleType.nameType)?  null  :  nameType.equals(ruleType.nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.equals(ruleType.nameType)?  null  :  nameType.equals(ruleType.nameType);	  super(ruleType,    nameType);    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
504	[BUG]  [BUGGY]  this.nameType  =  nameType.equals(ruleType.nameType)?  nameType  :  null;  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.equals(ruleType.nameType)?  nameType  :  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.equals(ruleType.nameType)?  nameType  :  null;	  super(ruleType,    nameType);    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
505	[BUG]  [BUGGY]  this.nameType  =  nameType.restrictByNotNullOrUndefined()?  nameType.restrictByNotNullOrUndefined()  :  null;  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.restrictByNotNullOrUndefined()?  nameType.restrictByNotNullOrUndefined()  :  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.restrictByNotNullOrUndefined()?  nameType.restrictByNotNullOrUndefined()  :  null;	  super(ruleType,    nameType);    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
506	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null,  maxPhonemes);	  this(nameType,    ruleType,    concat,    null);    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
507	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  null);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  null);	  this(nameType,    ruleType,    concat,    null);    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
508	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getNAME_PREFIXES();  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getNAME_PREFIXES();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getNAME_PREFIXES();	  NameType    nameType    =    ruleType.getRawName();    	non-compiled	[CE]  	90	None	replace
509	[BUG]  [BUGGY]  this.nameType  =  nameType,  ruleType;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType,  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType,  ruleType;	  this.nameType    =    nameType,    concat;    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
510	[BUG]  [BUGGY]  this.nameType  =  ruleType,  concat;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType,  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType,  concat;	  this.nameType    =    nameType,    concat;    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
511	[BUG]  [BUGGY]  this.nameType  =  nameType,  ruleType);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType,  ruleType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType,  ruleType);	  this.nameType    =    nameType,    concat;    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
512	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType,  concat);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType,  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType,  concat);	  this.ruleType    =    new    RuleType(nameType);    	non-compiled	[CE]  illegal  start  of  type	233	None	replace
513	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(concat);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(concat);	  this.ruleType    =    new    RuleType(nameType);    	non-compiled	[CE]  illegal  start  of  type	233	None	replace
514	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(this.nameType);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(this.nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(this.nameType);	  this.ruleType    =    new    RuleType(nameType);    	non-compiled	[CE]  illegal  start  of  type	233	None	replace
515	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(null);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(null);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(null);	  this.ruleType    =    new    RuleType(nameType);    	non-compiled	[CE]  illegal  start  of  type	233	None	replace
516	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType,  Concat);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType,  Concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType,  Concat);	  this.ruleType    =    new    RuleType(nameType);    	non-compiled	[CE]  illegal  start  of  type	233	None	replace
517	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType,  nameType);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType,  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType,  nameType);	  this.ruleType    =    new    RuleType(nameType);    	non-compiled	[CE]  illegal  start  of  type	233	None	replace
518	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(runType);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(runType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(runType);	  this.ruleType    =    new    RuleType(nameType);    	non-compiled	[CE]  illegal  start  of  type	233	None	replace
519	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.getmaxPhonemes();  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.getmaxPhonemes();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.getmaxPhonemes();	  final    int    maxPhonemes    =    nameType.getMaxPhonemes()    -    2;    	non-compiled	[CE]  	190	None	replace
520	[BUG]  [BUGGY]  final  int  maxPhonemes  =  typeType.getMaxPhonemes();  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  typeType.getMaxPhonemes();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  typeType.getMaxPhonemes();	  final    int    maxPhonemes    =    nameType.getMaxPhonemes()    -    2;    	non-compiled	[CE]  	190	None	replace
521	[BUG]  [BUGGY]  This.ruleType  =  nameType;  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.ruleType  =  nameType;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.ruleType  =  nameType;	  This.ruleType    =    ruleType;    	non-compiled	[CE]  <identifier>  expected	234	None	replace
522	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRawClass();  [CE]  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getRawClass();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getRawClass();	  NameType    nameType    =    ruleType.getLanguage();    	non-compiled	[CE]  	194	None	replace
523	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRawLanguage();  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getRawLanguage();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getRawLanguage();	  NameType    nameType    =    ruleType.getLanguage();    	non-compiled	[CE]  	194	None	replace
524	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRuleType();  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getRuleType();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getRuleType();	  NameType    nameType    =    ruleType.getLanguage();    	non-compiled	[CE]  	194	None	replace
525	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0,  0)  {  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0,  0)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0,  0)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    0)    {    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
526	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0,  null)  {  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0,  null)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0,  null)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    0)    {    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
527	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  1)  {  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  1)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  1)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    0)    {    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
528	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes,  0)  {  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes,  0)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes,  0)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    0)    {    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
529	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null,  0)  {  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null,  0)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null,  0)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    0)    {    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
530	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  true)  {  [CE]  illegal  start  of  type  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  true)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  true)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    0)    {    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
531	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  0)  {  [CE]  illegal  start  of  type  [FE]                                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  0)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  0)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    0)    {    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
532	[BUG]  [BUGGY]  this.nameType  =  nameType.getReferenceName()  /  1;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getReferenceName()  /  1;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getReferenceName()  /  1;	  this.nameType    =    nameType.getReferenceName()    +    1;    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
533	[BUG]  [BUGGY]  this.nameType  =  nameType.getReferenceName(),  concat  +  1;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getReferenceName(),  concat  +  1;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getReferenceName(),  concat  +  1;	  this.nameType    =    nameType.getReferenceName()    +    1;    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
534	[BUG]  [BUGGY]  this.nameType  =  nameType.getReferenceName(),  concat);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getReferenceName(),  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getReferenceName(),  concat);	  this.nameType    =    nameType.getReferenceName()    +    1;    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
535	[BUG]  [BUGGY]  this.nameType  =  nameType.getRawName()  +  1;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getRawName()  +  1;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getRawName()  +  1;	  this.nameType    =    nameType.getReferenceName()    +    1;    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
536	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  finalRules,  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  finalRules,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  finalRules,	  NameType    nameType,    RuleType    ruleType,    finalRules,    	non-compiled	[CE]  <identifier>  expected	174	None	replace
537	[BUG]  [BUGGY]  final  NameType  nameType,  ruleType,  finalRules,  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType,  ruleType,  finalRules,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType,  ruleType,  finalRules,	  NameType    nameType,    RuleType    ruleType,    finalRules,    	non-compiled	[CE]  <identifier>  expected	174	None	replace
538	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getRawClass(),  ruleType.getRawClass(),  concat);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getRawClass(),  ruleType.getRawClass(),  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getRawClass(),  ruleType.getRawClass(),  concat);	  this.ruleType    =    new    RuleType(nameType.getRawClass(),    ruleType.getRawClass());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
539	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getRawClass());  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getRawClass());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getRawClass());	  this.ruleType    =    new    RuleType(nameType.getRawClass(),    ruleType.getRawClass());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
540	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getRuleType(),  ruleType.getRawClass());  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getRuleType(),  ruleType.getRawClass());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getRuleType(),  ruleType.getRawClass());	  this.ruleType    =    new    RuleType(nameType.getRawClass(),    ruleType.getRawClass());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
541	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getRawClass(),  nameType.getRawClass());  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getRawClass(),  nameType.getRawClass());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getRawClass(),  nameType.getRawClass());	  this.ruleType    =    new    RuleType(nameType.getRawClass(),    ruleType.getRawClass());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
542	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getClass(),  ruleType.getRawClass());  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getClass(),  ruleType.getRawClass());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getClass(),  ruleType.getRawClass());	  this.ruleType    =    new    RuleType(nameType.getRawClass(),    ruleType.getRawClass());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
543	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getRawClass(),  ruleType.getReturnType());  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getRawClass(),  ruleType.getReturnType());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getRawClass(),  ruleType.getReturnType());	  this.ruleType    =    new    RuleType(nameType.getRawClass(),    ruleType.getRawClass());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
544	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getRawClass(),  ruleType.getRuleType());  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getRawClass(),  ruleType.getRuleType());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getRawClass(),  ruleType.getRuleType());	  this.ruleType    =    new    RuleType(nameType.getRawClass(),    ruleType.getRawClass());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
545	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getRawClass(),  ruleType.getRawClass()  +  1);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getRawClass(),  ruleType.getRawClass()  +  1);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getRawClass(),  ruleType.getRawClass()  +  1);	  this.ruleType    =    new    RuleType(nameType.getRawClass(),    ruleType.getRawClass());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
546	[BUG]  [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  /  2;  [CE]  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  /  2;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  ruleType.maxPhonemes  /  2;	  final    int    maxPhonemes    =    nameType.maxPhonemes    /    2;    	non-compiled	[CE]  	28	None	replace
547	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  /  2  +  1;  [CE]  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  /  2  +  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes  /  2  +  1;	  final    int    maxPhonemes    =    nameType.maxPhonemes    /    2;    	non-compiled	[CE]  	28	None	replace
548	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  /  4;  [CE]  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  /  4;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes  /  4;	  final    int    maxPhonemes    =    nameType.maxPhonemes    /    2;    	non-compiled	[CE]  	28	None	replace
549	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  /  3;  [CE]  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  /  3;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes  /  3;	  final    int    maxPhonemes    =    nameType.maxPhonemes    /    2;    	non-compiled	[CE]  	28	None	replace
550	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  *  2;  [CE]  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  *  2;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes  *  2;	  final    int    maxPhonemes    =    nameType.maxPhonemes    /    2;    	non-compiled	[CE]  	28	None	replace
551	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  /  2  *  concat;  [CE]  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  /  2  *  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes  /  2  *  concat;	  final    int    maxPhonemes    =    nameType.maxPhonemes    /    2;    	non-compiled	[CE]  	28	None	replace
552	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType,  ruleType,  concat);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType,  ruleType,  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType,  ruleType,  concat);	  this.ruleType    =    new    RuleType(nameType,    ruleType);    	non-compiled	[CE]  illegal  start  of  type	232	None	replace
553	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(this.nameType,  ruleType);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(this.nameType,  ruleType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(this.nameType,  ruleType);	  this.ruleType    =    new    RuleType(nameType,    ruleType);    	non-compiled	[CE]  illegal  start  of  type	232	None	replace
554	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(  ruleType,  nameType);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(  ruleType,  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(  ruleType,  nameType);	  this.ruleType    =    new    RuleType(nameType,    ruleType);    	non-compiled	[CE]  illegal  start  of  type	232	None	replace
555	[BUG]  [BUGGY]  This.ruleType  =  new  RuleType(nameType,  ruleType);  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.ruleType  =  new  RuleType(nameType,  ruleType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.ruleType  =  new  RuleType(nameType,  ruleType);	  this.ruleType    =    new    RuleType(nameType,    ruleType);    	non-compiled	[CE]  <identifier>  expected	232	None	replace
556	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  false)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  false)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  false)  {	  this(nameType,    ruleType,    concat,    0)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
557	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  true)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  true)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  true)  {	  this(nameType,    ruleType,    concat,    0)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
558	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  null)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null)  {	  this(nameType,    ruleType,    concat,    0)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
559	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  false)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  false)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  false)  {	  this(nameType,    ruleType,    concat,    0)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
560	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  nameType.length)  {  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  nameType.length)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  nameType.length)  {	  this(nameType,    ruleType,    concat,    0)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
561	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  null)  {  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  null)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  null)  {	  this(nameType,    ruleType,    concat,    0)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
562	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MAX_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MAX_PHONEMES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MAX_PHONEMES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MIN_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
563	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  0,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  0,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  0,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MIN_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
564	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MIN_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
565	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  nameType);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  nameType);	  this(nameType,    ruleType,    concat,    DEFAULT_MIN_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
566	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  i,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  i,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  i,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MIN_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
567	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MILLIS_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MILLIS_PHONEMES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MILLIS_PHONEMES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MIN_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
568	[BUG]  [BUGGY]  this.lang  =  Lang.instance(nameType);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.lang  =  Lang.instance(nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.lang  =  Lang.instance(nameType);	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	332	None	replace
569	[BUG]  [BUGGY]  NameType  nameType  =  nameType.getNameType();  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  nameType.getNameType();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  nameType.getNameType();	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	332	None	replace
570	[BUG]  [BUGGY]  this.nameType  =  nameType.nameType;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.nameType;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.nameType;	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	332	None	replace
571	[BUG]  [BUGGY]  NameType  nameType  =  nameType.getReferenceName();  [CE]  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  nameType.getReferenceName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  nameType.getReferenceName();	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	332	None	replace
572	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  ruleType.getName()  : "null ";  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  ruleType.getName()  : "null ";  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  ruleType.getName()  : "null ";	  this.nameType    =    nameType    ==    null?    nameType.getName()    :   "null   ";    	non-compiled	[CE]  illegal  start  of  type	300	None	replace
573	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  : ",null ";  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  : ",null ";  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.getName()  : ",null ";	  this.nameType    =    nameType    ==    null?    nameType.getName()    :   "null   ";    	non-compiled	[CE]  illegal  start  of  type	300	None	replace
574	[BUG]  [BUGGY]  final  int  concat,  final  int  maxPhonemes)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  concat,  final  int  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  concat,  final  int  maxPhonemes)  {	  final    int    maxPhonemes,    final    int    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	43	None	replace
575	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  int  nameType)  {  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  int  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  int  nameType)  {	  final    int    maxPhonemes,    final    int    concat)    {    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	43	None	replace
576	[BUG]  [BUGGY]  this.maxPhonemes,  final  int  concat)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes,  final  int  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes,  final  int  concat)  {	  final    int    maxPhonemes,    final    int    concat)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
577	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  int  concat,  final  RuleType  ruleType)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  int  concat,  final  RuleType  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  int  concat,  final  RuleType  ruleType)  {	  final    int    maxPhonemes,    final    int    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	43	None	replace
578	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  int  concat,  final  NameType  nameType)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  int  concat,  final  NameType  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  int  concat,  final  NameType  nameType)  {	  final    int    maxPhonemes,    final    int    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	43	None	replace
579	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
580	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
581	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
582	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  NAME_PREFIXES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
583	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  NAME_PREFIXES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
584	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   "    +    RuleType.NAME_PREFIXES);    }    	non-compiled	[CE]  illegal  start  of  type	227	None	replace
585	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME_PREFI  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME_PREFI  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME_PREFI	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   "    +    RuleType.NAME_PREFIXES);    }    	non-compiled	[CE]  illegal  start  of  type	227	None	replace
586	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   "    +    RuleType.NAME_PREFIXES);    }    	non-compiled	[CE]  illegal  start  of  type	227	None	replace
587	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME_  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME_  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME_	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   "    +    RuleType.NAME_PREFIXES);    }    	non-compiled	[CE]  illegal  start  of  type	227	None	replace
588	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME_PREFIXES  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME_PREFIXES  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME_PREFIXES	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   "    +    RuleType.NAME_PREFIXES);    }    	non-compiled	[CE]  illegal  start  of  type	227	None	replace
589	[BUG]  [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME_PREFIXES  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME_PREFIXES  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME_PREFIXES	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   "    +    RuleType.NAME_PREFIXES);    }    	non-compiled	[CE]  illegal  start  of  type	227	None	replace
590	[BUG]  [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME_PREFI  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME_PREFI  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME_PREFI	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   "    +    RuleType.NAME_PREFIXES);    }    	non-compiled	[CE]  illegal  start  of  type	227	None	replace
591	[BUG]  [BUGGY]  NameType  nameType,  ruleType.nameType,  Concat,  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.nameType,  Concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.nameType,  Concat,	  NameType    nameType,    ruleType,    Concat,    	non-compiled	[CE]  <identifier>  expected	262	None	replace
592	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes,	  super(nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
593	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  this.maxPhonemes,  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  this.maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  this.maxPhonemes,	  super(nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
594	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  final  int  maxPhonemes,  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  final  int  maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  final  int  maxPhonemes,	  super(nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
595	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  true,  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  true,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  true,	  super(nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
596	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  +  maxPhonemes,  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  +  maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  +  maxPhonemes,	  super(nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
597	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  false,  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  false,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  false,	  super(nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
598	[BUG]  [BUGGY]  final  int  maxPhonemes  =  ruleType.getMaxPhonemes()  -  1;  [CE]  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  ruleType.getMaxPhonemes()  -  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  ruleType.getMaxPhonemes()  -  1;	  final    int    maxPhonemes    =    ruleType.getMaxPhonemes();    	non-compiled	[CE]  	186	None	replace
599	[BUG]  [BUGGY]  final  int  maxPhonemes  =  ruleType.getMaxPhonemes()  +  1;  [CE]  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  ruleType.getMaxPhonemes()  +  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  ruleType.getMaxPhonemes()  +  1;	  final    int    maxPhonemes    =    ruleType.getMaxPhonemes();    	non-compiled	[CE]  	186	None	replace
600	[BUG]  [BUGGY]  final  int  maxPhonemes  =  ruleType.getMaxPhonemes()  -  2;  [CE]  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  ruleType.getMaxPhonemes()  -  2;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  ruleType.getMaxPhonemes()  -  2;	  final    int    maxPhonemes    =    ruleType.getMaxPhonemes();    	non-compiled	[CE]  	186	None	replace
601	[BUG]  [BUGGY]  this.nameType  =  nameType.toString(),  concat);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toString(),  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toString(),  concat);	  this.nameType    =    nameType.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
602	[BUG]  [BUGGY]  This.nameType  =  nameType.toString();  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.nameType  =  nameType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType  =  nameType.toString();	  this.nameType    =    nameType.toString()    +    1;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
603	[BUG]  [BUGGY]  this.nameType  =  nameType,  ruleType.toString()  +  1;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType,  ruleType.toString()  +  1;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType,  ruleType.toString()  +  1;	  this.nameType    =    nameType.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
604	[BUG]  [BUGGY]  this.ruleType  =  ruleType.toString();  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  ruleType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  ruleType.toString();	  NameType    nameType    =    nameType.toString();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
605	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.toString();  this.ruleType  =  nameType;  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.toString();  this.ruleType  =  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.toString();  this.ruleType  =  nameType;	  NameType    nameType    =    nameType.toString();    this.ruleType    =    ruleType;    	non-compiled	[CE]  	104	None	replace
606	[BUG]  [BUGGY]  final  NameType  nameType  =  nameType.toString();  this.ruleType  =  ruleType;  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType  =  nameType.toString();  this.ruleType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType  =  nameType.toString();  this.ruleType  =  ruleType;	  NameType    nameType    =    nameType.toString();    this.ruleType    =    ruleType;    	non-compiled	[CE]  	104	None	replace
607	[BUG]  [BUGGY]  this.ruleType  =  nameType.toString();  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  nameType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  nameType.toString();	  NameType    nameType    =    nameType.toString();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
608	[BUG]  [BUGGY]  nameType  =  ruleType.toString();  this.ruleType  =  nameType;  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType  =  ruleType.toString();  this.ruleType  =  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType  =  ruleType.toString();  this.ruleType  =  nameType;	  NameType    nameType    =    nameType.toString();    this.ruleType    =    ruleType;    	non-compiled	[CE]  <identifier>  expected	104	None	replace
609	[BUG]  [BUGGY]  This.ruleType  =  ruleType.toString();  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.ruleType  =  ruleType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.ruleType  =  ruleType.toString();	  NameType    nameType    =    nameType.toString();    this.ruleType    =    ruleType;    	non-compiled	[CE]  <identifier>  expected	104	None	replace
610	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.toString();  [CE]  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.toString();	  NameType    nameType    =    nameType.toString();    this.ruleType    =    ruleType;    	non-compiled	[CE]  	104	None	replace
611	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getName();  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  ruleType.getName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  ruleType.getName();	  NameType    nameType    =    nameType.toString();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
612	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getSimpleName();  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  ruleType.getSimpleName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  ruleType.getSimpleName();	  NameType    nameType    =    nameType.toString();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
613	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  NAME_PREFIXES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
614	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
615	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  NAME_PREFIXES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
616	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  finalRules,  NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  finalRules,  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  finalRules,  NAME_PREFIXES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
617	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  maxPhonemes,  NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  maxPhonemes,  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  maxPhonemes,  NAME_PREFIXES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
618	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  finalRules,  NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  finalRules,  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  finalRules,  NAME_PREFIXES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
619	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  NAME_PREFIXES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
620	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
621	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType  :  NAME_PREFIXES,  concat;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType  :  NAME_PREFIXES,  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType  :  NAME_PREFIXES,  concat;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType    :    NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	304	None	replace
622	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType  :  DEFAULT_MAX_PHONEMES;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType  :  DEFAULT_MAX_PHONEMES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType  :  DEFAULT_MAX_PHONEMES;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType    :    NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	304	None	replace
623	[BUG]  [BUGGY]  this.nameType  =  ruleType  ==  RuleType.NAME_PREFIXES?  nameType  :  NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType  ==  RuleType.NAME_PREFIXES?  nameType  :  NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType  ==  RuleType.NAME_PREFIXES?  nameType  :  NAME_PREFIXES;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType    :    NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	304	None	replace
624	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType  :  NAME_PREFIXES  +  1;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType  :  NAME_PREFIXES  +  1;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType  :  NAME_PREFIXES  +  1;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType    :    NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	304	None	replace
625	[BUG]  [BUGGY]  final  int  maxPhonemes,  finalRules,  boolean  concat)  {  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  finalRules,  boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  finalRules,  boolean  concat)  {	  final    int    maxPhonemes,    finalRules)    {    	non-compiled	[CE]  <identifier>  expected	246	None	replace
626	[BUG]  [BUGGY]  final  int  maxPhonemes,  finalRules,  NAME_PREFIXES)  {  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  finalRules,  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  finalRules,  NAME_PREFIXES)  {	  final    int    maxPhonemes,    finalRules)    {    	non-compiled	[CE]  <identifier>  expected	246	None	replace
627	[BUG]  [BUGGY]  final  int  maxPhonemes,  finalRules,  nameType)  {  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  finalRules,  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  finalRules,  nameType)  {	  final    int    maxPhonemes,    finalRules)    {    	non-compiled	[CE]  <identifier>  expected	246	None	replace
628	[BUG]  [BUGGY]  this.maxPhonemes,  finalRules)  {  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes,  finalRules)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes,  finalRules)  {	  final    int    maxPhonemes,    finalRules)    {    	non-compiled	[CE]  illegal  start  of  type	246	None	replace
629	[BUG]  [BUGGY]  final  int  maxPhonemes,  concat)  {  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  concat)  {	  final    int    maxPhonemes,    finalRules)    {    	non-compiled	[CE]  <identifier>  expected	246	None	replace
630	[BUG]  [BUGGY]  final  int  maxPhonemes,  finalRules,  null)  {  [CE]  <identifier>  expected  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  finalRules,  null)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  finalRules,  null)  {	  final    int    maxPhonemes,    finalRules)    {    	non-compiled	[CE]  <identifier>  expected	246	None	replace
631	[BUG]  [BUGGY]  nameType,  ruleType,  concat;  [CE]  <identifier>  expected  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat;	  nameType,    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	9	None	replace
632	[BUG]  [BUGGY]  nameType,  ruleType,  concat,  true  [CE]  <identifier>  expected  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  concat,  true  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat,  true	  nameType,    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	9	None	replace
633	[BUG]  [BUGGY]  Super(nameType,  ruleType,  concat,  false);  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Super(nameType,  ruleType,  concat,  false);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Super(nameType,  ruleType,  concat,  false);	  super(nameType,    ruleType,    concat,    true);    	non-compiled	[CE]  <identifier>  expected	166	None	replace
634	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  true,  false);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  true,  false);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  true,  false);	  super(nameType,    ruleType,    concat,    true);    	non-compiled	[CE]  illegal  start  of  type	166	None	replace
635	[BUG]  [BUGGY]  super(nameType,  ruleType,  Concat,  false);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  Concat,  false);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  Concat,  false);	  super(nameType,    ruleType,    concat,    true);    	non-compiled	[CE]  illegal  start  of  type	166	None	replace
636	[BUG]  [BUGGY]  final  int  maxPhonemes,  NameType  nameType)  {  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  NameType  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  NameType  nameType)  {	  final    boolean    maxPhonemes,    NameType    nameType)    {    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	196	None	replace
637	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  NameType  ruleType)  {  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  NameType  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  NameType  ruleType)  {	  final    boolean    maxPhonemes,    NameType    nameType)    {    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine	196	None	replace
638	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  nameType)  {  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  nameType)  {	  final    boolean    maxPhonemes,    NameType    nameType)    {    	non-compiled	[CE]  <identifier>  expected	196	None	replace
639	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getSimpleName()  +  1;  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getSimpleName()  +  1;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getSimpleName()  +  1;	  NameType    nameType    =    ruleType.getName()    +    1;    	non-compiled	[CE]  	139	None	replace
640	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  definalRules)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  definalRules)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  definalRules)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    nameType)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
641	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  0)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  0)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  0)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    nameType)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
642	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    nameType)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
643	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType!=    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
644	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  >=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  >=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  >=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType!=    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
645	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  Il  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  Il  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  Il	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType!=    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
646	[BUG]  [BUGGY]  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType!=    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
647	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.toString()  :  concat;  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.toString()  :  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.toString()  :  concat;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType.toString()    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	311	None	replace
648	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.toString()  :  NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.toString()  :  NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.toString()  :  NAME_PREFIXES;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType.toString()    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	311	None	replace
649	[BUG]  [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.toString()  :  concat;  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.toString()  :  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.toString()  :  concat;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType.toString()    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	311	None	replace
650	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.toString()  :  ruleType.toString();  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.toString()  :  ruleType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.toString()  :  ruleType.toString();	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType.toString()    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	311	None	replace
651	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  ruleType.toString()  :  nameType;  [CE]  illegal  start  of  type  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  ruleType.toString()  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  ruleType.toString()  :  nameType;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType.toString()    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	311	None	replace
652	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  null;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  null;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.getName()  :  null;	  this.nameType    =    nameType!=    null?    nameType.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
653	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  ruleType.getName()  :  null;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  ruleType.getName()  :  null;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  ruleType.getName()  :  null;	  this.nameType    =    nameType!=    null?    nameType.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
654	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  ruleType.getName()  :  null;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  ruleType.getName()  :  null;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  ruleType.getName()  :  null;	  this.nameType    =    nameType!=    null?    nameType.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
655	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  concat;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getName()  :  concat;	  this.nameType    =    nameType!=    null?    nameType.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
656	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  concat;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.getName()  :  concat;	  this.nameType    =    nameType!=    null?    nameType.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
657	[BUG]  [BUGGY]  This.nameType,  ruleType,  concat,  null);  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.nameType,  ruleType,  concat,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType,  ruleType,  concat,  null);	  this.nameType,    nameType,    concat,    null);    	non-compiled	[CE]  <identifier>  expected	123	None	replace
658	[BUG]  [BUGGY]  This.nameType,  nameType,  concat,  null);  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.nameType,  nameType,  concat,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType,  nameType,  concat,  null);	  this.nameType,    nameType,    concat,    null);    	non-compiled	[CE]  <identifier>  expected	123	None	replace
659	[BUG]  [BUGGY]  NameType  ruleType  =  ruleType.getRuleType();  [CE]  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType  =  ruleType.getRuleType();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType  =  ruleType.getRuleType();	  NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  	295	None	replace
660	[BUG]  [BUGGY]  NameType  ruleType  =  ruleType.getRawType();  [CE]  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType  =  ruleType.getRawType();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType  =  ruleType.getRawType();	  NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  	295	None	replace
661	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRawType();  [CE]  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType  =  nameType.getRawType();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType  =  nameType.getRawType();	  NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  	295	None	replace
662	[BUG]  [BUGGY]  NameType  ruleType  =  new  NameType(nameType.getRuleType(),  concat);  [CE]  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType  =  new  NameType(nameType.getRuleType(),  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType  =  new  NameType(nameType.getRuleType(),  concat);	  NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  	295	None	replace
663	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getReferenceName();  [CE]  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType  =  nameType.getReferenceName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType  =  nameType.getReferenceName();	  NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  	295	None	replace
664	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRawClass();  [CE]  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType  =  nameType.getRawClass();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType  =  nameType.getRawClass();	  NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  	295	None	replace
665	[BUG]  [BUGGY]  NameType  ruleType  =  ruleType.getReferenceName();  [CE]  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType  =  ruleType.getReferenceName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType  =  ruleType.getReferenceName();	  NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  	295	None	replace
666	[BUG]  [BUGGY]  this.nameType  =  nameType.toString()  + "_ "  +  concat.toString();  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toString()  + "_ "  +  concat.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toString()  + "_ "  +  concat.toString();	  this.nameType    =    nameType.toString()    +   "_   "    +    ruleType.toString();    	non-compiled	[CE]  illegal  start  of  type	303	None	replace
667	[BUG]  [BUGGY]  this.nameType  =  nameType.toString()  + ",_ "  +  ruleType.toString();  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toString()  + ",_ "  +  ruleType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toString()  + ",_ "  +  ruleType.toString();	  this.nameType    =    nameType.toString()    +   "_   "    +    ruleType.toString();    	non-compiled	[CE]  illegal  start  of  type	303	None	replace
668	[BUG]  [BUGGY]  this.nameType  =  ruleType.toString()  + "_ "  +  nameType.toString();  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType.toString()  + "_ "  +  nameType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType.toString()  + "_ "  +  nameType.toString();	  this.nameType    =    nameType.toString()    +   "_   "    +    ruleType.toString();    	non-compiled	[CE]  illegal  start  of  type	303	None	replace
669	[BUG]  [BUGGY]  this.nameType  =  nameType.toString()  + "_ "  +  concat;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toString()  + "_ "  +  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toString()  + "_ "  +  concat;	  this.nameType    =    nameType.toString()    +   "_   "    +    ruleType.toString();    	non-compiled	[CE]  illegal  start  of  type	303	None	replace
670	[BUG]  [BUGGY]  this.nameType  =  nameType.toString()  + "._ "  +  ruleType.toString();  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toString()  + "._ "  +  ruleType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toString()  + "._ "  +  ruleType.toString();	  this.nameType    =    nameType.toString()    +   "_   "    +    ruleType.toString();    	non-compiled	[CE]  illegal  start  of  type	303	None	replace
671	[BUG]  [BUGGY]  this.nameType  =  nameType.toString(),  concat  + "_ "  +  ruleType.toString();  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toString(),  concat  + "_ "  +  ruleType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toString(),  concat  + "_ "  +  ruleType.toString();	  this.nameType    =    nameType.toString()    +   "_   "    +    ruleType.toString();    	non-compiled	[CE]  illegal  start  of  type	303	None	replace
672	[BUG]  [BUGGY]  this.nameType  =  nameType.toString()  + "_ ",  ruleType.toString();  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toString()  + "_ ",  ruleType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toString()  + "_ ",  ruleType.toString();	  this.nameType    =    nameType.toString()    +   "_   "    +    ruleType.toString();    	non-compiled	[CE]  illegal  start  of  type	303	None	replace
673	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PREFIXES,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PREFIXES,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PREFIXES,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_GLOBAL_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	316	None	replace
674	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_GLOBAL_PREFIXES,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_GLOBAL_PREFIXES,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_GLOBAL_PREFIXES,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_GLOBAL_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	316	None	replace
675	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_GLOBAL_PREFIXES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_GLOBAL_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_GLOBAL_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_GLOBAL_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	316	None	replace
676	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PREFIXES);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_GLOBAL_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	316	None	replace
677	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PREFIXES,  nameType);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PREFIXES,  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PREFIXES,  nameType);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_GLOBAL_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	316	None	replace
678	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MEMBER_PREFIXES,  DEFAULT_GLOBAL_PREFIXES);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MEMBER_PREFIXES,  DEFAULT_GLOBAL_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MEMBER_PREFIXES,  DEFAULT_GLOBAL_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_GLOBAL_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	316	None	replace
679	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PREFIXES,  0);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PREFIXES,  0);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PREFIXES,  0);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_GLOBAL_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	316	None	replace
680	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_GLOBAL_PREFIXES,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_GLOBAL_PREFIXES,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_GLOBAL_PREFIXES,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_GLOBAL_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	316	None	replace
681	[BUG]  [BUGGY]  super(nameType,  ruleType);  this.maxPhonemes  =  concat;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType);  this.maxPhonemes  =  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType);  this.maxPhonemes  =  concat;	  super(nameType,    ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
682	[BUG]  [BUGGY]  this.maxPhonemes  =  super.maxPhonemes;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  super.maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  super.maxPhonemes;	  super(nameType,    ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
683	[BUG]  [BUGGY]  this.maxPhonemes  =  countPhonemes;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  countPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  countPhonemes;	  super(nameType,    ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
684	[BUG]  [BUGGY]  super(nameType,  ruleType);  this.maxPhonemes  =  countPhonemes;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType);  this.maxPhonemes  =  countPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType);  this.maxPhonemes  =  countPhonemes;	  super(nameType,    ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
685	[BUG]  [BUGGY]  super(nameType,  ruleType);  this.maxPhonemes  =  0;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType);  this.maxPhonemes  =  0;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType);  this.maxPhonemes  =  0;	  super(nameType,    ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
686	[BUG]  [BUGGY]  this.minimumPhonemes  =  concat;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.minimumPhonemes  =  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.minimumPhonemes  =  concat;	  this.minimumPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	284	None	replace
687	[BUG]  [BUGGY]  this.minimumPhonemes  =  DEFAULT_MAX_PHONEMES;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.minimumPhonemes  =  DEFAULT_MAX_PHONEMES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.minimumPhonemes  =  DEFAULT_MAX_PHONEMES;	  this.minimumPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	284	None	replace
688	[BUG]  [BUGGY]  this.minimumPhonemes  =  minPhonemes;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.minimumPhonemes  =  minPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.minimumPhonemes  =  minPhonemes;	  this.minimumPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	284	None	replace
689	[BUG]  [BUGGY]  this.minimumPhonemes  =  DEFAULT_MIN_PHONEMES;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.minimumPhonemes  =  DEFAULT_MIN_PHONEMES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.minimumPhonemes  =  DEFAULT_MIN_PHONEMES;	  this.minimumPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	284	None	replace
690	[BUG]  [BUGGY]  this.minimumPhonemes  =  maxPhonemes  +  1;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.minimumPhonemes  =  maxPhonemes  +  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.minimumPhonemes  =  maxPhonemes  +  1;	  this.minimumPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	284	None	replace
691	[BUG]  [BUGGY]  this.minimumPhonemes  =  maxPhonemes  -  1;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.minimumPhonemes  =  maxPhonemes  -  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.minimumPhonemes  =  maxPhonemes  -  1;	  this.minimumPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	284	None	replace
692	[BUG]  [BUGGY]  this.minimumPhonemes  =  new  int[maxPhonemes];  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.minimumPhonemes  =  new  int[maxPhonemes];  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.minimumPhonemes  =  new  int[maxPhonemes];	  this.minimumPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	284	None	replace
693	[BUG]  [BUGGY]  this.minimumPhonemes  =  MAX_PHONEMES;  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.minimumPhonemes  =  MAX_PHONEMES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.minimumPhonemes  =  MAX_PHONEMES;	  this.minimumPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	284	None	replace
694	[BUG]  [BUGGY]  this.minimumPhonemes  =  0;  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.minimumPhonemes  =  0;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.minimumPhonemes  =  0;	  this.minimumPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	284	None	replace
695	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  NameType.DEFAULT_NAME_PREFIXES  :  NameType.DEFAULT_MAX_PHONEMES;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  NameType.DEFAULT_NAME_PREFIXES  :  NameType.DEFAULT_MAX_PHONEMES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  NameType?  NameType.DEFAULT_NAME_PREFIXES  :  NameType.DEFAULT_MAX_PHONEMES;	  this.nameType    =    NameType.DEFAULT_NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
696	[BUG]  [BUGGY]  this.nameType  =  nameType,  NameType.DEFAULT_NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType,  NameType.DEFAULT_NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType,  NameType.DEFAULT_NAME_PREFIXES;	  this.nameType    =    NameType.DEFAULT_NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
697	[BUG]  [BUGGY]  this.nameType  =  nameType.DEFAULT_NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.DEFAULT_NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.DEFAULT_NAME_PREFIXES;	  this.nameType    =    NameType.DEFAULT_NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
698	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  NameType.DEFAULT_NAME_PREFIXES  :  NameType.DEFAULT_NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  NameType.DEFAULT_NAME_PREFIXES  :  NameType.DEFAULT_NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  NameType?  NameType.DEFAULT_NAME_PREFIXES  :  NameType.DEFAULT_NAME_PREFIXES;	  this.nameType    =    NameType.DEFAULT_NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
699	[BUG]  [BUGGY]  this.nameType  =  NameType.DEFAULT_MAX_PHONEMES;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  NameType.DEFAULT_MAX_PHONEMES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  NameType.DEFAULT_MAX_PHONEMES;	  this.nameType    =    NameType.DEFAULT_NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
700	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  NameType.DEFAULT_NAME_PREFIXES  :  NameType.DEFAULT_NAMES;  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  NameType.DEFAULT_NAME_PREFIXES  :  NameType.DEFAULT_NAMES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  NameType?  NameType.DEFAULT_NAME_PREFIXES  :  NameType.DEFAULT_NAMES;	  this.nameType    =    NameType.DEFAULT_NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
701	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  NameType.DEFAULT_NAME_PREFIXES  :  NameType.DEFAULT_NAM_PHONEMES;  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  NameType.DEFAULT_NAME_PREFIXES  :  NameType.DEFAULT_NAM_PHONEMES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  NameType?  NameType.DEFAULT_NAME_PREFIXES  :  NameType.DEFAULT_NAM_PHONEMES;	  this.nameType    =    NameType.DEFAULT_NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
702	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType);  this.maxPhonemes  =  concat;  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType);  this.maxPhonemes  =  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType);  this.maxPhonemes  =  concat;	  this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	222	None	replace
703	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(ruleType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(ruleType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(ruleType);  this.maxPhonemes  =  maxPhonemes;	  this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	222	None	replace
704	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType);  this.maxPhonemes  =  0;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType);  this.maxPhonemes  =  0;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType);  this.maxPhonemes  =  0;	  this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	222	None	replace
705	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance();  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance();  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance();  this.maxPhonemes  =  maxPhonemes;	  this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	222	None	replace
706	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_PHONEMES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	260	None	replace
707	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MIN_PHONEMES,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MIN_PHONEMES,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MIN_PHONEMES,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_PHONEMES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	260	None	replace
708	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  maxPhonemes,  NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  maxPhonemes,  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  maxPhonemes,  NAME_PREFIXES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_PHONEMES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	260	None	replace
709	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_PHONEMES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	260	None	replace
710	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  0,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  0,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  0,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_PHONEMES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	260	None	replace
711	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  maxPhonemes,  nameType)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  maxPhonemes,  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  maxPhonemes,  nameType)  {	  this(nameType,    ruleType,    concat,    DEFAULT_PHONEMES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	260	None	replace
712	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes  -  1);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes  -  1);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes  -  1);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
713	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
714	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
715	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes  -  2);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes  -  2);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes  -  2);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
716	[BUG]  [BUGGY]  super(nameType.getName(),  ruleType,  concat);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType.getName(),  ruleType,  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType.getName(),  ruleType,  concat);	  super(nameType,    concat);    	non-compiled	[CE]  illegal  start  of  type	181	None	replace
717	[BUG]  [BUGGY]  super(nameType,  ruleType.getName(),  concat);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType.getName(),  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.getName(),  concat);	  super(nameType,    concat);    	non-compiled	[CE]  illegal  start  of  type	181	None	replace
718	[BUG]  [BUGGY]  super(nameType.getName(),  ruleType.getName());  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType.getName(),  ruleType.getName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType.getName(),  ruleType.getName());	  super(nameType,    concat);    	non-compiled	[CE]  illegal  start  of  type	181	None	replace
719	[BUG]  [BUGGY]  super(null,  nameType,  concat);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(null,  nameType,  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(null,  nameType,  concat);	  super(nameType,    concat);    	non-compiled	[CE]  illegal  start  of  type	181	None	replace
720	[BUG]  [BUGGY]  super(nameType,  ruleType,  Concat);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  Concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  Concat);	  super(nameType,    Concat);    	non-compiled	[CE]  illegal  start  of  type	185	None	replace
721	[BUG]  [BUGGY]  super(nameType,  RuleType.NAME_PREFIXES,  concat);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  RuleType.NAME_PREFIXES,  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  RuleType.NAME_PREFIXES,  concat);	  super(nameType,    Concat);    	non-compiled	[CE]  illegal  start  of  type	185	None	replace
722	[BUG]  [BUGGY]  super(nameType,  RuleType.NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  RuleType.NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  RuleType.NAME_PREFIXES);	  super(nameType,    Concat);    	non-compiled	[CE]  illegal  start  of  type	185	None	replace
723	[BUG]  [BUGGY]  super(nameType,  ruleType.getConstructor(),  concat);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType.getConstructor(),  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.getConstructor(),  concat);	  super(nameType,    Concat);    	non-compiled	[CE]  illegal  start  of  type	185	None	replace
724	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  boolean  concat,  boolean  lang)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  boolean  concat,  boolean  lang)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  boolean  concat,  boolean  lang)  {	  final    int    maxPhonemes,    boolean    concat,    boolean    lang)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	276	None	replace
725	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  int  concat,  boolean  lang)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  int  concat,  boolean  lang)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  int  concat,  boolean  lang)  {	  final    int    maxPhonemes,    boolean    concat,    boolean    lang)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	276	None	replace
726	[BUG]  [BUGGY]  final  int  maxPhonemes,  long  concat,  boolean  lang)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  long  concat,  boolean  lang)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  long  concat,  boolean  lang)  {	  final    int    maxPhonemes,    boolean    concat,    boolean    lang)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	276	None	replace
727	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  ruleType,  boolean  concat,  boolean  lang)  {  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  ruleType,  boolean  concat,  boolean  lang)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  ruleType,  boolean  concat,  boolean  lang)  {	  final    int    maxPhonemes,    boolean    concat,    boolean    lang)    {    	non-compiled	[CE]  <identifier>  expected	276	None	replace
728	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  boolean  concat,  final  boolean  lang)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  boolean  concat,  final  boolean  lang)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  boolean  concat,  final  boolean  lang)  {	  final    int    maxPhonemes,    boolean    concat,    boolean    lang)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	276	None	replace
729	[BUG]  [BUGGY]  final  long  maxPhonemes,  boolean  concat,  boolean  lang)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  long  maxPhonemes,  boolean  concat,  boolean  lang)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  long  maxPhonemes,  boolean  concat,  boolean  lang)  {	  final    int    maxPhonemes,    boolean    concat,    boolean    lang)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	276	None	replace
730	[BUG]  [BUGGY]  final  int  maxPhonemes,  boolean  lang,  boolean  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  boolean  lang,  boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  boolean  lang,  boolean  concat)  {	  final    int    maxPhonemes,    boolean    concat,    boolean    lang)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	276	None	replace
731	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  long  concat,  boolean  lang)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  long  concat,  boolean  lang)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  long  concat,  boolean  lang)  {	  final    int    maxPhonemes,    boolean    concat,    boolean    lang)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	276	None	replace
732	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MIN_PHONEMES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
733	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  NAME_PREFIXES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MIN_PHONEMES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
734	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  nameType)  {  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  nameType)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MIN_PHONEMES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
735	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  0,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  0,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  0,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MIN_PHONEMES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
736	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  i,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  i,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  i,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MIN_PHONEMES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
737	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MAX_PHONEMES);	  super(nameType,    ruleType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
738	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  NAME_PREFIXES);	  super(nameType,    ruleType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
739	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  maxPhonemes);	  super(nameType,    ruleType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
740	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  0);  [CE]  illegal  start  of  type  [FE]                                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  0);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  0);	  super(nameType,    ruleType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
741	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  MAX_PHONEMES);	  super(nameType,    ruleType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
742	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  0,  DEFAULT_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  0,  DEFAULT_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  0,  DEFAULT_PHONEMES);	  super(nameType,    ruleType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
743	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_NAME_PREFIXES);	  super(nameType,    ruleType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
744	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :  ruleType;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?  nameType  :  ruleType;	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
745	[BUG]  [BUGGY]  this.nameType  =  ruleType  instanceof  RuleType?  nameType  :  nameType;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType  instanceof  RuleType?  nameType  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType  instanceof  RuleType?  nameType  :  nameType;	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
746	[BUG]  [BUGGY]  this.nameType  =  nameType  instancesof  RuleType?  nameType  :  nameType;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instancesof  RuleType?  nameType  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instancesof  RuleType?  nameType  :  nameType;	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
747	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :  null;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?  nameType  :  null;	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
748	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  Map  NAME_PREFIXES)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  Map  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  Map  NAME_PREFIXES)  {	  final    boolean    maxPhonemes,    final    Map    NAME_PREFIXES)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	269	None	replace
749	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  final  int  NAME_PREFIXES)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  final  int  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  final  int  NAME_PREFIXES)  {	  final    boolean    maxPhonemes,    final    Map    NAME_PREFIXES)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	269	None	replace
750	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  final  Map  NAME_PREFIXES,  DEFAULT_MAX_PHONEMES)  {  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  final  Map  NAME_PREFIXES,  DEFAULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  final  Map  NAME_PREFIXES,  DEFAULT_MAX_PHONEMES)  {	  final    boolean    maxPhonemes,    final    Map    NAME_PREFIXES)    {    	non-compiled	[CE]  <identifier>  expected	269	None	replace
751	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  final  int  DEFAULT_MAX_PHONEMES,  final  Map  NAME_PREFIXES)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  final  int  DEFAULT_MAX_PHONEMES,  final  Map  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  final  int  DEFAULT_MAX_PHONEMES,  final  Map  NAME_PREFIXES)  {	  final    boolean    maxPhonemes,    final    Map    NAME_PREFIXES)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	269	None	replace
752	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  final  int  DEFAULT_MAX_PHONEMES)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  final  int  DEFAULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  final  int  DEFAULT_MAX_PHONEMES)  {	  final    boolean    maxPhonemes,    final    Map    NAME_PREFIXES)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	269	None	replace
753	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  final  Map  <  K,  V>  NAME_PREFIXES)  {  [CE]  cannot  find  symbol  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  final  Map  <  K,  V>  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  final  Map  <  K,  V>  NAME_PREFIXES)  {	  final    boolean    maxPhonemes,    final    Map    NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol	269	None	replace
754	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  final  Map  NAME_PREFIXES,  nameType)  {  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  final  Map  NAME_PREFIXES,  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  final  Map  NAME_PREFIXES,  nameType)  {	  final    boolean    maxPhonemes,    final    Map    NAME_PREFIXES)    {    	non-compiled	[CE]  <identifier>  expected	269	None	replace
755	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  final  Map  <  String,Object>  NAME_PREFIXES)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  final  Map  <  String,Object>  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  final  Map  <  String,Object>  NAME_PREFIXES)  {	  final    boolean    maxPhonemes,    final    Map    NAME_PREFIXES)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	269	None	replace
756	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  nameType  :(NameType)ruleType;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  nameType  :(NameType)ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  NameType?  nameType  :(NameType)ruleType;	  this.nameType    =    nameType    instanceof    NameType?    nameType    :(NameType)nameType;    	non-compiled	[CE]  illegal  start  of  type	266	None	replace
757	[BUG]  [BUGGY]  this.nameType  =  ruleType  instanceof  NameType?  nameType  :(NameType)nameType;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType  instanceof  NameType?  nameType  :(NameType)nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType  instanceof  NameType?  nameType  :(NameType)nameType;	  this.nameType    =    nameType    instanceof    NameType?    nameType    :(NameType)nameType;    	non-compiled	[CE]  illegal  start  of  type	266	None	replace
758	[BUG]  [BUGGY]  NameType  nameType  instanceof  NameType?  nameType  :(NameType)nameType;  [CE]  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  instanceof  NameType?  nameType  :(NameType)nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  instanceof  NameType?  nameType  :(NameType)nameType;	  this.nameType    =    nameType    instanceof    NameType?    nameType    :(NameType)nameType;    	non-compiled	[CE]  	266	None	replace
759	[BUG]  [BUGGY]  This.nameType  =  nameType  instanceof  NameType?  nameType  :(NameType)nameType;  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.nameType  =  nameType  instanceof  NameType?  nameType  :(NameType)nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType  =  nameType  instanceof  NameType?  nameType  :(NameType)nameType;	  this.nameType    =    nameType    instanceof    NameType?    nameType    :(NameType)nameType;    	non-compiled	[CE]  <identifier>  expected	266	None	replace
760	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  nameType  :(NameType)_nameType;  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  nameType  :(NameType)_nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  NameType?  nameType  :(NameType)_nameType;	  this.nameType    =    nameType    instanceof    NameType?    nameType    :(NameType)nameType;    	non-compiled	[CE]  illegal  start  of  type	266	None	replace
761	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  nameType  :(NameType)nametype;  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  nameType  :(NameType)nametype;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  NameType?  nameType  :(NameType)nametype;	  this.nameType    =    nameType    instanceof    NameType?    nameType    :(NameType)nameType;    	non-compiled	[CE]  illegal  start  of  type	266	None	replace
762	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_MIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_MIN_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_MIN_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MIN_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	178	None	replace
763	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MIN_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_MIN_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MIN_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	178	None	replace
764	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MIN_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	178	None	replace
765	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  MAX_PHONEMES,  DEFAULT_MIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  MAX_PHONEMES,  DEFAULT_MIN_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  MAX_PHONEMES,  DEFAULT_MIN_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MIN_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	178	None	replace
766	[BUG]  [BUGGY]  super(ruleType.getName(),  nameType);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(ruleType.getName(),  nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(ruleType.getName(),  nameType);	  super(nameType.getName(),    ruleType);    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
767	[BUG]  [BUGGY]  super(nameType.getSimpleName(),  ruleType);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType.getSimpleName(),  ruleType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType.getSimpleName(),  ruleType);	  super(nameType.getName(),    ruleType);    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
768	[BUG]  [BUGGY]  super(nameType.getReferenceName(),  ruleType);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType.getReferenceName(),  ruleType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType.getReferenceName(),  ruleType);	  super(nameType.getName(),    ruleType);    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
769	[BUG]  [BUGGY]  super(nameType.getLanguage(),  ruleType);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType.getLanguage(),  ruleType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType.getLanguage(),  ruleType);	  super(nameType.getName(),    ruleType);    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
770	[BUG]  [BUGGY]  this(nameType.getName(),  ruleType,  concat);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType.getName(),  ruleType,  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType.getName(),  ruleType,  concat);	  super(nameType.getName(),    ruleType);    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
771	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES);	  super(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	167	None	replace
772	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  0,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  0,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  0,  maxPhonemes);	  super(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	167	None	replace
773	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes  -  1);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes  -  1);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes  -  1);	  super(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	167	None	replace
774	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES);	  super(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	167	None	replace
775	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES);	  super(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	167	None	replace
776	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES);	  super(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	167	None	replace
777	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  null);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  null);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  null);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    null);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
778	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes,  null);  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes,  null);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes,  null);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    null);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
779	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  nameType,  null);  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  nameType,  null);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  nameType,  null);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    null);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
780	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i,  maxPhonemes,  null);  [CE]  illegal  start  of  type  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i,  maxPhonemes,  null);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i,  maxPhonemes,  null);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    null);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
781	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  phonemeBuilder,  null);  [CE]  illegal  start  of  type  [FE]                                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  phonemeBuilder,  null);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  phonemeBuilder,  null);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    null);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
782	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    null);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
783	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getFullName(),  concat;  [CE]  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getFullName(),  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getFullName(),  concat;	  NameType    nameType    =    ruleType.getFullName();    	non-compiled	[CE]  	238	None	replace
784	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getReturnType();  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getReturnType();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getReturnType();	  NameType    nameType    =    ruleType.getFullName();    	non-compiled	[CE]  	238	None	replace
785	[BUG]  [BUGGY]  nameType)  {  this.nameType  =  ruleType;  }  [CE]  <identifier>  expected  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType)  {  this.nameType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType)  {  this.nameType  =  ruleType;  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
786	[BUG]  [BUGGY]  titleType)  {  this.nameType  =  nameType;  }  [CE]  <identifier>  expected  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  titleType)  {  this.nameType  =  nameType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	titleType)  {  this.nameType  =  nameType;  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
787	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_GLOBAL_PARAMS,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_GLOBAL_PARAMS,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_GLOBAL_PARAMS,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_GLOBAL_PARAMS);    	non-compiled	[CE]  illegal  start  of  type	315	None	replace
788	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PARAMS,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PARAMS,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PARAMS,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_GLOBAL_PARAMS);    	non-compiled	[CE]  illegal  start  of  type	315	None	replace
789	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PARAMS,  DEFAULT_PREFIXES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PARAMS,  DEFAULT_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PARAMS,  DEFAULT_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_GLOBAL_PARAMS);    	non-compiled	[CE]  illegal  start  of  type	315	None	replace
790	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_GLOBAL_PARAMS);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_GLOBAL_PARAMS);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_GLOBAL_PARAMS);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_GLOBAL_PARAMS);    	non-compiled	[CE]  illegal  start  of  type	315	None	replace
791	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PARAMS,  0);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PARAMS,  0);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PARAMS,  0);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_GLOBAL_PARAMS);    	non-compiled	[CE]  illegal  start  of  type	315	None	replace
792	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_GLOBAL_PARAMS);    	non-compiled	[CE]  illegal  start  of  type	315	None	replace
793	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PARAMS);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PARAMS);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PARAMS);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_GLOBAL_PARAMS);    	non-compiled	[CE]  illegal  start  of  type	315	None	replace
794	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PARAMS,  DEFAULT_RULES);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PARAMS,  DEFAULT_RULES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PARAMS,  DEFAULT_RULES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_GLOBAL_PARAMS);    	non-compiled	[CE]  illegal  start  of  type	315	None	replace
795	[BUG]  [BUGGY]  this.nameType  =  nameType.getDeclaredName(),  concat;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getDeclaredName(),  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getDeclaredName(),  concat;	  this.nameType    =    nameType.getDeclaredName();    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
796	[BUG]  [BUGGY]  this.nameType  =  nameType.getDeclaredName()  +  1;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getDeclaredName()  +  1;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getDeclaredName()  +  1;	  this.nameType    =    nameType.getDeclaredName();    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
797	[BUG]  [BUGGY]  this.nameType  =  ruleType.getDeclaredName();  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType.getDeclaredName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType.getDeclaredName();	  this.nameType    =    nameType.getDeclaredName();    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
798	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  DEFAULT_PHONEMES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  DEFAULT_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  DEFAULT_PHONEMES);	  this.nameType,    nameType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	247	None	replace
799	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  DEFAULT_PHONEMES);  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  DEFAULT_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  DEFAULT_PHONEMES);	  this.nameType,    nameType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  <identifier>  expected	247	None	replace
800	[BUG]  [BUGGY]  nameType,  ruleType,  concat,  DEFAULT_PHONEMES);  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  concat,  DEFAULT_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat,  DEFAULT_PHONEMES);	  this.nameType,    nameType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  <identifier>  expected	247	None	replace
801	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  deFAULT_PHONEMES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  deFAULT_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  deFAULT_PHONEMES);	  this.nameType,    nameType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	247	None	replace
802	[BUG]  [BUGGY]  This.nameType,  ruleType,  concat,  DEFAULT_PHONEMES);  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.nameType,  ruleType,  concat,  DEFAULT_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType,  ruleType,  concat,  DEFAULT_PHONEMES);	  this.nameType,    nameType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  <identifier>  expected	247	None	replace
803	[BUG]  [BUGGY]  This.nameType,  nameType,  concat,  DEFAULT_PHONEMES);  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.nameType,  nameType,  concat,  DEFAULT_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType,  nameType,  concat,  DEFAULT_PHONEMES);	  this.nameType,    nameType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  <identifier>  expected	247	None	replace
804	[BUG]  [BUGGY]  nameType,  ruleType.nameType,  concat,  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType.nameType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType.nameType,  concat,	  NameType    nameType,    ruleType.nameType,    concat,    	non-compiled	[CE]  <identifier>  expected	38	None	replace
805	[BUG]  [BUGGY]  NameType  nameType,  ruleType.nameType,  concat,  maxPhonemes,  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.nameType,  concat,  maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.nameType,  concat,  maxPhonemes,	  NameType    nameType,    ruleType.nameType,    concat,    	non-compiled	[CE]  <identifier>  expected	38	None	replace
806	[BUG]  [BUGGY]  NameType  nameType,  ruleType.nameType,  concat,  this.maxPhonemes,  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.nameType,  concat,  this.maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.nameType,  concat,  this.maxPhonemes,	  NameType    nameType,    ruleType.nameType,    concat,    	non-compiled	[CE]  <identifier>  expected	38	None	replace
807	[BUG]  [BUGGY]  NameType  nameType,  ruleType.nameType,  concat,  this.numberPhonemes,  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.nameType,  concat,  this.numberPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.nameType,  concat,  this.numberPhonemes,	  NameType    nameType,    ruleType.nameType,    concat,    	non-compiled	[CE]  <identifier>  expected	38	None	replace
808	[BUG]  [BUGGY]  NameType  nameType,  ruleType.nameType,  concat;  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.nameType,  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.nameType,  concat;	  NameType    nameType,    ruleType.nameType,    concat,    	non-compiled	[CE]  <identifier>  expected	38	None	replace
809	[BUG]  [BUGGY]  NameType  nameType,  ruleType.nameType,  concat);  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.nameType,  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.nameType,  concat);	  NameType    nameType,    ruleType.nameType,    concat,    	non-compiled	[CE]  <identifier>  expected	38	None	replace
810	[BUG]  [BUGGY]  NameType  nameType,  ruleType.nameType,  concat,  false,  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.nameType,  concat,  false,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.nameType,  concat,  false,	  NameType    nameType,    ruleType.nameType,    concat,    	non-compiled	[CE]  <identifier>  expected	38	None	replace
811	[BUG]  [BUGGY]  NameType  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).getName();  [CE]  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).getName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).getName();	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :((    RuleType)nameType).getName();    	non-compiled	[CE]  	149	None	replace
812	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)ruleType).getName();  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)ruleType).getName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)ruleType).getName();	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :((    RuleType)nameType).getName();    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
813	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).getName()  +  1;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).getName()  +  1;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).getName()  +  1;	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :((    RuleType)nameType).getName();    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
814	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :  ruleType.getName();  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :  ruleType.getName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?  nameType  :  ruleType.getName();	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :((    RuleType)nameType).getName();    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
815	[BUG]  [BUGGY]  This.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).getName();  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).getName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).getName();	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :((    RuleType)nameType).getName();    	non-compiled	[CE]  <identifier>  expected	149	None	replace
816	[BUG]  [BUGGY]  this.nameType  =  ruleType.toPlainString();  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType.toPlainString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType.toPlainString();	  this.nameType    =    nameType.toPlainString();    	non-compiled	[CE]  illegal  start  of  type	241	None	replace
817	[BUG]  [BUGGY]  this.nameType  =  nameType.toPlainString(),  concat;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toPlainString(),  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toPlainString(),  concat;	  this.nameType    =    nameType.toPlainString();    	non-compiled	[CE]  illegal  start  of  type	241	None	replace
818	[BUG]  [BUGGY]  this.nameType  =  nameType.toPlainString()  +  1;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toPlainString()  +  1;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toPlainString()  +  1;	  this.nameType    =    nameType.toPlainString();    	non-compiled	[CE]  illegal  start  of  type	241	None	replace
819	[BUG]  [BUGGY]  this.nameType  =  nameType.toPlainString(),  concat);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toPlainString(),  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toPlainString(),  concat);	  this.nameType    =    nameType.toPlainString();    	non-compiled	[CE]  illegal  start  of  type	241	None	replace
820	[BUG]  [BUGGY]  this(nameType,  ruleType);  this.maxPhonemes  =  concat;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType);  this.maxPhonemes  =  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType);  this.maxPhonemes  =  concat;	  this(nameType,    ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	224	None	replace
821	[BUG]  [BUGGY]  this.nameType  =  nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;	  this(nameType,    ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	224	None	replace
822	[BUG]  [BUGGY]  this.nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;	  this(nameType,    ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	224	None	replace
823	[BUG]  [BUGGY]  nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }	  if(nameType!=    RuleType.NAME_PREFIXES)    {    super(nameType);    this.ruleType    =    ruleType;    }    	non-compiled	[CE]  <identifier>  expected	251	None	replace
824	[BUG]  [BUGGY]  if(nameType!=  RuleType.NAME_PREFIXES  ||  nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType!=  RuleType.NAME_PREFIXES  ||  nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  RuleType.NAME_PREFIXES  ||  nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }	  if(nameType!=    RuleType.NAME_PREFIXES)    {    super(nameType);    this.ruleType    =    ruleType;    }    	non-compiled	[CE]  illegal  start  of  type	251	None	replace
825	[BUG]  [BUGGY]  nameType!=  RuleType.NAME_PREFIXES  &&  nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType!=  RuleType.NAME_PREFIXES  &&  nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType!=  RuleType.NAME_PREFIXES  &&  nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }	  if(nameType!=    RuleType.NAME_PREFIXES)    {    super(nameType);    this.ruleType    =    ruleType;    }    	non-compiled	[CE]  <identifier>  expected	251	None	replace
826	[BUG]  [BUGGY]  nameType!=  RuleType.NAME_PREFIXES  &&  nameType!=  RuleType.NAME_PREFIXES);  this.ruleType  =  ruleType;  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType!=  RuleType.NAME_PREFIXES  &&  nameType!=  RuleType.NAME_PREFIXES);  this.ruleType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType!=  RuleType.NAME_PREFIXES  &&  nameType!=  RuleType.NAME_PREFIXES);  this.ruleType  =  ruleType;	  if(nameType!=    RuleType.NAME_PREFIXES)    {    super(nameType);    this.ruleType    =    ruleType;    }    	non-compiled	[CE]  <identifier>  expected	251	None	replace
827	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  nameType  :  ruleType;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  nameType  :  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  NameType?  nameType  :  ruleType;	  this.nameType    =    nameType    instanceof    NameType?    nameType    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
828	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  nameType  :  RuleType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  nameType  :  RuleType.NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  NameType?  nameType  :  RuleType.NAME_PREFIXES;	  this.nameType    =    nameType    instanceof    NameType?    nameType    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
829	[BUG]  [BUGGY]  this.nameType  =  nameType  instancesof  NameType?  nameType  :  nameType;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instancesof  NameType?  nameType  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instancesof  NameType?  nameType  :  nameType;	  this.nameType    =    nameType    instanceof    NameType?    nameType    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
830	[BUG]  [BUGGY]  This.nameType  =  nameType  instanceof  NameType?  nameType  :  nameType;  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.nameType  =  nameType  instanceof  NameType?  nameType  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType  =  nameType  instanceof  NameType?  nameType  :  nameType;	  this.nameType    =    nameType    instanceof    NameType?    nameType    :    nameType;    	non-compiled	[CE]  <identifier>  expected	148	None	replace
831	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  nameType  :  nameType,  concat;  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  nameType  :  nameType,  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  NameType?  nameType  :  nameType,  concat;	  this.nameType    =    nameType    instanceof    NameType?    nameType    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
832	[BUG]  [BUGGY]  this.ruleType  =  NameType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  NameType.NAME_PREFIXES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  NameType.NAME_PREFIXES;	  this.ruleType    =    RuleType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
833	[BUG]  [BUGGY]  this.ruleType  =  ruleType,  NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  ruleType,  NAME_PREFIXES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  ruleType,  NAME_PREFIXES;	  this.ruleType    =    RuleType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
834	[BUG]  [BUGGY]  this.ruleType  =  RuleType.NAME_PREFIXES  |  Locale.getDefault();  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  RuleType.NAME_PREFIXES  |  Locale.getDefault();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  RuleType.NAME_PREFIXES  |  Locale.getDefault();	  this.ruleType    =    RuleType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
835	[BUG]  [BUGGY]  this.ruleType  =  RuleType.NAME_PREFIXES  +  nameType.toString();  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  RuleType.NAME_PREFIXES  +  nameType.toString();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  RuleType.NAME_PREFIXES  +  nameType.toString();	  this.ruleType    =    RuleType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
836	[BUG]  [BUGGY]  this.ruleType  =  RuleType.NAME_PREFIXES,  concat;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  RuleType.NAME_PREFIXES,  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  RuleType.NAME_PREFIXES,  concat;	  this.ruleType    =    RuleType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
837	[BUG]  [BUGGY]  this.ruleType  =  RuleType.NAME_PREFIXES  +  1;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  RuleType.NAME_PREFIXES  +  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  RuleType.NAME_PREFIXES  +  1;	  this.ruleType    =    RuleType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
838	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  MAX_PHONEMES,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  MAX_PHONEMES,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  MAX_PHONEMES,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
839	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
840	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
841	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  MAX_PHONEMES,  0);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  MAX_PHONEMES,  0);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  MAX_PHONEMES,  0);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
842	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	293	None	replace
843	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  DEFAULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  DEFAULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  DEFAULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	293	None	replace
844	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_PAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_PAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_PAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	293	None	replace
845	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  DEFAULT_PAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  DEFAULT_PAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  maxPhonemes,  DEFAULT_PAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	293	None	replace
846	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES,  NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES,  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES,  NAME_PREFIXES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	293	None	replace
847	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_PAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_PAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_PAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	293	None	replace
848	[BUG]  [BUGGY]  super(nameType,  ruleType.ruleType,  concat);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType.ruleType,  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.ruleType,  concat);	  super(nameType,    ruleType.ruleType);    	non-compiled	[CE]  illegal  start  of  type	319	None	replace
849	[BUG]  [BUGGY]  this(nameType,  ruleType.ruleType,  concat);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType.ruleType,  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType.ruleType,  concat);	  super(nameType,    ruleType.ruleType);    	non-compiled	[CE]  illegal  start  of  type	319	None	replace
850	[BUG]  [BUGGY]  super(ruleType,  nameType.ruleType);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(ruleType,  nameType.ruleType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(ruleType,  nameType.ruleType);	  super(nameType,    ruleType.ruleType);    	non-compiled	[CE]  illegal  start  of  type	319	None	replace
851	[BUG]  [BUGGY]  super(nameType,  ruleType.null,  concat);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType.null,  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.null,  concat);	  super(nameType,    ruleType.ruleType);    	non-compiled	[CE]  illegal  start  of  type	319	None	replace
852	[BUG]  [BUGGY]  super(nameType,  ruleType.config);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType.config);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.config);	  super(nameType,    ruleType.ruleType);    	non-compiled	[CE]  illegal  start  of  type	319	None	replace
853	[BUG]  [BUGGY]  super(nameType,  ruleType.ruleSuffix);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType.ruleSuffix);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.ruleSuffix);	  super(nameType,    ruleType.ruleType);    	non-compiled	[CE]  illegal  start  of  type	319	None	replace
854	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getParameterTypes(),  concat);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getParameterTypes(),  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getParameterTypes(),  concat);	  this.ruleType    =    new    RuleType(nameType.getName(),    ruleType.getParameterTypes());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
855	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getRawParameterTypes());  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getRawParameterTypes());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getRawParameterTypes());	  this.ruleType    =    new    RuleType(nameType.getName(),    ruleType.getParameterTypes());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
856	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  nameType.getParameterTypes());  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  nameType.getParameterTypes());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  nameType.getParameterTypes());	  this.ruleType    =    new    RuleType(nameType.getName(),    ruleType.getParameterTypes());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
857	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getDeclaredParameterTypes());  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getDeclaredParameterTypes());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getDeclaredParameterTypes());	  this.ruleType    =    new    RuleType(nameType.getName(),    ruleType.getParameterTypes());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
858	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getDeclaringClass());  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getDeclaringClass());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getDeclaringClass());	  this.ruleType    =    new    RuleType(nameType.getName(),    ruleType.getParameterTypes());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
859	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getReturnTypes());  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getReturnTypes());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getReturnTypes());	  this.ruleType    =    new    RuleType(nameType.getName(),    ruleType.getParameterTypes());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
860	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getReturnType());  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getReturnType());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getReturnType());	  this.ruleType    =    new    RuleType(nameType.getName(),    ruleType.getParameterTypes());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
861	[BUG]  [BUGGY]  this.ruleType,  ruleType,  concat,  0,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType,  ruleType,  concat,  0,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  ruleType,  concat,  0,  maxPhonemes)  {	  this.ruleType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	270	None	replace
862	[BUG]  [BUGGY]  this.ruleType,  nameType,  concat,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType,  nameType,  concat,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  nameType,  concat,  maxPhonemes)  {	  this.ruleType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	270	None	replace
863	[BUG]  [BUGGY]  this.ruleType,  ruleType,  concat,  0)  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType,  ruleType,  concat,  0)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  ruleType,  concat,  0)  {	  this.ruleType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	270	None	replace
864	[BUG]  [BUGGY]  this.ruleType,  ruleType,  concat,  null,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType,  ruleType,  concat,  null,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  ruleType,  concat,  null,  maxPhonemes)  {	  this.ruleType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	270	None	replace
865	[BUG]  [BUGGY]  this.ruleType,  ruleType,  concat,  false)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType,  ruleType,  concat,  false)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  ruleType,  concat,  false)  {	  this.ruleType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	270	None	replace
866	[BUG]  [BUGGY]  this.ruleType,  ruleType,  concat,  null)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType,  ruleType,  concat,  null)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  ruleType,  concat,  null)  {	  this.ruleType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	270	None	replace
867	[BUG]  [BUGGY]  this.ruleType,  ruleType,  concat,  4)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType,  ruleType,  concat,  4)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  ruleType,  concat,  4)  {	  this.ruleType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	270	None	replace
868	[BUG]  [BUGGY]  this.ruleType,  ruleType,  concat,  3)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType,  ruleType,  concat,  3)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  ruleType,  concat,  3)  {	  this.ruleType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	270	None	replace
869	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.nameType  =  ruleType;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.nameType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.nameType  =  ruleType;	  this.nameType    =    nameType;    this.nameType,    concat,    	non-compiled	[CE]  illegal  start  of  type	208	None	replace
870	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.nameType  =  ruleType,  concat,  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.nameType  =  ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.nameType  =  ruleType,  concat,	  this.nameType    =    nameType;    this.nameType,    concat,    	non-compiled	[CE]  illegal  start  of  type	208	None	replace
871	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.nameType;  this.nameType,  concat,  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.nameType;  this.nameType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.nameType;  this.nameType,  concat,	  this.nameType    =    nameType;    this.nameType,    concat,    	non-compiled	[CE]  	208	None	replace
872	[BUG]  [BUGGY]  this.nameType  =  ruleType;  this.nameType,  concat,  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType;  this.nameType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType;  this.nameType,  concat,	  this.nameType    =    nameType;    this.nameType,    concat,    	non-compiled	[CE]  illegal  start  of  type	208	None	replace
873	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.nameType  =  ruleType.nameType;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.nameType  =  ruleType.nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.nameType  =  ruleType.nameType;	  this.nameType    =    nameType;    this.nameType,    concat,    	non-compiled	[CE]  illegal  start  of  type	208	None	replace
874	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_PARENTHESES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	297	None	replace
875	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  maxPhonemes,  NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  maxPhonemes,  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  maxPhonemes,  NAME_PREFIXES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_PARENTHESES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	297	None	replace
876	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  0,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  0,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  0,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_PARENTHESES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	297	None	replace
877	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  maxPhonemes,  nameType)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  maxPhonemes,  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  maxPhonemes,  nameType)  {	  this(nameType,    ruleType,    concat,    DEFAULT_PARENTHESES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	297	None	replace
878	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  DEFAULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  DEFAULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  DEFAULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_PARENTHESES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	297	None	replace
879	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  i,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  i,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  i,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_PARENTHESES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	297	None	replace
880	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  NAME_PREFIXES,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  NAME_PREFIXES,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  NAME_PREFIXES,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_PARENTHESES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	297	None	replace
881	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PLAIN_PHONEMES,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PLAIN_PHONEMES,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PLAIN_PHONEMES,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PLAIN_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	314	None	replace
882	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAREN_PHONEMES,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAREN_PHONEMES,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PAREN_PHONEMES,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PLAIN_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	314	None	replace
883	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_PLAIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_PLAIN_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_PLAIN_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PLAIN_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	314	None	replace
884	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_MAX_PHONEMES,  DEFAULT_PLAIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_MAX_PHONEMES,  DEFAULT_PLAIN_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_MAX_PHONEMES,  DEFAULT_PLAIN_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PLAIN_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	314	None	replace
885	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PLAIN_PHONEMES,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PLAIN_PHONEMES,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PLAIN_PHONEMES,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PLAIN_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	314	None	replace
886	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PLAIN_PHONEMES,  DEFAULT_PREFIXES);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PLAIN_PHONEMES,  DEFAULT_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PLAIN_PHONEMES,  DEFAULT_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PLAIN_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	314	None	replace
887	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PLAIN_PHONEMES,  DEFAULT_MIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PLAIN_PHONEMES,  DEFAULT_MIN_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PLAIN_PHONEMES,  DEFAULT_MIN_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PLAIN_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	314	None	replace
888	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_PLAIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_PLAIN_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_PLAIN_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PLAIN_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	314	None	replace
889	[BUG]  [BUGGY]  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  concat;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  concat;	  this.lang    =    Lang.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
890	[BUG]  [BUGGY]  this.lang  =  Lang.instance(ruleType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.lang  =  Lang.instance(ruleType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.lang  =  Lang.instance(ruleType);  this.maxPhonemes  =  maxPhonemes;	  this.lang    =    Lang.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
891	[BUG]  [BUGGY]  this.lang  =  Lang.instance(nameType,  concat);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.lang  =  Lang.instance(nameType,  concat);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.lang  =  Lang.instance(nameType,  concat);  this.maxPhonemes  =  maxPhonemes;	  this.lang    =    Lang.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
892	[BUG]  [BUGGY]  this.lang  =  lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.lang  =  lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.lang  =  lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;	  this.lang    =    Lang.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
893	[BUG]  [BUGGY]  this.lang  =  Long.instance(nameType);  this.maxPhonemes  =  concat;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.lang  =  Long.instance(nameType);  this.maxPhonemes  =  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.lang  =  Long.instance(nameType);  this.maxPhonemes  =  concat;	  this.lang    =    Lang.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
894	[BUG]  [BUGGY]  this.lang  =  Lang.instance();  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.lang  =  Lang.instance();  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.lang  =  Lang.instance();  this.maxPhonemes  =  maxPhonemes;	  this.lang    =    Lang.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
895	[BUG]  [BUGGY]  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  concat?  maxPhonemes  :  1;  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  concat?  maxPhonemes  :  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  concat?  maxPhonemes  :  1;	  this.lang    =    Lang.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
896	[BUG]  [BUGGY]  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  0;  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  0;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  0;	  this.lang    =    Lang.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
897	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
898	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
899	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
900	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES,  nameType);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES,  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES,  nameType);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
901	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  DEFAULT_NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  DEFAULT_NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  DEFAULT_NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
902	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes,  nameType)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes,  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes,  nameType)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
903	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes,  false)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes,  false)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes,  false)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
904	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  count,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  count,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  count,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
905	[BUG]  [BUGGY]  this.nameType  =  nameType.equals(nameType.nameType)?  null  :  nameType.equals(ruleType.nameType);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.equals(nameType.nameType)?  null  :  nameType.equals(ruleType.nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.equals(nameType.nameType)?  null  :  nameType.equals(ruleType.nameType);	  super(ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	184	None	replace
906	[BUG]  [BUGGY]  this.nameType  =  nameType.equals(nameType.nameType)?  null  :  nameType.equals(ruleType.nameType,  concat);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.equals(nameType.nameType)?  null  :  nameType.equals(ruleType.nameType,  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.equals(nameType.nameType)?  null  :  nameType.equals(ruleType.nameType,  concat);	  super(ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	184	None	replace
907	[BUG]  [BUGGY]  this.nameType  =  nameType.equals(nameType.nameType)?  null  :  nameType.equals(ruleType.nameType),  concat);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.equals(nameType.nameType)?  null  :  nameType.equals(ruleType.nameType),  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.equals(nameType.nameType)?  null  :  nameType.equals(ruleType.nameType),  concat);	  super(ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	184	None	replace
908	[BUG]  [BUGGY]  this.nameType  =  nameType.equals(nameType.nameType)?  null  :  nameType.equals(ruleType,  concat);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.equals(nameType.nameType)?  null  :  nameType.equals(ruleType,  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.equals(nameType.nameType)?  null  :  nameType.equals(ruleType,  concat);	  super(ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	184	None	replace
909	[BUG]  [BUGGY]  this.nameType  =  nameType.equals(nameType.nameType)?  null  :  nameType.equals(ruleType.toString());  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.equals(nameType.nameType)?  null  :  nameType.equals(ruleType.toString());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.equals(nameType.nameType)?  null  :  nameType.equals(ruleType.toString());	  super(ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	184	None	replace
910	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.maxPhonemes  =  concat;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.maxPhonemes  =  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.maxPhonemes  =  concat;	  super(nameType);    this.maxPhonemes    =    concat;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
911	[BUG]  [BUGGY]  this.minPhonemes  =  Long.instance(nameType);  this.maxPhonemes  =  concat;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.minPhonemes  =  Long.instance(nameType);  this.maxPhonemes  =  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.minPhonemes  =  Long.instance(nameType);  this.maxPhonemes  =  concat;	  super(nameType);    this.maxPhonemes    =    concat;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
912	[BUG]  [BUGGY]  this.nameType  =  nameType.getName();  this.maxPhonemes  =  concat;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getName();  this.maxPhonemes  =  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getName();  this.maxPhonemes  =  concat;	  super(nameType);    this.maxPhonemes    =    concat;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
913	[BUG]  [BUGGY]  this.phonemeBuilder  =  new  PhonemeBuilder(nameType,  ruleType);  this.maxPhonemes  =  concat;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  new  PhonemeBuilder(nameType,  ruleType);  this.maxPhonemes  =  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  new  PhonemeBuilder(nameType,  ruleType);  this.maxPhonemes  =  concat;	  super(nameType);    this.maxPhonemes    =    concat;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
914	[BUG]  [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType  :  null;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType  :  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType  :  null;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType    :    null;    	non-compiled	[CE]  illegal  start  of  type	305	None	replace
915	[BUG]  [BUGGY]  this.nameType  =  ruleType  ==  RuleType.NAME_PREFIXES?  nameType  :  null;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType  ==  RuleType.NAME_PREFIXES?  nameType  :  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType  ==  RuleType.NAME_PREFIXES?  nameType  :  null;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType    :    null;    	non-compiled	[CE]  illegal  start  of  type	305	None	replace
916	[BUG]  [BUGGY]  this.maxPhonemes,  final  Boolean  concat)  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes,  final  Boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes,  final  Boolean  concat)  {	  final    int    maxPhonemes,    final    Boolean    concat)    {    	non-compiled	[CE]  illegal  start  of  type	272	None	replace
917	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  Boolean  concat,  final  RuleType  ruleType)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  Boolean  concat,  final  RuleType  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  Boolean  concat,  final  RuleType  ruleType)  {	  final    int    maxPhonemes,    final    Boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	272	None	replace
918	[BUG]  [BUGGY]  final  boolean  concat,  final  int  maxPhonemes)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  concat,  final  int  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  concat,  final  int  maxPhonemes)  {	  final    int    maxPhonemes,    final    Boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	272	None	replace
919	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getNameType(),  concat;  [CE]  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getNameType(),  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getNameType(),  concat;	  NameType    nameType    =    ruleType.getNameType();    	non-compiled	[CE]  	237	None	replace
920	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRawNameType();  [CE]  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getRawNameType();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getRawNameType();	  NameType    nameType    =    ruleType.getNameType();    	non-compiled	[CE]  	237	None	replace
921	[BUG]  [BUGGY]  final  int  maxPhonemes,  RuleType  nameType)  {  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  RuleType  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  RuleType  nameType)  {	  final    boolean    maxPhonemes,    RuleType    nameType)    {    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	201	None	replace
922	[BUG]  [BUGGY]  static  final  boolean  maxPhonemes,  RuleType  nameType)  {  [CE]  modifier  static  not  allowed  here  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  static  final  boolean  maxPhonemes,  RuleType  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  boolean  maxPhonemes,  RuleType  nameType)  {	  final    boolean    maxPhonemes,    RuleType    nameType)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	201	None	replace
923	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  RuleType  exceptionType)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  RuleType  exceptionType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  RuleType  exceptionType)  {	  final    boolean    maxPhonemes,    RuleType    nameType)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	201	None	replace
924	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  RuleType  type)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  RuleType  type)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  RuleType  type)  {	  final    boolean    maxPhonemes,    RuleType    nameType)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	201	None	replace
925	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  RuleType  rulesApplication)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  RuleType  rulesApplication)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  RuleType  rulesApplication)  {	  final    boolean    maxPhonemes,    RuleType    nameType)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	201	None	replace
926	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  ruleType)  {  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  ruleType)  {	  final    boolean    maxPhonemes,    RuleType    nameType)    {    	non-compiled	[CE]  <identifier>  expected	201	None	replace
927	[BUG]  [BUGGY]  this.nameType  =  nameType.getName();  this.ruleType  =  ruleType;  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getName();  this.ruleType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getName();  this.ruleType  =  ruleType;	  if(nameType    ==    RuleType.NAME_PREFIXES)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	250	None	replace
928	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.getName()  :  concat;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.getName()  :  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.getName()  :  concat;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType.getName()    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	309	None	replace
929	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.getName()  :  ruleType;  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.getName()  :  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.getName()  :  ruleType;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType.getName()    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	309	None	replace
930	[BUG]  [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.getName()  :  concat;  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.getName()  :  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.getName()  :  concat;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType.getName()    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	309	None	replace
931	[BUG]  [BUGGY]  nameType,  ruleType,  concat,  this.numberPhonemes,  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  concat,  this.numberPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat,  this.numberPhonemes,	  NameType    nameType,    ruleType,    concat,    this.numberPhonemes,    	non-compiled	[CE]  <identifier>  expected	39	None	replace
932	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  int  maxPhonemes,  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  int  maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  int  maxPhonemes,	  NameType    nameType,    ruleType,    concat,    this.numberPhonemes,    	non-compiled	[CE]  <identifier>  expected	39	None	replace
933	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  0);  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  0);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  0);	  NameType    nameType,    ruleType,    concat,    this.numberPhonemes,    	non-compiled	[CE]  <identifier>  expected	39	None	replace
934	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  maxPhonemes,  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  maxPhonemes,	  NameType    nameType,    ruleType,    concat,    this.numberPhonemes,    	non-compiled	[CE]  <identifier>  expected	39	None	replace
935	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  final  int  maxPhonemes,  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  final  int  maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  final  int  maxPhonemes,	  NameType    nameType,    ruleType,    concat,    this.numberPhonemes,    	non-compiled	[CE]  <identifier>  expected	39	None	replace
936	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  null,  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  null,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  null,	  NameType    nameType,    ruleType,    concat,    this.numberPhonemes,    	non-compiled	[CE]  <identifier>  expected	39	None	replace
937	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  finalRules,  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  finalRules,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  finalRules,	  NameType    nameType,    ruleType,    concat,    this.numberPhonemes,    	non-compiled	[CE]  <identifier>  expected	39	None	replace
938	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
939	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  finalRules,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  finalRules,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  finalRules,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
940	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
941	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
942	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  maxPhonemes,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  maxPhonemes,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  maxPhonemes,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
943	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
944	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
945	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PAX_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	179	None	replace
946	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	179	None	replace
947	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_PAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_PAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_PAX_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	179	None	replace
948	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  MAX_PHONEMES,  DEFAULT_PAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  MAX_PHONEMES,  DEFAULT_PAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  MAX_PHONEMES,  DEFAULT_PAX_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	179	None	replace
949	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  DEFAULT_PAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  DEFAULT_PAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  DEFAULT_PAX_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	179	None	replace
950	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	179	None	replace
951	[BUG]  [BUGGY]  this.nameType  =  ruleType.getRawName();  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType.getRawName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType.getRawName();	  this.nameType    =    nameType.getRawName();    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
952	[BUG]  [BUGGY]  this.nameType  =  nameType.getRawName(),  concat;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getRawName(),  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getRawName(),  concat;	  this.nameType    =    nameType.getRawName();    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
953	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.nameType;  this.ruleType  =  nameType;  [CE]  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.nameType;  this.ruleType  =  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.nameType;  this.ruleType  =  nameType;	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    	non-compiled	[CE]  	101	None	replace
954	[BUG]  [BUGGY]  this.nameType  =  ruleType;  this.ruleType  =  nameType;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType;  this.ruleType  =  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType;  this.ruleType  =  nameType;	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
955	[BUG]  [BUGGY]  This.nameType  =  nameType;  this.ruleType  =  ruleType;  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.nameType  =  nameType;  this.ruleType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType  =  nameType;  this.ruleType  =  ruleType;	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    	non-compiled	[CE]  <identifier>  expected	101	None	replace
956	[BUG]  [BUGGY]  this.nameType  =  nameType,  ruleType;  this.ruleType  =  ruleType;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType,  ruleType;  this.ruleType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType,  ruleType;  this.ruleType  =  ruleType;	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
957	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType,  concat;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType,  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.ruleType  =  ruleType,  concat;	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
958	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  null;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.ruleType  =  null;	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
959	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  0);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  0);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  0);	  this(nameType,    ruleType,    concat,    0,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
960	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  1);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  1);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  1);	  this(nameType,    ruleType,    concat,    0,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
961	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MIN_PHONEMES,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MIN_PHONEMES,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_MIN_PHONEMES,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    0,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
962	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_PARENTHESES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_PARENTHESES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_PARENTHESES);	  this(nameType,    ruleType,    concat,    0,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
963	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  2);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  2);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  2);	  this(nameType,    ruleType,    concat,    0,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
964	[BUG]  [BUGGY]  this.lang,  nameType,  concat,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.lang,  nameType,  concat,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.lang,  nameType,  concat,  maxPhonemes)  {	  this.lang,    nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
965	[BUG]  [BUGGY]  this.lang,  ruleType,  concat,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.lang,  ruleType,  concat,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.lang,  ruleType,  concat,  maxPhonemes)  {	  this.lang,    nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
966	[BUG]  [BUGGY]  this.lang,  nameType,  ruleType,  concat)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.lang,  nameType,  ruleType,  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.lang,  nameType,  ruleType,  concat)  {	  this.lang,    nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
967	[BUG]  [BUGGY]  this.lang,  nameType,  ruleType,  concat,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.lang,  nameType,  ruleType,  concat,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.lang,  nameType,  ruleType,  concat,  maxPhonemes)  {	  this.lang,    nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
968	[BUG]  [BUGGY]  this.lang,  titleType,  ruleType,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.lang,  titleType,  ruleType,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.lang,  titleType,  ruleType,  maxPhonemes)  {	  this.lang,    nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
969	[BUG]  [BUGGY]  this.lang,  nameType,  Concat,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.lang,  nameType,  Concat,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.lang,  nameType,  Concat,  maxPhonemes)  {	  this.lang,    nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
970	[BUG]  [BUGGY]  this.lang,  nameType,  null,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.lang,  nameType,  null,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.lang,  nameType,  null,  maxPhonemes)  {	  this.lang,    nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
971	[BUG]  [BUGGY]  super(new  NameType(nameType,  ruleType),  concat,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(new  NameType(nameType,  ruleType),  concat,  maxPhonemes);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(nameType,  ruleType),  concat,  maxPhonemes);	  super(new    NameType(nameType,    ruleType),    concat);    	non-compiled	[CE]  illegal  start  of  type	228	None	replace
972	[BUG]  [BUGGY]  super(new  NameType(nameType,  ruleType),  concat,  false);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(new  NameType(nameType,  ruleType),  concat,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(nameType,  ruleType),  concat,  false);	  super(new    NameType(nameType,    ruleType),    concat);    	non-compiled	[CE]  illegal  start  of  type	228	None	replace
973	[BUG]  [BUGGY]  super(new  NameType(nameType,  ruleType),  concat,  this.maxPhonemes);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(new  NameType(nameType,  ruleType),  concat,  this.maxPhonemes);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(nameType,  ruleType),  concat,  this.maxPhonemes);	  super(new    NameType(nameType,    ruleType),    concat);    	non-compiled	[CE]  illegal  start  of  type	228	None	replace
974	[BUG]  [BUGGY]  super(new  NameType(nameType,  ruleType),  concat,  0);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(new  NameType(nameType,  ruleType),  concat,  0);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(nameType,  ruleType),  concat,  0);	  super(new    NameType(nameType,    ruleType),    concat);    	non-compiled	[CE]  illegal  start  of  type	228	None	replace
975	[BUG]  [BUGGY]  super(new  NameType(nameType,  ruleType,  concat);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(new  NameType(nameType,  ruleType,  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(nameType,  ruleType,  concat);	  super(new    NameType(nameType,    ruleType),    concat);    	non-compiled	[CE]  illegal  start  of  type	228	None	replace
976	[BUG]  [BUGGY]  super(new  NameType(nameType,  ruleType),  concat,  true);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(new  NameType(nameType,  ruleType),  concat,  true);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(nameType,  ruleType),  concat,  true);	  super(new    NameType(nameType,    ruleType),    concat);    	non-compiled	[CE]  illegal  start  of  type	228	None	replace
977	[BUG]  [BUGGY]  super(new  NameType(nameType,  ruleType),  concat,  null);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(new  NameType(nameType,  ruleType),  concat,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(nameType,  ruleType),  concat,  null);	  super(new    NameType(nameType,    ruleType),    concat);    	non-compiled	[CE]  illegal  start  of  type	228	None	replace
978	[BUG]  [BUGGY]  super(new  NameType(nameType,  ruleType),  concat,  this.lang);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(new  NameType(nameType,  ruleType),  concat,  this.lang);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(nameType,  ruleType),  concat,  this.lang);	  super(new    NameType(nameType,    ruleType),    concat);    	non-compiled	[CE]  illegal  start  of  type	228	None	replace
979	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  ruleType.getName();  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  ruleType.getName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.getName()  :  ruleType.getName();	  this.nameType    =    nameType    ==    null?    nameType.getName()    :    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	203	None	replace
980	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  ruleType.getName()  :  nameType.getName();  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  ruleType.getName()  :  nameType.getName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  ruleType.getName()  :  nameType.getName();	  this.nameType    =    nameType    ==    null?    nameType.getName()    :    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	203	None	replace
981	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  nameType.getSimpleName();  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  nameType.getSimpleName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.getName()  :  nameType.getSimpleName();	  this.nameType    =    nameType    ==    null?    nameType.getName()    :    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	203	None	replace
982	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  nameType.getLocalName();  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  nameType.getLocalName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.getName()  :  nameType.getLocalName();	  this.nameType    =    nameType    ==    null?    nameType.getName()    :    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	203	None	replace
983	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PARENTHESES);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
984	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PARENTHESES,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PARENTHESES,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PARENTHESES,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PARENTHESES);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
985	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PARENTHESES,  nameType);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PARENTHESES,  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PARENTHESES,  nameType);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PARENTHESES);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
986	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  DEFAULT_MIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  DEFAULT_MIN_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  DEFAULT_MIN_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PARENTHESES);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
987	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  DEFAULT_PREFIXES);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  DEFAULT_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  DEFAULT_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PARENTHESES);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
988	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  DEFAULT_NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  DEFAULT_NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  DEFAULT_NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PARENTHESES);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
989	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_PARENTHESES);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_PARENTHESES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_PARENTHESES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PARENTHESES);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
990	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PARENTHESES);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
991	[BUG]  [BUGGY]  this.maxPhonemes  =  concat?  nameType.getMaxPhonemes()  :  1;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  concat?  nameType.getMaxPhonemes()  :  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  concat?  nameType.getMaxPhonemes()  :  1;	  this.maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  illegal  start  of  type	188	None	replace
992	[BUG]  [BUGGY]  this.maxPhonemes  =  concat?  nameType.getMaxPhonemes()  :  0;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  concat?  nameType.getMaxPhonemes()  :  0;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  concat?  nameType.getMaxPhonemes()  :  0;	  this.maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  illegal  start  of  type	188	None	replace
993	[BUG]  [BUGGY]  this.maxPhonemes  =  concat?  nameType.getMaxPhonemes()  :  DEFAULT_MAX_PHONEMES;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  concat?  nameType.getMaxPhonemes()  :  DEFAULT_MAX_PHONEMES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  concat?  nameType.getMaxPhonemes()  :  DEFAULT_MAX_PHONEMES;	  this.maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  illegal  start  of  type	188	None	replace
994	[BUG]  [BUGGY]  this.maxPhonemes  =  maxPhonemes?  nameType.getMaxPhonemes()  :  1;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  maxPhonemes?  nameType.getMaxPhonemes()  :  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  maxPhonemes?  nameType.getMaxPhonemes()  :  1;	  this.maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  illegal  start  of  type	188	None	replace
995	[BUG]  [BUGGY]  this.maxPhonemes  =  maxPhonemes?  nameType.getMaxPhonemes()  :  0;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  maxPhonemes?  nameType.getMaxPhonemes()  :  0;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  maxPhonemes?  nameType.getMaxPhonemes()  :  0;	  this.maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  illegal  start  of  type	188	None	replace
996	[BUG]  [BUGGY]  this.maxPhonemes  =  maxPhonemes  +  nameType.getMaxPhonemes();  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  maxPhonemes  +  nameType.getMaxPhonemes();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  maxPhonemes  +  nameType.getMaxPhonemes();	  this.maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  illegal  start  of  type	188	None	replace
997	[BUG]  [BUGGY]  this.maxPhonemes  =  maxPhonemes?  nameType.getMaxPhonemes()  :  DEFAULT_MAX_PHONEMES;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  maxPhonemes?  nameType.getMaxPhonemes()  :  DEFAULT_MAX_PHONEMES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  maxPhonemes?  nameType.getMaxPhonemes()  :  DEFAULT_MAX_PHONEMES;	  this.maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  illegal  start  of  type	188	None	replace
998	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  0,  0);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  0,  0);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  0,  0);	  super(nameType,    ruleType,    concat,    0);    	non-compiled	[CE]  illegal  start  of  type	169	None	replace
999	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  1);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  1);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  1);	  super(nameType,    ruleType,    concat,    0);    	non-compiled	[CE]  illegal  start  of  type	169	None	replace
1000	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  0,  null);  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  0,  null);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  0,  null);	  super(nameType,    ruleType,    concat,    0);    	non-compiled	[CE]  illegal  start  of  type	169	None	replace
1001	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  0,  false);  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  0,  false);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  0,  false);	  super(nameType,    ruleType,    concat,    0);    	non-compiled	[CE]  illegal  start  of  type	169	None	replace
1002	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  0,  nameType.length);  [CE]  illegal  start  of  type  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  0,  nameType.length);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  0,  nameType.length);	  super(nameType,    ruleType,    concat,    0);    	non-compiled	[CE]  illegal  start  of  type	169	None	replace
1003	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  0,  true);  [CE]  illegal  start  of  type  [FE]                                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  0,  true);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  0,  true);	  super(nameType,    ruleType,    concat,    0);    	non-compiled	[CE]  illegal  start  of  type	169	None	replace
1004	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  0,  1);  [CE]  illegal  start  of  type  [FE]                                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  0,  1);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  0,  1);	  super(nameType,    ruleType,    concat,    0);    	non-compiled	[CE]  illegal  start  of  type	169	None	replace
1005	[BUG]  [BUGGY]  this.nameType  =  nameType.substring(0,  concat);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.substring(0,  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.substring(0,  concat);	  this.nameType    =    ruleType.toString();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
1006	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  defULT_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  defULT_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  defULT_PREFIXES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    defULT_MAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	292	None	replace
1007	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  defULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  defULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  defULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    defULT_MAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	292	None	replace
1008	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  defULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  defULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  defULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    defULT_MAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	292	None	replace
1009	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  defULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  defULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  maxPhonemes,  defULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    defULT_MAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	292	None	replace
1010	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  defULT_PARAMS)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  defULT_PARAMS)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  defULT_PARAMS)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    defULT_MAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	292	None	replace
1011	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  defULT_PARENTHESES)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  defULT_PARENTHESES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  defULT_PARENTHESES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    defULT_MAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	292	None	replace
1012	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  NAME_PREFIXES;	  this.nameType    =    nameType    instanceof    RuleType?    NameType.NAME_PREFIXES    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	263	None	replace
1013	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  ruleType;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  ruleType;	  this.nameType    =    nameType    instanceof    RuleType?    NameType.NAME_PREFIXES    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	263	None	replace
1014	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  null;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  null;	  this.nameType    =    nameType    instanceof    RuleType?    NameType.NAME_PREFIXES    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	263	None	replace
1015	[BUG]  [BUGGY]  this.nameType  =  ruleType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  nameType;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  nameType;	  this.nameType    =    nameType    instanceof    RuleType?    NameType.NAME_PREFIXES    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	263	None	replace
1016	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MIN_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	209	None	replace
1017	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  0);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  0);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  0);	  this(nameType,    ruleType,    concat,    DEFAULT_MIN_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	209	None	replace
1018	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MILLIS);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MILLIS);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MILLIS);	  this(nameType,    ruleType,    concat,    DEFAULT_MIN_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	209	None	replace
1019	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getReferenceName()  +  1;  [CE]  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getReferenceName()  +  1;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getReferenceName()  +  1;	  NameType    nameType    =    ruleType.getReferenceName();    	non-compiled	[CE]  	91	None	replace
1020	[BUG]  [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  +  1;  [CE]  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  +  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  ruleType.maxPhonemes  +  1;	  final    int    maxPhonemes    =    nameType.maxPhonemes    +    2;    	non-compiled	[CE]  	255	None	replace
1021	[BUG]  [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  +  2;  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  +  2;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  ruleType.maxPhonemes  +  2;	  final    int    maxPhonemes    =    nameType.maxPhonemes    +    2;    	non-compiled	[CE]  	255	None	replace
1022	[BUG]  [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  +  3;  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  +  3;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  ruleType.maxPhonemes  +  3;	  final    int    maxPhonemes    =    nameType.maxPhonemes    +    2;    	non-compiled	[CE]  	255	None	replace
1023	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  defult_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  defult_MAX_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  defult_MAX_PHONEMES);	  this.nameType,    nameType,    concat,    defult_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	323	None	replace
1024	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  definal_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  definal_MAX_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  definal_MAX_PHONEMES);	  this.nameType,    nameType,    concat,    defult_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	323	None	replace
1025	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  defult_MAX_PHONEMES);  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  defult_MAX_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  defult_MAX_PHONEMES);	  this.nameType,    nameType,    concat,    defult_MAX_PHONEMES);    	non-compiled	[CE]  <identifier>  expected	323	None	replace
1026	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  defult_MIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  defult_MIN_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  defult_MIN_PHONEMES);	  this.nameType,    nameType,    concat,    defult_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	323	None	replace
1027	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName(),  nameType.getSimpleName());  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName(),  nameType.getSimpleName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getSimpleName(),  nameType.getSimpleName());	  this.ruleType    =    new    RuleType(nameType.getSimpleName(),    ruleType.getSimpleName());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
1028	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getSimpleName(),  concat);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getSimpleName(),  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getSimpleName(),  concat);	  this.ruleType    =    new    RuleType(nameType.getSimpleName(),    ruleType.getSimpleName());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
1029	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getFunctionName());  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getFunctionName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getFunctionName());	  this.ruleType    =    new    RuleType(nameType.getSimpleName(),    ruleType.getSimpleName());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
1030	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getSimpleName()  +  1);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getSimpleName()  +  1);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getSimpleName()  +  1);	  this.ruleType    =    new    RuleType(nameType.getSimpleName(),    ruleType.getSimpleName());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
1031	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getFullName());  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getFullName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getFullName());	  this.ruleType    =    new    RuleType(nameType.getSimpleName(),    ruleType.getSimpleName());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
1032	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getLocalName());  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getLocalName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getLocalName());	  this.ruleType    =    new    RuleType(nameType.getSimpleName(),    ruleType.getSimpleName());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
1033	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getLanguage());  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getLanguage());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getLanguage());	  this.ruleType    =    new    RuleType(nameType.getSimpleName(),    ruleType.getSimpleName());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
1034	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  int  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  int  maxPhonemes);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  int  maxPhonemes);	  NameType    nameType,    RuleType    ruleType,    boolean    concat);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
1035	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  final  int  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  final  int  maxPhonemes);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  final  int  maxPhonemes);	  NameType    nameType,    RuleType    ruleType,    boolean    concat);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
1036	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  null,  concat);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  null,  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  null,  concat);	  NameType    nameType,    RuleType    ruleType,    boolean    concat);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
1037	[BUG]  [BUGGY]  NameType  ruleType,  RuleType  ruleType,  concat);  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType,  RuleType  ruleType,  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType,  RuleType  ruleType,  concat);	  NameType    nameType,    RuleType    ruleType,    boolean    concat);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
1038	[BUG]  [BUGGY]  if(nameType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  ruleType.maxPhonemes;  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  ruleType.maxPhonemes;  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  ruleType.maxPhonemes;  }	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    	non-compiled	[CE]  illegal  start  of  type	330	None	replace
1039	[BUG]  [BUGGY]  if(nameType.maxPhonemes  ==  DEFAULT_MAX_PHONEMES)  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType.maxPhonemes  ==  DEFAULT_MAX_PHONEMES)  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType.maxPhonemes  ==  DEFAULT_MAX_PHONEMES)  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    	non-compiled	[CE]  illegal  start  of  type	330	None	replace
1040	[BUG]  [BUGGY]  @SuppressWarnings( "unchecked "))  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  @SuppressWarnings( "unchecked "))  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	@SuppressWarnings( "unchecked "))  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    	non-compiled	[CE]  illegal  start  of  type	330	None	replace
1041	[BUG]  [BUGGY]  @SuppressWarnings( "unchecked ")  final  int  maxPhonemes  =  nameType.maxPhonemes;  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  @SuppressWarnings( "unchecked ")  final  int  maxPhonemes  =  nameType.maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	@SuppressWarnings( "unchecked ")  final  int  maxPhonemes  =  nameType.maxPhonemes;	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    	non-compiled	[CE]  	330	None	replace
1042	[BUG]  [BUGGY]  this.ruleType  =  ruleType,  concat;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  ruleType,  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  ruleType,  concat;	  super(nameType);    this.ruleType    =    ruleType,    concat;    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
1043	[BUG]  [BUGGY]  this.ruleType  =  nameType,  concat;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  nameType,  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  nameType,  concat;	  super(nameType);    this.ruleType    =    ruleType,    concat;    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
1044	[BUG]  [BUGGY]  NameType  nameType,  ruleType.names  =  new  LinkedHashMap  <  String,  Rule>();  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.names  =  new  LinkedHashMap  <  String,  Rule>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.names  =  new  LinkedHashMap  <  String,  Rule>();	  NameType    nameType,    ruleType,    concat.names    =    new    LinkedHashMap    <    String,    Rule>();    	non-compiled	[CE]  <identifier>  expected	336	None	replace
1045	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  HashMap  <  String,  Rule>();  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  HashMap  <  String,  Rule>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  HashMap  <  String,  Rule>();	  NameType    nameType,    ruleType,    concat.names    =    new    LinkedHashMap    <    String,    Rule>();    	non-compiled	[CE]  <identifier>  expected	336	None	replace
1046	[BUG]  [BUGGY]  NameType  nameType,  ruleType.names  =  new  HashMap  <  String,  Rule>();  [CE]  <identifier>  expected  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.names  =  new  HashMap  <  String,  Rule>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.names  =  new  HashMap  <  String,  Rule>();	  NameType    nameType,    ruleType,    concat.names    =    new    LinkedHashMap    <    String,    Rule>();    	non-compiled	[CE]  <identifier>  expected	336	None	replace
1047	[BUG]  [BUGGY]  NameType  nameType,  ruleType.names  =  new  LinkedList  <  String,  Rule>();  [CE]  <identifier>  expected  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.names  =  new  LinkedList  <  String,  Rule>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.names  =  new  LinkedList  <  String,  Rule>();	  NameType    nameType,    ruleType,    concat.names    =    new    LinkedHashMap    <    String,    Rule>();    	non-compiled	[CE]  <identifier>  expected	336	None	replace
1048	[BUG]  [BUGGY]  NameType  nameType,  ruleType.names  =  new  ArrayList  <  String,  Rule>();  [CE]  <identifier>  expected  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.names  =  new  ArrayList  <  String,  Rule>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.names  =  new  ArrayList  <  String,  Rule>();	  NameType    nameType,    ruleType,    concat.names    =    new    LinkedHashMap    <    String,    Rule>();    	non-compiled	[CE]  <identifier>  expected	336	None	replace
1049	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  LinkedList  <  String,  Rule>();  [CE]  <identifier>  expected  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  LinkedList  <  String,  Rule>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  LinkedList  <  String,  Rule>();	  NameType    nameType,    ruleType,    concat.names    =    new    LinkedHashMap    <    String,    Rule>();    	non-compiled	[CE]  <identifier>  expected	336	None	replace
1050	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  TreeMap  <  String,  Rule>();  [CE]  <identifier>  expected  [FE]                                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  TreeMap  <  String,  Rule>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  TreeMap  <  String,  Rule>();	  NameType    nameType,    ruleType,    concat.names    =    new    LinkedHashMap    <    String,    Rule>();    	non-compiled	[CE]  <identifier>  expected	336	None	replace
1051	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  ArrayList  <  String,  Rule>();  [CE]  <identifier>  expected  [FE]                                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  ArrayList  <  String,  Rule>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  ArrayList  <  String,  Rule>();	  NameType    nameType,    ruleType,    concat.names    =    new    LinkedHashMap    <    String,    Rule>();    	non-compiled	[CE]  <identifier>  expected	336	None	replace
1052	[BUG]  [BUGGY]  static  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  -  1;  [CE]  modifier  static  not  allowed  here  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  static  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  -  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  -  1;	  static    final    int    maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  modifier  static  not  allowed  here	216	None	replace
1053	[BUG]  [BUGGY]  static  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  -  2;  [CE]  modifier  static  not  allowed  here  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  static  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  -  2;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  -  2;	  static    final    int    maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  modifier  static  not  allowed  here	216	None	replace
1054	[BUG]  [BUGGY]  static  final  long  maxPhonemes  =  nameType.getMaxPhonemes();  [CE]  modifier  static  not  allowed  here  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  static  final  long  maxPhonemes  =  nameType.getMaxPhonemes();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  long  maxPhonemes  =  nameType.getMaxPhonemes();	  static    final    int    maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  modifier  static  not  allowed  here	216	None	replace
1055	[BUG]  [BUGGY]  static  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  /  2;  [CE]  modifier  static  not  allowed  here  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  static  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  /  2;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  /  2;	  static    final    int    maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  modifier  static  not  allowed  here	216	None	replace
1056	[BUG]  [BUGGY]  static  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  +  1;  [CE]  modifier  static  not  allowed  here  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  static  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  +  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  +  1;	  static    final    int    maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  modifier  static  not  allowed  here	216	None	replace
1057	[BUG]  [BUGGY]  static  final  int  maxPhonemes  =  nameType.getMaxPhonemes(),  concat;  [CE]  modifier  static  not  allowed  here  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  static  final  int  maxPhonemes  =  nameType.getMaxPhonemes(),  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  int  maxPhonemes  =  nameType.getMaxPhonemes(),  concat;	  static    final    int    maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  modifier  static  not  allowed  here	216	None	replace
1058	[BUG]  [BUGGY]  this.nameType  =  nameType.getName()  /  1;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getName()  /  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getName()  /  1;	  this.nameType    =    nameType.getName()    +    1;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
1059	[BUG]  [BUGGY]  this.nameType  =  nameType,  ruleType.getName()  +  1;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType,  ruleType.getName()  +  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType,  ruleType.getName()  +  1;	  this.nameType    =    nameType.getName()    +    1;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
1060	[BUG]  [BUGGY]  this.nameType  =  nameType.getName(),  concat  +  1;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getName(),  concat  +  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getName(),  concat  +  1;	  this.nameType    =    nameType.getName()    +    1;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
1061	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  ruleType.getName()  :  nameType.getName();  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  ruleType.getName()  :  nameType.getName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  ruleType.getName()  :  nameType.getName();	  this.nameType    =    nameType!=    null?    nameType.getName()    :    ruleType.getName();    	non-compiled	[CE]  illegal  start  of  type	299	None	replace
1062	[BUG]  [BUGGY]  this.nameType  =  ruleType!=  null?  nameType.getName()  :  nameType.getName();  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType!=  null?  nameType.getName()  :  nameType.getName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType!=  null?  nameType.getName()  :  nameType.getName();	  this.nameType    =    nameType!=    null?    nameType.getName()    :    ruleType.getName();    	non-compiled	[CE]  illegal  start  of  type	299	None	replace
1063	[BUG]  [BUGGY]  this.nameType  =  ruleType  ==  null?  nameType.getName()  :  nameType.getName();  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType  ==  null?  nameType.getName()  :  nameType.getName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType  ==  null?  nameType.getName()  :  nameType.getName();	  this.nameType    =    nameType!=    null?    nameType.getName()    :    ruleType.getName();    	non-compiled	[CE]  illegal  start  of  type	299	None	replace
1064	[BUG]  [BUGGY]  this.nameType  =  nameType.getSimpleName(),  concat;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getSimpleName(),  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getSimpleName(),  concat;	  this.nameType    =    nameType.getSimpleName();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
1065	[BUG]  [BUGGY]  this.nameType  =  nameType.getSimpleName()  +  1;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getSimpleName()  +  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getSimpleName()  +  1;	  this.nameType    =    nameType.getSimpleName();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
1066	[BUG]  [BUGGY]  this.nameType  =  ruleType.getSimpleName();  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType.getSimpleName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType.getSimpleName();	  this.nameType    =    nameType.getSimpleName();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
1067	[BUG]  [BUGGY]  this.nameType  =  nameType.getNAME_PREFIXES();  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getNAME_PREFIXES();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getNAME_PREFIXES();	  this.nameType    =    nameType.getSimpleName();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
1068	[BUG]  [BUGGY]  this.nameType  =  nameType.getSimpleName(),  concat);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getSimpleName(),  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getSimpleName(),  concat);	  this.nameType    =    nameType.getSimpleName();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
1069	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  NAME_PREFIXES,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  NAME_PREFIXES,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  NAME_PREFIXES,  DEFAULT_MAX_PHONEMES);	  super(nameType,    ruleType,    concat,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	168	None	replace
1070	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES);	  super(nameType,    ruleType,    concat,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	168	None	replace
1071	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES);	  super(nameType,    ruleType,    concat,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	168	None	replace
1072	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MEMBER_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MEMBER_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_MEMBER_PHONEMES);	  super(nameType,    ruleType,    concat,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	168	None	replace
1073	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MILLIS_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MILLIS_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_MILLIS_PHONEMES);	  super(nameType,    ruleType,    concat,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	168	None	replace
1074	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES  |  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES  |  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES  |  NAME_PREFIXES);	  super(nameType,    ruleType,    concat,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	168	None	replace
1075	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES  +  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES  +  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES  +  NAME_PREFIXES);	  super(nameType,    ruleType,    concat,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	168	None	replace
1076	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  countPhonemes);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  countPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  countPhonemes);	  super(nameType,    ruleType,    concat,    nameType);    	non-compiled	[CE]  illegal  start  of  type	217	None	replace
1077	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  this.phonemeBuilder);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  this.phonemeBuilder);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  this.phonemeBuilder);	  super(nameType,    ruleType,    concat,    nameType);    	non-compiled	[CE]  illegal  start  of  type	217	None	replace
1078	[BUG]  [BUGGY]  This(nameType,  ruleType,  concat,  false);  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This(nameType,  ruleType,  concat,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This(nameType,  ruleType,  concat,  false);	  this(nameType,    ruleType,    concat,    true);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
1079	[BUG]  [BUGGY]  this(nameType,  ruleType,  Concat,  false);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  Concat,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  Concat,  false);	  this(nameType,    ruleType,    concat,    true);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
1080	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  false,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    false,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
1081	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes,  nameType)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes,  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  false,  maxPhonemes,  nameType)  {	  this(nameType,    ruleType,    concat,    false,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
1082	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes,  null)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes,  null)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  false,  maxPhonemes,  null)  {	  this(nameType,    ruleType,    concat,    false,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
1083	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes,  0)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes,  0)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  false,  maxPhonemes,  0)  {	  this(nameType,    ruleType,    concat,    false,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
1084	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes,  true)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes,  true)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  false,  maxPhonemes,  true)  {	  this(nameType,    ruleType,    concat,    false,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
1085	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  NAME_PREFIXES);	  super(nameType,    ruleType,    concat,    DEFAULT_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	218	None	replace
1086	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_MAX_PHONEMES);	  super(nameType,    ruleType,    concat,    DEFAULT_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	218	None	replace
1087	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES);	  super(nameType,    ruleType,    concat,    DEFAULT_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	218	None	replace
1088	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_NAME_PREFIXES);	  super(nameType,    ruleType,    concat,    DEFAULT_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	218	None	replace
1089	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MILLIS);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MILLIS);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_MILLIS);	  super(nameType,    ruleType,    concat,    DEFAULT_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	218	None	replace
1090	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PARAMS);  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PARAMS);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_PARAMS);	  super(nameType,    ruleType,    concat,    DEFAULT_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	218	None	replace
1091	[BUG]  [BUGGY]  nameType!=  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType!=  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType!=  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(nameType!=    RuleType.NAME)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	253	None	replace
1092	[BUG]  [BUGGY]  @SuppressWarnings( "unchecked "))  {  if(nameType!=  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  @SuppressWarnings( "unchecked "))  {  if(nameType!=  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	@SuppressWarnings( "unchecked "))  {  if(nameType!=  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }	  if(nameType!=    RuleType.NAME)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	253	None	replace
1093	[BUG]  [BUGGY]  @SuppressWarnings( "unchecked "))  {  if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  @SuppressWarnings( "unchecked "))  {  if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	@SuppressWarnings( "unchecked "))  {  if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }	  if(nameType!=    RuleType.NAME)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	253	None	replace
1094	[BUG]  [BUGGY]  this.maxPhonemes  =  DEFAULT_MAX_PHONEMES;  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  DEFAULT_MAX_PHONEMES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  DEFAULT_MAX_PHONEMES;	  this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
1095	[BUG]  [BUGGY]  this.maxPhonemes  =  maxPhonemes  +  1;  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  maxPhonemes  +  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  maxPhonemes  +  1;	  this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
1096	[BUG]  [BUGGY]  this.maxPhonemes  =  maxPhonemes  -  1;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  maxPhonemes  -  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  maxPhonemes  -  1;	  this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
1097	[BUG]  [BUGGY]  this.maxPhonemes  =  concat?  DEFAULT_MAX_PHONEMES  :  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  concat?  DEFAULT_MAX_PHONEMES  :  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  concat?  DEFAULT_MAX_PHONEMES  :  maxPhonemes;	  this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
1098	[BUG]  [BUGGY]  this.maxPhonemes  =  DEFAULT_MAX_PHONEMES?  DEFAULT_MAX_PHONEMES  :  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  DEFAULT_MAX_PHONEMES?  DEFAULT_MAX_PHONEMES  :  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  DEFAULT_MAX_PHONEMES?  DEFAULT_MAX_PHONEMES  :  maxPhonemes;	  this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
1099	[BUG]  [BUGGY]  this.maxPhonemes  =  0;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  0;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  0;	  this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
1100	[BUG]  [BUGGY]  this.maxPhonemes  =  MAX_PHONEMES;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  MAX_PHONEMES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  MAX_PHONEMES;	  this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
1101	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES));  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES));  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES));	  super(nameType,    ruleType,    concat,    maxPhonemes));    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
1102	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  0,  maxPhonemes));  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  0,  maxPhonemes));  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  0,  maxPhonemes));	  super(nameType,    ruleType,    concat,    maxPhonemes));    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
1103	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES));  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES));  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES));	  super(nameType,    ruleType,    concat,    maxPhonemes));    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
1104	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  0));  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  0));  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes,  0));	  super(nameType,    ruleType,    concat,    maxPhonemes));    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
1105	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES));  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES));  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PAX_PHONEMES));	  super(nameType,    ruleType,    concat,    maxPhonemes));    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
1106	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES));  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES));  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MIN_PHONEMES));	  super(nameType,    ruleType,    concat,    maxPhonemes));    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
1107	[BUG]  [BUGGY]  nameType,  ruleType,  concat,  this.maxPhonemes,  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  concat,  this.maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat,  this.maxPhonemes,	  NameType    nameType,    ruleType,    concat,    this.maxPhonemes,    	non-compiled	[CE]  <identifier>  expected	37	None	replace
1108	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  0);  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  0);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  0);	  NameType    nameType,    ruleType,    concat,    this.maxPhonemes,    	non-compiled	[CE]  <identifier>  expected	37	None	replace
1109	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  maxPhonemes,  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  maxPhonemes,	  NameType    nameType,    ruleType,    concat,    this.maxPhonemes,    	non-compiled	[CE]  <identifier>  expected	37	None	replace
1110	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  maxPhonemes,  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  maxPhonemes,	  NameType    nameType,    ruleType,    concat,    this.maxPhonemes,    	non-compiled	[CE]  <identifier>  expected	37	None	replace
1111	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  int  maxPhonemes,  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  int  maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  int  maxPhonemes,	  NameType    nameType,    ruleType,    concat,    this.maxPhonemes,    	non-compiled	[CE]  <identifier>  expected	37	None	replace
1112	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  finalRules,  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  finalRules,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  finalRules,	  NameType    nameType,    ruleType,    concat,    this.maxPhonemes,    	non-compiled	[CE]  <identifier>  expected	37	None	replace
1113	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.minPhonemes,  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.minPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.minPhonemes,	  NameType    nameType,    ruleType,    concat,    this.maxPhonemes,    	non-compiled	[CE]  <identifier>  expected	37	None	replace
1114	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  0,  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  0,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  0,	  NameType    nameType,    ruleType,    concat,    this.maxPhonemes,    	non-compiled	[CE]  <identifier>  expected	37	None	replace
1115	[BUG]  [BUGGY]  super();  this.ruleType  =  ruleType  {  null?  null  :  ruleType.getSimpleName();  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super();  this.ruleType  =  ruleType  {  null?  null  :  ruleType.getSimpleName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super();  this.ruleType  =  ruleType  {  null?  null  :  ruleType.getSimpleName();	  super();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
1116	[BUG]  [BUGGY]  super();  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  null;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super();  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super();  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  null;	  super();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
1117	[BUG]  [BUGGY]  super();  this.ruleType  =  nameType;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super();  this.ruleType  =  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super();  this.ruleType  =  nameType;	  super();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
1118	[BUG]  [BUGGY]  super();  this.ruleType  =  ruleType  {  null?  null  :  ruleType.getRawClass();  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super();  this.ruleType  =  ruleType  {  null?  null  :  ruleType.getRawClass();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super();  this.ruleType  =  ruleType  {  null?  null  :  ruleType.getRawClass();	  super();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
1119	[BUG]  [BUGGY]  super();  this.ruleType  =  ruleType  {  null?  null  :  ruleType.toString();  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super();  this.ruleType  =  ruleType  {  null?  null  :  ruleType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super();  this.ruleType  =  ruleType  {  null?  null  :  ruleType.toString();	  super();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
1120	[BUG]  [BUGGY]  super();  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super();  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super();  this.ruleType  =  ruleType  instanceof  RuleType?(RuleType)ruleType  :  ruleType;	  super();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
1121	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  true)  {  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  true)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  true)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    false)    {    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
1122	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  false)  {  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  false)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  false)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    false)    {    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
1123	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  false)  {  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  false)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  false)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    false)    {    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
1124	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i,  false)  {  [CE]  illegal  start  of  type  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i,  false)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i,  false)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    false)    {    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
1125	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i,  maxPhonemes,  false)  {  [CE]  illegal  start  of  type  [FE]                                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i,  maxPhonemes,  false)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i,  maxPhonemes,  false)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    false)    {    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
1126	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  finalPhonemes,  false)  {  [CE]  illegal  start  of  type  [FE]                                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  finalPhonemes,  false)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  finalPhonemes,  false)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    false)    {    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
1127	[BUG]  [BUGGY]  NameType  nameType  =  ruleType!=  null?  null  :  ruleType.getName();  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType!=  null?  null  :  ruleType.getName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType!=  null?  null  :  ruleType.getName();	  NameType    nameType    =    rules.getName();    	non-compiled	[CE]  	195	None	replace
1128	[BUG]  [BUGGY]  NameType  nameType  =  ruleType!=  null?  null  :  rules.getName();  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType!=  null?  null  :  rules.getName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType!=  null?  null  :  rules.getName();	  NameType    nameType    =    rules.getName();    	non-compiled	[CE]  	195	None	replace
1129	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	211	None	replace
1130	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  0);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  0);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  0);	  this(nameType,    ruleType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	211	None	replace
1131	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	211	None	replace
1132	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	211	None	replace
1133	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  null);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  null);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  null);	  this(nameType,    ruleType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	211	None	replace
1134	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MILLIS);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MILLIS);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MILLIS);	  this(nameType,    ruleType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	211	None	replace
1135	[BUG]  [BUGGY]  this.nameType  =  ruleType.restrictByNotNullOrUndefined();  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType.restrictByNotNullOrUndefined();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType.restrictByNotNullOrUndefined();	  this.nameType    =    nameType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
1136	[BUG]  [BUGGY]  this.nameType  =  nameType.restrictByNotNullOrUndefined(),  concat;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.restrictByNotNullOrUndefined(),  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.restrictByNotNullOrUndefined(),  concat;	  this.nameType    =    nameType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
1137	[BUG]  [BUGGY]  this.nameType  =  nameType.restrictByNotNullOrUndefined(),  concat);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.restrictByNotNullOrUndefined(),  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.restrictByNotNullOrUndefined(),  concat);	  this.nameType    =    nameType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
1138	[BUG]  [BUGGY]  this.nameType  =  nameType.getRestrictByNotNullOrUndefined();  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getRestrictByNotNullOrUndefined();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getRestrictByNotNullOrUndefined();	  this.nameType    =    nameType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
1139	[BUG]  [BUGGY]  this.nameType  =  nameType.restrictByNotNullOrUndefined(concat);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.restrictByNotNullOrUndefined(concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.restrictByNotNullOrUndefined(concat);	  this.nameType    =    nameType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
1140	[BUG]  [BUGGY]  This.nameType  =  nameType.restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.nameType  =  nameType.restrictByNotNullOrUndefined();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType  =  nameType.restrictByNotNullOrUndefined();	  this.nameType    =    nameType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	81	None	replace
1141	[BUG]  [BUGGY]  this.nameType  =  nameType.restrictNullOrUndefined();  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.restrictNullOrUndefined();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.restrictNullOrUndefined();	  this.nameType    =    nameType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
1142	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  1,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  1,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  1,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    i,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
1143	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i,  maxPhonemes,  nameType)  {  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i,  maxPhonemes,  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i,  maxPhonemes,  nameType)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    i,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
1144	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i,  maxPhonemes,  NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i,  maxPhonemes,  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i,  maxPhonemes,  NAME_PREFIXES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    i,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
1145	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  i)  {  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  i)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  i)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    i,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
1146	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat,  final  int  maxPhonemes,  [CE]  <identifier>  expected  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat,  final  int  maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  concat,  final  int  maxPhonemes,	  NameType    nameType,    RuleType    ruleType,    final    int    maxPhonemes,    	non-compiled	[CE]  <identifier>  expected	159	None	replace
1147	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  final  int  maxPhonemes,  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  final  int  maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  final  int  maxPhonemes,	  NameType    nameType,    RuleType    ruleType,    final    int    maxPhonemes,    	non-compiled	[CE]  <identifier>  expected	159	None	replace
1148	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  final  boolean  maxPhonemes,  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  final  boolean  maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  final  boolean  maxPhonemes,	  NameType    nameType,    RuleType    ruleType,    final    int    maxPhonemes,    	non-compiled	[CE]  illegal  start  of  type	159	None	replace
1149	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat,  maxPhonemes,  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat,  maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  concat,  maxPhonemes,	  NameType    nameType,    RuleType    ruleType,    final    int    maxPhonemes,    	non-compiled	[CE]  <identifier>  expected	159	None	replace
1150	[BUG]  [BUGGY]  this.ruleType  =  nameType,  ruleType);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  nameType,  ruleType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  nameType,  ruleType);	  this.ruleType    =   "ruleType   ";    	non-compiled	[CE]  illegal  start  of  type	235	None	replace
1151	[BUG]  [BUGGY]  this.ruleType  =  nameType,  ruleType;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  nameType,  ruleType;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  nameType,  ruleType;	  this.ruleType    =   "ruleType   ";    	non-compiled	[CE]  illegal  start  of  type	235	None	replace
1152	[BUG]  [BUGGY]  this.ruleType  =  nameType, "ruleType ";  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  nameType, "ruleType ";  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  nameType, "ruleType ";	  this.ruleType    =   "ruleType   ";    	non-compiled	[CE]  illegal  start  of  type	235	None	replace
1153	[BUG]  [BUGGY]  this.ruleType  =  nameType,  ruleType,  concat;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  nameType,  ruleType,  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  nameType,  ruleType,  concat;	  this.ruleType    =   "ruleType   ";    	non-compiled	[CE]  illegal  start  of  type	235	None	replace
1154	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  true);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  true);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  true);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    false);    	non-compiled	[CE]  illegal  start  of  type	258	None	replace
1155	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  false,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  false,  maxPhonemes);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  false,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    false);    	non-compiled	[CE]  illegal  start  of  type	258	None	replace
1156	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  true);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  true);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  true);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    false);    	non-compiled	[CE]  illegal  start  of  type	258	None	replace
1157	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  null,  false);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  null,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  null,  false);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    false);    	non-compiled	[CE]  illegal  start  of  type	258	None	replace
1158	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  false);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  false);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    false);    	non-compiled	[CE]  illegal  start  of  type	258	None	replace
1159	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  false,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  false,  NAME_PREFIXES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  false,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    false);    	non-compiled	[CE]  illegal  start  of  type	258	None	replace
1160	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  true);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  true);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  true);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    false);    	non-compiled	[CE]  illegal  start  of  type	258	None	replace
1161	[BUG]  [BUGGY]  this.nameType  =  nameType.getName(),  concat,  false;  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getName(),  concat,  false;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getName(),  concat,  false;	  this.nameType    =    nameType.getName(),    concat;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
1162	[BUG]  [BUGGY]  this.nameType  =  ruleType.getName(),  concat;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType.getName(),  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType.getName(),  concat;	  this.nameType    =    nameType.getName(),    concat;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
1163	[BUG]  [BUGGY]  this.nameType  =  nameType.getName(),  concat,  false);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getName(),  concat,  false);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getName(),  concat,  false);	  this.nameType    =    nameType.getName(),    concat;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
1164	[BUG]  [BUGGY]  this.nameType  =  nameType.getName(),  concat,  null;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getName(),  concat,  null;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getName(),  concat,  null;	  this.nameType    =    nameType.getName(),    concat;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
1165	[BUG]  [BUGGY]  this.nameType  =  nameType.getName(),  ruleType;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getName(),  ruleType;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getName(),  ruleType;	  this.nameType    =    nameType.getName(),    concat;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
1166	[BUG]  [BUGGY]  this.nameType  =  nameType.getName(),  concat,  true;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getName(),  concat,  true;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getName(),  concat,  true;	  this.nameType    =    nameType.getName(),    concat;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
1167	[BUG]  [BUGGY]  this.nameType  =  nameType.getName(),  Concat;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getName(),  Concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getName(),  Concat;	  this.nameType    =    nameType.getName(),    concat;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
1168	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  true,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  true,  maxPhonemes);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  true,  maxPhonemes);	  this(nameType,    ruleType,    concat,    false,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
1169	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  false,  maxPhonemes,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    false,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
1170	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes,  nameType);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes,  nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  false,  maxPhonemes,  nameType);	  this(nameType,    ruleType,    concat,    false,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
1171	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes,  null);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  false,  maxPhonemes,  null);	  this(nameType,    ruleType,    concat,    false,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
1172	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes,  0);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes,  0);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  false,  maxPhonemes,  0);	  this(nameType,    ruleType,    concat,    false,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
1173	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  true,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  true,  maxPhonemes);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  true,  maxPhonemes);	  this(nameType,    ruleType,    concat,    false,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
1174	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  def)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  def)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  def)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    nameType)    {    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
1175	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_NAME_PREFIXES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    nameType)    {    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
1176	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  defalse)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  defalse)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  defalse)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    nameType)    {    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
1177	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0,  nameType)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0,  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  0,  nameType)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    nameType)    {    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
1178	[BUG]  [BUGGY]  this.phonemeBuilder  =  Lang.instance(nameType,  concat);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Lang.instance(nameType,  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Lang.instance(nameType,  concat);	  this.phonemeBuilder    =    Lang.instance(nameType);    	non-compiled	[CE]  illegal  start  of  type	283	None	replace
1179	[BUG]  [BUGGY]  this.phonemeBuilder  =  Lang.instance(ruleType);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Lang.instance(ruleType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Lang.instance(ruleType);	  this.phonemeBuilder    =    Lang.instance(nameType);    	non-compiled	[CE]  illegal  start  of  type	283	None	replace
1180	[BUG]  [BUGGY]  this.phonemeBuilder  =  lang.instance(nameType);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  lang.instance(nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  lang.instance(nameType);	  this.phonemeBuilder    =    Lang.instance(nameType);    	non-compiled	[CE]  illegal  start  of  type	283	None	replace
1181	[BUG]  [BUGGY]  this.phonemeBuilder  =  Long.instance(nameType,  concat);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Long.instance(nameType,  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Long.instance(nameType,  concat);	  this.phonemeBuilder    =    Lang.instance(nameType);    	non-compiled	[CE]  illegal  start  of  type	283	None	replace
1182	[BUG]  [BUGGY]  this.phonemeBuilder  =  Long.instance(nameType);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Long.instance(nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Long.instance(nameType);	  this.phonemeBuilder    =    Lang.instance(nameType);    	non-compiled	[CE]  illegal  start  of  type	283	None	replace
1183	[BUG]  [BUGGY]  this.phonemeBuilder  =  Lang.instance(concat);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Lang.instance(concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Lang.instance(concat);	  this.phonemeBuilder    =    Lang.instance(nameType);    	non-compiled	[CE]  illegal  start  of  type	283	None	replace
1184	[BUG]  [BUGGY]  this.phonemeBuilder  =  Lang.instance(nameType)+  1;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Lang.instance(nameType)+  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Lang.instance(nameType)+  1;	  this.phonemeBuilder    =    Lang.instance(nameType);    	non-compiled	[CE]  illegal  start  of  type	283	None	replace
1185	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	261	None	replace
1186	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES,  NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES,  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES,  NAME_PREFIXES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	261	None	replace
1187	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	261	None	replace
1188	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  DEFAULT_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  DEFAULT_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  maxPhonemes,  DEFAULT_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	261	None	replace
1189	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MILLIS,  DEFAULT_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MILLIS,  DEFAULT_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MILLIS,  DEFAULT_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	261	None	replace
1190	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES,  nameType)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES,  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES,  nameType)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	261	None	replace
1191	[BUG]  [BUGGY]  final  int  maxPhonemes,  Locale.getDefault())  {  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  Locale.getDefault())  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  Locale.getDefault())  {	  final    boolean    maxPhonemes,    Locale.getDefault())    {    	non-compiled	[CE]  <identifier>  expected	199	None	replace
1192	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  finalRules.getDefault())  {  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  finalRules.getDefault())  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  finalRules.getDefault())  {	  final    boolean    maxPhonemes,    Locale.getDefault())    {    	non-compiled	[CE]  <identifier>  expected	199	None	replace
1193	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,	  final    boolean    maxPhonemes,    Locale.getDefault())    {    	non-compiled	[CE]  illegal  start  of  type	199	None	replace
1194	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  @SuppressWarnings( "unchecked "))  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  @SuppressWarnings( "unchecked "))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  @SuppressWarnings( "unchecked "))  {	  final    boolean    maxPhonemes,    Locale.getDefault())    {    	non-compiled	[CE]  illegal  start  of  type	199	None	replace
1195	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  locale.getDefault())  {  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  locale.getDefault())  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  locale.getDefault())  {	  final    boolean    maxPhonemes,    Locale.getDefault())    {    	non-compiled	[CE]  <identifier>  expected	199	None	replace
1196	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES)  {	  this.nameType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	268	None	replace
1197	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  0,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  0,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  0,  maxPhonemes)  {	  this.nameType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	268	None	replace
1198	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  0)  {  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  0)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  0)  {	  this.nameType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	268	None	replace
1199	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  null,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  null,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  null,  maxPhonemes)  {	  this.nameType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	268	None	replace
1200	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  finalPhonemes)  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  finalPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  finalPhonemes)  {	  this.nameType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	268	None	replace
1201	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  false)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  false)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  false)  {	  this.nameType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	268	None	replace
1202	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  null)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  null)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  null)  {	  this.nameType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	268	None	replace
1203	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES)  {	  this.nameType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	268	None	replace
1204	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType;  if(concat)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType;  if(concat)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.ruleType  =  ruleType;  if(concat)  {  throw  new  IllegalArgumentException( " ");  }	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    this.concat,    	non-compiled	[CE]  illegal  start  of  type	207	None	replace
1205	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.nameType;  this.ruleType  =  nameType;  this.concat,  [CE]  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.nameType;  this.ruleType  =  nameType;  this.concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.nameType;  this.ruleType  =  nameType;  this.concat,	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    this.concat,    	non-compiled	[CE]  	207	None	replace
1206	[BUG]  [BUGGY]  this.nameType  =  nameType,  ruleType;  this.ruleType  =  ruleType;  this.concat,  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType,  ruleType;  this.ruleType  =  ruleType;  this.concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType,  ruleType;  this.ruleType  =  ruleType;  this.concat,	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    this.concat,    	non-compiled	[CE]  illegal  start  of  type	207	None	replace
1207	[BUG]  [BUGGY]  This.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat,  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat,	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    this.concat,    	non-compiled	[CE]  <identifier>  expected	207	None	replace
1208	[BUG]  [BUGGY]  NameType  nameType  =  nameType.getNameType();  this.ruleType  =  ruleType;  this.concat,  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  nameType.getNameType();  this.ruleType  =  ruleType;  this.concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  nameType.getNameType();  this.ruleType  =  ruleType;  this.concat,	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    this.concat,    	non-compiled	[CE]  	207	None	replace
1209	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  2);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  2);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  2);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    2);    	non-compiled	[CE]  illegal  start  of  type	328	None	replace
1210	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  true);  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  true);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  true);	  NameType    nameType,    ruleType,    concat);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1211	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  true)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  true)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  true)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
1212	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  null)  {  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  null)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  null)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
1213	[BUG]  [BUGGY]  final  NameType  nameType,  RuleType  ruleType,  int  maxPhonemes,  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType,  RuleType  ruleType,  int  maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType,  RuleType  ruleType,  int  maxPhonemes,	  final    NameType    nameType,    RuleType    ruleType,    boolean    concat,    	non-compiled	[CE]  illegal  start  of  type	285	None	replace
1214	[BUG]  [BUGGY]  this.nameType,  ruleType);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType);	  this(nameType,    ruleType);    	non-compiled	[CE]  illegal  start  of  type	230	None	replace
1215	[BUG]  [BUGGY]  this(nameType,  ruleType.getName(),  concat);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType.getName(),  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType.getName(),  concat);	  this(nameType,    ruleType);    	non-compiled	[CE]  illegal  start  of  type	230	None	replace
1216	[BUG]  [BUGGY]  this(nameType,  ruleType.null,  concat);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType.null,  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType.null,  concat);	  this(nameType,    ruleType);    	non-compiled	[CE]  illegal  start  of  type	230	None	replace
1217	[BUG]  [BUGGY]  this(nameType,  ruleType,  Concat);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  Concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  Concat);	  this(nameType,    ruleType);    	non-compiled	[CE]  illegal  start  of  type	230	None	replace
1218	[BUG]  [BUGGY]  PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder();  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder();	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    else    {    PhonemeBuilder    phonemeBuilder    =    new    PhonemeBuilder();    }    	non-compiled	[CE]  	331	None	replace
1219	[BUG]  [BUGGY]  final  int  maxPhonemes,  String  nameType,  Boolean  concat)  {  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  String  nameType,  Boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  String  nameType,  Boolean  concat)  {	  final    int    maxPhonemes,    Boolean    concat)    {    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	274	None	replace
1220	[BUG]  [BUGGY]  this.nameType,  ruleType,  nameType,  concat,  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  nameType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  nameType,  concat,	  this.nameType,    nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	289	None	replace
1221	[BUG]  [BUGGY]  this.nameType,  ruleType,  null,  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  null,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  null,	  this.nameType,    nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	289	None	replace
1222	[BUG]  [BUGGY]  this.nameType,  ruleType,  null,  concat,  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  null,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  null,  concat,	  this.nameType,    nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	289	None	replace
1223	[BUG]  [BUGGY]  this.nameType,  nameType,  ruleType,  Concat,  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  ruleType,  Concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  ruleType,  Concat,	  this.nameType,    nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	289	None	replace
1224	[BUG]  [BUGGY]  this.phonemeBuilder  =  Locale.instance(nameType);  this.maxPhonemes  =  concat;  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Locale.instance(nameType);  this.maxPhonemes  =  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Locale.instance(nameType);  this.maxPhonemes  =  concat;	  this.phonemeBuilder    =    Locale.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	282	None	replace
1225	[BUG]  [BUGGY]  this.phonemeBuilder  =  Locale.instance(nameType,  concat);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Locale.instance(nameType,  concat);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Locale.instance(nameType,  concat);  this.maxPhonemes  =  maxPhonemes;	  this.phonemeBuilder    =    Locale.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	282	None	replace
1226	[BUG]  [BUGGY]  this.phonemeBuilder  =  Locale.instance(nameType);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Locale.instance(nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Locale.instance(nameType);	  this.phonemeBuilder    =    Locale.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	282	None	replace
1227	[BUG]  [BUGGY]  this.phonemeBuilder  =  Locale.instance(ruleType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Locale.instance(ruleType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Locale.instance(ruleType);  this.maxPhonemes  =  maxPhonemes;	  this.phonemeBuilder    =    Locale.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	282	None	replace
1228	[BUG]  [BUGGY]  this.phonemeBuilder  =  Locale.instance(nameType);  this.maxPhonemes  =  0;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Locale.instance(nameType);  this.maxPhonemes  =  0;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Locale.instance(nameType);  this.maxPhonemes  =  0;	  this.phonemeBuilder    =    Locale.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	282	None	replace
1229	[BUG]  [BUGGY]  this.phonemeBuilder  =  Locale.instance(nameType);  this.maxPhonemes  =  concat?  1  :  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Locale.instance(nameType);  this.maxPhonemes  =  concat?  1  :  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Locale.instance(nameType);  this.maxPhonemes  =  concat?  1  :  maxPhonemes;	  this.phonemeBuilder    =    Locale.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	282	None	replace
1230	[BUG]  [BUGGY]  this.phonemeBuilder  =  Locale.instance();  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Locale.instance();  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Locale.instance();  this.maxPhonemes  =  maxPhonemes;	  this.phonemeBuilder    =    Locale.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	282	None	replace
1231	[BUG]  [BUGGY]  this.phonemeBuilder  =  Locale.instance(nameType);  this.maxPhonemes  =  concat?  3  :  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Locale.instance(nameType);  this.maxPhonemes  =  concat?  3  :  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Locale.instance(nameType);  this.maxPhonemes  =  concat?  3  :  maxPhonemes;	  this.phonemeBuilder    =    Locale.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	282	None	replace
1232	[BUG]  [BUGGY]  this.ruleType  =  nameType, "ruletype ";  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  nameType, "ruletype ";  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  nameType, "ruletype ";	  this.ruleType    =   "ruletype   ";    	non-compiled	[CE]  illegal  start  of  type	338	None	replace
1233	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getNameType();  this.ruleType  =  nameType;  [CE]  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getNameType();  this.ruleType  =  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getNameType();  this.ruleType  =  nameType;	  NameType    nameType    =    nameType.getNameType();    this.ruleType    =    ruleType;    	non-compiled	[CE]  	102	None	replace
1234	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getNameType();  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  ruleType.getNameType();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  ruleType.getNameType();	  NameType    nameType    =    nameType.getNameType();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
1235	[BUG]  [BUGGY]  final  NameType  nameType  =  nameType.getNameType();  this.ruleType  =  ruleType;  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType  =  nameType.getNameType();  this.ruleType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType  =  nameType.getNameType();  this.ruleType  =  ruleType;	  NameType    nameType    =    nameType.getNameType();    this.ruleType    =    ruleType;    	non-compiled	[CE]  	102	None	replace
1236	[BUG]  [BUGGY]  this.ruleType  =  nameType.getName();  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  nameType.getName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  nameType.getName();	  NameType    nameType    =    nameType.getNameType();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
1237	[BUG]  [BUGGY]  this.ruleType  =  nameType.getNameType();  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  nameType.getNameType();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  nameType.getNameType();	  NameType    nameType    =    nameType.getNameType();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
1238	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getRuleType();  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  ruleType.getRuleType();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  ruleType.getRuleType();	  NameType    nameType    =    nameType.getNameType();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
1239	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getReturnType();  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  ruleType.getReturnType();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  ruleType.getReturnType();	  NameType    nameType    =    nameType.getNameType();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
1240	[BUG]  [BUGGY]  super(nameType,  ruleType.concat,  concat);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType.concat,  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.concat,  concat);	  super(nameType,    ruleType.concat);    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
1241	[BUG]  [BUGGY]  super(ruleType,  nameType.concat);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(ruleType,  nameType.concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(ruleType,  nameType.concat);	  super(nameType,    ruleType.concat);    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
1242	[BUG]  [BUGGY]  super(nameType,  ruleType.configureFunctions(),  concat);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType.configureFunctions(),  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.configureFunctions(),  concat);	  super(nameType,    ruleType.concat);    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
1243	[BUG]  [BUGGY]  super(nameType,  ruleType.configure(),  concat);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType.configure(),  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.configure(),  concat);	  super(nameType,    ruleType.concat);    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
1244	[BUG]  [BUGGY]  super(nameType,  ruleType.configureFunctionNames(),  concat);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType.configureFunctionNames(),  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.configureFunctionNames(),  concat);	  super(nameType,    ruleType.concat);    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
1245	[BUG]  [BUGGY]  super(nameType,  ruleType.configureFunction(),  concat);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType.configureFunction(),  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.configureFunction(),  concat);	  super(nameType,    ruleType.concat);    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
1246	[BUG]  [BUGGY]  super(nameType,  ruleType.configureFunctionDeclaration(),  concat);  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType.configureFunctionDeclaration(),  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.configureFunctionDeclaration(),  concat);	  super(nameType,    ruleType.concat);    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
1247	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat  {  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat  {  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat  {	  NameType    nameType,    ruleType,    concat    	non-compiled	[CE]  <identifier>  expected	41	None	replace
1248	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat  0,  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat  0,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat  0,	  NameType    nameType,    ruleType,    concat    	non-compiled	[CE]  <identifier>  expected	41	None	replace
1249	[BUG]  [BUGGY]  final  NameType  nameType,  ruleType,  concat  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType,  ruleType,  concat  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType,  ruleType,  concat	  NameType    nameType,    ruleType,    concat    	non-compiled	[CE]  <identifier>  expected	41	None	replace
1250	[BUG]  [BUGGY]  final  int  maxPhonemes,  String  nameType)  {  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  String  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  String  nameType)  {	  final    boolean    maxPhonemes,    String    nameType)    {    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	198	None	replace
1251	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  String  ruleType)  {  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  String  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  String  ruleType)  {	  final    boolean    maxPhonemes,    String    nameType)    {    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine	198	None	replace
1252	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  String  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  String  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  String  concat)  {	  final    boolean    maxPhonemes,    String    nameType)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	198	None	replace
1253	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  String  type)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  String  type)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  String  type)  {	  final    boolean    maxPhonemes,    String    nameType)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	198	None	replace
1254	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  -  1L;  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  -  1L;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes  -  1L;	  final    int    maxPhonemes    =    nameType.maxPhonemes    -    1;    	non-compiled	[CE]  	24	None	replace
1255	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  -  3;  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  -  3;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes  -  3;	  final    int    maxPhonemes    =    nameType.maxPhonemes    -    1;    	non-compiled	[CE]  	24	None	replace
1256	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  *  1;  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  *  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes  *  1;	  final    int    maxPhonemes    =    nameType.maxPhonemes    -    1;    	non-compiled	[CE]  	24	None	replace
1257	[BUG]  [BUGGY]  static  final  int  maxPhonemes  =  ruleType.maxPhonemes;  [CE]  modifier  static  not  allowed  here  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  static  final  int  maxPhonemes  =  ruleType.maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  int  maxPhonemes  =  ruleType.maxPhonemes;	  static    final    int    maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  modifier  static  not  allowed  here	256	None	replace
1258	[BUG]  [BUGGY]  static  final  int  maxPhonemes  =  nameType.maxPhonemes  -  1;  [CE]  modifier  static  not  allowed  here  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  static  final  int  maxPhonemes  =  nameType.maxPhonemes  -  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  int  maxPhonemes  =  nameType.maxPhonemes  -  1;	  static    final    int    maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  modifier  static  not  allowed  here	256	None	replace
1259	[BUG]  [BUGGY]  static  final  int  maxPhonemes  =  nameType.maxPhonemes  +  1;  [CE]  modifier  static  not  allowed  here  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  static  final  int  maxPhonemes  =  nameType.maxPhonemes  +  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  int  maxPhonemes  =  nameType.maxPhonemes  +  1;	  static    final    int    maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  modifier  static  not  allowed  here	256	None	replace
1260	[BUG]  [BUGGY]  static  final  int  maxPhonemes  =  nameType.maxPhonemes  -  2;  [CE]  modifier  static  not  allowed  here  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  static  final  int  maxPhonemes  =  nameType.maxPhonemes  -  2;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  int  maxPhonemes  =  nameType.maxPhonemes  -  2;	  static    final    int    maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  modifier  static  not  allowed  here	256	None	replace
1261	[BUG]  [BUGGY]  static  final  int  maxPhonemes  =  nameType.maxPhonemes  /  2;  [CE]  modifier  static  not  allowed  here  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  static  final  int  maxPhonemes  =  nameType.maxPhonemes  /  2;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  int  maxPhonemes  =  nameType.maxPhonemes  /  2;	  static    final    int    maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  modifier  static  not  allowed  here	256	None	replace
1262	[BUG]  [BUGGY]  static  final  long  maxPhonemes  =  nameType.maxPhonemes;  [CE]  modifier  static  not  allowed  here  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  static  final  long  maxPhonemes  =  nameType.maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  long  maxPhonemes  =  nameType.maxPhonemes;	  static    final    int    maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  modifier  static  not  allowed  here	256	None	replace
1263	[BUG]  [BUGGY]  static  final  int  maxPhonemes  =  nameType.maxPhonemes  +  2;  [CE]  modifier  static  not  allowed  here  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  static  final  int  maxPhonemes  =  nameType.maxPhonemes  +  2;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  int  maxPhonemes  =  nameType.maxPhonemes  +  2;	  static    final    int    maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  modifier  static  not  allowed  here	256	None	replace
1264	[BUG]  [BUGGY]  this.maxPhonemes  =  concat  +  1;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  concat  +  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  concat  +  1;	  this.maxPhonemes    =    concat;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
1265	[BUG]  [BUGGY]  this.maxPhonemes  =  maximumPhonemes;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  maximumPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  maximumPhonemes;	  this.maxPhonemes    =    concat;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
1266	[BUG]  [BUGGY]  this.maxPhonemes  =  totalPhonemes;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  totalPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  totalPhonemes;	  this.maxPhonemes    =    concat;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
1267	[BUG]  [BUGGY]  this.maxPhonemes  =  new  int[size()  ];  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  new  int[size()  ];  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  new  int[size()  ];	  this.maxPhonemes    =    concat;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
1268	[BUG]  [BUGGY]  final  int  maxPhonemes,  Integer.MAX_VALUE,  nameType)  {  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  Integer.MAX_VALUE,  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  Integer.MAX_VALUE,  nameType)  {	  final    int    maxPhonemes,    Integer.MAX_VALUE)    {    	non-compiled	[CE]  <identifier>  expected	244	None	replace
1269	[BUG]  [BUGGY]  final  int  maxPhonemes,  Integer.MIN_VALUE)  {  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  Integer.MIN_VALUE)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  Integer.MIN_VALUE)  {	  final    int    maxPhonemes,    Integer.MAX_VALUE)    {    	non-compiled	[CE]  <identifier>  expected	244	None	replace
1270	[BUG]  [BUGGY]  final  int  maxPhonemes,  Integer.MAX_VALUE,  concat)  {  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  Integer.MAX_VALUE,  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  Integer.MAX_VALUE,  concat)  {	  final    int    maxPhonemes,    Integer.MAX_VALUE)    {    	non-compiled	[CE]  <identifier>  expected	244	None	replace
1271	[BUG]  [BUGGY]  final  int  maxPhonemes,  Integer.MAX_VALUE,  DEFAULT_MAX_PHONEMES)  {  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  Integer.MAX_VALUE,  DEFAULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  Integer.MAX_VALUE,  DEFAULT_MAX_PHONEMES)  {	  final    int    maxPhonemes,    Integer.MAX_VALUE)    {    	non-compiled	[CE]  <identifier>  expected	244	None	replace
1272	[BUG]  [BUGGY]  final  int  maxPhonemes,  Integer.MAX_VALUE,  0)  {  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  Integer.MAX_VALUE,  0)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  Integer.MAX_VALUE,  0)  {	  final    int    maxPhonemes,    Integer.MAX_VALUE)    {    	non-compiled	[CE]  <identifier>  expected	244	None	replace
1273	[BUG]  [BUGGY]  this.maxPhonemes,  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes,  Integer.MAX_VALUE)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes,  Integer.MAX_VALUE)  {	  final    int    maxPhonemes,    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  type	244	None	replace
1274	[BUG]  [BUGGY]  final  int  maxPhonemes,  Integer.DEFAULT_MAX_PHONEMES)  {  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  Integer.DEFAULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  Integer.DEFAULT_MAX_PHONEMES)  {	  final    int    maxPhonemes,    Integer.MAX_VALUE)    {    	non-compiled	[CE]  <identifier>  expected	244	None	replace
1275	[BUG]  [BUGGY]  final  int  maxPhonemes,  0,  Integer.MAX_VALUE)  {  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  0,  Integer.MAX_VALUE)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  0,  Integer.MAX_VALUE)  {	  final    int    maxPhonemes,    Integer.MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  type	244	None	replace
1276	[BUG]  [BUGGY]  this.nameType  =  ruleType;  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType;	  this.nameType    =    nameType;    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	206	None	replace
1277	[BUG]  [BUGGY]  this.nameType  =  new  NameType(nameType.getName(),  ruleType.getName());  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  new  NameType(nameType.getName(),  ruleType.getName());  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  new  NameType(nameType.getName(),  ruleType.getName());	  this.nameType    =    nameType;    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	206	None	replace
1278	[BUG]  [BUGGY]  NameType  nameType  =  nameType;  this.nameType  =  nameType;  [CE]  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  nameType;  this.nameType  =  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  nameType;  this.nameType  =  nameType;	  this.nameType    =    nameType;    this.nameType    =    nameType;    	non-compiled	[CE]  	206	None	replace
1279	[BUG]  [BUGGY]  this.nameType  =  new  NameType(nameType.getName());  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  new  NameType(nameType.getName());  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  new  NameType(nameType.getName());	  this.nameType    =    nameType;    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	206	None	replace
1280	[BUG]  [BUGGY]  this.nameType  =  new  NameType(nameType.getSimpleName());  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  new  NameType(nameType.getSimpleName());  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  new  NameType(nameType.getSimpleName());	  this.nameType    =    nameType;    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	206	None	replace
1281	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  NAME_PREFIXES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  NAME_PREFIXES);	  this.nameType,    nameType,    concat,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
1282	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES);  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES);	  this.nameType,    nameType,    concat,    NAME_PREFIXES);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
1283	[BUG]  [BUGGY]  nameType,  ruleType,  concat,  NAME_PREFIXES);  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  concat,  NAME_PREFIXES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat,  NAME_PREFIXES);	  this.nameType,    nameType,    concat,    NAME_PREFIXES);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
1284	[BUG]  [BUGGY]  nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES);  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES);	  this.nameType,    nameType,    concat,    NAME_PREFIXES);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
1285	[BUG]  [BUGGY]  This.nameType,  nameType,  concat,  DEFAULT_MAX_PHONEMES);  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.nameType,  nameType,  concat,  DEFAULT_MAX_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType,  nameType,  concat,  DEFAULT_MAX_PHONEMES);	  this.nameType,    nameType,    concat,    NAME_PREFIXES);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
1286	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat,  true);  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat,  true);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  concat,  true);	  NameType    nameType,    RuleType    ruleType,    concat,    false);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
1287	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat,  false,  null);  [CE]  <identifier>  expected  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat,  false,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  concat,  false,  null);	  NameType    nameType,    RuleType    ruleType,    concat,    false);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
1288	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  false,  null);  [CE]  <identifier>  expected  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  false,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  false,  null);	  NameType    nameType,    RuleType    ruleType,    concat,    false);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
1289	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MAX_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MAX_PHONEMES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MAX_PHONEMES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    MAX_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
1290	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  MAX_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  MAX_PHONEMES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  MAX_PHONEMES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    MAX_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
1291	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  0,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  0,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  0,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    MAX_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
1292	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  MAX_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  MAX_PHONEMES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  MAX_PHONEMES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    MAX_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
1293	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MIN_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MIN_PHONEMES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MIN_PHONEMES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    MAX_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
1294	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  0,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  0,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  0,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    MAX_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
1295	[BUG]  [BUGGY]  final  int  maxPhonemes,  String  nameType,  concat)  {  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  String  nameType,  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  String  nameType,  concat)  {	  final    int    maxPhonemes,    String    nameType,    boolean    concat)    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1296	[BUG]  [BUGGY]  final  int  maxPhonemes,  String  nameType,  Concat)  {  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  String  nameType,  Concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  String  nameType,  Concat)  {	  final    int    maxPhonemes,    String    nameType,    boolean    concat)    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1297	[BUG]  [BUGGY]  final  int  maxPhonemes,  String  ruleType,  boolean  concat)  {  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  String  ruleType,  boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  String  ruleType,  boolean  concat)  {	  final    int    maxPhonemes,    String    nameType,    boolean    concat)    {    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine	44	None	replace
1298	[BUG]  [BUGGY]  final  int  maxPhonemes,  NameType  nameType,  boolean  concat)  {  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  NameType  nameType,  boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  NameType  nameType,  boolean  concat)  {	  final    int    maxPhonemes,    String    nameType,    boolean    concat)    {    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	44	None	replace
1299	[BUG]  [BUGGY]  final  String  nameType,  final  int  maxPhonemes,  boolean  concat)  {  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  String  nameType,  final  int  maxPhonemes,  boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  String  nameType,  final  int  maxPhonemes,  boolean  concat)  {	  final    int    maxPhonemes,    String    nameType,    boolean    concat)    {    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	44	None	replace
1300	[BUG]  [BUGGY]  final  String  nameType,  final  boolean  concat)  {  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  String  nameType,  final  boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  String  nameType,  final  boolean  concat)  {	  final    int    maxPhonemes,    String    nameType,    boolean    concat)    {    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	44	None	replace
1301	[BUG]  [BUGGY]  final  int  maxPhonemes,  String  nameType,  Integer  concat)  {  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  String  nameType,  Integer  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  String  nameType,  Integer  concat)  {	  final    int    maxPhonemes,    String    nameType,    boolean    concat)    {    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	44	None	replace
1302	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  true);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  true);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  true);	  this(nameType,    ruleType,    concat,    DEFAULT_PHONEMES,    false);    	non-compiled	[CE]  illegal  start  of  type	259	None	replace
1303	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  false,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  false,  maxPhonemes);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  false,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_PHONEMES,    false);    	non-compiled	[CE]  illegal  start  of  type	259	None	replace
1304	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  null,  false);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  null,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  null,  false);	  this(nameType,    ruleType,    concat,    DEFAULT_PHONEMES,    false);    	non-compiled	[CE]  illegal  start  of  type	259	None	replace
1305	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  false,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  false,  NAME_PREFIXES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  false,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_PHONEMES,    false);    	non-compiled	[CE]  illegal  start  of  type	259	None	replace
1306	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  true);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  true);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  true);	  this(nameType,    ruleType,    concat,    DEFAULT_PHONEMES,    false);    	non-compiled	[CE]  illegal  start  of  type	259	None	replace
1307	[BUG]  [BUGGY]  this.ruleType,  ruleType,  concat)  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType,  ruleType,  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  ruleType,  concat)  {	  this.ruleType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
1308	[BUG]  [BUGGY]  this.ruleType,  nameType,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType,  nameType,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  nameType,  maxPhonemes)  {	  this.ruleType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
1309	[BUG]  [BUGGY]  This.ruleType,  ruleType,  concat)  {  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.ruleType,  ruleType,  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.ruleType,  ruleType,  concat)  {	  this.ruleType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  <identifier>  expected	110	None	replace
1310	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  2);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  2);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  2);	  this(nameType,    ruleType,    concat,    1);    	non-compiled	[CE]  illegal  start  of  type	213	None	replace
1311	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  3);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  3);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  3);	  this(nameType,    ruleType,    concat,    1);    	non-compiled	[CE]  illegal  start  of  type	213	None	replace
1312	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  1);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  1);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  1);	  this(nameType,    ruleType,    concat,    1);    	non-compiled	[CE]  illegal  start  of  type	213	None	replace
1313	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  4);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  4);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  4);	  this(nameType,    ruleType,    concat,    1);    	non-compiled	[CE]  illegal  start  of  type	213	None	replace
1314	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.maxPhonemes  =  countPhonemes;  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.maxPhonemes  =  countPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.maxPhonemes  =  countPhonemes;	  this.nameType    =    nameType;    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
1315	[BUG]  [BUGGY]  this.nameType  =  ruleType;  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType;  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType;  this.maxPhonemes  =  maxPhonemes;	  this.nameType    =    nameType;    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
1316	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.maxPhonemes  =  0;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.maxPhonemes  =  0;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.maxPhonemes  =  0;	  this.nameType    =    nameType;    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
1317	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.maxPhonemes  =  MAX_PHONEMES;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.maxPhonemes  =  MAX_PHONEMES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.maxPhonemes  =  MAX_PHONEMES;	  this.nameType    =    nameType;    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
1318	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.maxPhonemes  =  concat?  maxPhonemes  :  1;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.maxPhonemes  =  concat?  maxPhonemes  :  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.maxPhonemes  =  concat?  maxPhonemes  :  1;	  this.nameType    =    nameType;    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
1319	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.maxPhonemes  =  new  int[maxPhonemes];  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.maxPhonemes  =  new  int[maxPhonemes];  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.maxPhonemes  =  new  int[maxPhonemes];	  this.nameType    =    nameType;    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
1320	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(concat)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(concat)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(concat)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(!concat)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
1321	[BUG]  [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(!concat)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(!concat)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(!concat)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(!concat)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
1322	[BUG]  [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(concat)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(concat)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(concat)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(!concat)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
1323	[BUG]  [BUGGY]  nameType)  {  this.nameType  =  nameType;  }  else  if(!concat)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType)  {  this.nameType  =  nameType;  }  else  if(!concat)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType)  {  this.nameType  =  nameType;  }  else  if(!concat)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(!concat)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
1324	[BUG]  [BUGGY]  nameType)  {  this.nameType  =  nameType;  }  else  if(concat)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType)  {  this.nameType  =  nameType;  }  else  if(concat)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType)  {  this.nameType  =  nameType;  }  else  if(concat)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(!concat)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
1325	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  ruleType;  }  else  if(!concat)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  ruleType;  }  else  if(!concat)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  ruleType;  }  else  if(!concat)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(!concat)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
1326	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
1327	[BUG]  [BUGGY]  final  int  maxPhonemes,  RuleType  ruleType)  {  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  RuleType  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  RuleType  ruleType)  {	  final    boolean    maxPhonemes,    RuleType    ruleType)    {    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine	200	None	replace
1328	[BUG]  [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    instanceof    RuleType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
1329	[BUG]  [BUGGY]  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    instanceof    RuleType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
1330	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  ruleType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  ruleType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  ruleType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    instanceof    RuleType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
1331	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( "Rule  type  must  not  be   "  +  RuleType.RULES);  }  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( "Rule  type  must  not  be   "  +  RuleType.RULES);  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( "Rule  type  must  not  be   "  +  RuleType.RULES);  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    instanceof    RuleType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
1332	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( "  rule  type  must  not  be   "  +  RuleType.RULES);  }  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( "  rule  type  must  not  be   "  +  RuleType.RULES);  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( "  rule  type  must  not  be   "  +  RuleType.RULES);  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    instanceof    RuleType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
1333	[BUG]  [BUGGY]  Locale.getDefault())  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Locale.getDefault())  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Locale.getDefault())  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    instanceof    RuleType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
1334	[BUG]  [BUGGY]  NameType  nameType,  ruleType.names  =  new  LinkedList  <  RuleType>();  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.names  =  new  LinkedList  <  RuleType>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.names  =  new  LinkedList  <  RuleType>();	  NameType    nameType,    ruleType,    concat.names    =    new    ArrayList    <    RuleType>();    	non-compiled	[CE]  <identifier>  expected	333	None	replace
1335	[BUG]  [BUGGY]  NameType  nameType,  ruleType.names  =  new  ArrayList  <  RuleType>();  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.names  =  new  ArrayList  <  RuleType>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.names  =  new  ArrayList  <  RuleType>();	  NameType    nameType,    ruleType,    concat.names    =    new    ArrayList    <    RuleType>();    	non-compiled	[CE]  <identifier>  expected	333	None	replace
1336	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  LinkedHashSet  <  RuleType>();  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  LinkedHashSet  <  RuleType>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  LinkedHashSet  <  RuleType>();	  NameType    nameType,    ruleType,    concat.names    =    new    ArrayList    <    RuleType>();    	non-compiled	[CE]  <identifier>  expected	333	None	replace
1337	[BUG]  [BUGGY]  NameType  nameType,  ruleType.names  =  new  LinkedHashSet  <  RuleType>();  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.names  =  new  LinkedHashSet  <  RuleType>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.names  =  new  LinkedHashSet  <  RuleType>();	  NameType    nameType,    ruleType,    concat.names    =    new    ArrayList    <    RuleType>();    	non-compiled	[CE]  <identifier>  expected	333	None	replace
1338	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  java.util.ArrayList  <  RuleType>();  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  java.util.ArrayList  <  RuleType>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  java.util.ArrayList  <  RuleType>();	  NameType    nameType,    ruleType,    concat.names    =    new    ArrayList    <    RuleType>();    	non-compiled	[CE]  <identifier>  expected	333	None	replace
1339	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  HashSet  <  RuleType>();  [CE]  <identifier>  expected  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  HashSet  <  RuleType>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  HashSet  <  RuleType>();	  NameType    nameType,    ruleType,    concat.names    =    new    ArrayList    <    RuleType>();    	non-compiled	[CE]  <identifier>  expected	333	None	replace
1340	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  TreeSet  <  RuleType>();  [CE]  <identifier>  expected  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  TreeSet  <  RuleType>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  TreeSet  <  RuleType>();	  NameType    nameType,    ruleType,    concat.names    =    new    ArrayList    <    RuleType>();    	non-compiled	[CE]  <identifier>  expected	333	None	replace
1341	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  null;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  null;	  this.nameType,    ruleType,    concat;    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
1342	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  false;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  false;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  false;	  this.nameType,    ruleType,    concat;    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
1343	[BUG]  [BUGGY]  this.nameType,  nameType,  concat;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat;	  this.nameType,    ruleType,    concat;    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
1344	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  nameType;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  nameType;	  this.nameType,    ruleType,    concat;    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
1345	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat  =  false;  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat  =  false;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat  =  false;	  this.nameType,    ruleType,    concat;    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
1346	[BUG]  [BUGGY]  NameType  nameType,  ruleType.nameType,  Concat);  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.nameType,  Concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.nameType,  Concat);	  NameType    nameType,    ruleType,    Concat);    	non-compiled	[CE]  <identifier>  expected	231	None	replace
1347	[BUG]  [BUGGY]  NameType  nameType,  ruleType.getName(),  Concat);  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.getName(),  Concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.getName(),  Concat);	  NameType    nameType,    ruleType,    Concat);    	non-compiled	[CE]  <identifier>  expected	231	None	replace
1348	[BUG]  [BUGGY]  NameType  nameType,  ruleType);  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType);	  NameType    nameType,    ruleType,    Concat);    	non-compiled	[CE]  <identifier>  expected	231	None	replace
1349	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  boolean  concat);  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  boolean  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  boolean  concat);	  NameType    nameType,    ruleType,    Concat);    	non-compiled	[CE]  <identifier>  expected	231	None	replace
1350	[BUG]  [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(type    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
1351	[BUG]  [BUGGY]  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(type    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
1352	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(type    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
1353	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  Il  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  Il  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  Il	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(type    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
1354	[BUG]  [BUGGY]  Locale.getDefault())  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Locale.getDefault())  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Locale.getDefault())  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(type    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
1355	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  ruleType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  ruleType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  ruleType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(type    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
1356	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ".);  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(type    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
1357	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat)  [CE]  <identifier>  expected  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat)  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat)	  NameType    nameType,    RuleType    ruleType,    concat)    	non-compiled	[CE]  <identifier>  expected	56	None	replace
1358	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  boolean  concat)  [CE]  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  boolean  concat)  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  boolean  concat)	  NameType    nameType,    RuleType    ruleType,    concat)    	non-compiled	[CE]  	56	None	replace
1359	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  int  maxPhonemes)  [CE]  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  int  maxPhonemes)  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  int  maxPhonemes)	  NameType    nameType,    RuleType    ruleType,    concat)    	non-compiled	[CE]  	56	None	replace
1360	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  Concat)  [CE]  <identifier>  expected  [FE]                                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  Concat)  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  Concat)	  NameType    nameType,    RuleType    ruleType,    concat)    	non-compiled	[CE]  <identifier>  expected	56	None	replace
1361	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  finalRules)  [CE]  <identifier>  expected  [FE]                                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  finalRules)  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  finalRules)	  NameType    nameType,    RuleType    ruleType,    concat)    	non-compiled	[CE]  <identifier>  expected	56	None	replace
1362	[BUG]  [BUGGY]  nameType,  ruleType,  concat)  [CE]  <identifier>  expected  [FE]                                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  concat)  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat)	  NameType    nameType,    RuleType    ruleType,    concat)    	non-compiled	[CE]  <identifier>  expected	56	None	replace
1363	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType)  [CE]  [FE]                                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType)  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType)	  NameType    nameType,    RuleType    ruleType,    concat)    	non-compiled	[CE]  	56	None	replace
1364	[BUG]  [BUGGY]  nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(nameType!=    RuleType.NAME_PREFIXES)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	249	None	replace
1365	[BUG]  [BUGGY]  nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  [CE]  <identifier>  expected  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;	  if(nameType!=    RuleType.NAME_PREFIXES)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	249	None	replace
1366	[BUG]  [BUGGY]  nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  if(concat)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  if(concat)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  if(concat)  {  throw  new  IllegalArgumentException( " ");  }	  if(nameType!=    RuleType.NAME_PREFIXES)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	249	None	replace
1367	[BUG]  [BUGGY]  nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  if(nameType!=    RuleType.NAME_PREFIXES)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	249	None	replace
1368	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.toString()  : "null ";  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.toString()  : "null ";  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.toString()  : "null ";	  this.nameType    =    nameType    ==    null?    nameType.toString()    :   "null   ";    	non-compiled	[CE]  illegal  start  of  type	302	None	replace
1369	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  ruleType.toString()  : "null ";  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  ruleType.toString()  : "null ";  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  ruleType.toString()  : "null ";	  this.nameType    =    nameType    ==    null?    nameType.toString()    :   "null   ";    	non-compiled	[CE]  illegal  start  of  type	302	None	replace
1370	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.toString()  : "  <  null> ";  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.toString()  : "  <  null> ";  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.toString()  : "  <  null> ";	  this.nameType    =    nameType    ==    null?    nameType.toString()    :   "null   ";    	non-compiled	[CE]  illegal  start  of  type	302	None	replace
1371	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.toString()  : ",null ";  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.toString()  : ",null ";  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.toString()  : ",null ";	  this.nameType    =    nameType    ==    null?    nameType.toString()    :   "null   ";    	non-compiled	[CE]  illegal  start  of  type	302	None	replace
1372	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  ruleType.toString()  : "null ";  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  ruleType.toString()  : "null ";  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  ruleType.toString()  : "null ";	  this.nameType    =    nameType    ==    null?    nameType.toString()    :   "null   ";    	non-compiled	[CE]  illegal  start  of  type	302	None	replace
1373	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_MAX_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_MAX_PHONEMES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_MAX_PHONEMES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_PREFIXES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	219	None	replace
1374	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_PREFIXES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	219	None	replace
1375	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAPHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAPHONEMES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PAPHONEMES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_PREFIXES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	219	None	replace
1376	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MILLIS,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MILLIS,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MILLIS,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_PREFIXES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	219	None	replace
1377	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  0,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  0,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  0,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_PREFIXES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	219	None	replace
1378	[BUG]  [BUGGY]  NameType  nameType,  ruleType.getName());  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.getName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.getName());	  NameType    nameType,    ruleType.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
1379	[BUG]  [BUGGY]  NameType  nameType,  ruleType.getSimpleName(),  concat);  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.getSimpleName(),  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.getSimpleName(),  concat);	  NameType    nameType,    ruleType.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
1380	[BUG]  [BUGGY]  NameType  nameType,  ruleType.getFunctionName());  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.getFunctionName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.getFunctionName());	  NameType    nameType,    ruleType.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
1381	[BUG]  [BUGGY]  NameType  nameType,  ruleType.getRawName());  [CE]  <identifier>  expected  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.getRawName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.getRawName());	  NameType    nameType,    ruleType.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
1382	[BUG]  [BUGGY]  NameType  nameType,  ruleType.getRawSimpleName());  [CE]  <identifier>  expected  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.getRawSimpleName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.getRawSimpleName());	  NameType    nameType,    ruleType.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
1383	[BUG]  [BUGGY]  NameType  nameType,  ruleType.getSimpleName()));  [CE]  <identifier>  expected  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.getSimpleName()));  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.getSimpleName()));	  NameType    nameType,    ruleType.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
1384	[BUG]  [BUGGY]  NameType  nameType,  ruleType.getFullName());  [CE]  <identifier>  expected  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.getFullName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.getFullName());	  NameType    nameType,    ruleType.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
1385	[BUG]  [BUGGY]  NameType  nameType,  ruleType.getReferenceName());  [CE]  <identifier>  expected  [FE]                                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.getReferenceName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.getReferenceName());	  NameType    nameType,    ruleType.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
1386	[BUG]  [BUGGY]  this.maxPhonemes,  final  String  concat)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes,  final  String  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes,  final  String  concat)  {	  final    int    maxPhonemes,    final    String    concat)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
1387	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  String  concat,  final  NameType  nameType)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  String  concat,  final  NameType  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  String  concat,  final  NameType  nameType)  {	  final    int    maxPhonemes,    final    String    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	46	None	replace
1388	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    null,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
1389	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes,  nameType)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes,  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null,  maxPhonemes,  nameType)  {	  this(nameType,    ruleType,    concat,    null,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
1390	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes,  false)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes,  false)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null,  maxPhonemes,  false)  {	  this(nameType,    ruleType,    concat,    null,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
1391	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes,  NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes,  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null,  maxPhonemes,  NAME_PREFIXES)  {	  this(nameType,    ruleType,    concat,    null,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
1392	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes,  0)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes,  0)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null,  maxPhonemes,  0)  {	  this(nameType,    ruleType,    concat,    null,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
1393	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  0)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  null,  0)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null,  0)  {	  this(nameType,    ruleType,    concat,    null,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
1394	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  0,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  null,  0,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null,  0,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    null,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
1395	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes,  definalRules)  {  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes,  definalRules)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null,  maxPhonemes,  definalRules)  {	  this(nameType,    ruleType,    concat,    null,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
1396	[BUG]  [BUGGY]  NameType  ruleType,  RuleType  ruleType,  concat,  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType,  RuleType  ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType,  RuleType  ruleType,  concat,	  NameType    ruleType,    RuleType    ruleType,    boolean    concat,    	non-compiled	[CE]  <identifier>  expected	286	None	replace
1397	[BUG]  [BUGGY]  NameType  ruleType,  RuleType  ruleType,  final  int  maxPhonemes,  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType,  RuleType  ruleType,  final  int  maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType,  RuleType  ruleType,  final  int  maxPhonemes,	  NameType    ruleType,    RuleType    ruleType,    boolean    concat,    	non-compiled	[CE]  illegal  start  of  type	286	None	replace
1398	[BUG]  [BUGGY]  NameType  ruleType,  RuleType  ruleType,  int  maxPhonemes,  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType,  RuleType  ruleType,  int  maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType,  RuleType  ruleType,  int  maxPhonemes,	  NameType    ruleType,    RuleType    ruleType,    boolean    concat,    	non-compiled	[CE]  illegal  start  of  type	286	None	replace
1399	[BUG]  [BUGGY]  NameType  ruleType,  RuleType  ruleType,  final  concat,  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType,  RuleType  ruleType,  final  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType,  RuleType  ruleType,  final  concat,	  NameType    ruleType,    RuleType    ruleType,    boolean    concat,    	non-compiled	[CE]  <identifier>  expected	286	None	replace
1400	[BUG]  [BUGGY]  RuleType  ruleType,  RuleType  ruleType,  boolean  concat,  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  RuleType  ruleType,  RuleType  ruleType,  boolean  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	RuleType  ruleType,  RuleType  ruleType,  boolean  concat,	  NameType    ruleType,    RuleType    ruleType,    boolean    concat,    	non-compiled	[CE]  illegal  start  of  type	286	None	replace
1401	[BUG]  [BUGGY]  RuleType  ruleType,  RuleType  ruleType,  concat,  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  RuleType  ruleType,  RuleType  ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	RuleType  ruleType,  RuleType  ruleType,  concat,	  NameType    ruleType,    RuleType    ruleType,    boolean    concat,    	non-compiled	[CE]  <identifier>  expected	286	None	replace
1402	[BUG]  [BUGGY]  NameType  ruleType,  RuleType  ruleType,  null,  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType,  RuleType  ruleType,  null,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType,  RuleType  ruleType,  null,	  NameType    ruleType,    RuleType    ruleType,    boolean    concat,    	non-compiled	[CE]  illegal  start  of  type	286	None	replace
1403	[BUG]  [BUGGY]  NameType  nameType;  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType;	  NameType    nameType,    ruleType,    concat;    	non-compiled	[CE]  	40	None	replace
1404	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  null;  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  null;	  NameType    nameType,    ruleType,    concat;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
1405	[BUG]  [BUGGY]  NameType  nameType;  this.ruleType  =  ruleType;  [CE]  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType;  this.ruleType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType;  this.ruleType  =  ruleType;	  NameType    nameType,    ruleType,    concat;    	non-compiled	[CE]  	40	None	replace
1406	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  false;  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  false;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  false;	  NameType    nameType,    ruleType,    concat;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
1407	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  true;  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  true;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  true;	  NameType    nameType,    ruleType,    concat;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
1408	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  finalRules;  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  finalRules;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  finalRules;	  NameType    nameType,    ruleType,    concat;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
1409	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat  =  false;  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat  =  false;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat  =  false;	  NameType    nameType,    ruleType,    concat;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
1410	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.nameType();  [CE]  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.nameType();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.nameType();	  NameType    nameType    =    ruleType.toNameType();    	non-compiled	[CE]  	193	None	replace
1411	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.toStringType();  [CE]  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.toStringType();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.toStringType();	  NameType    nameType    =    ruleType.toNameType();    	non-compiled	[CE]  	193	None	replace
1412	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_FREFIXES,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_FREFIXES,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_FREFIXES,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_FREFIXES);    	non-compiled	[CE]  illegal  start  of  type	313	None	replace
1413	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_FREFIXES,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_FREFIXES,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_FREFIXES,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_FREFIXES);    	non-compiled	[CE]  illegal  start  of  type	313	None	replace
1414	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_FREFIXES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_FREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_FREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_FREFIXES);    	non-compiled	[CE]  illegal  start  of  type	313	None	replace
1415	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_FREFIXES,  nameType);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_FREFIXES,  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_FREFIXES,  nameType);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_FREFIXES);    	non-compiled	[CE]  illegal  start  of  type	313	None	replace
1416	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_FREFIXES,  DEFAULT_PREFIXES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_FREFIXES,  DEFAULT_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_FREFIXES,  DEFAULT_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_FREFIXES);    	non-compiled	[CE]  illegal  start  of  type	313	None	replace
1417	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_FREFIXES,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_FREFIXES,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_FREFIXES,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_FREFIXES);    	non-compiled	[CE]  illegal  start  of  type	313	None	replace
1418	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  ruleType.toString()  :  nameType.toString();  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  ruleType.toString()  :  nameType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  ruleType.toString()  :  nameType.toString();	  this.nameType    =    nameType!=    null?    nameType.toString()    :    nameType.toString();    	non-compiled	[CE]  illegal  start  of  type	239	None	replace
1419	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  LinkedHashSet  <  Rule>();  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  LinkedHashSet  <  Rule>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  LinkedHashSet  <  Rule>();	  NameType    nameType,    ruleType,    concat.names    =    new    HashSet    <    Rule>();    	non-compiled	[CE]  <identifier>  expected	334	None	replace
1420	[BUG]  [BUGGY]  NameType  nameType,  ruleType.names  =  new  LinkedHashSet  <  Rule>();  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.names  =  new  LinkedHashSet  <  Rule>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.names  =  new  LinkedHashSet  <  Rule>();	  NameType    nameType,    ruleType,    concat.names    =    new    HashSet    <    Rule>();    	non-compiled	[CE]  <identifier>  expected	334	None	replace
1421	[BUG]  [BUGGY]  NameType  nameType,  ruleType.names  =  new  HashSet  <  Rule>();  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.names  =  new  HashSet  <  Rule>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.names  =  new  HashSet  <  Rule>();	  NameType    nameType,    ruleType,    concat.names    =    new    HashSet    <    Rule>();    	non-compiled	[CE]  <identifier>  expected	334	None	replace
1422	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  ArrayList  <  Rule>();  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  ArrayList  <  Rule>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  ArrayList  <  Rule>();	  NameType    nameType,    ruleType,    concat.names    =    new    HashSet    <    Rule>();    	non-compiled	[CE]  <identifier>  expected	334	None	replace
1423	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  TreeSet  <  Rule>();  [CE]  <identifier>  expected  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  TreeSet  <  Rule>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  TreeSet  <  Rule>();	  NameType    nameType,    ruleType,    concat.names    =    new    HashSet    <    Rule>();    	non-compiled	[CE]  <identifier>  expected	334	None	replace
1424	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  LinkedList  <  Rule>();  [CE]  <identifier>  expected  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  LinkedList  <  Rule>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  LinkedList  <  Rule>();	  NameType    nameType,    ruleType,    concat.names    =    new    HashSet    <    Rule>();    	non-compiled	[CE]  <identifier>  expected	334	None	replace
1425	[BUG]  [BUGGY]  NameType  nameType,  ruleType.names  =  new  ArrayList  <  Rule>();  [CE]  <identifier>  expected  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.names  =  new  ArrayList  <  Rule>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.names  =  new  ArrayList  <  Rule>();	  NameType    nameType,    ruleType,    concat.names    =    new    HashSet    <    Rule>();    	non-compiled	[CE]  <identifier>  expected	334	None	replace
1426	[BUG]  [BUGGY]  NameType  nameType,  ruleType.names  =  new  TreeSet  <  Rule>();  [CE]  <identifier>  expected  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.names  =  new  TreeSet  <  Rule>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.names  =  new  TreeSet  <  Rule>();	  NameType    nameType,    ruleType,    concat.names    =    new    HashSet    <    Rule>();    	non-compiled	[CE]  <identifier>  expected	334	None	replace
1427	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat,  int  maxPhonemes,  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat,  int  maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  concat,  int  maxPhonemes,	  NameType    nameType,    RuleType    ruleType,    int    maxPhonemes,    	non-compiled	[CE]  <identifier>  expected	160	None	replace
1428	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  Concat,  maxPhonemes,  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  Concat,  maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  Concat,  maxPhonemes,	  NameType    nameType,    RuleType    ruleType,    int    maxPhonemes,    	non-compiled	[CE]  <identifier>  expected	160	None	replace
1429	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  int  maxPhonemes,  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  int  maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  int  maxPhonemes,	  NameType    nameType,    RuleType    ruleType,    int    maxPhonemes,    	non-compiled	[CE]  <identifier>  expected	160	None	replace
1430	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  int  concat,  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  int  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  int  concat,	  NameType    nameType,    RuleType    ruleType,    short    concat,    	non-compiled	[CE]  illegal  start  of  type	205	None	replace
1431	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  final  int  concat,  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  final  int  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  final  int  concat,	  NameType    nameType,    RuleType    ruleType,    short    concat,    	non-compiled	[CE]  illegal  start  of  type	205	None	replace
1432	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  short  maxPhonemes,  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  short  maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  short  maxPhonemes,	  NameType    nameType,    RuleType    ruleType,    short    concat,    	non-compiled	[CE]  illegal  start  of  type	205	None	replace
1433	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  null,  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  null,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  null,	  NameType    nameType,    RuleType    ruleType,    short    concat,    	non-compiled	[CE]  illegal  start  of  type	205	None	replace
1434	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  false);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  null,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null,  false);	  this(nameType,    ruleType,    concat,    false,    null);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
1435	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  false,  null);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  null,  false,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null,  false,  null);	  this(nameType,    ruleType,    concat,    false,    null);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
1436	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  null);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  null,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null,  null);	  this(nameType,    ruleType,    concat,    false,    null);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
1437	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  true,  false,  null);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  true,  false,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  true,  false,  null);	  this(nameType,    ruleType,    concat,    false,    null);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
1438	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  false,  null,  null);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  false,  null,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  false,  null,  null);	  this(nameType,    ruleType,    concat,    false,    null);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
1439	[BUG]  [BUGGY]  this.ruleType  =  nameType;  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  nameType;  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  nameType;  this.maxPhonemes  =  maxPhonemes;	  super(ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	223	None	replace
1440	[BUG]  [BUGGY]  this.phonemeBuilder  =  new  PhonemeBuilder(nameType,  nameType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  new  PhonemeBuilder(nameType,  nameType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  new  PhonemeBuilder(nameType,  nameType);  this.maxPhonemes  =  maxPhonemes;	  super(ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	223	None	replace
1441	[BUG]  [BUGGY]  final  int  maxPhonemes  =  ruleType.getMaxPhonemes()  /  2;  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  ruleType.getMaxPhonemes()  /  2;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  ruleType.getMaxPhonemes()  /  2;	  final    int    maxPhonemes    =    nameType.getMaxPhonemes()    /    2;    	non-compiled	[CE]  	191	None	replace
1442	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  *  2;  [CE]  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  *  2;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.getMaxPhonemes()  *  2;	  final    int    maxPhonemes    =    nameType.getMaxPhonemes()    /    2;    	non-compiled	[CE]  	191	None	replace
1443	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  /  2  +  1;  [CE]  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  /  2  +  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.getMaxPhonemes()  /  2  +  1;	  final    int    maxPhonemes    =    nameType.getMaxPhonemes()    /    2;    	non-compiled	[CE]  	191	None	replace
1444	[BUG]  [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  -  2;  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  -  2;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  ruleType.maxPhonemes  -  2;	  final    int    maxPhonemes    =    nameType.maxPhonemes    -    2;    	non-compiled	[CE]  	26	None	replace
1445	[BUG]  [BUGGY]  nameType,  concat)  {  this.nameType  =  nameType;  }  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  concat)  {  this.nameType  =  nameType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  concat)  {  this.nameType  =  nameType;  }	  nameType)    {    this.nameType    =    nameType;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
1446	[BUG]  [BUGGY]  this.nameType)  {  this.nameType  =  nameType;  }  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType)  {  this.nameType  =  nameType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType)  {  this.nameType  =  nameType;  }	  nameType)    {    this.nameType    =    nameType;    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
1447	[BUG]  [BUGGY]  this.nameType)  {  this.nameType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType)  {  this.nameType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType)  {  this.nameType  =  ruleType;  }	  nameType)    {    this.nameType    =    nameType;    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
1448	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  1);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  1);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  1);	  this(nameType,    ruleType,    concat,    maxPhonemes,    0);    	non-compiled	[CE]  illegal  start  of  type	180	None	replace
1449	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  0,  0);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  0,  0);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  0,  0);	  this(nameType,    ruleType,    concat,    maxPhonemes,    0);    	non-compiled	[CE]  illegal  start  of  type	180	None	replace
1450	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  0);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  0);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  0);	  this(nameType,    ruleType,    concat,    maxPhonemes,    0);    	non-compiled	[CE]  illegal  start  of  type	180	None	replace
1451	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  2);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  2);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  2);	  this(nameType,    ruleType,    concat,    maxPhonemes,    0);    	non-compiled	[CE]  illegal  start  of  type	180	None	replace
1452	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  0,  null);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  0,  null);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  0,  null);	  this(nameType,    ruleType,    concat,    maxPhonemes,    0);    	non-compiled	[CE]  illegal  start  of  type	180	None	replace
1453	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat?  super.nameType  :  NAME_PREFIXES;  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat?  super.nameType  :  NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat?  super.nameType  :  NAME_PREFIXES;	  NameType    nameType,    ruleType,    concat?    super.nameType    :    null;    	non-compiled	[CE]  <identifier>  expected	335	None	replace
1454	[BUG]  [BUGGY]  nameType,  ruleType,  concat?  super.nameType  :  null;  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  concat?  super.nameType  :  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat?  super.nameType  :  null;	  NameType    nameType,    ruleType,    concat?    super.nameType    :    null;    	non-compiled	[CE]  <identifier>  expected	335	None	replace
1455	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat?  this.nameType  :  null;  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat?  this.nameType  :  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat?  this.nameType  :  null;	  NameType    nameType,    ruleType,    concat?    super.nameType    :    null;    	non-compiled	[CE]  <identifier>  expected	335	None	replace
1456	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat?  super.nameType  :  this;  [CE]  <identifier>  expected  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat?  super.nameType  :  this;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat?  super.nameType  :  this;	  NameType    nameType,    ruleType,    concat?    super.nameType    :    null;    	non-compiled	[CE]  <identifier>  expected	335	None	replace
1457	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType  :  ruleType;  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType  :  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType  :  ruleType;	  this.nameType    =    nameType    ==    null?    nameType    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	310	None	replace
1458	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType  :  nameType;  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType  :  nameType;	  this.nameType    =    nameType    ==    null?    nameType    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	310	None	replace
1459	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType  :  ruleType;  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType  :  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType  :  ruleType;	  this.nameType    =    nameType    ==    null?    nameType    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	310	None	replace
1460	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  ruleType  :  nameType;  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  ruleType  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  ruleType  :  nameType;	  this.nameType    =    nameType    ==    null?    nameType    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	310	None	replace
1461	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType  :  concat;  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType  :  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType  :  concat;	  this.nameType    =    nameType    ==    null?    nameType    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	310	None	replace
1462	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType  :  nameType,  concat;  [CE]  illegal  start  of  type  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType  :  nameType,  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType  :  nameType,  concat;	  this.nameType    =    nameType    ==    null?    nameType    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	310	None	replace
1463	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType  :  defaultNameType;  [CE]  illegal  start  of  type  [FE]                                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType  :  defaultNameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType  :  defaultNameType;	  this.nameType    =    nameType    ==    null?    nameType    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	310	None	replace
1464	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  this);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  this);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  this);	  super(nameType,    ruleType,    concat,    null);    	non-compiled	[CE]  illegal  start  of  type	165	None	replace
1465	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  nameType,  null);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  nameType,  null);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  nameType,  null);	  super(nameType,    ruleType,    concat,    null);    	non-compiled	[CE]  illegal  start  of  type	165	None	replace
1466	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  null,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  null,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  null,  maxPhonemes);	  super(nameType,    ruleType,    concat,    null);    	non-compiled	[CE]  illegal  start  of  type	165	None	replace
1467	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  null,  false);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  null,  false);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  null,  false);	  super(nameType,    ruleType,    concat,    null);    	non-compiled	[CE]  illegal  start  of  type	165	None	replace
1468	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  this.maxPhonemes,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  this.maxPhonemes,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  this.maxPhonemes,  DEFAULT_MAX_PHONEMES);	  super(nameType,    ruleType,    concat,    this.maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	287	None	replace
1469	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  this.maxPhonemes,  this.lang);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  this.maxPhonemes,  this.lang);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  this.maxPhonemes,  this.lang);	  super(nameType,    ruleType,    concat,    this.maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	287	None	replace
1470	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  this.maxPhonemes,  0);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  this.maxPhonemes,  0);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  this.maxPhonemes,  0);	  super(nameType,    ruleType,    concat,    this.maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	287	None	replace
1471	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  this.maxPhonemes,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  this.maxPhonemes,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  this.maxPhonemes,  maxPhonemes);	  super(nameType,    ruleType,    concat,    this.maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	287	None	replace
1472	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  this.maxPhonemes,  this.numberPhonemes);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  this.maxPhonemes,  this.numberPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  this.maxPhonemes,  this.numberPhonemes);	  super(nameType,    ruleType,    concat,    this.maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	287	None	replace
1473	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  false,  this.maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  false,  this.maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  false,  this.maxPhonemes);	  super(nameType,    ruleType,    concat,    this.maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	287	None	replace
1474	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  this.maxPhonemes,  DEFAULT_MIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  this.maxPhonemes,  DEFAULT_MIN_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  this.maxPhonemes,  DEFAULT_MIN_PHONEMES);	  super(nameType,    ruleType,    concat,    this.maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	287	None	replace
1475	[BUG]  [BUGGY]  this.nameType  =  nameType.getQualifiedName(),  concat;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getQualifiedName(),  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getQualifiedName(),  concat;	  this.nameType    =    nameType.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  type	267	None	replace
1476	[BUG]  [BUGGY]  this.nameType  =  nameType.getQualifiedName()  +  1;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getQualifiedName()  +  1;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getQualifiedName()  +  1;	  this.nameType    =    nameType.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  type	267	None	replace
1477	[BUG]  [BUGGY]  this.nameType  =  ruleType.getQualifiedName();  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType.getQualifiedName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType.getQualifiedName();	  this.nameType    =    nameType.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  type	267	None	replace
1478	[BUG]  [BUGGY]  this.nameType  =  nameType.getQualifiedName(),  concat);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getQualifiedName(),  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getQualifiedName(),  concat);	  this.nameType    =    nameType.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  type	267	None	replace
1479	[BUG]  [BUGGY]  this.nameType  =  nameType.getQualifiedName()  -  1;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getQualifiedName()  -  1;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getQualifiedName()  -  1;	  this.nameType    =    nameType.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  type	267	None	replace
1480	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  +  3;  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  +  3;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes  +  3;	  final    int    maxPhonemes    =    nameType.maxPhonemes    +    1;    	non-compiled	[CE]  	25	None	replace
1481	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getName();  this.ruleType  =  nameType;  [CE]  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getName();  this.ruleType  =  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getName();  this.ruleType  =  nameType;	  NameType    nameType    =    nameType.getName();    this.ruleType    =    ruleType;    	non-compiled	[CE]  	103	None	replace
1482	[BUG]  [BUGGY]  final  NameType  nameType  =  nameType.getName();  this.ruleType  =  ruleType;  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType  =  nameType.getName();  this.ruleType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType  =  nameType.getName();  this.ruleType  =  ruleType;	  NameType    nameType    =    nameType.getName();    this.ruleType    =    ruleType;    	non-compiled	[CE]  	103	None	replace
1483	[BUG]  [BUGGY]  nameType  =  ruleType.getName();  this.ruleType  =  nameType;  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType  =  ruleType.getName();  this.ruleType  =  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType  =  ruleType.getName();  this.ruleType  =  nameType;	  NameType    nameType    =    nameType.getName();    this.ruleType    =    ruleType;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
1484	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getRawClass();  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  ruleType.getRawClass();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  ruleType.getRawClass();	  NameType    nameType    =    nameType.getName();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
1485	[BUG]  [BUGGY]  super(new  NameType(nameType),  ruleType,  concat);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(new  NameType(nameType),  ruleType,  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(nameType),  ruleType,  concat);	  super(new    NameType(nameType),    ruleType);    	non-compiled	[CE]  illegal  start  of  type	229	None	replace
1486	[BUG]  [BUGGY]  super(new  NameType(nameType),  concat);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(new  NameType(nameType),  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(nameType),  concat);	  super(new    NameType(nameType),    ruleType);    	non-compiled	[CE]  illegal  start  of  type	229	None	replace
1487	[BUG]  [BUGGY]  super(new  NameType(nameType,  ruleType));  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(new  NameType(nameType,  ruleType));  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(nameType,  ruleType));	  super(new    NameType(nameType),    ruleType);    	non-compiled	[CE]  illegal  start  of  type	229	None	replace
1488	[BUG]  [BUGGY]  super(new  NameType(nameType),  nameType,  concat);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(new  NameType(nameType),  nameType,  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(nameType),  nameType,  concat);	  super(new    NameType(nameType),    ruleType);    	non-compiled	[CE]  illegal  start  of  type	229	None	replace
1489	[BUG]  [BUGGY]  super(new  NameType(nameType),  ruleType.concat);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(new  NameType(nameType),  ruleType.concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(nameType),  ruleType.concat);	  super(new    NameType(nameType),    ruleType);    	non-compiled	[CE]  illegal  start  of  type	229	None	replace
1490	[BUG]  [BUGGY]  super(new  NameType(nameType));  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(new  NameType(nameType));  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(nameType));	  super(new    NameType(nameType),    ruleType);    	non-compiled	[CE]  illegal  start  of  type	229	None	replace
1491	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  maxPhonemes,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    0,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	176	None	replace
1492	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  nameType);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  maxPhonemes,  nameType);	  this(nameType,    ruleType,    concat,    0,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	176	None	replace
1493	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes  -  1);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes  -  1);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  maxPhonemes  -  1);	  this(nameType,    ruleType,    concat,    0,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	176	None	replace
1494	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  null);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  null);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  maxPhonemes,  null);	  this(nameType,    ruleType,    concat,    0,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	176	None	replace
1495	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName());  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getSimpleName());	  this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
1496	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(ruleType.getName(),  concat);  [CE]  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  new  NameType(ruleType.getName(),  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  new  NameType(ruleType.getName(),  concat);	  NameType    nameType    =    new    NameType(nameType.getName(),    concat);    	non-compiled	[CE]  	86	None	replace
1497	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType);  [CE]  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  ruleType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  ruleType);	  NameType    nameType    =    new    NameType(nameType.getName(),    concat);    	non-compiled	[CE]  	86	None	replace
1498	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  concat,  false);  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  concat,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  concat,  false);	  NameType    nameType    =    new    NameType(nameType.getName(),    concat);    	non-compiled	[CE]  	86	None	replace
1499	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  concat,  ruleType);  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  concat,  ruleType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  concat,  ruleType);	  NameType    nameType    =    new    NameType(nameType.getName(),    concat);    	non-compiled	[CE]  	86	None	replace
1500	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  concat,  null);  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  concat,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  concat,  null);	  NameType    nameType    =    new    NameType(nameType.getName(),    concat);    	non-compiled	[CE]  	86	None	replace
1501	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  concat,  true);  [CE]  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  concat,  true);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  concat,  true);	  NameType    nameType    =    new    NameType(nameType.getName(),    concat);    	non-compiled	[CE]  	86	None	replace
1502	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  concat,  this);  [CE]  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  concat,  this);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  concat,  this);	  NameType    nameType    =    new    NameType(nameType.getName(),    concat);    	non-compiled	[CE]  	86	None	replace
1503	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  concat,  prefix);  [CE]  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  new  NameType(nameType.getName(),  concat,  prefix);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  new  NameType(nameType.getName(),  concat,  prefix);	  NameType    nameType    =    new    NameType(nameType.getName(),    concat);    	non-compiled	[CE]  	86	None	replace
1504	[BUG]  [BUGGY]  this.nameType  =  nameType.substring(0,  nameType.length());  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.substring(0,  nameType.length());  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.substring(0,  nameType.length());	  this.nameType    =    nameType.substring(0,    nameType.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
1505	[BUG]  [BUGGY]  this.nameType  =  nameType.substring(0,  ruleType.length());  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.substring(0,  ruleType.length());  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.substring(0,  ruleType.length());	  this.nameType    =    nameType.substring(0,    nameType.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
1506	[BUG]  [BUGGY]  this.nameType  =  nameType.substring(0,  ruleType.length()  -  1);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.substring(0,  ruleType.length()  -  1);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.substring(0,  ruleType.length()  -  1);	  this.nameType    =    nameType.substring(0,    nameType.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
1507	[BUG]  [BUGGY]  this.nameType  =  nameType.substring(0,  names.length()  -  1);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.substring(0,  names.length()  -  1);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.substring(0,  names.length()  -  1);	  this.nameType    =    nameType.substring(0,    nameType.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
1508	[BUG]  [BUGGY]  This.nameType  =  nameType.substring(0,  nameType.length());  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.nameType  =  nameType.substring(0,  nameType.length());  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType  =  nameType.substring(0,  nameType.length());	  this.nameType    =    nameType.substring(0,    nameType.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
1509	[BUG]  [BUGGY]  this.nameType  =  nameType.substring(0,  title.length());  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.substring(0,  title.length());  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.substring(0,  title.length());	  this.nameType    =    nameType.substring(0,    nameType.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
1510	[BUG]  [BUGGY]  this.nameType  =  nameType.substring(0,  wordType.length());  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.substring(0,  wordType.length());  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.substring(0,  wordType.length());	  this.nameType    =    nameType.substring(0,    nameType.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
1511	[BUG]  [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  -  4;  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  -  4;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  ruleType.maxPhonemes  -  4;	  final    int    maxPhonemes    =    nameType.maxPhonemes    -    4;    	non-compiled	[CE]  	257	None	replace
1512	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  *  4;  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  *  4;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes  *  4;	  final    int    maxPhonemes    =    nameType.maxPhonemes    -    4;    	non-compiled	[CE]  	257	None	replace
1513	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  finalRules);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  finalRules);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  finalRules);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
1514	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PARAMS,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PARAMS,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PARAMS,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
1515	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  LinkedList  <  RuleType>(1);  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  LinkedList  <  RuleType>(1);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  LinkedList  <  RuleType>(1);	  NameType    nameType,    ruleType,    concat.names    =    new    LinkedList    <    RuleType>();    	non-compiled	[CE]  <identifier>  expected	337	None	replace
1516	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  LinkedList  <  RuleType>(2);  [CE]  <identifier>  expected  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  LinkedList  <  RuleType>(2);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  LinkedList  <  RuleType>(2);	  NameType    nameType,    ruleType,    concat.names    =    new    LinkedList    <    RuleType>();    	non-compiled	[CE]  <identifier>  expected	337	None	replace
1517	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat,  null;  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat,  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  concat,  null;	  NameType    nameType,    RuleType    ruleType,    concat;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
1518	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat,  false;  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat,  false;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  concat,  false;	  NameType    nameType,    RuleType    ruleType,    concat;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
1519	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType;  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType;	  NameType    nameType,    RuleType    ruleType,    concat;    	non-compiled	[CE]  	173	None	replace
1520	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES);	  this.nameType,    nameType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
1521	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  deFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  deFAULT_MAX_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  deFAULT_MAX_PHONEMES);	  this.nameType,    nameType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
1522	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES);	  this.nameType,    nameType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
1523	[BUG]  [BUGGY]  this.nameType  =  ruleType.toUpperCase();  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType.toUpperCase();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType.toUpperCase();	  this.nameType    =    nameType.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
1524	[BUG]  [BUGGY]  this.nameType  =  nameType.toUpperCase(concat);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toUpperCase(concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toUpperCase(concat);	  this.nameType    =    nameType.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
1525	[BUG]  [BUGGY]  this.nameType  =  nameType.toUpperCase(),  concat;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toUpperCase(),  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toUpperCase(),  concat;	  this.nameType    =    nameType.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
1526	[BUG]  [BUGGY]  this.nameType  =  nameType.toOtherCase();  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toOtherCase();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toOtherCase();	  this.nameType    =    nameType.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
1527	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_RANGE_PHONEMES,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_RANGE_PHONEMES,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_RANGE_PHONEMES,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_RANGE_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	317	None	replace
1528	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_RANGE_PHONEMES,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_RANGE_PHONEMES,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_RANGE_PHONEMES,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_RANGE_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	317	None	replace
1529	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_RANGE_PHONEMES);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_RANGE_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_RANGE_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_RANGE_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	317	None	replace
1530	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_RANGE_PHONEMES,  DEFAULT_PREFIXES);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_RANGE_PHONEMES,  DEFAULT_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_RANGE_PHONEMES,  DEFAULT_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_RANGE_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	317	None	replace
1531	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_RANGE_PHONEMES,  DEFAULT_MIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_RANGE_PHONEMES,  DEFAULT_MIN_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_RANGE_PHONEMES,  DEFAULT_MIN_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_RANGE_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	317	None	replace
1532	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_RANGE_PHONEMES,  DEFAULT_PREFIXES);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_RANGE_PHONEMES,  DEFAULT_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_RANGE_PHONEMES,  DEFAULT_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_RANGE_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	317	None	replace
1533	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_RANGE_PHONEMES,  DEFAULT_NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_RANGE_PHONEMES,  DEFAULT_NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_RANGE_PHONEMES,  DEFAULT_NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_RANGE_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	317	None	replace
1534	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_RANGE_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_RANGE_PHONEMES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_RANGE_PHONEMES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_RANGE_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	317	None	replace
1535	[BUG]  [BUGGY]  nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(nameType    ==    RuleType.NAME)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	254	None	replace
1536	[BUG]  [BUGGY]  @SuppressWarnings( "unchecked "))  {  if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  @SuppressWarnings( "unchecked "))  {  if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	@SuppressWarnings( "unchecked "))  {  if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(nameType    ==    RuleType.NAME)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	254	None	replace
1537	[BUG]  [BUGGY]  (final  int  maxPhonemes))  {  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  (final  int  maxPhonemes))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	(final  int  maxPhonemes))  {	  (final    boolean    maxPhonemes))    {    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
1538	[BUG]  [BUGGY]  (final  boolean  concat))  {  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  (final  boolean  concat))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	(final  boolean  concat))  {	  (final    boolean    maxPhonemes))    {    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
1539	[BUG]  [BUGGY]  (final  boolean  maxPhonemes,  concat))  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  (final  boolean  maxPhonemes,  concat))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	(final  boolean  maxPhonemes,  concat))  {	  (final    boolean    maxPhonemes))    {    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
1540	[BUG]  [BUGGY]  (boolean  maxPhonemes))  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  (boolean  maxPhonemes))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	(boolean  maxPhonemes))  {	  (final    boolean    maxPhonemes))    {    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
1541	[BUG]  [BUGGY]  (final  boolean  maxPhonemes),  concat)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  (final  boolean  maxPhonemes),  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	(final  boolean  maxPhonemes),  concat)  {	  (final    boolean    maxPhonemes))    {    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
1542	[BUG]  [BUGGY]  (final  boolean  maxPhonemes,  nameType))  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  (final  boolean  maxPhonemes,  nameType))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	(final  boolean  maxPhonemes,  nameType))  {	  (final    boolean    maxPhonemes))    {    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
1543	[BUG]  [BUGGY]  (final  boolean  maxPhonemes),  nameType)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  (final  boolean  maxPhonemes),  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	(final  boolean  maxPhonemes),  nameType)  {	  (final    boolean    maxPhonemes))    {    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
1544	[BUG]  [BUGGY]  NameType  nameType,  ruleType)  {  this.nameType  =  nameType;  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType)  {  this.nameType  =  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType)  {  this.nameType  =  nameType;	  NameType    nameType,    final    RuleType    ruleType)    {    this.nameType    =    nameType;    	non-compiled	[CE]  <identifier>  expected	326	None	replace
1545	[BUG]  [BUGGY]  NameType  nameType,  final  ruleType)  {  this.nameType  =  nameType;  }  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  final  ruleType)  {  this.nameType  =  nameType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  final  ruleType)  {  this.nameType  =  nameType;  }	  NameType    nameType,    final    RuleType    ruleType)    {    this.nameType    =    nameType;    	non-compiled	[CE]  <identifier>  expected	326	None	replace
1546	[BUG]  [BUGGY]  final  String  maxPhonemes,  boolean  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  String  maxPhonemes,  boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  String  maxPhonemes,  boolean  concat)  {	  final    char    maxPhonemes,    boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	273	None	replace
1547	[BUG]  [BUGGY]  final  String  maxPhonemes,  Boolean  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  String  maxPhonemes,  Boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  String  maxPhonemes,  Boolean  concat)  {	  final    char    maxPhonemes,    boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	273	None	replace
1548	[BUG]  [BUGGY]  final  char  maxPhonemes,  final  boolean  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  char  maxPhonemes,  final  boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  char  maxPhonemes,  final  boolean  concat)  {	  final    char    maxPhonemes,    boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	273	None	replace
1549	[BUG]  [BUGGY]  Final  String  maxPhonemes,  boolean  concat)  {  [CE]  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Final  String  maxPhonemes,  boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Final  String  maxPhonemes,  boolean  concat)  {	  final    char    maxPhonemes,    boolean    concat)    {    	non-compiled	[CE]  	273	None	replace
1550	[BUG]  [BUGGY]  final  char  maxPhonemes,  final  int  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  char  maxPhonemes,  final  int  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  char  maxPhonemes,  final  int  concat)  {	  final    char    maxPhonemes,    boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	273	None	replace
1551	[BUG]  [BUGGY]  static  final  String  maxPhonemes,  boolean  concat)  {  [CE]  modifier  static  not  allowed  here  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  static  final  String  maxPhonemes,  boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  String  maxPhonemes,  boolean  concat)  {	  final    char    maxPhonemes,    boolean    concat)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	273	None	replace
1552	[BUG]  [BUGGY]  final  Character  maxPhonemes,  boolean  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  Character  maxPhonemes,  boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  Character  maxPhonemes,  boolean  concat)  {	  final    char    maxPhonemes,    boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	273	None	replace
1553	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  null;  }  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  null;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  null;  }	  NameType    nameType)    {    this.nameType    =    ruleType;    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
1554	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  type;  }  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  type;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  type;  }	  NameType    nameType)    {    this.nameType    =    ruleType;    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
1555	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_PAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	212	None	replace
1556	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  0);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  0);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  0);	  this(nameType,    ruleType,    concat,    DEFAULT_PAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	212	None	replace
1557	[BUG]  [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  ruleType.getName()  :  null;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  ruleType.getName()  :  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  ruleType.getName()  :  null;	  this.nameType    =    nameType!=    RuleType.NAME_PREFIXES?    nameType.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	308	None	replace
1558	[BUG]  [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.getName()  :  ruleType.getName();  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.getName()  :  ruleType.getName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.getName()  :  ruleType.getName();	  this.nameType    =    nameType!=    RuleType.NAME_PREFIXES?    nameType.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	308	None	replace
1559	[BUG]  [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.getName()  :  ruleType;  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.getName()  :  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.getName()  :  ruleType;	  this.nameType    =    nameType!=    RuleType.NAME_PREFIXES?    nameType.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	308	None	replace
1560	[BUG]  [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  *  2;  [CE]  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  *  2;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  ruleType.maxPhonemes  *  2;	  final    int    maxPhonemes    =    ruleType.maxPhonemes;    	non-compiled	[CE]  	23	None	replace
1561	[BUG]  [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  -  3;  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  -  3;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  ruleType.maxPhonemes  -  3;	  final    int    maxPhonemes    =    ruleType.maxPhonemes;    	non-compiled	[CE]  	23	None	replace
1562	[BUG]  [BUGGY]  this.nameType  =  ruleType.getReferenceName(),  concat;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType.getReferenceName(),  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType.getReferenceName(),  concat;	  this.nameType    =    nameType.getReferenceName(),    concat;    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
1563	[BUG]  [BUGGY]  this.nameType  =  nameType.getReferenceName(),  concat,  false;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getReferenceName(),  concat,  false;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getReferenceName(),  concat,  false;	  this.nameType    =    nameType.getReferenceName(),    concat;    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
1564	[BUG]  [BUGGY]  this.nameType  =  nameType.getReferenceName(),  concat,  DEFAULT_MAX_PHONEMES;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getReferenceName(),  concat,  DEFAULT_MAX_PHONEMES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getReferenceName(),  concat,  DEFAULT_MAX_PHONEMES;	  this.nameType    =    nameType.getReferenceName(),    concat;    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
1565	[BUG]  [BUGGY]  this.nameType  =  nameType.getReferenceName(),  concat,  false);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getReferenceName(),  concat,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getReferenceName(),  concat,  false);	  this.nameType    =    nameType.getReferenceName(),    concat;    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
1566	[BUG]  [BUGGY]  this.nameType  =  nameType.getReferenceName(),  concat,  null;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getReferenceName(),  concat,  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getReferenceName(),  concat,  null;	  this.nameType    =    nameType.getReferenceName(),    concat;    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
1567	[BUG]  [BUGGY]  this.nameType  =  nameType.getReferenceName(),  concat,  true;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getReferenceName(),  concat,  true;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getReferenceName(),  concat,  true;	  this.nameType    =    nameType.getReferenceName(),    concat;    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
1568	[BUG]  [BUGGY]  this.nameType  =  nameType.getReferenceName(),  Concat;  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getReferenceName(),  Concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getReferenceName(),  Concat;	  this.nameType    =    nameType.getReferenceName(),    concat;    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
1569	[BUG]  [BUGGY]  this.phonemeBuilder,  nameType,  ruleType,  concat)  {  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder,  nameType,  ruleType,  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder,  nameType,  ruleType,  concat)  {	  this.phonemeBuilder,    nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
1570	[BUG]  [BUGGY]  this.phonemeBuilder,  nameType,  concat,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder,  nameType,  concat,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder,  nameType,  concat,  maxPhonemes)  {	  this.phonemeBuilder,    nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
1571	[BUG]  [BUGGY]  this.phonemeBuilder,  nameType,  ruleType,  concat,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder,  nameType,  ruleType,  concat,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder,  nameType,  ruleType,  concat,  maxPhonemes)  {	  this.phonemeBuilder,    nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
1572	[BUG]  [BUGGY]  this.phonemeBuilder,  ruleType,  concat,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder,  ruleType,  concat,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder,  ruleType,  concat,  maxPhonemes)  {	  this.phonemeBuilder,    nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
1573	[BUG]  [BUGGY]  this.phonemeBuilder,  nameType,  concat,  ruleType,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder,  nameType,  concat,  ruleType,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder,  nameType,  concat,  ruleType,  maxPhonemes)  {	  this.phonemeBuilder,    nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
1574	[BUG]  [BUGGY]  this.phonemeBuilder,  nameType,  null,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder,  nameType,  null,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder,  nameType,  null,  maxPhonemes)  {	  this.phonemeBuilder,    nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
1575	[BUG]  [BUGGY]  this.phonemeBuilder,  nameType,  functionType,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder,  nameType,  functionType,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder,  nameType,  functionType,  maxPhonemes)  {	  this.phonemeBuilder,    nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
1576	[BUG]  [BUGGY]  This.phonemeBuilder,  nameType,  ruleType,  concat)  {  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.phonemeBuilder,  nameType,  ruleType,  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.phonemeBuilder,  nameType,  ruleType,  concat)  {	  this.phonemeBuilder,    nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  <identifier>  expected	109	None	replace
1577	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_PREFIXES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	214	None	replace
1578	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_PREFIXES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	214	None	replace
1579	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MILLIS,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MILLIS,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MILLIS,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_PREFIXES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	214	None	replace
1580	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_MIN_PHONEMES,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_MIN_PHONEMES,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_MIN_PHONEMES,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_PREFIXES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	214	None	replace
1581	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  NAME_PREFIXES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_PREFIXES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	214	None	replace
1582	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  Integer  minPhonemes)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  Integer  minPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  Integer  minPhonemes)  {	  final    int    maxPhonemes,    final    Integer    concat)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	45	None	replace
1583	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  final  Integer  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  final  Integer  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  final  Integer  concat)  {	  final    int    maxPhonemes,    final    Integer    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	45	None	replace
1584	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  Integer  i)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  Integer  i)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  Integer  i)  {	  final    int    maxPhonemes,    final    Integer    concat)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	45	None	replace
1585	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  Integer  ruleType)  {  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  Integer  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  Integer  ruleType)  {	  final    int    maxPhonemes,    final    Integer    concat)    {    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine	45	None	replace
1586	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  Integer  count,  final  Integer  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  Integer  count,  final  Integer  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  Integer  count,  final  Integer  concat)  {	  final    int    maxPhonemes,    final    Integer    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	45	None	replace
1587	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  Integer  lang)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  Integer  lang)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  Integer  lang)  {	  final    int    maxPhonemes,    final    Integer    concat)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	45	None	replace
1588	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  Integer  count)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  Integer  count)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  Integer  count)  {	  final    int    maxPhonemes,    final    Integer    concat)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	45	None	replace
1589	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ")  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ")  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ")	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(type    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
1590	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(type    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
1591	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "] ");  }  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "] ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "] ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(type    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
1592	[BUG]  [BUGGY]  final  int  maxPhonemes,  Integer.MAX_VALUE);  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  Integer.MAX_VALUE);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  Integer.MAX_VALUE);	  final    int    maxPhonemes,    Integer.MAX_VALUE)    {    	non-compiled	[CE]  <identifier>  expected	244	None	replace
1593	[BUG]  [BUGGY]  Locale.getDefault())  {  this.nameType  =  nameType;  }  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Locale.getDefault())  {  this.nameType  =  nameType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Locale.getDefault())  {  this.nameType  =  nameType;  }	  NameType    nameType)    {    this.nameType    =    ruleType;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
1594	[BUG]  [BUGGY]  Preconditions.checkState(nameType!=  RuleType.NAME_PREFIXES);  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Preconditions.checkState(nameType!=  RuleType.NAME_PREFIXES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Preconditions.checkState(nameType!=  RuleType.NAME_PREFIXES);	  NameType    nameType)    {    this.nameType    =    ruleType;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
1595	[BUG]  [BUGGY]  Preconditions.checkState(nameType  ==  RuleType.NAME_PREFIXES);  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Preconditions.checkState(nameType  ==  RuleType.NAME_PREFIXES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Preconditions.checkState(nameType  ==  RuleType.NAME_PREFIXES);	  NameType    nameType)    {    this.nameType    =    ruleType;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
1596	[BUG]  [BUGGY]  Preconditions.checkNotNull(nameType);  this.nameType  =  ruleType;  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Preconditions.checkNotNull(nameType);  this.nameType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Preconditions.checkNotNull(nameType);  this.nameType  =  ruleType;	  NameType    nameType)    {    this.nameType    =    ruleType;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
1597	[BUG]  [BUGGY]  this.lang,  nameType,  concat,  ruleType,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.lang,  nameType,  concat,  ruleType,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.lang,  nameType,  concat,  ruleType,  maxPhonemes)  {	  this.lang,    nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
1598	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  0,  defULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  concat,  0,  defULT_MAX_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  0,  defULT_MAX_PHONEMES);	  this.nameType,    nameType,    concat,    defULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	322	None	replace
1599	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes,  false)  {  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes,  false)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes,  false)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    false)    {    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
1600	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  false)  {  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  false)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  false)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    false)    {    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
1601	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  maxPhonemes,  false)  {  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  maxPhonemes,  false)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  maxPhonemes,  false)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    false)    {    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
1602	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  maxPhonemes,  false)  {  [CE]  illegal  start  of  type  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  maxPhonemes,  false)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  maxPhonemes,  false)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    false)    {    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
1603	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getNameType(concat);  [CE]  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getNameType(concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getNameType(concat);	  NameType    nameType    =    ruleType.getNameType();    	non-compiled	[CE]  	237	None	replace
1604	[BUG]  [BUGGY]  super(nameType.getName(),  ruleType,  concat,  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType.getName(),  ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType.getName(),  ruleType,  concat,	  super(nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
1605	[BUG]  [BUGGY]  super(new  NameType(nameType),  ruleType,  concat,  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(new  NameType(nameType),  ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(nameType),  ruleType,  concat,	  super(nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
1606	[BUG]  [BUGGY]  Super(nameType,  ruleType,  concat,  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Super(nameType,  ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Super(nameType,  ruleType,  concat,	  super(nameType,    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	10	None	replace
1607	[BUG]  [BUGGY]  super(new  NameType(nameType,  ruleType,  concat),  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(new  NameType(nameType,  ruleType,  concat),  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(nameType,  ruleType,  concat),	  super(nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
1608	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  false,  null);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  false,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  false,  null);	  this(nameType,    ruleType,    concat,    false,    null);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
1609	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  false,  null);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  false,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  false,  null);	  this(nameType,    ruleType,    concat,    false,    null);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
1610	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  true);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  null,  true);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null,  true);	  this(nameType,    ruleType,    concat,    false,    null);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
1611	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(this.nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(this.nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(this.nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;	  this.phonemeBuilder    =    PhonemeBuilder.instance(nameType,    concat);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	225	None	replace
1612	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
1613	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  finalRules);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  finalRules);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  finalRules);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
1614	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
1615	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  int  maxPhonemes;  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  int  maxPhonemes;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  int  maxPhonemes;	  NameType    nameType,    ruleType,    concat,    this.maxPhonemes,    	non-compiled	[CE]  <identifier>  expected	37	None	replace
1616	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  int  maxPhonemes  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  int  maxPhonemes  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  int  maxPhonemes	  NameType    nameType,    ruleType,    concat,    this.maxPhonemes,    	non-compiled	[CE]  <identifier>  expected	37	None	replace
1617	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  finalRules;  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  finalRules;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  finalRules;	  NameType    nameType,    ruleType,    concat,    this.maxPhonemes,    	non-compiled	[CE]  <identifier>  expected	37	None	replace
1618	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  0,  DEFAULT_PHONEMES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  concat,  0,  DEFAULT_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  0,  DEFAULT_PHONEMES);	  this.nameType,    nameType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	247	None	replace
1619	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  DEFAULT_PREFIXES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  concat,  DEFAULT_PREFIXES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  DEFAULT_PREFIXES);	  this.nameType,    nameType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	247	None	replace
1620	[BUG]  [BUGGY]  nameType,  concat,  DEFAULT_PHONEMES);  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  concat,  DEFAULT_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  concat,  DEFAULT_PHONEMES);	  this.nameType,    nameType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  <identifier>  expected	247	None	replace
1621	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.restrictByNotNullOrUndefined();  [CE]  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.restrictByNotNullOrUndefined();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.restrictByNotNullOrUndefined();	  NameType    nameType    =    ruleType.toNameType();    	non-compiled	[CE]  	193	None	replace
1622	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.newNameType();  [CE]  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.newNameType();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.newNameType();	  NameType    nameType    =    ruleType.toNameType();    	non-compiled	[CE]  	193	None	replace
1623	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  Boolean  ruleType)  {  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  Boolean  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  Boolean  ruleType)  {	  final    boolean    maxPhonemes,    String    nameType)    {    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine	198	None	replace
1624	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  null);  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  null);	  NameType    nameType,    RuleType    ruleType,    Concat);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
1625	[BUG]  [BUGGY]  this.nameType  =  nameType.getReferenceName()  -  1;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getReferenceName()  -  1;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getReferenceName()  -  1;	  this.nameType    =    nameType.getReferenceName()    +    1;    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
1626	[BUG]  [BUGGY]  this.nameType  =  nameType.getName()  -  1;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getName()  -  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getName()  -  1;	  this.nameType    =    nameType.getName()    +    1;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
1627	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  NAME_PREFIXES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.getName()  :  NAME_PREFIXES;	  this.nameType    =    nameType    ==    null?    nameType.getName()    :   "null   ";    	non-compiled	[CE]  illegal  start  of  type	300	None	replace
1628	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  : "null ",  nameType);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  : "null ",  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.getName()  : "null ",  nameType);	  this.nameType    =    nameType    ==    null?    nameType.getName()    :   "null   ";    	non-compiled	[CE]  illegal  start  of  type	300	None	replace
1629	[BUG]  [BUGGY]  super(nameType,  ruleType.toString());  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType.toString());  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.toString());	  this.nameType    =    ruleType.toString();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
1630	[BUG]  [BUGGY]  this.nameType  =  nameType.toPath();  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toPath();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toPath();	  this.nameType    =    ruleType.toString();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
1631	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  *  1;  [CE]  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  *  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.getMaxPhonemes()  *  1;	  final    int    maxPhonemes    =    nameType.getMaxPhonemes()    -    1;    	non-compiled	[CE]  	187	None	replace
1632	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  DEFAULT_PREFIXES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  DEFAULT_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  DEFAULT_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_PAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	212	None	replace
1633	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  maxPhonemes);	  this(nameType,    ruleType,    concat,    NAME_PREFIXES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	220	None	replace
1634	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAM_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAM_PHONEMES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARAM_PHONEMES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    NAME_PREFIXES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	220	None	replace
1635	[BUG]  [BUGGY]  this.maxPhonemes  =  maxPhonemes  -  nameType.getMaxPhonemes();  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  maxPhonemes  -  nameType.getMaxPhonemes();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  maxPhonemes  -  nameType.getMaxPhonemes();	  this.maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  illegal  start  of  type	188	None	replace
1636	[BUG]  [BUGGY]  this.maxPhonemes  =  nameType.getMaxPhonemes()  -  1;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  nameType.getMaxPhonemes()  -  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  nameType.getMaxPhonemes()  -  1;	  this.maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  illegal  start  of  type	188	None	replace
1637	[BUG]  [BUGGY]  this.maxPhonemes  =  maxPhonemes  *  nameType.getMaxPhonemes();  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  maxPhonemes  *  nameType.getMaxPhonemes();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  maxPhonemes  *  nameType.getMaxPhonemes();	  this.maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  illegal  start  of  type	188	None	replace
1638	[BUG]  [BUGGY]  static  final  boolean  maxPhonemes,  RuleType  ruleType)  {  [CE]  modifier  static  not  allowed  here  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  static  final  boolean  maxPhonemes,  RuleType  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  boolean  maxPhonemes,  RuleType  ruleType)  {	  final    boolean    maxPhonemes,    RuleType    ruleType)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	200	None	replace
1639	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  RuleType  rulesType)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  RuleType  rulesType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  RuleType  rulesType)  {	  final    boolean    maxPhonemes,    RuleType    ruleType)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	200	None	replace
1640	[BUG]  [BUGGY]  Final  boolean  maxPhonemes,  RuleType  ruleType)  {  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Final  boolean  maxPhonemes,  RuleType  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Final  boolean  maxPhonemes,  RuleType  ruleType)  {	  final    boolean    maxPhonemes,    RuleType    ruleType)    {    	non-compiled	[CE]  <identifier>  expected	200	None	replace
1641	[BUG]  [BUGGY]  this.phonemeBuilder  =  Locale.instance(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Locale.instance(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Locale.instance(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;	  this.phonemeBuilder    =    Locale.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	282	None	replace
1642	[BUG]  [BUGGY]  this.phonemeBuilder  =  Locale.instance(nameType,  nameType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Locale.instance(nameType,  nameType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Locale.instance(nameType,  nameType);  this.maxPhonemes  =  maxPhonemes;	  this.phonemeBuilder    =    Locale.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	282	None	replace
1643	[BUG]  [BUGGY]  this.phonemeBuilder  =  Locale.instance(nameType);  this.maxPhonemes  =  alphaPhonemes;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Locale.instance(nameType);  this.maxPhonemes  =  alphaPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Locale.instance(nameType);  this.maxPhonemes  =  alphaPhonemes;	  this.phonemeBuilder    =    Locale.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	282	None	replace
1644	[BUG]  [BUGGY]  Final  int  maxPhonemes  =  nameType.getMaxPhonemes();  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Final  int  maxPhonemes  =  nameType.getMaxPhonemes();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Final  int  maxPhonemes  =  nameType.getMaxPhonemes();	  final    int    maxPhonemes    =    nameType.getMaxPhonemes()    -    2;    	non-compiled	[CE]  <identifier>  expected	190	None	replace
1645	[BUG]  [BUGGY]  this.nameType  =  nameType.toString(),  concat  +  1;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toString(),  concat  +  1;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toString(),  concat  +  1;	  this.nameType    =    nameType.toString(),    concat;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
1646	[BUG]  [BUGGY]  this.nameType  =  nameType.toString(),  Concat;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toString(),  Concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toString(),  Concat;	  this.nameType    =    nameType.toString(),    concat;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
1647	[BUG]  [BUGGY]  this.nameType  =  nameType.toString(),  ruleType;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toString(),  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toString(),  ruleType;	  this.nameType    =    nameType.toString(),    concat;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
1648	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat,  0);  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat,  0);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  concat,  0);	  NameType    nameType,    RuleType    ruleType,    concat,    null);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
1649	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  finalRules,  maxPhonemes,  NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  finalRules,  maxPhonemes,  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  finalRules,  maxPhonemes,  NAME_PREFIXES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
1650	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_NAME_PREFIXES,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_NAME_PREFIXES,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_NAME_PREFIXES,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
1651	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  DEFAULT_MIN_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  DEFAULT_MIN_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  DEFAULT_MIN_PHONEMES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
1652	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  0,  maxPhonemes,  NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  0,  maxPhonemes,  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  0,  maxPhonemes,  NAME_PREFIXES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
1653	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  : ",null ";  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  : ",null ";  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getName()  : ",null ";	  this.nameType    =    nameType!=    null?    nameType.getName()    :   "null   ";    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
1654	[BUG]  [BUGGY]  this.nameType  =  ruleType  instanceof  NameType?  nameType  :  nameType;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType  instanceof  NameType?  nameType  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType  instanceof  NameType?  nameType  :  nameType;	  this.nameType    =    nameType    instanceof    NameType?    nameType    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
1655	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  nameType  :  null;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  nameType  :  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  NameType?  nameType  :  null;	  this.nameType    =    nameType    instanceof    NameType?    nameType    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
1656	[BUG]  [BUGGY]  NameType  nameType,  ruleType.getNAME_PREFIXES());  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.getNAME_PREFIXES());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.getNAME_PREFIXES());	  NameType    nameType,    ruleType.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
1657	[BUG]  [BUGGY]  NameType  nameType,  ruleType.getLanguage());  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.getLanguage());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.getLanguage());	  NameType    nameType,    ruleType.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
1658	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  Boolean  concat);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  Boolean  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  Boolean  concat);	  NameType    nameType,    RuleType    ruleType,    boolean    concat);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
1659	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  null,  boolean  concat);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  null,  boolean  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  null,  boolean  concat);	  NameType    nameType,    RuleType    ruleType,    boolean    concat);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
1660	[BUG]  [BUGGY]  final  int  maxPhonemes,  Boolean  ruleType)  {  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  Boolean  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  Boolean  ruleType)  {	  final    int    maxPhonemes,    Boolean    concat)    {    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine	274	None	replace
1661	[BUG]  [BUGGY]  final  int  maxPhonemes,  Integer.toString(concat))  {  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  Integer.toString(concat))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  Integer.toString(concat))  {	  final    int    maxPhonemes,    Boolean    concat)    {    	non-compiled	[CE]  <identifier>  expected	274	None	replace
1662	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_PREFIXES);  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
1663	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  false);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  NAME_PREFIXES,  false);	  this(nameType,    ruleType,    concat,    DEFAULT_PHONEMES,    false);    	non-compiled	[CE]  illegal  start  of  type	259	None	replace
1664	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  false);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  false);	  this(nameType,    ruleType,    concat,    DEFAULT_PHONEMES,    false);    	non-compiled	[CE]  illegal  start  of  type	259	None	replace
1665	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  nameType.getName());  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  nameType.getName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getName()  :  nameType.getName());	  this.nameType    =    nameType.getName());    	non-compiled	[CE]  illegal  start  of  type	210	None	replace
1666	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  nameType.getName());  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  nameType.getName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.getName()  :  nameType.getName());	  this.nameType    =    nameType.getName());    	non-compiled	[CE]  illegal  start  of  type	210	None	replace
1667	[BUG]  [BUGGY]  Set  <  RuleType>  finalRules  =  Sets.newHashSet();  [CE]  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Set  <  RuleType>  finalRules  =  Sets.newHashSet();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Set  <  RuleType>  finalRules  =  Sets.newHashSet();	  setRuleType(nameType,    ruleType);    	non-compiled	[CE]  	158	None	replace
1668	[BUG]  [BUGGY]  Set  <  RuleType>  finalRules  =  Sets.newHashSet();  this.nameType  =  nameType;  [CE]  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Set  <  RuleType>  finalRules  =  Sets.newHashSet();  this.nameType  =  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Set  <  RuleType>  finalRules  =  Sets.newHashSet();  this.nameType  =  nameType;	  setRuleType(nameType,    ruleType);    	non-compiled	[CE]  	158	None	replace
1669	[BUG]  [BUGGY]  Set  <  RuleType>  finalRules  =  Sets.newHashSet();  setRuleType(nameType,  ruleType);  [CE]  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Set  <  RuleType>  finalRules  =  Sets.newHashSet();  setRuleType(nameType,  ruleType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Set  <  RuleType>  finalRules  =  Sets.newHashSet();  setRuleType(nameType,  ruleType);	  setRuleType(nameType,    ruleType);    	non-compiled	[CE]  	158	None	replace
1670	[BUG]  [BUGGY]  Set  <  RuleType>  finalRules  =  Sets.newHashSet(concat);  [CE]  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Set  <  RuleType>  finalRules  =  Sets.newHashSet(concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Set  <  RuleType>  finalRules  =  Sets.newHashSet(concat);	  setRuleType(nameType,    ruleType);    	non-compiled	[CE]  	158	None	replace
1671	[BUG]  [BUGGY]  Set  <  RuleType>  finalRules  =  Sets.newHashSet(concat);  setRuleType(nameType,  ruleType);  [CE]  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Set  <  RuleType>  finalRules  =  Sets.newHashSet(concat);  setRuleType(nameType,  ruleType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Set  <  RuleType>  finalRules  =  Sets.newHashSet(concat);  setRuleType(nameType,  ruleType);	  setRuleType(nameType,    ruleType);    	non-compiled	[CE]  	158	None	replace
1672	[BUG]  [BUGGY]  Set  <  RuleType>  finalRules  =  Sets.newHashSet();  setRuleType(ruleType,  nameType);  [CE]  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Set  <  RuleType>  finalRules  =  Sets.newHashSet();  setRuleType(ruleType,  nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Set  <  RuleType>  finalRules  =  Sets.newHashSet();  setRuleType(ruleType,  nameType);	  setRuleType(nameType,    ruleType);    	non-compiled	[CE]  	158	None	replace
1673	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.toString()  :  ruleType;  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.toString()  :  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType.toString()  :  ruleType;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType.toString()    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	311	None	replace
1674	[BUG]  [BUGGY]  this.nameType  =  ruleType  ==  RuleType.NAME_PREFIXES?  nameType.toString()  :  nameType;  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType  ==  RuleType.NAME_PREFIXES?  nameType.toString()  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType  ==  RuleType.NAME_PREFIXES?  nameType.toString()  :  nameType;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType.toString()    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	311	None	replace
1675	[BUG]  [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.toString()  :  ruleType;  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.toString()  :  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.toString()  :  ruleType;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType.toString()    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	311	None	replace
1676	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  defULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  defULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  defULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    0,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	176	None	replace
1677	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  1,  0,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  1,  0,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  1,  0,  maxPhonemes);	  this(nameType,    ruleType,    concat,    0,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	176	None	replace
1678	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  nameType.maxPhonemes);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  nameType.maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  nameType.maxPhonemes);	  this(nameType,    ruleType,    concat,    0,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	176	None	replace
1679	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes  -  2);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes  -  2);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  maxPhonemes  -  2);	  this(nameType,    ruleType,    concat,    0,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	176	None	replace
1680	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getRuleTypes());  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getRuleTypes());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getRuleTypes());	  this.ruleType    =    new    RuleType(nameType.getName(),    ruleType.getParameterTypes());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
1681	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getRules());  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getRules());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getRules());	  this.ruleType    =    new    RuleType(nameType.getName(),    ruleType.getParameterTypes());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
1682	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getDeclarations());  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getDeclarations());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getDeclarations());	  this.ruleType    =    new    RuleType(nameType.getName(),    ruleType.getParameterTypes());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
1683	[BUG]  [BUGGY]  NameType  nameType;  ruleType.nameType,  concat,  [CE]  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType;  ruleType.nameType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType;  ruleType.nameType,  concat,	  NameType    nameType,    ruleType.nameType,    concat,    	non-compiled	[CE]  	38	None	replace
1684	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.nameType;  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.nameType;	  NameType    nameType,    ruleType.nameType,    concat,    	non-compiled	[CE]  	38	None	replace
1685	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.nameType,  concat,  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.nameType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.nameType,  concat,	  NameType    nameType,    ruleType.nameType,    concat,    	non-compiled	[CE]  	38	None	replace
1686	[BUG]  [BUGGY]  this.minimumPhonemes  =  alphaPhonemes;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.minimumPhonemes  =  alphaPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.minimumPhonemes  =  alphaPhonemes;	  this.minimumPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	284	None	replace
1687	[BUG]  [BUGGY]  if(nameType!=  null)  {  Preconditions.checkState(nameType!=  null);  this.nameType  =  nameType;  }  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType!=  null)  {  Preconditions.checkState(nameType!=  null);  this.nameType  =  nameType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  null)  {  Preconditions.checkState(nameType!=  null);  this.nameType  =  nameType;  }	  Preconditions.checkState(nameType!=    null);    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	325	None	replace
1688	[BUG]  [BUGGY]  Preconditions.checkState(this.nameType!=  null);  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Preconditions.checkState(this.nameType!=  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Preconditions.checkState(this.nameType!=  null);	  Preconditions.checkState(nameType!=    null);    this.nameType    =    nameType;    	non-compiled	[CE]  <identifier>  expected	325	None	replace
1689	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  final  Map  <  NAME_PREFIXES)  {  [CE]  >  expected  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  final  Map  <  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  final  Map  <  NAME_PREFIXES)  {	  final    boolean    maxPhonemes,    final    Map    NAME_PREFIXES)    {    	non-compiled	[CE]  >  expected	269	None	replace
1690	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  final  Map  NAME_PREFIXES,  deFAULT_MAX_PHONEMES)  {  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  final  Map  NAME_PREFIXES,  deFAULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  final  Map  NAME_PREFIXES,  deFAULT_MAX_PHONEMES)  {	  final    boolean    maxPhonemes,    final    Map    NAME_PREFIXES)    {    	non-compiled	[CE]  <identifier>  expected	269	None	replace
1691	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  final  Map  <  Name,Object>  NAME_PREFIXES)  {  [CE]  cannot  find  symbol  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  final  Map  <  Name,Object>  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  final  Map  <  Name,Object>  NAME_PREFIXES)  {	  final    boolean    maxPhonemes,    final    Map    NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol	269	None	replace
1692	[BUG]  [BUGGY]  this.nameType  =  ruleType  ==  null?  nameType.toString()  :  nameType.toString();  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType  ==  null?  nameType.toString()  :  nameType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType  ==  null?  nameType.toString()  :  nameType.toString();	  this.nameType    =    nameType    ==    null?    nameType.toString()    :    nameType.toString();    	non-compiled	[CE]  illegal  start  of  type	301	None	replace
1693	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  MAX_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  MAX_PHONEMES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  MAX_PHONEMES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    MAX_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
1694	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  MAX_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  MAX_PHONEMES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  MAX_PHONEMES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    MAX_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
1695	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  0,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  0,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  0,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    MAX_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
1696	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  nameType.length)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  nameType.length)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  nameType.length)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0)    {    	non-compiled	[CE]  illegal  start  of  type	296	None	replace
1697	[BUG]  [BUGGY]  nameType,  concat,  DEFAULT_MAX_PHONEMES);  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  concat,  DEFAULT_MAX_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  concat,  DEFAULT_MAX_PHONEMES);	  this.nameType,    nameType,    concat,    NAME_PREFIXES);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
1698	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  DEFAULT_PARAM_PHONEMES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  concat,  DEFAULT_PARAM_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  DEFAULT_PARAM_PHONEMES);	  this.nameType,    nameType,    concat,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
1699	[BUG]  [BUGGY]  final  int  maxPhonemes  =  ruleType.getmaxPhonemes();  [CE]  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  ruleType.getmaxPhonemes();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  ruleType.getmaxPhonemes();	  final    int    maxPhonemes    =    ruleType.getMinPhonemes();    	non-compiled	[CE]  	192	None	replace
1700	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.getMeanPhonemes();  [CE]  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.getMeanPhonemes();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.getMeanPhonemes();	  final    int    maxPhonemes    =    ruleType.getMinPhonemes();    	non-compiled	[CE]  	192	None	replace
1701	[BUG]  [BUGGY]  this.nameType  =  ruleType  ==  RuleType.NAME_PREFIXES?  nameType.getName()  :  nameType;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType  ==  RuleType.NAME_PREFIXES?  nameType.getName()  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType  ==  RuleType.NAME_PREFIXES?  nameType.getName()  :  nameType;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType.getName()    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	309	None	replace
1702	[BUG]  [BUGGY]  if(nameType!=  RuleType.NAME_PREFIXES  ||  nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType!=  RuleType.NAME_PREFIXES  ||  nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  RuleType.NAME_PREFIXES  ||  nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }	  if(nameType    ==    RuleType.NAME_PREFIXES)    {    super(nameType);    this.ruleType    =    ruleType;    }    	non-compiled	[CE]  illegal  start  of  type	252	None	replace
1703	[BUG]  [BUGGY]  NameType  nameType  =  nameType;  this.ruleType  =  ruleType;  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  nameType;  this.ruleType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  nameType;  this.ruleType  =  ruleType;	  if(nameType    ==    RuleType.NAME_PREFIXES)    {    super(nameType);    this.ruleType    =    ruleType;    }    	non-compiled	[CE]  	252	None	replace
1704	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES  ||  nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES  ||  nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES  ||  nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(nameType    ==    RuleType.NAME_PREFIXES)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	250	None	replace
1705	[BUG]  [BUGGY]  if(nameType!=  RuleType.NAME_PREFIXES  ||  nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType!=  RuleType.NAME_PREFIXES  ||  nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  RuleType.NAME_PREFIXES  ||  nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(nameType    ==    RuleType.NAME_PREFIXES)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	250	None	replace
1706	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(nameType    ==    RuleType.NAME_PREFIXES)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	250	None	replace
1707	[BUG]  [BUGGY]  if(nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(nameType    ==    RuleType.NAME_PREFIXES)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	250	None	replace
1708	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getNAME_PREFIXES());  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getNAME_PREFIXES());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getNAME_PREFIXES());	  this.ruleType    =    new    RuleType(nameType.getSimpleName(),    ruleType.getSimpleName());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
1709	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName(),  concat);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName(),  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getSimpleName(),  concat);	  this.ruleType    =    new    RuleType(nameType.getSimpleName(),    ruleType.getSimpleName());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
1710	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getDeclaringClass());  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getDeclaringClass());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getDeclaringClass());	  this.ruleType    =    new    RuleType(nameType.getSimpleName(),    ruleType.getSimpleName());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
1711	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  nameType);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  nameType);	  this(nameType,    ruleType,    concat,    0,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
1712	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  4);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  4);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  4);	  this(nameType,    ruleType,    concat,    0,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
1713	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  nameType);  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  nameType);	  this.nameType,    nameType,    concat,    ruleType);    	non-compiled	[CE]  <identifier>  expected	321	None	replace
1714	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.toString(),  concat);  [CE]  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  new  NameType(nameType.toString(),  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  new  NameType(nameType.toString(),  concat);	  NameType    nameType    =    new    NameType(nameType.getName(),    concat);    	non-compiled	[CE]  	86	None	replace
1715	[BUG]  [BUGGY]  this.nameType  =  ruleType  ==  RuleType.NAME_PREFIXES?  nameType.getName()  :  null;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType  ==  RuleType.NAME_PREFIXES?  nameType.getName()  :  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType  ==  RuleType.NAME_PREFIXES?  nameType.getName()  :  null;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	307	None	replace
1716	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getRawClass(),  ruleType.getLanguage());  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getRawClass(),  ruleType.getLanguage());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getRawClass(),  ruleType.getLanguage());	  this.ruleType    =    new    RuleType(nameType.getRawClass(),    ruleType.getRawClass());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
1717	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(  ruleType.getRawClass(),  nameType.getRawClass());  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(  ruleType.getRawClass(),  nameType.getRawClass());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(  ruleType.getRawClass(),  nameType.getRawClass());	  this.ruleType    =    new    RuleType(nameType.getRawClass(),    ruleType.getRawClass());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
1718	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getRules(),  ruleType.getRawClass());  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getRules(),  ruleType.getRawClass());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getRules(),  ruleType.getRawClass());	  this.ruleType    =    new    RuleType(nameType.getRawClass(),    ruleType.getRawClass());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
1719	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getNameType()  :  DEFAULT_MAX_PHONEMES;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getNameType()  :  DEFAULT_MAX_PHONEMES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getNameType()  :  DEFAULT_MAX_PHONEMES;	  this.nameType    =    nameType.getNameType();    	non-compiled	[CE]  illegal  start  of  type	240	None	replace
1720	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getNameType()  :  NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getNameType()  :  NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getNameType()  :  NAME_PREFIXES;	  this.nameType    =    nameType.getNameType();    	non-compiled	[CE]  illegal  start  of  type	240	None	replace
1721	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getNameType()  :  DEFAULT_NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getNameType()  :  DEFAULT_NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getNameType()  :  DEFAULT_NAME_PREFIXES;	  this.nameType    =    nameType.getNameType();    	non-compiled	[CE]  illegal  start  of  type	240	None	replace
1722	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getNameType()  :  nameType.getNameType();  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getNameType()  :  nameType.getNameType();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getNameType()  :  nameType.getNameType();	  this.nameType    =    nameType.getNameType();    	non-compiled	[CE]  illegal  start  of  type	240	None	replace
1723	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getNameType()  :  nameType.getNameType();  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getNameType()  :  nameType.getNameType();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.getNameType()  :  nameType.getNameType();	  this.nameType    =    nameType.getNameType();    	non-compiled	[CE]  illegal  start  of  type	240	None	replace
1724	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getNameType();  this.nameType  =  nameType;  [CE]  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getNameType();  this.nameType  =  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getNameType();  this.nameType  =  nameType;	  NameType    nameType,    final    RuleType    ruleType)    {    this.nameType    =    nameType;    }    	non-compiled	[CE]  	324	None	replace
1725	[BUG]  [BUGGY]  this.nameType  =  NameType.NAME_PREFIXES;  this.ruleType  =  ruleType;  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  NameType.NAME_PREFIXES;  this.ruleType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  NameType.NAME_PREFIXES;  this.ruleType  =  ruleType;	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
1726	[BUG]  [BUGGY]  NameType  nameType  =  ruleType;  this.ruleType  =  nameType;  [CE]  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType;  this.ruleType  =  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType;  this.ruleType  =  nameType;	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    	non-compiled	[CE]  	101	None	replace
1727	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  RuleType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  RuleType.NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.ruleType  =  RuleType.NAME_PREFIXES;	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
1728	[BUG]  [BUGGY]  NameType  ruleType,  nameType,  concat);  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType,  nameType,  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType,  nameType,  concat);	  NameType    ruleType,    nameType,    concat,    	non-compiled	[CE]  <identifier>  expected	280	None	replace
1729	[BUG]  [BUGGY]  NameType  ruleType,  nameType,  concat;  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType,  nameType,  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType,  nameType,  concat;	  NameType    ruleType,    nameType,    concat,    	non-compiled	[CE]  <identifier>  expected	280	None	replace
1730	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  Concat,  true);  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  Concat,  true);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  Concat,  true);	  NameType    nameType,    RuleType    ruleType,    concat,    false);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
1731	[BUG]  [BUGGY]  NameType  nameType;  RuleType  ruleType,  concat,  false);  [CE]  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType;  RuleType  ruleType,  concat,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType;  RuleType  ruleType,  concat,  false);	  NameType    nameType,    RuleType    ruleType,    concat,    false);    	non-compiled	[CE]  	54	None	replace
1732	[BUG]  [BUGGY]  this.nameType  =  ruleType  instanceof  RuleType?((  RuleType)nameType).getName()  :  nameType;  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType  instanceof  RuleType?((  RuleType)nameType).getName()  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType  instanceof  RuleType?((  RuleType)nameType).getName()  :  nameType;	  this.nameType    =    nameType    instanceof    RuleType?((    RuleType)nameType).getName()    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
1733	[BUG]  [BUGGY]  This.nameType  =  nameType  instanceof  RuleType?((  RuleType)nameType).getName()  :  nameType;  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.nameType  =  nameType  instanceof  RuleType?((  RuleType)nameType).getName()  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType  =  nameType  instanceof  RuleType?((  RuleType)nameType).getName()  :  nameType;	  this.nameType    =    nameType    instanceof    RuleType?((    RuleType)nameType).getName()    :    nameType;    	non-compiled	[CE]  <identifier>  expected	152	None	replace
1734	[BUG]  [BUGGY]  this.nameType  =  nameType.restrictByNotEmptyOrUndefined();  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.restrictByNotEmptyOrUndefined();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.restrictByNotEmptyOrUndefined();	  this.nameType    =    nameType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
1735	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat?  super.nameType  :  new  NameType(nameType);  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat?  super.nameType  :  new  NameType(nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat?  super.nameType  :  new  NameType(nameType);	  NameType    nameType,    ruleType,    concat?    super.nameType    :    null;    	non-compiled	[CE]  <identifier>  expected	335	None	replace
1736	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat?  super.nameType  :  new  NameType();  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat?  super.nameType  :  new  NameType();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat?  super.nameType  :  new  NameType();	  NameType    nameType,    ruleType,    concat?    super.nameType    :    null;    	non-compiled	[CE]  <identifier>  expected	335	None	replace
1737	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  null,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  null,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  NAME_PREFIXES,  null,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    null,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
1738	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  null,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    null,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
1739	[BUG]  [BUGGY]  this.nameType,  new  RuleType(this.ruleType,  concat),  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  new  RuleType(this.ruleType,  concat),  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  new  RuleType(this.ruleType,  concat),	  this.nameType,    new    RuleType(ruleType,    concat),    	non-compiled	[CE]  illegal  start  of  type	288	None	replace
1740	[BUG]  [BUGGY]  this.nameType,  new  RuleType(ruleType,  concat));  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  new  RuleType(ruleType,  concat));  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  new  RuleType(ruleType,  concat));	  this.nameType,    new    RuleType(ruleType,    concat),    	non-compiled	[CE]  illegal  start  of  type	288	None	replace
1741	[BUG]  [BUGGY]  if(nameType!=  null)  {  super(ruleType,  nameType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType!=  null)  {  super(ruleType,  nameType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  null)  {  super(ruleType,  nameType);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super(ruleType,    nameType);    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
1742	[BUG]  [BUGGY]  if(nameType!=  null)  {  super(ruleType,  nameType);  }  else  {  finalRules  =  new  Set  <  RuleType>();  }  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType!=  null)  {  super(ruleType,  nameType);  }  else  {  finalRules  =  new  Set  <  RuleType>();  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  null)  {  super(ruleType,  nameType);  }  else  {  finalRules  =  new  Set  <  RuleType>();  }	  super(ruleType,    nameType);    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
1743	[BUG]  [BUGGY]  if(nameType!=  null)  {  super(ruleType,  nameType);  }  else  {  finalRules  =  new  HashSet  <  RuleType>();  }  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType!=  null)  {  super(ruleType,  nameType);  }  else  {  finalRules  =  new  HashSet  <  RuleType>();  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  null)  {  super(ruleType,  nameType);  }  else  {  finalRules  =  new  HashSet  <  RuleType>();  }	  super(ruleType,    nameType);    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
1744	[BUG]  [BUGGY]  if(nameType!=  null)  {  super(ruleType,  nameType);  }  else  {  finalRules  =  NAME_PREFIXES;  }  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType!=  null)  {  super(ruleType,  nameType);  }  else  {  finalRules  =  NAME_PREFIXES;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  null)  {  super(ruleType,  nameType);  }  else  {  finalRules  =  NAME_PREFIXES;  }	  super(ruleType,    nameType);    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
1745	[BUG]  [BUGGY]  if(nameType!=  null)  {  super(nameType,  ruleType);  }  else  {  finalRules  =  new  Set  <  RuleType>();  }  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType!=  null)  {  super(nameType,  ruleType);  }  else  {  finalRules  =  new  Set  <  RuleType>();  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  null)  {  super(nameType,  ruleType);  }  else  {  finalRules  =  new  Set  <  RuleType>();  }	  super(ruleType,    nameType);    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
1746	[BUG]  [BUGGY]  if(nameType!=  null)  {  super(nameType,  ruleType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType!=  null)  {  super(nameType,  ruleType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  null)  {  super(nameType,  ruleType);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super(ruleType,    nameType);    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
1747	[BUG]  [BUGGY]  if(nameType!=  null)  {  super(ruleType,  nameType);  }  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType!=  null)  {  super(ruleType,  nameType);  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  null)  {  super(ruleType,  nameType);  }	  super(ruleType,    nameType);    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
1748	[BUG]  [BUGGY]  if(nameType!=  null)  {  super(ruleType,  nameType);  }  else  {  finalRules  =  new  Set  <  Rule>();  }  [CE]  illegal  start  of  type  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType!=  null)  {  super(ruleType,  nameType);  }  else  {  finalRules  =  new  Set  <  Rule>();  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  null)  {  super(ruleType,  nameType);  }  else  {  finalRules  =  new  Set  <  Rule>();  }	  super(ruleType,    nameType);    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
1749	[BUG]  [BUGGY]  final  boolean  maxPhonemes,(Locale.getDefault()))  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,(Locale.getDefault()))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,(Locale.getDefault()))  {	  final    boolean    maxPhonemes,    Locale.getDefault())    {    	non-compiled	[CE]  illegal  start  of  type	199	None	replace
1750	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  @NotNull(locale.getDefault()))  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  @NotNull(locale.getDefault()))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  @NotNull(locale.getDefault()))  {	  final    boolean    maxPhonemes,    Locale.getDefault())    {    	non-compiled	[CE]  illegal  start  of  type	199	None	replace
1751	[BUG]  [BUGGY]  final  boolean  maxPhonemes,(Locale)locale.getDefault())  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,(Locale)locale.getDefault())  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,(Locale)locale.getDefault())  {	  final    boolean    maxPhonemes,    Locale.getDefault())    {    	non-compiled	[CE]  illegal  start  of  type	199	None	replace
1752	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
1753	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ")  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ")  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ")	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
1754	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "] ");  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "] ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "] ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
1755	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  0,  DEFAULT_MIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  0,  DEFAULT_MIN_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  0,  DEFAULT_MIN_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MIN_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	178	None	replace
1756	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  false,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  false,  maxPhonemes);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  false,  maxPhonemes);	  this(nameType,    ruleType,    concat,    false,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
1757	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes  -  1);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes  -  1);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  false,  maxPhonemes  -  1);	  this(nameType,    ruleType,    concat,    false,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
1758	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes  +  1);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes  +  1);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  false,  maxPhonemes  +  1);	  this(nameType,    ruleType,    concat,    false,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
1759	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  /  2L;  [CE]  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  /  2L;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes  /  2L;	  final    int    maxPhonemes    =    nameType.maxPhonemes    /    2;    	non-compiled	[CE]  	28	None	replace
1760	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  false);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  false);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  false);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    nameType);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
1761	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  nameType);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  nameType);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    nameType);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
1762	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  i,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  i,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  NAME_PREFIXES,  i,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    i,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
1763	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  i,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  i,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  i,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    i,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
1764	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType  :  RuleType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType  :  RuleType.NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType  :  RuleType.NAME_PREFIXES;	  this.nameType    =    nameType    ==    null?    nameType    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	310	None	replace
1765	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType  :  NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType  :  NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType  :  NAME_PREFIXES;	  this.nameType    =    nameType    ==    null?    nameType    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	310	None	replace
1766	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType  :  NameType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType  :  NameType.NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType  :  NameType.NAME_PREFIXES;	  this.nameType    =    nameType    ==    null?    nameType    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	310	None	replace
1767	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  final  int  maxPhonemes,  [CE]  <identifier>  expected  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  final  int  maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  final  int  maxPhonemes,	  NameType    nameType,    RuleType    ruleType,    final    int    maxPhonemes,    	non-compiled	[CE]  <identifier>  expected	159	None	replace
1768	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  maxPhonemes,  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  maxPhonemes,	  NameType    nameType,    RuleType    ruleType,    final    int    maxPhonemes,    	non-compiled	[CE]  <identifier>  expected	159	None	replace
1769	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType!=    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
1770	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ")  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ")  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ")	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType!=    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
1771	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "] ");  }  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "] ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "] ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType!=    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
1772	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(this.nameType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(this.nameType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(this.nameType);  this.maxPhonemes  =  maxPhonemes;	  this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	222	None	replace
1773	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.toUpperCase()  :  nameType.toLowerCase();  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.toUpperCase()  :  nameType.toLowerCase();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.toUpperCase()  :  nameType.toLowerCase();	  this.nameType    =    nameType.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
1774	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.toUpperCase()  :  nameType.toUpperCase();  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.toUpperCase()  :  nameType.toUpperCase();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.toUpperCase()  :  nameType.toUpperCase();	  this.nameType    =    nameType.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
1775	[BUG]  [BUGGY]  this.nameType  =  nameType.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toLowerCase(Locale.ENGLISH);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toLowerCase(Locale.ENGLISH);	  this.nameType    =    nameType.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
1776	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_NAME_PREFIXES,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_NAME_PREFIXES,  maxPhonemes,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_NAME_PREFIXES,  maxPhonemes,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
1777	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  finalRules,  maxPhonemes,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  finalRules,  maxPhonemes,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  finalRules,  maxPhonemes,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
1778	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  maxPhonemes,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  maxPhonemes,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  maxPhonemes,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
1779	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  finalRules,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  finalRules,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  finalRules,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
1780	[BUG]  [BUGGY]  super(ruleType,  Concat);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(ruleType,  Concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(ruleType,  Concat);	  super(nameType,    Concat);    	non-compiled	[CE]  illegal  start  of  type	185	None	replace
1781	[BUG]  [BUGGY]  super(nameType.getName(),  Concat);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType.getName(),  Concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType.getName(),  Concat);	  super(nameType,    Concat);    	non-compiled	[CE]  illegal  start  of  type	185	None	replace
1782	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  nameType);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  nameType);	  this(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
1783	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  0,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  0,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  NAME_PREFIXES,  0,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
1784	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  0,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  0,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  0,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
1785	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  0,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  0,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  0,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
1786	[BUG]  [BUGGY]  NameType  nameType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  nameType;  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  nameType;	  this.nameType    =    nameType    instanceof    RuleType?    NameType.NAME_PREFIXES    :    nameType;    	non-compiled	[CE]  	263	None	replace
1787	[BUG]  [BUGGY]  This.nameType  =  nameType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  nameType;  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.nameType  =  nameType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType  =  nameType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  nameType;	  this.nameType    =    nameType    instanceof    RuleType?    NameType.NAME_PREFIXES    :    nameType;    	non-compiled	[CE]  <identifier>  expected	263	None	replace
1788	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  3);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  3);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  3);	  this(nameType,    ruleType,    concat,    maxPhonemes,    0);    	non-compiled	[CE]  illegal  start  of  type	180	None	replace
1789	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getFinalName();  [CE]  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getFinalName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getFinalName();	  NameType    nameType    =    ruleType.getFullName();    	non-compiled	[CE]  	238	None	replace
1790	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    this.concat,    	non-compiled	[CE]  illegal  start  of  type	207	None	replace
1791	[BUG]  [BUGGY]  NameType  nameType  =  ruleType;  this.ruleType  =  nameType;  this.concat,  [CE]  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType;  this.ruleType  =  nameType;  this.concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType;  this.ruleType  =  nameType;  this.concat,	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    this.concat,    	non-compiled	[CE]  	207	None	replace
1792	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  false;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  false;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  false;	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    this.concat,    	non-compiled	[CE]  illegal  start  of  type	207	None	replace
1793	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(nameType    ==    RuleType.NAME)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	254	None	replace
1794	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  if(nameType    ==    RuleType.NAME)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	254	None	replace
1795	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  if(nameType    ==    RuleType.NAME)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	254	None	replace
1796	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ",  nameType);  }  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ",  nameType);  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ",  nameType);  }	  if(nameType    ==    RuleType.NAME)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	254	None	replace
1797	[BUG]  [BUGGY]  this.nameType  =  nameType.toPrettyPrint();  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toPrettyPrint();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toPrettyPrint();	  this.nameType    =    nameType.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
1798	[BUG]  [BUGGY]  this.nameType  =  NameType.toString();  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  NameType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  NameType.toString();	  this.nameType    =    nameType.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
1799	[BUG]  [BUGGY]  super(ruleType,  nameType,  concat,  false);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(ruleType,  nameType,  concat,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(ruleType,  nameType,  concat,  false);	  super(nameType,    ruleType,    concat,    false);    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
1800	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  0L);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  0L);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  0L);	  super(nameType,    ruleType,    concat,    0);    	non-compiled	[CE]  illegal  start  of  type	169	None	replace
1801	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes  +  1);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes  +  1);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes  +  1);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes    +    1);    	non-compiled	[CE]  illegal  start  of  type	221	None	replace
1802	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES  +  1);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES  +  1);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES  +  1);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes    +    1);    	non-compiled	[CE]  illegal  start  of  type	221	None	replace
1803	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i  +  1);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i  +  1);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  i  +  1);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes    +    1);    	non-compiled	[CE]  illegal  start  of  type	221	None	replace
1804	[BUG]  [BUGGY]  final  int  maxPhonemes,  Arrays.asList(finalRules))  {  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  Arrays.asList(finalRules))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  Arrays.asList(finalRules))  {	  final    int    maxPhonemes,    finalRules)    {    	non-compiled	[CE]  <identifier>  expected	246	None	replace
1805	[BUG]  [BUGGY]  final  int  maxPhonemes,  0)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  0)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  0)  {	  final    int    maxPhonemes,    finalRules)    {    	non-compiled	[CE]  illegal  start  of  type	246	None	replace
1806	[BUG]  [BUGGY]  nameType!=  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType!=  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType!=  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;	  if(nameType!=    RuleType.NAME)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	253	None	replace
1807	[BUG]  [BUGGY]  nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;	  if(nameType!=    RuleType.NAME)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	253	None	replace
1808	[BUG]  [BUGGY]  This.nameType  =  nameType;  this.ruleType,  concat,  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.nameType  =  nameType;  this.ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType  =  nameType;  this.ruleType,  concat,	  this.nameType    =    nameType;    this.ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	242	None	replace
1809	[BUG]  [BUGGY]  super(nameType);  this.ruleType,  concat,  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType);  this.ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType);  this.ruleType,  concat,	  this.nameType    =    nameType;    this.ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	242	None	replace
1810	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName());  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName());	  this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
1811	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  ruleType);	  this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
1812	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(!concat)  {  throw  new  IllegalArgumentException( " ")  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(!concat)  {  throw  new  IllegalArgumentException( " ")  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(!concat)  {  throw  new  IllegalArgumentException( " ")	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(!concat)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
1813	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(!concat)  {  throw  new  IllegalArgumentException( "] ");  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(!concat)  {  throw  new  IllegalArgumentException( "] ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(!concat)  {  throw  new  IllegalArgumentException( "] ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(!concat)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
1814	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }	  super(nameType,    ruleType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
1815	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  for(final  RuleType  ruleType  :  NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  for(final  RuleType  ruleType  :  NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  for(final  RuleType  ruleType  :  NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }	  super(nameType,    ruleType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
1816	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  for(final  RuleType  ruleType  :  NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ")  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  for(final  RuleType  ruleType  :  NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ")  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  for(final  RuleType  ruleType  :  NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ")	  super(nameType,    ruleType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
1817	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  for(final  RuleType  ruleType  :  NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  for(final  RuleType  ruleType  :  NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  for(final  RuleType  ruleType  :  NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.	  super(nameType,    ruleType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
1818	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  finalRules  =  new  HashSet  <  RuleType>();  }  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  finalRules  =  new  HashSet  <  RuleType>();  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  finalRules  =  new  HashSet  <  RuleType>();  }	  super(nameType,    ruleType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
1819	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  finalRules  =  new  Set  <  RuleType>();  }  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  finalRules  =  new  Set  <  RuleType>();  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  finalRules  =  new  Set  <  RuleType>();  }	  super(nameType,    ruleType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
1820	[BUG]  [BUGGY]  this.lang  =  lang.instance(ruleType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.lang  =  lang.instance(ruleType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.lang  =  lang.instance(ruleType);  this.maxPhonemes  =  maxPhonemes;	  this.lang    =    Lang.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
1821	[BUG]  [BUGGY]  this.lang  =  Long.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.lang  =  Long.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.lang  =  Long.instance(nameType);  this.maxPhonemes  =  maxPhonemes;	  this.lang    =    Lang.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
1822	[BUG]  [BUGGY]  this.lang  =  Long.instance(ruleType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.lang  =  Long.instance(ruleType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.lang  =  Long.instance(ruleType);  this.maxPhonemes  =  maxPhonemes;	  this.lang    =    Lang.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
1823	[BUG]  [BUGGY]  final  NameType  nameType,  RuleType  ruleType,  Boolean  concat,  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType,  RuleType  ruleType,  Boolean  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType,  RuleType  ruleType,  Boolean  concat,	  final    NameType    nameType,    RuleType    ruleType,    boolean    concat,    	non-compiled	[CE]  illegal  start  of  type	285	None	replace
1824	[BUG]  [BUGGY]  super(new  NameType(nameType,  ruleType),  concat,  nameType);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(new  NameType(nameType,  ruleType),  concat,  nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(nameType,  ruleType),  concat,  nameType);	  super(new    NameType(nameType,    ruleType),    concat);    	non-compiled	[CE]  illegal  start  of  type	228	None	replace
1825	[BUG]  [BUGGY]  super(new  NameType(ruleType,  nameType),  concat);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(new  NameType(ruleType,  nameType),  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(ruleType,  nameType),  concat);	  super(new    NameType(nameType,    ruleType),    concat);    	non-compiled	[CE]  illegal  start  of  type	228	None	replace
1826	[BUG]  [BUGGY]  this.nameType  =  nameType.toURI();  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toURI();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toURI();	  this.nameType    =    nameType.toName();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
1827	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  3);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  3);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  3);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    3);    	non-compiled	[CE]  illegal  start  of  type	327	None	replace
1828	[BUG]  [BUGGY]  this.nameType  =  nameType.getReferenceName(),  ruleType;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getReferenceName(),  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getReferenceName(),  ruleType;	  this.nameType    =    nameType.getReferenceName(),    concat;    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
1829	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes,  null)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes,  null)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes,  null)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    null)    {    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
1830	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  null)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  null)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  null)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    null)    {    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
1831	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null)  {  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  null,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    null)    {    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
1832	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  maxPhonemes,  null)  {  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  maxPhonemes,  null)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  maxPhonemes,  null)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    null)    {    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
1833	[BUG]  [BUGGY]  final  int  maxPhonemes,  String  nameType,  boolean  concat,  boolean  lang)  {  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  String  nameType,  boolean  concat,  boolean  lang)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  String  nameType,  boolean  concat,  boolean  lang)  {	  final    int    maxPhonemes,    boolean    concat,    boolean    lang)    {    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	276	None	replace
1834	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  concat,  boolean  lang)  {  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  concat,  boolean  lang)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  concat,  boolean  lang)  {	  final    int    maxPhonemes,    boolean    concat,    boolean    lang)    {    	non-compiled	[CE]  <identifier>  expected	276	None	replace
1835	[BUG]  [BUGGY]  final  int  maxPhonemes,  boolean  concat,  boolean  found)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  boolean  concat,  boolean  found)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  boolean  concat,  boolean  found)  {	  final    int    maxPhonemes,    boolean    concat,    boolean    lang)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	276	None	replace
1836	[BUG]  [BUGGY]  final  int  maxPhonemes,  boolean  concat,  long)  {  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  boolean  concat,  long)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  boolean  concat,  long)  {	  final    int    maxPhonemes,    boolean    concat,    boolean    lang)    {    	non-compiled	[CE]  <identifier>  expected	276	None	replace
1837	[BUG]  [BUGGY]  final  int  maxPhonemes,  boolean  concat,  Boolean  lang)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  boolean  concat,  Boolean  lang)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  boolean  concat,  Boolean  lang)  {	  final    int    maxPhonemes,    boolean    concat,    boolean    lang)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	276	None	replace
1838	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getNameNode();  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getNameNode();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getNameNode();	  NameType    nameType    =    ruleType.getName()    +    1;    	non-compiled	[CE]  	139	None	replace
1839	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  String  ruleType)  {  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  String  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  String  ruleType)  {	  final    int    maxPhonemes,    final    String    concat)    {    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine	46	None	replace
1840	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  char  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  char  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  char  concat)  {	  final    int    maxPhonemes,    final    String    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	46	None	replace
1841	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  final  String  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  final  String  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  final  String  concat)  {	  final    int    maxPhonemes,    final    String    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	46	None	replace
1842	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  String  nameType)  {  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  String  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  String  nameType)  {	  final    int    maxPhonemes,    final    String    concat)    {    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	46	None	replace
1843	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes,  0)  {  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes,  0)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes,  0)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    0)    {    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
1844	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  0)  {  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  0)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  0)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    0)    {    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
1845	[BUG]  [BUGGY]  NameType  nameType,  finalRules)  {  this.nameType  =  nameType;  }  [CE]  <identifier>  expected  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  finalRules)  {  this.nameType  =  nameType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  finalRules)  {  this.nameType  =  nameType;  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
1846	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  new  NameType(nameType);  }  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  new  NameType(nameType);  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  new  NameType(nameType);  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
1847	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  new  NameType(nameType,  ruleType);  }  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  new  NameType(nameType,  ruleType);  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  new  NameType(nameType,  ruleType);  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
1848	[BUG]  [BUGGY]  this.nameType,  nameType,  ruleType,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  ruleType,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  ruleType,  maxPhonemes)  {	  this.phonemeBuilder,    nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
1849	[BUG]  [BUGGY]  this.phonemeBuilder,  nameType,  ruleType,  Concat)  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder,  nameType,  ruleType,  Concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder,  nameType,  ruleType,  Concat)  {	  this.phonemeBuilder,    nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
1850	[BUG]  [BUGGY]  NameType  ruleType  =  ruleType!=  null?  nameType.getRuleType()  :  null;  [CE]  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType  =  ruleType!=  null?  nameType.getRuleType()  :  null;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType  =  ruleType!=  null?  nameType.getRuleType()  :  null;	  NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  	295	None	replace
1851	[BUG]  [BUGGY]  NameType  ruleType  =  ruleType  ==  null?  nameType.getRuleType()  :  null;  [CE]  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType  =  ruleType  ==  null?  nameType.getRuleType()  :  null;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType  =  ruleType  ==  null?  nameType.getRuleType()  :  null;	  NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  	295	None	replace
1852	[BUG]  [BUGGY]  NameType  ruleType  =  ruleType!=  null?  nameType.getRuleType()  :  NAME_PREFIXES;  [CE]  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType  =  ruleType!=  null?  nameType.getRuleType()  :  NAME_PREFIXES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType  =  ruleType!=  null?  nameType.getRuleType()  :  NAME_PREFIXES;	  NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  	295	None	replace
1853	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_FREFIXES);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_FREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_FREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_FREFIXES);    	non-compiled	[CE]  illegal  start  of  type	313	None	replace
1854	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  DEFAULT_FREFIXES);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  DEFAULT_FREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  DEFAULT_FREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_FREFIXES);    	non-compiled	[CE]  illegal  start  of  type	313	None	replace
1855	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  false,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  null,  false,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null,  false,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    true,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
1856	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  false,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  false,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  false,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    true,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
1857	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  true,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  null,  true,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null,  true,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    true,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
1858	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  boolean  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  boolean  concat)  {	  final    boolean    maxPhonemes,    int    nameType)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	197	None	replace
1859	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  0,  this.maxPhonemes  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  0,  this.maxPhonemes  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  0,  this.maxPhonemes	  NameType    nameType,    ruleType,    concat,    this.maxPhonemes    	non-compiled	[CE]  <identifier>  expected	278	None	replace
1860	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes  +  1  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes  +  1  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.maxPhonemes  +  1	  NameType    nameType,    ruleType,    concat,    this.maxPhonemes    	non-compiled	[CE]  <identifier>  expected	278	None	replace
1861	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes  }  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.maxPhonemes  }	  NameType    nameType,    ruleType,    concat,    this.maxPhonemes    	non-compiled	[CE]  <identifier>  expected	278	None	replace
1862	[BUG]  [BUGGY]  this.nameType  =  nameType.getNameType();  this.ruleType  =  ruleType;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getNameType();  this.ruleType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getNameType();  this.ruleType  =  ruleType;	  NameType    nameType    =    nameType.getNameType();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
1863	[BUG]  [BUGGY]  super(nameType.getName(),  concat);  this.ruleType  =  ruleType;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType.getName(),  concat);  this.ruleType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType.getName(),  concat);  this.ruleType  =  ruleType;	  NameType    nameType    =    nameType.getNameType();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
1864	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  concat,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  maxPhonemes)  {	  this.nameType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	268	None	replace
1865	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  nullPhonemes)  {  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  nullPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  nullPhonemes)  {	  this.nameType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	268	None	replace
1866	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  DEFAULT_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  DEFAULT_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  DEFAULT_PHONEMES)  {	  this.nameType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	268	None	replace
1867	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  final  concat,  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  final  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  final  concat,	  NameType    nameType,    RuleType    ruleType,    final    concat,    	non-compiled	[CE]  <identifier>  expected	161	None	replace
1868	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  final  Concat,  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  final  Concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  final  Concat,	  NameType    nameType,    RuleType    ruleType,    final    concat,    	non-compiled	[CE]  <identifier>  expected	161	None	replace
1869	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  Integer,  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  Integer,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  Integer,	  NameType    nameType,    RuleType    ruleType,    Concat,    	non-compiled	[CE]  <identifier>  expected	162	None	replace
1870	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  null,  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  null,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  null,	  NameType    nameType,    ruleType,    Concat,    	non-compiled	[CE]  <identifier>  expected	262	None	replace
1871	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  CONCAT,  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  CONCAT,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  CONCAT,	  NameType    nameType,    ruleType,    Concat,    	non-compiled	[CE]  <identifier>  expected	262	None	replace
1872	[BUG]  [BUGGY]  this.ruleType,  concat,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType,  concat,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  concat,  maxPhonemes)  {	  this.ruleType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
1873	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  maxPhonemes)  {  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  maxPhonemes)  {	  this.ruleType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  <identifier>  expected	110	None	replace
1874	[BUG]  [BUGGY]  this.ruleType,  ruleType,  Concat)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType,  ruleType,  Concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  ruleType,  Concat)  {	  this.ruleType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
1875	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super();  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super();  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super();  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
1876	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super();  this.ruleType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super();  this.ruleType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super();  this.ruleType  =  ruleType;  }	  super();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
1877	[BUG]  [BUGGY]  if(nameType!=  RuleType.NAME_PREFIXES)  {  super();  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType!=  RuleType.NAME_PREFIXES)  {  super();  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  RuleType.NAME_PREFIXES)  {  super();  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
1878	[BUG]  [BUGGY]  if(nameType!=  RuleType.NAME_PREFIXES)  {  super();  this.ruleType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType!=  RuleType.NAME_PREFIXES)  {  super();  this.ruleType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  RuleType.NAME_PREFIXES)  {  super();  this.ruleType  =  ruleType;  }	  super();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
1879	[BUG]  [BUGGY]  if(ruleType!=  RuleType.NAME_PREFIXES)  {  super();  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(ruleType!=  RuleType.NAME_PREFIXES)  {  super();  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(ruleType!=  RuleType.NAME_PREFIXES)  {  super();  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
1880	[BUG]  [BUGGY]  if(ruleType!=  RuleType.NAME_PREFIXES)  {  super();  this.ruleType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(ruleType!=  RuleType.NAME_PREFIXES)  {  super();  this.ruleType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(ruleType!=  RuleType.NAME_PREFIXES)  {  super();  this.ruleType  =  ruleType;  }	  super();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
1881	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  null,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
1882	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  0,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  0,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  0,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
1883	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  0,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  0,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  0,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
1884	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.DEFAULT_NAME_PREFIXES;  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.DEFAULT_NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.DEFAULT_NAME_PREFIXES;	  this.nameType    =    NameType.DEFAULT_NAME_PREFIXES;    	non-compiled	[CE]  	264	None	replace
1885	[BUG]  [BUGGY]  this.nameType  =  NameType.DEFAULT_NAME_PREFIXES  |  nameType;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  NameType.DEFAULT_NAME_PREFIXES  |  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  NameType.DEFAULT_NAME_PREFIXES  |  nameType;	  this.nameType    =    NameType.DEFAULT_NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
1886	[BUG]  [BUGGY]  this.nameType  =  NameType.DEFAULT_NAME_PREFIXES  +  nameType;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  NameType.DEFAULT_NAME_PREFIXES  +  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  NameType.DEFAULT_NAME_PREFIXES  +  nameType;	  this.nameType    =    NameType.DEFAULT_NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
1887	[BUG]  [BUGGY]  this.nameType  =  NameType.DEFAULT_PREFIXES;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  NameType.DEFAULT_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  NameType.DEFAULT_PREFIXES;	  this.nameType    =    NameType.DEFAULT_NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
1888	[BUG]  [BUGGY]  this.nameType  =  NameType.DEFAULT_NAME_PREFIXES,  nameType);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  NameType.DEFAULT_NAME_PREFIXES,  nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  NameType.DEFAULT_NAME_PREFIXES,  nameType);	  this.nameType    =    NameType.DEFAULT_NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
1889	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MIN_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
1890	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  0,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  concat,  0,  DEFAULT_MAX_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  0,  DEFAULT_MAX_PHONEMES);	  this.nameType,    nameType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
1891	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  DEFAULT_MIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  concat,  DEFAULT_MIN_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  DEFAULT_MIN_PHONEMES);	  this.nameType,    nameType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
1892	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_RANGE_PHONEMES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_RANGE_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_RANGE_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_RANGE_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	317	None	replace
1893	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_RANGE_PHONEMES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_RANGE_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_RANGE_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_RANGE_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	317	None	replace
1894	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_RANGE_PHONEMES,  DEFAULT_PARAMS);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_RANGE_PHONEMES,  DEFAULT_PARAMS);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_RANGE_PHONEMES,  DEFAULT_PARAMS);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_RANGE_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	317	None	replace
1895	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_RANGE_PHONEMES,  DEFAULT_PARENTHESES);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_RANGE_PHONEMES,  DEFAULT_PARENTHESES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_RANGE_PHONEMES,  DEFAULT_PARENTHESES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_RANGE_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	317	None	replace
1896	[BUG]  [BUGGY]  static  final  int  maxPhonemes  =  RuleType.maxPhonemes;  [CE]  modifier  static  not  allowed  here  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  static  final  int  maxPhonemes  =  RuleType.maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  int  maxPhonemes  =  RuleType.maxPhonemes;	  static    final    int    maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  modifier  static  not  allowed  here	256	None	replace
1897	[BUG]  [BUGGY]  static  final  char  maxPhonemes  =  nameType.maxPhonemes;  [CE]  modifier  static  not  allowed  here  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  static  final  char  maxPhonemes  =  nameType.maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  char  maxPhonemes  =  nameType.maxPhonemes;	  static    final    int    maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  modifier  static  not  allowed  here	256	None	replace
1898	[BUG]  [BUGGY]  static  final  int  maxPhonemes  =  nameType.maxPhonemes  -  4;  [CE]  modifier  static  not  allowed  here  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  static  final  int  maxPhonemes  =  nameType.maxPhonemes  -  4;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  int  maxPhonemes  =  nameType.maxPhonemes  -  4;	  static    final    int    maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  modifier  static  not  allowed  here	256	None	replace
1899	[BUG]  [BUGGY]  this.phonemeBuilder  =  Long.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Long.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Long.instance(nameType);  this.maxPhonemes  =  maxPhonemes;	  this.phonemeBuilder    =    Lang.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	281	None	replace
1900	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.minPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.minPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.minPhonemes  =  maxPhonemes;	  this(nameType,    ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	224	None	replace
1901	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.minimumPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.minimumPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.minimumPhonemes  =  maxPhonemes;	  this(nameType,    ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	224	None	replace
1902	[BUG]  [BUGGY]  this(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes  +  1;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes  +  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes  +  1;	  this(nameType,    ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	224	None	replace
1903	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType  :((  RuleType)nameType).nameType;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType  :((  RuleType)nameType).nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType  :((  RuleType)nameType).nameType;	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :((    RuleType)nameType).nameType;    	non-compiled	[CE]  illegal  start  of  type	265	None	replace
1904	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType  :((  RuleType)nameType).nameType;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType  :((  RuleType)nameType).nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType  :((  RuleType)nameType).nameType;	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :((    RuleType)nameType).nameType;    	non-compiled	[CE]  illegal  start  of  type	265	None	replace
1905	[BUG]  [BUGGY]  this.nameType  =  ruleType  instanceof  RuleType?  nameType  :((  RuleType)nameType).nameType;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType  instanceof  RuleType?  nameType  :((  RuleType)nameType).nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType  instanceof  RuleType?  nameType  :((  RuleType)nameType).nameType;	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :((    RuleType)nameType).nameType;    	non-compiled	[CE]  illegal  start  of  type	265	None	replace
1906	[BUG]  [BUGGY]  Preconditions.checkState(nameType.getName()!=  null);  this.ruleType  =  ruleType.getName();  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Preconditions.checkState(nameType.getName()!=  null);  this.ruleType  =  ruleType.getName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Preconditions.checkState(nameType.getName()!=  null);  this.ruleType  =  ruleType.getName();	  NameType    nameType    =    nameType.getName();    this.ruleType    =    ruleType;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
1907	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes,  null);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes,  null);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes,  null);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    null);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
1908	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  null);  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  null);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  null);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    null);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
1909	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null);  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  null,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    null);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
1910	[BUG]  [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  +  4;  [CE]  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  +  4;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  ruleType.maxPhonemes  +  4;	  final    int    maxPhonemes    =    ruleType.maxPhonemes;    	non-compiled	[CE]  	23	None	replace
1911	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  RuleType  regType)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  RuleType  regType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  RuleType  regType)  {	  final    boolean    maxPhonemes,    RuleType    nameType)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	201	None	replace
1912	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType  :  NameType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType  :  NameType.NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  nameType  :  NameType.NAME_PREFIXES;	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
1913	[BUG]  [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType  :  NameType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType  :  NameType.NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType  :  NameType.NAME_PREFIXES;	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
1914	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType  :  NameType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType  :  NameType.NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType  :  NameType.NAME_PREFIXES;	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
1915	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :  NameType.NAME;  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :  NameType.NAME;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?  nameType  :  NameType.NAME;	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
1916	[BUG]  [BUGGY]  this(nameType,  ruleType.getName());  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType.getName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType.getName());	  this.nameType    =    ruleType.getName();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
1917	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  Boolean  ruleType)  {  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  Boolean  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  Boolean  ruleType)  {	  final    int    maxPhonemes,    final    Boolean    concat)    {    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine	272	None	replace
1918	[BUG]  [BUGGY]  final  char  maxPhonemes,  final  Integer  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  char  maxPhonemes,  final  Integer  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  char  maxPhonemes,  final  Integer  concat)  {	  final    int    maxPhonemes,    final    Integer    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	45	None	replace
1919	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  Integer  nameType)  {  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  Integer  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  Integer  nameType)  {	  final    int    maxPhonemes,    final    Integer    concat)    {    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	45	None	replace
1920	[BUG]  [BUGGY]  this.maxPhonemes  =  maxPhonemes  -  2;  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  maxPhonemes  -  2;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  maxPhonemes  -  2;	  this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
1921	[BUG]  [BUGGY]  this.maxPhonemes  =  maxPhonemes  +  2;  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  maxPhonemes  +  2;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  maxPhonemes  +  2;	  this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
1922	[BUG]  [BUGGY]  this.maxPhonemes  =  maxPhonemes  *  2;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  maxPhonemes  *  2;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  maxPhonemes  *  2;	  this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
1923	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType  :(NameType)nameType;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType  :(NameType)nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType  :(NameType)nameType;	  this.nameType    =    nameType    instanceof    NameType?    nameType    :(NameType)nameType;    	non-compiled	[CE]  illegal  start  of  type	266	None	replace
1924	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  ruleType  :(NameType)nameType;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  ruleType  :(NameType)nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  NameType?  ruleType  :(NameType)nameType;	  this.nameType    =    nameType    instanceof    NameType?    nameType    :(NameType)nameType;    	non-compiled	[CE]  illegal  start  of  type	266	None	replace
1925	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.maxPhonemes  =  DEFAULT_MAX_PHONEMES;  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.maxPhonemes  =  DEFAULT_MAX_PHONEMES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.maxPhonemes  =  DEFAULT_MAX_PHONEMES;	  this.nameType    =    nameType;    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
1926	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.maxPhonemes  =  minPhonemes;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.maxPhonemes  =  minPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.maxPhonemes  =  minPhonemes;	  this.nameType    =    nameType;    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
1927	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.maxPhonemes  =  maxPhonemes  +  1;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.maxPhonemes  =  maxPhonemes  +  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.maxPhonemes  =  maxPhonemes  +  1;	  this.nameType    =    nameType;    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
1928	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  false,  nameType);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  false,  nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  false,  nameType);	  this(nameType,    ruleType,    concat,    false,    nameType);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
1929	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  false,  nameType);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  null,  false,  nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null,  false,  nameType);	  this(nameType,    ruleType,    concat,    false,    nameType);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
1930	[BUG]  [BUGGY]  This(nameType,  ruleType,  concat,  false,  nameType);  [CE]  <identifier>  expected  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This(nameType,  ruleType,  concat,  false,  nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This(nameType,  ruleType,  concat,  false,  nameType);	  this(nameType,    ruleType,    concat,    false,    nameType);    	non-compiled	[CE]  <identifier>  expected	119	None	replace
1931	[BUG]  [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   "    +    RuleType.NAME_PREFIXES);    }    	non-compiled	[CE]  illegal  start  of  type	227	None	replace
1932	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.N  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.N  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.N	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   "    +    RuleType.NAME_PREFIXES);    }    	non-compiled	[CE]  illegal  start  of  type	227	None	replace
1933	[BUG]  [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   "    +    RuleType.NAME_PREFIXES);    }    	non-compiled	[CE]  illegal  start  of  type	227	None	replace
1934	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   "    +    RuleType.NAME_PREFIXES);    }    	non-compiled	[CE]  illegal  start  of  type	227	None	replace
1935	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   "    +    RuleType.NAME_PREFIXES);    }    	non-compiled	[CE]  illegal  start  of  type	227	None	replace
1936	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.nameType  =  nameType;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.nameType  =  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.nameType  =  nameType;	  this.nameType,    nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	289	None	replace
1937	[BUG]  [BUGGY]  this.nameType,  ruleType,  new  RuleType(ruleType,  concat),  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  new  RuleType(ruleType,  concat),  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  new  RuleType(ruleType,  concat),	  this.nameType,    nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	289	None	replace
1938	[BUG]  [BUGGY]  super(nameType,  ruleType.nodeType);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType.nodeType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.nodeType);	  super(nameType,    ruleType.ruleType);    	non-compiled	[CE]  illegal  start  of  type	319	None	replace
1939	[BUG]  [BUGGY]  super(nameType,  ruleType.null);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType.null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.null);	  super(nameType,    ruleType.ruleType);    	non-compiled	[CE]  illegal  start  of  type	319	None	replace
1940	[BUG]  [BUGGY]  this.maxPhonemes  =  concat?  DEFAULT_MAX_PHONEMES  :  DEFAULT_MAX_PHONEMES;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  concat?  DEFAULT_MAX_PHONEMES  :  DEFAULT_MAX_PHONEMES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  concat?  DEFAULT_MAX_PHONEMES  :  DEFAULT_MAX_PHONEMES;	  this.maxPhonemes    =    concat;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
1941	[BUG]  [BUGGY]  this.maxPhonemes  =  maxPhonemes?  concat  :  DEFAULT_MAX_PHONEMES;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  maxPhonemes?  concat  :  DEFAULT_MAX_PHONEMES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  maxPhonemes?  concat  :  DEFAULT_MAX_PHONEMES;	  this.maxPhonemes    =    concat;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
1942	[BUG]  [BUGGY]  this.maxPhonemes  =  concat?  DEFAULT_MAX_PHONEMES  :  DEFAULT_PARENAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  concat?  DEFAULT_MAX_PHONEMES  :  DEFAULT_PARENAME_PREFIXES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  concat?  DEFAULT_MAX_PHONEMES  :  DEFAULT_PARENAME_PREFIXES;	  this.maxPhonemes    =    concat;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
1943	[BUG]  [BUGGY]  this.maxPhonemes  =  concat?  DEFAULT_MAX_PHONEMES  :  DEFAULT_PAX_PHONEMES;  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  concat?  DEFAULT_MAX_PHONEMES  :  DEFAULT_PAX_PHONEMES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  concat?  DEFAULT_MAX_PHONEMES  :  DEFAULT_PAX_PHONEMES;	  this.maxPhonemes    =    concat;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
1944	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType  :((  RuleType)nameType).getName();  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType  :((  RuleType)nameType).getName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType  :((  RuleType)nameType).getName();	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :((    RuleType)nameType).getName();    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
1945	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType  :((  RuleType)nameType).getName();  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType  :((  RuleType)nameType).getName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType  :((  RuleType)nameType).getName();	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :((    RuleType)nameType).getName();    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
1946	[BUG]  [BUGGY]  NameType  nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).getName();  [CE]  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).getName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  nameType  instanceof  RuleType?  nameType  :((  RuleType)nameType).getName();	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :((    RuleType)nameType).getName();    	non-compiled	[CE]  	149	None	replace
1947	[BUG]  [BUGGY]  this.nameType  =  ruleType  instanceof  RuleType?  nameType  :((  RuleType)nameType).getName();  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType  instanceof  RuleType?  nameType  :((  RuleType)nameType).getName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType  instanceof  RuleType?  nameType  :((  RuleType)nameType).getName();	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :((    RuleType)nameType).getName();    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
1948	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  java.util.ArrayList  <  String,  Rule>();  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  java.util.ArrayList  <  String,  Rule>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  java.util.ArrayList  <  String,  Rule>();	  NameType    nameType,    ruleType,    concat.names    =    new    LinkedHashMap    <    String,    Rule>();    	non-compiled	[CE]  <identifier>  expected	336	None	replace
1949	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  java.util.ArrayList  <  Rule>();  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  java.util.ArrayList  <  Rule>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  java.util.ArrayList  <  Rule>();	  NameType    nameType,    ruleType,    concat.names    =    new    LinkedHashMap    <    String,    Rule>();    	non-compiled	[CE]  <identifier>  expected	336	None	replace
1950	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.nameType,  ruleType,  concat,  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.nameType,  ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.nameType,  ruleType,  concat,	  this.nameType    =    nameType;    this.nameType,    concat,    	non-compiled	[CE]  illegal  start  of  type	208	None	replace
1951	[BUG]  [BUGGY]  This.nameType  =  nameType;  this.nameType,  concat,  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.nameType  =  nameType;  this.nameType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType  =  nameType;  this.nameType,  concat,	  this.nameType    =    nameType;    this.nameType,    concat,    	non-compiled	[CE]  <identifier>  expected	208	None	replace
1952	[BUG]  [BUGGY]  NameType  nameType  =  ruleType;  this.nameType,  concat,  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType;  this.nameType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType;  this.nameType,  concat,	  this.nameType    =    nameType;    this.nameType,    concat,    	non-compiled	[CE]  	208	None	replace
1953	[BUG]  [BUGGY]  this.nameType  =  ruleType!=  RuleType.NAME_PREFIXES?  nameType.getName()  :  null;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType!=  RuleType.NAME_PREFIXES?  nameType.getName()  :  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType!=  RuleType.NAME_PREFIXES?  nameType.getName()  :  null;	  this.nameType    =    nameType!=    RuleType.NAME_PREFIXES?    nameType.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	308	None	replace
1954	[BUG]  [BUGGY]  super(nameType,  ruleType.ruleType.concat);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType.ruleType.concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.ruleType.concat);	  super(nameType,    ruleType.concat);    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
1955	[BUG]  [BUGGY]  this(nameType,  ruleType.concat);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType.concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType.concat);	  super(nameType,    ruleType.concat);    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
1956	[BUG]  [BUGGY]  super(nameType,  ruleType.constructor);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType.constructor);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.constructor);	  super(nameType,    ruleType.concat);    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
1957	[BUG]  [BUGGY]  super(nameType,  ruleType.getConcat());  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType.getConcat());  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.getConcat());	  super(nameType,    ruleType.concat);    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
1958	[BUG]  [BUGGY]  static  final  boolean  maxPhonemes,  final  RuleType  ruleType)  {  [CE]  modifier  static  not  allowed  here  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  static  final  boolean  maxPhonemes,  final  RuleType  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  boolean  maxPhonemes,  final  RuleType  ruleType)  {	  final    boolean    maxPhonemes,    final    RuleType    ruleType)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	271	None	replace
1959	[BUG]  [BUGGY]  NameType  nameType  =  ruleType!=  null?  nameType.getName()  :  nameType.getName();  [CE]  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType!=  null?  nameType.getName()  :  nameType.getName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType!=  null?  nameType.getName()  :  nameType.getName();	  this.nameType    =    nameType!=    null?    nameType.getName()    :    ruleType.getName();    	non-compiled	[CE]  	299	None	replace
1960	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  ruleType.getLanguage();  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  ruleType.getLanguage();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.getName()  :  ruleType.getLanguage();	  this.nameType    =    nameType!=    null?    nameType.getName()    :    ruleType.getName();    	non-compiled	[CE]  illegal  start  of  type	299	None	replace
1961	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  DEFAULT_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  null,  DEFAULT_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null,  DEFAULT_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	261	None	replace
1962	[BUG]  [BUGGY]  final  int  maxPhonemes,  String.valueOf(concat)||  nameType  ==  RuleType.NAME_PREFIXES;  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  String.valueOf(concat)||  nameType  ==  RuleType.NAME_PREFIXES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  String.valueOf(concat)||  nameType  ==  RuleType.NAME_PREFIXES;	  final    int    maxPhonemes,    String.valueOf(concat))    {    	non-compiled	[CE]  <identifier>  expected	243	None	replace
1963	[BUG]  [BUGGY]  final  int  maxPhonemes,  String.valueOf(concat)||  nameType!=  RuleType.NAME_PREFIXES;  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  String.valueOf(concat)||  nameType!=  RuleType.NAME_PREFIXES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  String.valueOf(concat)||  nameType!=  RuleType.NAME_PREFIXES;	  final    int    maxPhonemes,    String.valueOf(concat))    {    	non-compiled	[CE]  <identifier>  expected	243	None	replace
1964	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getReferenceName(),  concat);  [CE]  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getReferenceName(),  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getReferenceName(),  concat);	  NameType    nameType    =    ruleType.getName(),    concat);    	non-compiled	[CE]  	140	None	replace
1965	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRawName(),  concat);  [CE]  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getRawName(),  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getRawName(),  concat);	  NameType    nameType    =    ruleType.getName(),    concat);    	non-compiled	[CE]  	140	None	replace
1966	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getNAME_PREFIXES());  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getNAME_PREFIXES());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getNAME_PREFIXES());	  this.ruleType    =    new    RuleType(nameType.getName(),    ruleType.getSimpleName());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
1967	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getFullName());  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getFullName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getFullName());	  this.ruleType    =    new    RuleType(nameType.getName(),    ruleType.getSimpleName());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
1968	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_PLAIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_PLAIN_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_PLAIN_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PLAIN_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	314	None	replace
1969	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  nameType.getLanguage();  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  nameType.getLanguage();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getName()  :  nameType.getLanguage();	  this.nameType    =    nameType!=    null?    nameType.getName()    :    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	202	None	replace
1970	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  nameType.getLocalName();  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  nameType.getLocalName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getName()  :  nameType.getLocalName();	  this.nameType    =    nameType!=    null?    nameType.getName()    :    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	202	None	replace
1971	[BUG]  [BUGGY]  super(nameType,  ruleType.toString(),  concat);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType.toString(),  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.toString(),  concat);	  super(ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	184	None	replace
1972	[BUG]  [BUGGY]  Super(nameType,  ruleType,  concat);  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Super(nameType,  ruleType,  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Super(nameType,  ruleType,  concat);	  super(ruleType,    concat);    	non-compiled	[CE]  <identifier>  expected	184	None	replace
1973	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  int  i)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  int  i)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  int  i)  {	  final    int    maxPhonemes,    final    concat)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	49	None	replace
1974	[BUG]  [BUGGY]  @SuppressWarnings( "unchecked ")  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  @SuppressWarnings( "unchecked ")  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	@SuppressWarnings( "unchecked ")	  final    int    maxPhonemes,    final    concat)    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
1975	[BUG]  [BUGGY]  NameType  nameType  =  nameType.getRuleType();  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  nameType.getRuleType();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  nameType.getRuleType();	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	332	None	replace
1976	[BUG]  [BUGGY]  final  RuleType  ruleType  =  nameType.getRuleType();  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  RuleType  ruleType  =  nameType.getRuleType();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  RuleType  ruleType  =  nameType.getRuleType();	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	332	None	replace
1977	[BUG]  [BUGGY]  final  RuleType  ruleType  =  nameType.getRule();  [CE]  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  RuleType  ruleType  =  nameType.getRule();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  RuleType  ruleType  =  nameType.getRule();	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	332	None	replace
1978	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.toString()  : "null ",  nameType);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.toString()  : "null ",  nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.toString()  : "null ",  nameType);	  this.nameType    =    nameType    ==    null?    nameType.toString()    :   "null   ";    	non-compiled	[CE]  illegal  start  of  type	302	None	replace
1979	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.toString()  :  NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.toString()  :  NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.toString()  :  NAME_PREFIXES;	  this.nameType    =    nameType    ==    null?    nameType.toString()    :   "null   ";    	non-compiled	[CE]  illegal  start  of  type	302	None	replace
1980	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.nameType    =    nameType;    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	206	None	replace
1981	[BUG]  [BUGGY]  if(nameType!=  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType!=  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.nameType    =    nameType;    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	206	None	replace
1982	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }	  this.nameType    =    nameType;    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	206	None	replace
1983	[BUG]  [BUGGY]  if(nameType!=  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType!=  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }	  this.nameType    =    nameType;    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	206	None	replace
1984	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.nameType    =    nameType;    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	206	None	replace
1985	[BUG]  [BUGGY]  if(nameType!=  RuleType.NAME)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType!=  RuleType.NAME)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  RuleType.NAME)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.nameType    =    nameType;    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	206	None	replace
1986	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  else  {  throw  new  IllegalStateException( " ");  }	  this.nameType    =    nameType;    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	206	None	replace
1987	[BUG]  [BUGGY]  if(nameType!=  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType!=  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  else  {  throw  new  IllegalStateException( " ");  }	  this.nameType    =    nameType;    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	206	None	replace
1988	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(ruleType);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(ruleType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(ruleType);	  this.ruleType    =    new    RuleType(nameType);    	non-compiled	[CE]  illegal  start  of  type	233	None	replace
1989	[BUG]  [BUGGY]  this.phonemeBuilder  =  Lang.instance(numberType);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Lang.instance(numberType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Lang.instance(numberType);	  this.phonemeBuilder    =    Lang.instance(nameType);    	non-compiled	[CE]  illegal  start  of  type	283	None	replace
1990	[BUG]  [BUGGY]  this.phonemeBuilder  =  Lang.instance(nameType  +  1);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Lang.instance(nameType  +  1);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Lang.instance(nameType  +  1);	  this.phonemeBuilder    =    Lang.instance(nameType);    	non-compiled	[CE]  illegal  start  of  type	283	None	replace
1991	[BUG]  [BUGGY]  final  int  maxPhonemes,  RuleType  ruleType,  boolean  concat)  {  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  RuleType  ruleType,  boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  RuleType  ruleType,  boolean  concat)  {	  final    int    maxPhonemes,    String    nameType,    boolean    concat)    {    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine	44	None	replace
1992	[BUG]  [BUGGY]  final  int  maxPhonemes,  String  type,  boolean  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  String  type,  boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  String  type,  boolean  concat)  {	  final    int    maxPhonemes,    String    nameType,    boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	44	None	replace
1993	[BUG]  [BUGGY]  final  int  maxPhonemes,  nameType,  concat)  {  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  nameType,  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  nameType,  concat)  {	  final    int    maxPhonemes,    String    nameType,    boolean    concat)    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1994	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat  =  null;  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat  =  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat  =  null;	  NameType    nameType,    RuleType    ruleType,    concat;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
1995	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat  =  null;  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat  =  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  concat  =  null;	  NameType    nameType,    RuleType    ruleType,    concat;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
1996	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat  =  false;  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  concat  =  false;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  concat  =  false;	  NameType    nameType,    RuleType    ruleType,    concat;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
1997	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat  =  true;  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat  =  true;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat  =  true;	  NameType    nameType,    RuleType    ruleType,    concat;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
1998	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  0,  this.maxPhonemes);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  0,  this.maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  0,  this.maxPhonemes);	  super(nameType,    ruleType,    concat,    this.maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	287	None	replace
1999	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  this.maxPhonemes  +  1);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  this.maxPhonemes  +  1);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  this.maxPhonemes  +  1);	  super(nameType,    ruleType,    concat,    this.maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	287	None	replace
2000	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  this.maxPhonemes  -  1);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  this.maxPhonemes  -  1);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  this.maxPhonemes  -  1);	  super(nameType,    ruleType,    concat,    this.maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	287	None	replace
2001	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  this.maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  this.maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  this.maxPhonemes);	  super(nameType,    ruleType,    concat,    this.maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	287	None	replace
2002	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  null,  this.maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  null,  this.maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  null,  this.maxPhonemes);	  super(nameType,    ruleType,    concat,    this.maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	287	None	replace
2003	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.ruleType,  concat;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.ruleType,  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.ruleType,  concat;	  this.nameType,    ruleType,    concat;    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
2004	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat  +  1;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat  +  1;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat  +  1;	  this.nameType,    ruleType,    concat;    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
2005	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  0,  DEFAULT_PREFIXES);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  0,  DEFAULT_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  0,  DEFAULT_PREFIXES);	  super(nameType,    ruleType,    concat,    DEFAULT_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	218	None	replace
2006	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  2);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  2);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  2);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    2);    	non-compiled	[CE]  illegal  start  of  type	328	None	replace
2007	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  2);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  2);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  2);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    2);    	non-compiled	[CE]  illegal  start  of  type	328	None	replace
2008	[BUG]  [BUGGY]  nameType,  concat,  null);  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  concat,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  concat,  null);	  this.nameType,    nameType,    concat,    null);    	non-compiled	[CE]  <identifier>  expected	123	None	replace
2009	[BUG]  [BUGGY]  super(nameType.getLanguage());  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType.getLanguage());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType.getLanguage());	  super(nameType.getName());    	non-compiled	[CE]  illegal  start  of  type	183	None	replace
2010	[BUG]  [BUGGY]  super(nameType.getRawName());  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType.getRawName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType.getRawName());	  super(nameType.getName());    	non-compiled	[CE]  illegal  start  of  type	183	None	replace
2011	[BUG]  [BUGGY]  final  NameType  nameType,  ruleType,  boolean  concat,  [CE]  <identifier>  expected  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType,  ruleType,  boolean  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType,  ruleType,  boolean  concat,	  NameType    nameType,    ruleType,    boolean    concat,    	non-compiled	[CE]  <identifier>  expected	204	None	replace
2012	[BUG]  [BUGGY]  NameType  nameType,  ruleType.nameType,  boolean  concat,  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.nameType,  boolean  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.nameType,  boolean  concat,	  NameType    nameType,    ruleType,    boolean    concat,    	non-compiled	[CE]  <identifier>  expected	204	None	replace
2013	[BUG]  [BUGGY]  NameType  nameType  =  titleType.getName(),  concat;  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  titleType.getName(),  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  titleType.getName(),  concat;	  NameType    nameType    =    nameType.getName(),    concat;    	non-compiled	[CE]  	88	None	replace
2014	[BUG]  [BUGGY]  NameType  nameType  =  RuleType.class.getName(),  concat;  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  RuleType.class.getName(),  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  RuleType.class.getName(),  concat;	  NameType    nameType    =    nameType.getName(),    concat;    	non-compiled	[CE]  	88	None	replace
2015	[BUG]  [BUGGY]  NameType  nameType  =  nameType.getName(),  concat  +  1;  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  nameType.getName(),  concat  +  1;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  nameType.getName(),  concat  +  1;	  NameType    nameType    =    nameType.getName(),    concat;    	non-compiled	[CE]  	88	None	replace
2016	[BUG]  [BUGGY]  NameType  nameType  =(ruleType  ==  null)?  null  :  ruleType.getName();  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =(ruleType  ==  null)?  null  :  ruleType.getName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =(ruleType  ==  null)?  null  :  ruleType.getName();	  NameType    nameType    =    rules.getName();    	non-compiled	[CE]  	195	None	replace
2017	[BUG]  [BUGGY]  NameType  nameType  =(ruleType  ==  null)?  null  :  rules.getName();  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =(ruleType  ==  null)?  null  :  rules.getName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =(ruleType  ==  null)?  null  :  rules.getName();	  NameType    nameType    =    rules.getName();    	non-compiled	[CE]  	195	None	replace
2018	[BUG]  [BUGGY]  NameType  nameType  =(ruleType  ==  null?  null  :  ruleType.getName());  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =(ruleType  ==  null?  null  :  ruleType.getName());  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =(ruleType  ==  null?  null  :  ruleType.getName());	  NameType    nameType    =    rules.getName();    	non-compiled	[CE]  	195	None	replace
2019	[BUG]  [BUGGY]  NameType  nameType  =(ruleType  ==  null?  null  :  rules.getName());  [CE]  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =(ruleType  ==  null?  null  :  rules.getName());  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =(ruleType  ==  null?  null  :  rules.getName());	  NameType    nameType    =    rules.getName();    	non-compiled	[CE]  	195	None	replace
2020	[BUG]  [BUGGY]  NameType  nameType  =  this.rules.getName();  [CE]  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  this.rules.getName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  this.rules.getName();	  NameType    nameType    =    rules.getName();    	non-compiled	[CE]  	195	None	replace
2021	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.ruleType,  Concat,  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.ruleType,  Concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.ruleType,  Concat,	  this.nameType,    ruleType,    Concat,    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
2022	[BUG]  [BUGGY]  this.nameType,  ruleType,  boolean  concat,  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  boolean  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  boolean  concat,	  this.nameType,    ruleType,    Concat,    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
2023	[BUG]  [BUGGY]  this(nameType.getName(),  ruleType);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType.getName(),  ruleType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType.getName(),  ruleType);	  this(nameType,    ruleType);    	non-compiled	[CE]  illegal  start  of  type	230	None	replace
2024	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat?  null  :  nameType);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat?  null  :  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat?  null  :  nameType);	  this(nameType,    ruleType);    	non-compiled	[CE]  illegal  start  of  type	230	None	replace
2025	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  0)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  0)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  0)  {	  this(nameType,    ruleType,    concat,    DEFAULT_PARENTHESES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	297	None	replace
2026	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_GLOBAL_PARAMS);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_GLOBAL_PARAMS);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_GLOBAL_PARAMS);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_GLOBAL_PARAMS);    	non-compiled	[CE]  illegal  start  of  type	315	None	replace
2027	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_GLOBAL_PARAMS,  DEFAULT_MIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_GLOBAL_PARAMS,  DEFAULT_MIN_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_GLOBAL_PARAMS,  DEFAULT_MIN_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_GLOBAL_PARAMS);    	non-compiled	[CE]  illegal  start  of  type	315	None	replace
2028	[BUG]  [BUGGY]  super(ruleType);  this.maxPhonemes  =  concat;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(ruleType);  this.maxPhonemes  =  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(ruleType);  this.maxPhonemes  =  concat;	  super(nameType);    this.maxPhonemes    =    concat;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
2029	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType);  this.maxPhonemes  =  concat;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType);  this.maxPhonemes  =  concat;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  nameType);  this.maxPhonemes  =  concat;	  super(nameType);    this.maxPhonemes    =    concat;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
2030	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  NameType.NAME_PREFIXES  :  ruleType;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  NameType.NAME_PREFIXES  :  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  NameType.NAME_PREFIXES  :  ruleType;	  this.nameType    =    nameType    {    null?    NameType.NAME_PREFIXES    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
2031	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maximumPhonemes)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maximumPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maximumPhonemes)  {	  this(nameType,    ruleType,    concat,    NAME_PREFIXES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	215	None	replace
2032	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  DEFAULT_PHONEMES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  DEFAULT_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  maxPhonemes,  DEFAULT_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	298	None	replace
2033	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  0,  DEFAULT_PHONEMES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  0,  DEFAULT_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  0,  DEFAULT_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	298	None	replace
2034	[BUG]  [BUGGY]  super(nameType.getName(),  nameType);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType.getName(),  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType.getName(),  nameType);	  super(ruleType);    	non-compiled	[CE]  illegal  start  of  type	182	None	replace
2035	[BUG]  [BUGGY]  setRuleType(ruleType);  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  setRuleType(ruleType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	setRuleType(ruleType);	  super(ruleType);    	non-compiled	[CE]  <identifier>  expected	182	None	replace
2036	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  0,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  0,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  NAME_PREFIXES,  0,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
2037	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  0,  nameType.length);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  concat,  0,  nameType.length);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  0,  nameType.length);	  this.nameType,    nameType,    concat,    0);    	non-compiled	[CE]  illegal  start  of  type	248	None	replace
2038	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  0));  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  0));  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  0));	  super(nameType,    ruleType,    concat,    maxPhonemes));    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
2039	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes  +  1));  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes  +  1));  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes  +  1));	  super(nameType,    ruleType,    concat,    maxPhonemes));    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
2040	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes  -  2);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes  -  2);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes  -  2);	  super(nameType,    ruleType,    concat,    maxPhonemes));    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
2041	[BUG]  [BUGGY]  this.minPhonemes  =  minPhonemes  -  1;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.minPhonemes  =  minPhonemes  -  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.minPhonemes  =  minPhonemes  -  1;	  this.minPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
2042	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getQualifiedName()  :  nameType.getQualifiedName();  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getQualifiedName()  :  nameType.getQualifiedName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getQualifiedName()  :  nameType.getQualifiedName();	  this.nameType    =    nameType.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  type	267	None	replace
2043	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getQualifiedName()  :  nameType.getQualifiedName();  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getQualifiedName()  :  nameType.getQualifiedName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.getQualifiedName()  :  nameType.getQualifiedName();	  this.nameType    =    nameType.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  type	267	None	replace
2044	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getQualifiedName()  :  DEFAULT_MAX_PHONEMES;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getQualifiedName()  :  DEFAULT_MAX_PHONEMES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getQualifiedName()  :  DEFAULT_MAX_PHONEMES;	  this.nameType    =    nameType.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  type	267	None	replace
2045	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getQualifiedName()  :  DEFAULT_NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getQualifiedName()  :  DEFAULT_NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getQualifiedName()  :  DEFAULT_NAME_PREFIXES;	  this.nameType    =    nameType.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  type	267	None	replace
2046	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.toLowerCase()  :  nameType.toLowerCase();  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.toLowerCase()  :  nameType.toLowerCase();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.toLowerCase()  :  nameType.toLowerCase();	  this.nameType    =    nameType.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
2047	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.toLowerCase()  :  nameType.toUpperCase();  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.toLowerCase()  :  nameType.toUpperCase();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.toLowerCase()  :  nameType.toUpperCase();	  this.nameType    =    nameType.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
2048	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.toLowerCase()  :  ruleType.toLowerCase();  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.toLowerCase()  :  ruleType.toLowerCase();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.toLowerCase()  :  ruleType.toLowerCase();	  this.nameType    =    nameType.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
2049	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  6);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  6);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  6);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    4);    	non-compiled	[CE]  illegal  start  of  type	329	None	replace
2050	[BUG]  [BUGGY]  nameType,  ruleType,  finalRules,  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  finalRules,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  finalRules,	  NameType    nameType,    RuleType    ruleType,    finalRules,    	non-compiled	[CE]  <identifier>  expected	174	None	replace
2051	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  finallyRules,  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  finallyRules,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  finallyRules,	  NameType    nameType,    RuleType    ruleType,    finalRules,    	non-compiled	[CE]  <identifier>  expected	174	None	replace
2052	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  +  1L;  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  +  1L;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes  +  1L;	  final    int    maxPhonemes    =    nameType.maxPhonemes    +    1;    	non-compiled	[CE]  	25	None	replace
2053	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  int  maxPhonemes;  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  int  maxPhonemes;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  int  maxPhonemes;	  NameType    nameType,    ruleType,    concat,    this.numberPhonemes,    	non-compiled	[CE]  <identifier>  expected	39	None	replace
2054	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  int  maxPhonemes  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  int  maxPhonemes  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  int  maxPhonemes	  NameType    nameType,    ruleType,    concat,    this.numberPhonemes,    	non-compiled	[CE]  <identifier>  expected	39	None	replace
2055	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  finalRules;  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  finalRules;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  finalRules;	  NameType    nameType,    ruleType,    concat,    this.numberPhonemes,    	non-compiled	[CE]  <identifier>  expected	39	None	replace
2056	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.ruleType,  concat);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.ruleType,  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.ruleType,  concat);	  this.nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
2057	[BUG]  [BUGGY]  this.ruleType  ||  nameType  ==  RuleType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  ||  nameType  ==  RuleType.NAME_PREFIXES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  ||  nameType  ==  RuleType.NAME_PREFIXES;	  this.ruleType;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
2058	[BUG]  [BUGGY]  this.ruleType  ||  nameType!=  RuleType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  ||  nameType!=  RuleType.NAME_PREFIXES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  ||  nameType!=  RuleType.NAME_PREFIXES;	  this.ruleType;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
2059	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat  +  1);  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat  +  1);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat  +  1);	  NameType    nameType,    ruleType,    concat);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
2060	[BUG]  [BUGGY]  this.maxPhonemes  =  nameType.maxPhonemes  +  1;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  nameType.maxPhonemes  +  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  nameType.maxPhonemes  +  1;	  this.maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
2061	[BUG]  [BUGGY]  this.maxPhonemes  =  nameType.maxPhonemes  -  1;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  nameType.maxPhonemes  -  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  nameType.maxPhonemes  -  1;	  this.maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
2062	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat  +  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat  +  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat  +	  NameType    nameType,    ruleType,    concat    	non-compiled	[CE]  <identifier>  expected	41	None	replace
2063	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat  &&  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat  &&  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat  &&	  NameType    nameType,    ruleType,    concat    	non-compiled	[CE]  <identifier>  expected	41	None	replace
2064	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_PREFIXES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	214	None	replace
2065	[BUG]  [BUGGY]  super(new  NameType(nameType,  concat),  ruleType);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(new  NameType(nameType,  concat),  ruleType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(nameType,  concat),  ruleType);	  super(new    NameType(nameType),    ruleType);    	non-compiled	[CE]  illegal  start  of  type	229	None	replace
2066	[BUG]  [BUGGY]  super(new  NameType(ruleType),  nameType);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(new  NameType(ruleType),  nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(ruleType),  nameType);	  super(new    NameType(nameType),    ruleType);    	non-compiled	[CE]  illegal  start  of  type	229	None	replace
2067	[BUG]  [BUGGY]  super(new  NameType(nameType),  concat,  ruleType);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(new  NameType(nameType),  concat,  ruleType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(nameType),  concat,  ruleType);	  super(new    NameType(nameType),    ruleType);    	non-compiled	[CE]  illegal  start  of  type	229	None	replace
2068	[BUG]  [BUGGY]  super(new  NameType(nameType.getName()),  ruleType);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(new  NameType(nameType.getName()),  ruleType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(nameType.getName()),  ruleType);	  super(new    NameType(nameType),    ruleType);    	non-compiled	[CE]  illegal  start  of  type	229	None	replace
2069	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  +  4;  [CE]  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  +  4;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes  +  4;	  final    int    maxPhonemes    =    nameType.maxPhonemes    +    2;    	non-compiled	[CE]  	255	None	replace
2070	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  nameType);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  nameType);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
2071	[BUG]  [BUGGY]  super(nameType,  ruleType.nameElement);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType.nameElement);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.nameElement);	  super(nameType,    ruleType.nameType);    	non-compiled	[CE]  illegal  start  of  type	320	None	replace
2072	[BUG]  [BUGGY]  super(nameType.nameType,  concat);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType.nameType,  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType.nameType,  concat);	  super(nameType,    ruleType.nameType);    	non-compiled	[CE]  illegal  start  of  type	320	None	replace
2073	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_PREFIXES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	211	None	replace
2074	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_PARAMS);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_PARAMS);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_PARAMS);	  this(nameType,    ruleType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	211	None	replace
2075	[BUG]  [BUGGY]  final  char  maxPhonemes,  int  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  char  maxPhonemes,  int  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  char  maxPhonemes,  int  concat)  {	  final    char    maxPhonemes,    boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	273	None	replace
2076	[BUG]  [BUGGY]  this.nameType  =  nameType.getRuleType();  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getRuleType();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getRuleType();	  this.nameType    =    nameType.getRawName();    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
2077	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  nameType)  {  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_MAX_PHONEMES,  nameType)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
2078	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  DEFAULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  null,  DEFAULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null,  DEFAULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
2079	[BUG]  [BUGGY]  this.ruleType  =  RuleType.NAME_PREFIXES  +  nameType;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  RuleType.NAME_PREFIXES  +  nameType;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  RuleType.NAME_PREFIXES  +  nameType;	  this.ruleType    =    RuleType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2080	[BUG]  [BUGGY]  this.ruleType  =  RuleType.NAME;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  RuleType.NAME;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  RuleType.NAME;	  this.ruleType    =    RuleType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2081	[BUG]  [BUGGY]  this.ruleType  =  RuleType.NAME_PREFIXES  |  ruleType;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  RuleType.NAME_PREFIXES  |  ruleType;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  RuleType.NAME_PREFIXES  |  ruleType;	  this.ruleType    =    RuleType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2082	[BUG]  [BUGGY]  this.ruleType  =  RuleType.NAME_PREFIXES  |  RuleType.DECEMBER;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  RuleType.NAME_PREFIXES  |  RuleType.DECEMBER;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  RuleType.NAME_PREFIXES  |  RuleType.DECEMBER;	  this.ruleType    =    RuleType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2083	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  3);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  3);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  3);	  super(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	167	None	replace
2084	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  4);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  4);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  4);	  super(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	167	None	replace
2085	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  2);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  2);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  2);	  super(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	167	None	replace
2086	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(null,  nameType);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(null,  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(null,  nameType);	  this.ruleType    =    new    RuleType(nameType,    ruleType);    	non-compiled	[CE]  illegal  start  of  type	232	None	replace
2087	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  new  RuleType(ruleType),  concat,  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  new  RuleType(ruleType),  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.ruleType  =  new  RuleType(ruleType),  concat,	  this.nameType,    new    RuleType(ruleType),    concat,    	non-compiled	[CE]  illegal  start  of  type	291	None	replace
2088	[BUG]  [BUGGY]  this.nameType,  new  RuleType(this.ruleType),  concat,  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  new  RuleType(this.ruleType),  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  new  RuleType(this.ruleType),  concat,	  this.nameType,    new    RuleType(ruleType),    concat,    	non-compiled	[CE]  illegal  start  of  type	291	None	replace
2089	[BUG]  [BUGGY]  this.nameType  =  nameType,  new  RuleType(ruleType),  concat,  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType,  new  RuleType(ruleType),  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType,  new  RuleType(ruleType),  concat,	  this.nameType,    new    RuleType(ruleType),    concat,    	non-compiled	[CE]  illegal  start  of  type	291	None	replace
2090	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  DEFAULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  DEFAULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  DEFAULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
2091	[BUG]  [BUGGY]  this.phonemeBuilder  =  new  PhonemeBuilder(nameType);  this.maxPhonemes  =  0;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  new  PhonemeBuilder(nameType);  this.maxPhonemes  =  0;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  new  PhonemeBuilder(nameType);  this.maxPhonemes  =  0;	  this.phonemeBuilder    =    new    PhonemeBuilder(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
2092	[BUG]  [BUGGY]  this.phonemeBuilder  =  new  PhonemeBuilder(nameType);  this.maxPhonemes  =  maxPhonemes  +  1;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  new  PhonemeBuilder(nameType);  this.maxPhonemes  =  maxPhonemes  +  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  new  PhonemeBuilder(nameType);  this.maxPhonemes  =  maxPhonemes  +  1;	  this.phonemeBuilder    =    new    PhonemeBuilder(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
2093	[BUG]  [BUGGY]  this.nameType  =  nameType.substring(0,  nameType.length()));  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.substring(0,  nameType.length()));  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.substring(0,  nameType.length()));	  this.nameType    =    nameType.substring(0,    nameType.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
2094	[BUG]  [BUGGY]  this.nameType  =  nameType.substring(0,  names.length());  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.substring(0,  names.length());  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.substring(0,  names.length());	  this.nameType    =    nameType.substring(0,    nameType.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
2095	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  Set  <  Rule>();  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  Set  <  Rule>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  Set  <  Rule>();	  NameType    nameType,    ruleType,    concat.names    =    new    HashSet    <    Rule>();    	non-compiled	[CE]  <identifier>  expected	334	None	replace
2096	[BUG]  [BUGGY]  this.nameType)  {  nameType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType)  {  nameType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType)  {  nameType  =  ruleType;  }	  nameType)    {    this.nameType    =    nameType;    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
2097	[BUG]  [BUGGY]  nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(nameType!=    ruleType)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	294	None	replace
2098	[BUG]  [BUGGY]  nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  [CE]  <identifier>  expected  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }	  if(nameType!=    ruleType)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	294	None	replace
2099	[BUG]  [BUGGY]  NameType  ruleType,  RuleType  ruleType,  final  boolean  concat,  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType,  RuleType  ruleType,  final  boolean  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType,  RuleType  ruleType,  final  boolean  concat,	  NameType    ruleType,    RuleType    ruleType,    boolean    concat,    	non-compiled	[CE]  illegal  start  of  type	286	None	replace
2100	[BUG]  [BUGGY]  NameType  ruleType,  RuleType  ruleType,  Boolean  concat,  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType,  RuleType  ruleType,  Boolean  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType,  RuleType  ruleType,  Boolean  concat,	  NameType    ruleType,    RuleType    ruleType,    boolean    concat,    	non-compiled	[CE]  illegal  start  of  type	286	None	replace
2101	[BUG]  [BUGGY]  NameType  ruleType,  RuleType  ruleType,  short  concat,  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType,  RuleType  ruleType,  short  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType,  RuleType  ruleType,  short  concat,	  NameType    ruleType,    RuleType    ruleType,    boolean    concat,    	non-compiled	[CE]  illegal  start  of  type	286	None	replace
2102	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  null)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  null)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  null)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    nameType)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
2103	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PARENTHESES)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PARENTHESES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PARENTHESES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    nameType)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
2104	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  Concat.int  maxPhonemes,  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  Concat.int  maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  Concat.int  maxPhonemes,	  NameType    nameType,    RuleType    ruleType,    int    maxPhonemes,    	non-compiled	[CE]  <identifier>  expected	160	None	replace
2105	[BUG]  [BUGGY]  (final  boolean  maxPhonemes)||  nameType  ==  RuleType.NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  (final  boolean  maxPhonemes)||  nameType  ==  RuleType.NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	(final  boolean  maxPhonemes)||  nameType  ==  RuleType.NAME_PREFIXES);	  (final    boolean    maxPhonemes))    {    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
2106	[BUG]  [BUGGY]  (final  boolean  maxPhonemes  ||  nameType  ==  RuleType.NAME_PREFIXES))  {  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  (final  boolean  maxPhonemes  ||  nameType  ==  RuleType.NAME_PREFIXES))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	(final  boolean  maxPhonemes  ||  nameType  ==  RuleType.NAME_PREFIXES))  {	  (final    boolean    maxPhonemes))    {    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
2107	[BUG]  [BUGGY]  (final  boolean  maxPhonemes)||  nameType  ==  RuleType.NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  (final  boolean  maxPhonemes)||  nameType  ==  RuleType.NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	(final  boolean  maxPhonemes)||  nameType  ==  RuleType.NAME_PREFIXES)  {	  (final    boolean    maxPhonemes))    {    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
2108	[BUG]  [BUGGY]  (final  boolean  maxPhonemes)||  nameType  ==  RuleType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  (final  boolean  maxPhonemes)||  nameType  ==  RuleType.NAME_PREFIXES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	(final  boolean  maxPhonemes)||  nameType  ==  RuleType.NAME_PREFIXES;	  (final    boolean    maxPhonemes))    {    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
2109	[BUG]  [BUGGY]  (final  boolean  maxPhonemes)||  nameType!=  RuleType.NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  (final  boolean  maxPhonemes)||  nameType!=  RuleType.NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	(final  boolean  maxPhonemes)||  nameType!=  RuleType.NAME_PREFIXES);	  (final    boolean    maxPhonemes))    {    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
2110	[BUG]  [BUGGY]  this.nameType  =  ruleType!=  null?  nameType.toString()  :  nameType.toString();  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType!=  null?  nameType.toString()  :  nameType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType!=  null?  nameType.toString()  :  nameType.toString();	  this.nameType    =    nameType!=    null?    nameType.toString()    :    nameType.toString();    	non-compiled	[CE]  illegal  start  of  type	239	None	replace
2111	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  nameType.getLanguage();  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  nameType.getLanguage();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.getName()  :  nameType.getLanguage();	  this.nameType    =    nameType    ==    null?    nameType.getName()    :    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	203	None	replace
2112	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_PREFIXES);  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_PREFIXES);	  super(nameType,    ruleType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
2113	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_NAM_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_NAM_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_NAM_PHONEMES);	  super(nameType,    ruleType,    concat,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	168	None	replace
2114	[BUG]  [BUGGY]  final  PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder();  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder();	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    else    {    PhonemeBuilder    phonemeBuilder    =    new    PhonemeBuilder();    }    	non-compiled	[CE]  	331	None	replace
2115	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRules();  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType  =  nameType.getRules();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType  =  nameType.getRules();	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    else    {    PhonemeBuilder    phonemeBuilder    =    new    PhonemeBuilder();    }    	non-compiled	[CE]  	331	None	replace
2116	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getNameType();  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType  =  nameType.getNameType();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType  =  nameType.getNameType();	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    else    {    PhonemeBuilder    phonemeBuilder    =    new    PhonemeBuilder();    }    	non-compiled	[CE]  	331	None	replace
2117	[BUG]  [BUGGY]  NameType  ruleType  =  nameType.getRule();  [CE]  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType  =  nameType.getRule();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType  =  nameType.getRule();	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    else    {    PhonemeBuilder    phonemeBuilder    =    new    PhonemeBuilder();    }    	non-compiled	[CE]  	331	None	replace
2118	[BUG]  [BUGGY]  super(nameType);  this.ruleType  =  ruleType;  concat,  false);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType);  this.ruleType  =  ruleType;  concat,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType);  this.ruleType  =  ruleType;  concat,  false);	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    concat,    false);    	non-compiled	[CE]  illegal  start  of  type	277	None	replace
2119	[BUG]  [BUGGY]  NameType  nameType  =  ruleType;  this.ruleType  =  nameType;  concat,  false);  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType;  this.ruleType  =  nameType;  concat,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType;  this.ruleType  =  nameType;  concat,  false);	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    concat,    false);    	non-compiled	[CE]  	277	None	replace
2120	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  nameType.getDeclaredName();  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  nameType.getDeclaredName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getName()  :  nameType.getDeclaredName();	  this.nameType    =    nameType.getDeclaredName();    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
2121	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  nameType.getDeclaredName();  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  nameType.getDeclaredName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.getName()  :  nameType.getDeclaredName();	  this.nameType    =    nameType.getDeclaredName();    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
2122	[BUG]  [BUGGY]  this.nameType  =  NameType.NAME_PREFIXES  |  NameType.DEFAULT_MAX_PHONEMES;  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  NameType.NAME_PREFIXES  |  NameType.DEFAULT_MAX_PHONEMES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  NameType.NAME_PREFIXES  |  NameType.DEFAULT_MAX_PHONEMES;	  this.nameType    =    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
2123	[BUG]  [BUGGY]  this.nameType  =  NameType.NAME_PREFIXES  |  NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  NameType.NAME_PREFIXES  |  NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  NameType.NAME_PREFIXES  |  NAME_PREFIXES;	  this.nameType    =    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
2124	[BUG]  [BUGGY]  this.nameType  =  NameType.NAME_PREFIXES  +  nameType;  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  NameType.NAME_PREFIXES  +  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  NameType.NAME_PREFIXES  +  nameType;	  this.nameType    =    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
2125	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.NAME_PREFIXES;  [CE]  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.NAME_PREFIXES;	  this.nameType    =    NameType.NAME_PREFIXES;    	non-compiled	[CE]  	153	None	replace
2126	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PLOBAL_PREFIXES,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PLOBAL_PREFIXES,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PLOBAL_PREFIXES,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_GLOBAL_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	316	None	replace
2127	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_GLOBAL_PREFIXES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_GLOBAL_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_GLOBAL_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_GLOBAL_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	316	None	replace
2128	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_GLOBAL_PREFIXES,  DEFAULT_MIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_GLOBAL_PREFIXES,  DEFAULT_MIN_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_GLOBAL_PREFIXES,  DEFAULT_MIN_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_GLOBAL_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	316	None	replace
2129	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_RANGE_PREFIXES,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_RANGE_PREFIXES,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_RANGE_PREFIXES,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_GLOBAL_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	316	None	replace
2130	[BUG]  [BUGGY]  super(ruleType,  nameType,  concat,  true);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(ruleType,  nameType,  concat,  true);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(ruleType,  nameType,  concat,  true);	  super(nameType,    ruleType,    concat,    true);    	non-compiled	[CE]  illegal  start  of  type	166	None	replace
2131	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes,  nameType)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes,  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes,  nameType)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    nameType)    {    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
2132	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    nameType)    {    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
2133	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  nameType)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  maxPhonemes,  nameType)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    nameType)    {    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
2134	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  %  1;  [CE]  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  %  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes  %  1;	  final    int    maxPhonemes    =    nameType.maxPhonemes    &    1;    	non-compiled	[CE]  	29	None	replace
2135	[BUG]  [BUGGY]  this.ruleType  =  ruleType;  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  ruleType;  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  ruleType;  this.maxPhonemes  =  maxPhonemes;	  super(ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	223	None	replace
2136	[BUG]  [BUGGY]  if(ruleType!=  RuleType.NAME_PREFIXES)  {  super(ruleType);  this.maxPhonemes  =  maxPhonemes;  }  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(ruleType!=  RuleType.NAME_PREFIXES)  {  super(ruleType);  this.maxPhonemes  =  maxPhonemes;  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(ruleType!=  RuleType.NAME_PREFIXES)  {  super(ruleType);  this.maxPhonemes  =  maxPhonemes;  }	  super(ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	223	None	replace
2137	[BUG]  [BUGGY]  if(ruleType!=  RuleType.NAME_PREFIXES)  {  super(ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(ruleType!=  RuleType.NAME_PREFIXES)  {  super(ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(ruleType!=  RuleType.NAME_PREFIXES)  {  super(ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super(ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	223	None	replace
2138	[BUG]  [BUGGY]  if(ruleType!=  RuleType.NAME_PREFIXES)  {  this.ruleType  =  ruleType;  this.maxPhonemes  =  maxPhonemes;  }  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(ruleType!=  RuleType.NAME_PREFIXES)  {  this.ruleType  =  ruleType;  this.maxPhonemes  =  maxPhonemes;  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(ruleType!=  RuleType.NAME_PREFIXES)  {  this.ruleType  =  ruleType;  this.maxPhonemes  =  maxPhonemes;  }	  super(ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	223	None	replace
2139	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  NAME_PREFIXES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getName()  :  NAME_PREFIXES;	  this.nameType    =    nameType!=    null?    nameType.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
2140	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  ruleType;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  ruleType;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getName()  :  ruleType;	  this.nameType    =    nameType!=    null?    nameType.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
2141	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  ruleType;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  ruleType;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.getName()  :  ruleType;	  this.nameType    =    nameType!=    null?    nameType.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
2142	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC);  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  type	312	None	replace
2143	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_SYNTHETIC);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_SYNTHETIC);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_SYNTHETIC);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  type	312	None	replace
2144	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MIN_PHONEMES,  DEFAULT_SYNTHETIC);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MIN_PHONEMES,  DEFAULT_SYNTHETIC);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_MIN_PHONEMES,  DEFAULT_SYNTHETIC);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  type	312	None	replace
2145	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_NAME_PREFIXES,  DEFAULT_SYNTHETIC);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_NAME_PREFIXES,  DEFAULT_SYNTHETIC);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_NAME_PREFIXES,  DEFAULT_SYNTHETIC);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  type	312	None	replace
2146	[BUG]  [BUGGY]  nameType,  ruleType,  concat.names  =  new  ArrayList  <  RuleType>();  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  concat.names  =  new  ArrayList  <  RuleType>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat.names  =  new  ArrayList  <  RuleType>();	  NameType    nameType,    ruleType,    concat.names    =    new    LinkedList    <    RuleType>();    	non-compiled	[CE]  <identifier>  expected	337	None	replace
2147	[BUG]  [BUGGY]  nameType,  ruleType,  concat.names  =  new  LinkedList  <  RuleType>();  [CE]  <identifier>  expected  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  concat.names  =  new  LinkedList  <  RuleType>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat.names  =  new  LinkedList  <  RuleType>();	  NameType    nameType,    ruleType,    concat.names    =    new    LinkedList    <    RuleType>();    	non-compiled	[CE]  <identifier>  expected	337	None	replace
2148	[BUG]  [BUGGY]  this.nameType  =  nameType.toString();  this.ruleType  =  ruleType;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toString();  this.ruleType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toString();  this.ruleType  =  ruleType;	  NameType    nameType    =    nameType.toString();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
2149	[BUG]  [BUGGY]  super(nameType.toString(),  concat);  this.ruleType  =  ruleType;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType.toString(),  concat);  this.ruleType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType.toString(),  concat);  this.ruleType  =  ruleType;	  NameType    nameType    =    nameType.toString();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
2150	[BUG]  [BUGGY]  this.nameType  =  nameType.toString();  this.ruleType  =  ruleType.toString();  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toString();  this.ruleType  =  ruleType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toString();  this.ruleType  =  ruleType.toString();	  NameType    nameType    =    nameType.toString();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
2151	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :  NameType.BOOLEAN;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :  NameType.BOOLEAN;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?  nameType  :  NameType.BOOLEAN;	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
2152	[BUG]  [BUGGY]  this.ruleType,  ruleType,  concat,  nullPhonemes)  {  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType,  ruleType,  concat,  nullPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  ruleType,  concat,  nullPhonemes)  {	  this.ruleType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	270	None	replace
2153	[BUG]  [BUGGY]  final  int  maxPhonemes,  boolean  concat,  RuleType  ruleType)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  boolean  concat,  RuleType  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  boolean  concat,  RuleType  ruleType)  {	  final    int    maxPhonemes,    boolean    concat,    NameType    ruleType)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	275	None	replace
2154	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  Integer  ruleType,  boolean  concat)  {  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  Integer  ruleType,  boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  Integer  ruleType,  boolean  concat)  {	  final    int    maxPhonemes,    boolean    concat,    NameType    ruleType)    {    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine	275	None	replace
2155	[BUG]  [BUGGY]  final  int  maxPhonemes,  boolean  concat,  nameType)  {  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  boolean  concat,  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  boolean  concat,  nameType)  {	  final    int    maxPhonemes,    boolean    concat,    NameType    ruleType)    {    	non-compiled	[CE]  <identifier>  expected	275	None	replace
2156	[BUG]  [BUGGY]  nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(nameType!=    RuleType.NAME_PREFIXES)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	249	None	replace
2157	[BUG]  [BUGGY]  nameType!=  RuleType.NAME_PREFIXES  &&  nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType!=  RuleType.NAME_PREFIXES  &&  nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType!=  RuleType.NAME_PREFIXES  &&  nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(nameType!=    RuleType.NAME_PREFIXES)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	249	None	replace
2158	[BUG]  [BUGGY]  nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;	  if(nameType!=    RuleType.NAME_PREFIXES)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	249	None	replace
2159	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  false,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  false,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  false,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    false,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
2160	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  0);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  0);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  maxPhonemes,  0);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    0);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
2161	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes,  0);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes,  0);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  NAME_PREFIXES,  maxPhonemes,  0);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    0);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
2162	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( "  rule  type  must  not  be   "  +  RuleType.  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( "  rule  type  must  not  be   "  +  RuleType.  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( "  rule  type  must  not  be   "  +  RuleType.	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    instanceof    RuleType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
2163	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( "] ");  }  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( "] ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( "] ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    instanceof    RuleType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
2164	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( " ")  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( " ")  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( " ")	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    instanceof    RuleType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
2165	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( "Rule  type  must  not  be   "  +  RuleType.  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( "Rule  type  must  not  be   "  +  RuleType.  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( "Rule  type  must  not  be   "  +  RuleType.	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    instanceof    RuleType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
2166	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  deFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  concat,  deFAULT_MAX_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  deFAULT_MAX_PHONEMES);	  this.nameType,    nameType,    concat,    defult_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	323	None	replace
2167	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  /  4;  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  /  4;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.getMaxPhonemes()  /  4;	  final    int    maxPhonemes    =    nameType.getMaxPhonemes()    /    2;    	non-compiled	[CE]  	191	None	replace
2168	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  +  2;  [CE]  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  +  2;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.getMaxPhonemes()  +  2;	  final    int    maxPhonemes    =    nameType.getMaxPhonemes()    /    2;    	non-compiled	[CE]  	191	None	replace
2169	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes,  defULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  null,  maxPhonemes,  defULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null,  maxPhonemes,  defULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    defULT_MAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	292	None	replace
2170	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  defULT_MAX_PHONEMES,  nameType)  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  defULT_MAX_PHONEMES,  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  defULT_MAX_PHONEMES,  nameType)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    defULT_MAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	292	None	replace
2171	[BUG]  [BUGGY]  Iterator  <  RuleType>  ruleType  =  ruleType.listIterator();  [CE]  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Iterator  <  RuleType>  ruleType  =  ruleType.listIterator();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Iterator  <  RuleType>  ruleType  =  ruleType.listIterator();	  This.ruleType    =    ruleType;    	non-compiled	[CE]  	234	None	replace
2172	[BUG]  [BUGGY]  Iterator  <  RuleType>  ruleType  =  ruleType.guessingRules();  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Iterator  <  RuleType>  ruleType  =  ruleType.guessingRules();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Iterator  <  RuleType>  ruleType  =  ruleType.guessingRules();	  This.ruleType    =    ruleType;    	non-compiled	[CE]  	234	None	replace
2173	[BUG]  [BUGGY]  Iterator  <  RuleType>  ruleType  =  ruleType.iterator();  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Iterator  <  RuleType>  ruleType  =  ruleType.iterator();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Iterator  <  RuleType>  ruleType  =  ruleType.iterator();	  This.ruleType    =    ruleType;    	non-compiled	[CE]  	234	None	replace
2174	[BUG]  [BUGGY]  NameType  nameType  =  ruleType;  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType;	  This.ruleType    =    ruleType;    	non-compiled	[CE]  	234	None	replace
2175	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat  +  1;  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat  +  1;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat  +  1;	  NameType    nameType,    ruleType,    concat;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
2176	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  0)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  0)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  0)  {	  this(nameType,    ruleType,    concat,    0)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
2177	[BUG]  [BUGGY]  NameType  nameType  =  nameType.getNameType();  this.ruleType,  concat,  [CE]  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  nameType.getNameType();  this.ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  nameType.getNameType();  this.ruleType,  concat,	  This.nameType,    ruleType,    concat,    	non-compiled	[CE]  	134	None	replace
2178	[BUG]  [BUGGY]  NameType  nameType  =  nameType.getNameType();  this.nameType,  ruleType,  concat,  [CE]  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  nameType.getNameType();  this.nameType,  ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  nameType.getNameType();  this.nameType,  ruleType,  concat,	  This.nameType,    ruleType,    concat,    	non-compiled	[CE]  	134	None	replace
2179	[BUG]  [BUGGY]  NameType  nameType  =  nameType.toString();  this.nameType,  ruleType,  concat,  [CE]  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  nameType.toString();  this.nameType,  ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  nameType.toString();  this.nameType,  ruleType,  concat,	  This.nameType,    ruleType,    concat,    	non-compiled	[CE]  	134	None	replace
2180	[BUG]  [BUGGY]  NameType  nameType  =  nameType.getNameType();  this.ruleType  =  ruleType,  concat,  [CE]  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  nameType.getNameType();  this.ruleType  =  ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  nameType.getNameType();  this.ruleType  =  ruleType,  concat,	  This.nameType,    ruleType,    concat,    	non-compiled	[CE]  	134	None	replace
2181	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getName(),  Concat;  [CE]  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getName(),  Concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getName(),  Concat;	  NameType    nameType    =    ruleType.getName(),    concat;    	non-compiled	[CE]  	136	None	replace
2182	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.toString());  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.toString());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.toString());	  this.ruleType    =    new    RuleType(nameType.toString(),    ruleType.toString());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
2183	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.toString(),  concat  +  ruleType.toString());  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.toString(),  concat  +  ruleType.toString());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.toString(),  concat  +  ruleType.toString());	  this.ruleType    =    new    RuleType(nameType.toString(),    ruleType.toString());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
2184	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.toString(),  concat).toString();  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.toString(),  concat).toString();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.toString(),  concat).toString();	  this.ruleType    =    new    RuleType(nameType.toString(),    ruleType.toString());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
2185	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_PARENTHESES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_PARENTHESES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_PARENTHESES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PARENTHESES);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
2186	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_PARENTHESES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_PARENTHESES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PREFIXES,  DEFAULT_PARENTHESES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PARENTHESES);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
2187	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  int  ruleType)  {  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  int  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  int  ruleType)  {	  final    int    maxPhonemes,    final    int    concat)    {    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine	43	None	replace
2188	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  int  type)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  int  type)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  int  type)  {	  final    int    maxPhonemes,    final    int    concat)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	43	None	replace
2189	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  int  concat);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  int  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  int  concat);	  final    int    maxPhonemes,    final    int    concat)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
2190	[BUG]  [BUGGY]  NameType  nameType  =  nameType.getNameType();  this.nameType  =  nameType;  [CE]  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  nameType.getNameType();  this.nameType  =  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  nameType.getNameType();  this.nameType  =  nameType;	  This.nameType,    nameType,    concat,    	non-compiled	[CE]  	11	None	replace
2191	[BUG]  [BUGGY]  NameType  nameType  =  nameType.getNameType();  this.nameType,  concat,  [CE]  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  nameType.getNameType();  this.nameType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  nameType.getNameType();  this.nameType,  concat,	  This.nameType,    nameType,    concat,    	non-compiled	[CE]  	11	None	replace
2192	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getNameType();  this.nameType,  nameType,  concat,  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getNameType();  this.nameType,  nameType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getNameType();  this.nameType,  nameType,  concat,	  This.nameType,    nameType,    concat,    	non-compiled	[CE]  	11	None	replace
2193	[BUG]  [BUGGY]  this.ruleType  =  nameType  + "ruleType ";  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  nameType  + "ruleType ";  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  nameType  + "ruleType ";	  this.ruleType    =   "ruleType   ";    	non-compiled	[CE]  illegal  start  of  type	235	None	replace
2194	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  null)  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  null)  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  null)	  NameType    nameType,    RuleType    ruleType,    concat)    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
2195	[BUG]  [BUGGY]  this.nameType  =  NameType.NAME_PREFIXES,  concat;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  NameType.NAME_PREFIXES,  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  NameType.NAME_PREFIXES,  concat;	  this.nameType    =    nameType,    concat;    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
2196	[BUG]  [BUGGY]  this.nameType  =  NameType.NAME_PREFIXES,  nameType;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  NameType.NAME_PREFIXES,  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  NameType.NAME_PREFIXES,  nameType;	  this.nameType    =    nameType,    concat;    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
2197	[BUG]  [BUGGY]  NameType  nameType  =  ruleType,  concat;  [CE]  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType,  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType,  concat;	  this.nameType    =    nameType,    concat;    	non-compiled	[CE]  	150	None	replace
2198	[BUG]  [BUGGY]  this(nameType,  ruleType);  this.ruleType  =  ruleType;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType);  this.ruleType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType);  this.ruleType  =  ruleType;	  super(nameType);    this.ruleType    =    ruleType,    concat;    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
2199	[BUG]  [BUGGY]  super(nameType.toString(),  concat);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType.toString(),  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType.toString(),  concat);	  super(nameType.getName(),    ruleType);    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
2200	[BUG]  [BUGGY]  super(nameType.toString(),  ruleType);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType.toString(),  ruleType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType.toString(),  ruleType);	  super(nameType.getName(),    ruleType);    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
2201	[BUG]  [BUGGY]  Super(nameType.getName(),  concat);  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Super(nameType.getName(),  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Super(nameType.getName(),  concat);	  super(nameType.getName(),    ruleType);    	non-compiled	[CE]  <identifier>  expected	155	None	replace
2202	[BUG]  [BUGGY]  if(maxPhonemes  ==  nameType.maxPhonemes)  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(maxPhonemes  ==  nameType.maxPhonemes)  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(maxPhonemes  ==  nameType.maxPhonemes)  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    	non-compiled	[CE]  illegal  start  of  type	330	None	replace
2203	[BUG]  [BUGGY]  @SuppressWarnings( "unchecked ")||  nameType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  @SuppressWarnings( "unchecked ")||  nameType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	@SuppressWarnings( "unchecked ")||  nameType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    	non-compiled	[CE]  illegal  start  of  type	330	None	replace
2204	[BUG]  [BUGGY]  @SuppressWarnings( "unchecked ")||  nameType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  @SuppressWarnings( "unchecked ")||  nameType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	@SuppressWarnings( "unchecked ")||  nameType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  nameType.maxPhonemes;	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    	non-compiled	[CE]  illegal  start  of  type	330	None	replace
2205	[BUG]  [BUGGY]  @SuppressWarnings( "unchecked ")  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  @SuppressWarnings( "unchecked ")  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	@SuppressWarnings( "unchecked ")  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    	non-compiled	[CE]  illegal  start  of  type	330	None	replace
2206	[BUG]  [BUGGY]  if(maxPhonemes  ==  nameType.maxPhonemes)  {  final  int  maxPhonemes  =  ruleType.maxPhonemes;  }  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(maxPhonemes  ==  nameType.maxPhonemes)  {  final  int  maxPhonemes  =  ruleType.maxPhonemes;  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(maxPhonemes  ==  nameType.maxPhonemes)  {  final  int  maxPhonemes  =  ruleType.maxPhonemes;  }	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    	non-compiled	[CE]  illegal  start  of  type	330	None	replace
2207	[BUG]  [BUGGY]  @SuppressWarnings( "unchecked ")  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  @SuppressWarnings( "unchecked ")  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	@SuppressWarnings( "unchecked ")  {  final  int  maxPhonemes  =  nameType.maxPhonemes;	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    	non-compiled	[CE]  illegal  start  of  type	330	None	replace
2208	[BUG]  [BUGGY]  @SuppressWarnings( "unchecked "))  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  @SuppressWarnings( "unchecked "))  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	@SuppressWarnings( "unchecked "))  {  final  int  maxPhonemes  =  nameType.maxPhonemes;	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    	non-compiled	[CE]  illegal  start  of  type	330	None	replace
2209	[BUG]  [BUGGY]  NameType  nameType,  ruleType.getNameType(),  Concat);  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.getNameType(),  Concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.getNameType(),  Concat);	  NameType    nameType,    ruleType,    Concat);    	non-compiled	[CE]  <identifier>  expected	231	None	replace
2210	[BUG]  [BUGGY]  static  final  boolean  maxPhonemes  =  nameType.getMaxPhonemes();  [CE]  modifier  static  not  allowed  here  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  static  final  boolean  maxPhonemes  =  nameType.getMaxPhonemes();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  boolean  maxPhonemes  =  nameType.getMaxPhonemes();	  static    final    int    maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  modifier  static  not  allowed  here	216	None	replace
2211	[BUG]  [BUGGY]  static  final  char  maxPhonemes  =  nameType.getMaxPhonemes();  [CE]  modifier  static  not  allowed  here  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  static  final  char  maxPhonemes  =  nameType.getMaxPhonemes();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  char  maxPhonemes  =  nameType.getMaxPhonemes();	  static    final    int    maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  modifier  static  not  allowed  here	216	None	replace
2212	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getSimpleName()  :  nameType.getSimpleName();  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getSimpleName()  :  nameType.getSimpleName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getSimpleName()  :  nameType.getSimpleName();	  this.nameType    =    nameType.getSimpleName();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
2213	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getSimpleName()  :  nameType.getSimpleName();  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getSimpleName()  :  nameType.getSimpleName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.getSimpleName()  :  nameType.getSimpleName();	  this.nameType    =    nameType.getSimpleName();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
2214	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getSimpleName()  :  ruleType.getSimpleName();  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getSimpleName()  :  ruleType.getSimpleName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getSimpleName()  :  ruleType.getSimpleName();	  this.nameType    =    nameType.getSimpleName();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
2215	[BUG]  [BUGGY]  final  int  maxPhonemes,  Integer  count)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  Integer  count)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  Integer  count)  {	  final    int    maxPhonemes,    Integer    concat)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	48	None	replace
2216	[BUG]  [BUGGY]  this.ruleType  =  nameType  + "ruletype ";  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  nameType  + "ruletype ";  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  nameType  + "ruletype ";	  this.ruleType    =   "ruletype   ";    	non-compiled	[CE]  illegal  start  of  type	338	None	replace
2217	[BUG]  [BUGGY]  setRuleType(nameType,  ruleType,  concat,  [CE]  <identifier>  expected  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  setRuleType(nameType,  ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	setRuleType(nameType,  ruleType,  concat,	  super(nameType,    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	10	None	replace
2218	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MIN_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MIN_PHONEMES);	  super(nameType,    ruleType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
2219	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_ALL_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_ALL_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_ALL_PHONEMES);	  super(nameType,    ruleType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
2220	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_PAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_PAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_PAX_PHONEMES);	  super(nameType,    ruleType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
2221	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MILLISECOND);  [CE]  illegal  start  of  type  [FE]                                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MILLISECOND);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MILLISECOND);	  super(nameType,    ruleType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
2222	[BUG]  [BUGGY]  super(nameType.getName(),  ruleType,  Concat);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType.getName(),  ruleType,  Concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType.getName(),  ruleType,  Concat);	  super(nameType,    Concat);    	non-compiled	[CE]  illegal  start  of  type	185	None	replace
2223	[BUG]  [BUGGY]  super(new  NameType(nameType,  ruleType);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(new  NameType(nameType,  ruleType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(nameType,  ruleType);	  super(new    NameType(nameType),    ruleType);    	non-compiled	[CE]  illegal  start  of  type	229	None	replace
2224	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  3);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  3);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  3);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    3);    	non-compiled	[CE]  illegal  start  of  type	327	None	replace
2225	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  this.maxPhonemes,  this.defaultRules);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  this.maxPhonemes,  this.defaultRules);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  this.maxPhonemes,  this.defaultRules);	  super(nameType,    ruleType,    concat,    this.maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	287	None	replace
2226	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  this.maxPhonemes,  this.minPhonemes);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  this.maxPhonemes,  this.minPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  this.maxPhonemes,  this.minPhonemes);	  super(nameType,    ruleType,    concat,    this.maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	287	None	replace
2227	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  finalRules);  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  finalRules);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  finalRules);	  NameType    nameType,    ruleType,    concat);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
2228	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  legend);  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  legend);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  legend);	  NameType    nameType,    ruleType,    concat);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
2229	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  def);  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  def);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  def);	  NameType    nameType,    ruleType,    concat);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
2230	[BUG]  [BUGGY]  final  boolean  concat,  final  Boolean  maxPhonemes)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  concat,  final  Boolean  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  concat,  final  Boolean  maxPhonemes)  {	  final    int    maxPhonemes,    final    Boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	272	None	replace
2231	[BUG]  [BUGGY]  final  String  maxPhonemes,  final  Boolean  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  String  maxPhonemes,  final  Boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  String  maxPhonemes,  final  Boolean  concat)  {	  final    int    maxPhonemes,    final    Boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	272	None	replace
2232	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  Boolean  concat,  final  boolean  ruleType)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  Boolean  concat,  final  boolean  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  Boolean  concat,  final  boolean  ruleType)  {	  final    int    maxPhonemes,    final    Boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	272	None	replace
2233	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  Boolean  concat,  boolean  ruleType)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  Boolean  concat,  boolean  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  Boolean  concat,  boolean  ruleType)  {	  final    int    maxPhonemes,    final    Boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	272	None	replace
2234	[BUG]  [BUGGY]  this.nameType  =  nameType,  ruleType.getReferenceName();  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType,  ruleType.getReferenceName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType,  ruleType.getReferenceName();	  this.nameType    =    ruleType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
2235	[BUG]  [BUGGY]  this.nameType  =  nameType.getDeclaringClass();  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getDeclaringClass();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getDeclaringClass();	  this.nameType    =    ruleType.getReferenceName();    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
2236	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  null,  0);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  null,  0);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  null,  0);	  this(nameType,    ruleType,    concat,    null);    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
2237	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  ruleType  :  nameType;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  ruleType  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  ruleType  :  nameType;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType    :    ruleType;    	non-compiled	[CE]  illegal  start  of  type	306	None	replace
2238	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  ruleType  :  NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  ruleType  :  NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  ruleType  :  NAME_PREFIXES;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType    :    ruleType;    	non-compiled	[CE]  illegal  start  of  type	306	None	replace
2239	[BUG]  [BUGGY]  this.nameType  =  nameType.restrictByNotNullOrUndefined(ruleType);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.restrictByNotNullOrUndefined(ruleType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.restrictByNotNullOrUndefined(ruleType);	  this.nameType    =    nameType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
2240	[BUG]  [BUGGY]  if(nameType!=  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType!=  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }	  if(nameType!=    RuleType.NAME_PREFIXES)    {    super(nameType);    this.ruleType    =    ruleType;    }    	non-compiled	[CE]  illegal  start  of  type	251	None	replace
2241	[BUG]  [BUGGY]  this.maxPhonemes  =  nameType.getMaxPhonemes()  +  1;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  nameType.getMaxPhonemes()  +  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  nameType.getMaxPhonemes()  +  1;	  this.maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  illegal  start  of  type	188	None	replace
2242	[BUG]  [BUGGY]  this.maxPhonemes  =  super.getMaxPhonemes();  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  super.getMaxPhonemes();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  super.getMaxPhonemes();	  this.maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  illegal  start  of  type	188	None	replace
2243	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  new  RuleType[]  {  nameType  }  );  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  new  RuleType[]  {  nameType  }  );  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  new  RuleType[]  {  nameType  }  );	  this.nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
2244	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MIN_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MIN_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	211	None	replace
2245	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_ALL_PHONEMES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_ALL_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_ALL_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	211	None	replace
2246	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_NAMES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_NAMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_NAMES);	  this(nameType,    ruleType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	211	None	replace
2247	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MILLISECOND);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MILLISECOND);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_MILLISECOND);	  this(nameType,    ruleType,    concat,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	211	None	replace
2248	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType,  concat;  }  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType,  concat;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType,  concat;  }	  super(nameType);    this.ruleType    =    ruleType,    concat;    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
2249	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType,  concat;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType,  concat;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType,  concat;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super(nameType);    this.ruleType    =    ruleType,    concat;    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
2250	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType,  concat;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType,  concat;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType,  concat;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super(nameType);    this.ruleType    =    ruleType,    concat;    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
2251	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getNameType()  :  null;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getNameType()  :  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getNameType()  :  null;	  this.nameType    =    nameType.getNameType();    	non-compiled	[CE]  illegal  start  of  type	240	None	replace
2252	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getNameType()  :  DEFAULT_MAX_PHONEMES;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getNameType()  :  DEFAULT_MAX_PHONEMES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.getNameType()  :  DEFAULT_MAX_PHONEMES;	  this.nameType    =    nameType.getNameType();    	non-compiled	[CE]  illegal  start  of  type	240	None	replace
2253	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  1,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  1,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  1,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
2254	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  1,  0,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  1,  0,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  1,  0,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    0,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
2255	[BUG]  [BUGGY]  this.ruleType  =  ruleType  {  null?  RuleType.NAME_PREFIXES  :  ruleType;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  ruleType  {  null?  RuleType.NAME_PREFIXES  :  ruleType;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  ruleType  {  null?  RuleType.NAME_PREFIXES  :  ruleType;	  this.ruleType    =    RuleType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2256	[BUG]  [BUGGY]  this.ruleType  =  ruleType  {  null? "null "  :  RuleType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  ruleType  {  null? "null "  :  RuleType.NAME_PREFIXES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  ruleType  {  null? "null "  :  RuleType.NAME_PREFIXES;	  this.ruleType    =    RuleType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2257	[BUG]  [BUGGY]  this.ruleType  =  ruleType  {  null?  RuleType.NAME_PREFIXES  :  nameType;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  ruleType  {  null?  RuleType.NAME_PREFIXES  :  nameType;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  ruleType  {  null?  RuleType.NAME_PREFIXES  :  nameType;	  this.ruleType    =    RuleType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2258	[BUG]  [BUGGY]  this.ruleType  =  ruleType  {  null?  RuleType.NAME_PREFIXES  :  NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  ruleType  {  null?  RuleType.NAME_PREFIXES  :  NAME_PREFIXES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  ruleType  {  null?  RuleType.NAME_PREFIXES  :  NAME_PREFIXES;	  this.ruleType    =    RuleType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2259	[BUG]  [BUGGY]  this.ruleType  =  ruleType  {  null?  RuleType.NAME_PREFIXES  :  defaultRules;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  ruleType  {  null?  RuleType.NAME_PREFIXES  :  defaultRules;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  ruleType  {  null?  RuleType.NAME_PREFIXES  :  defaultRules;	  this.ruleType    =    RuleType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2260	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  2,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  2,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  2,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    i,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
2261	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  4,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  4,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  4,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    i,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
2262	[BUG]  [BUGGY]  final  NameType  nameType,  RuleType  ruleType,  concat  [CE]  <identifier>  expected  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType,  RuleType  ruleType,  concat  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType,  RuleType  ruleType,  concat	  NameType    nameType,    RuleType    ruleType,    concat    	non-compiled	[CE]  <identifier>  expected	172	None	replace
2263	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getDeclaringClass();  [CE]  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getDeclaringClass();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getDeclaringClass();	  NameType    nameType    =    ruleType.getReferenceName();    	non-compiled	[CE]  	91	None	replace
2264	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	298	None	replace
2265	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  1,  DEFAULT_MAX_PHONEMES,  DEFAULT_PHONEMES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  1,  DEFAULT_MAX_PHONEMES,  DEFAULT_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  1,  DEFAULT_MAX_PHONEMES,  DEFAULT_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	298	None	replace
2266	[BUG]  [BUGGY]  if(ruleType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  ruleType.maxPhonemes;  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(ruleType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  ruleType.maxPhonemes;  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(ruleType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  ruleType.maxPhonemes;  }	  final    int    maxPhonemes    =    ruleType.maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
2267	[BUG]  [BUGGY]  if(ruleType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  ruleType.maxPhonemes;  }  else  {  PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder();  }  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(ruleType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  ruleType.maxPhonemes;  }  else  {  PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder();  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(ruleType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  ruleType.maxPhonemes;  }  else  {  PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder();  }	  final    int    maxPhonemes    =    ruleType.maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
2268	[BUG]  [BUGGY]  if(ruleType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  ruleType.maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(ruleType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  ruleType.maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(ruleType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  ruleType.maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  final    int    maxPhonemes    =    ruleType.maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
2269	[BUG]  [BUGGY]  if(ruleType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  ruleType.maxPhonemes;  }  else  {  PhonemeBuilder  phonemeBuilder  =  new  PhonemBuilder();  }  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(ruleType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  ruleType.maxPhonemes;  }  else  {  PhonemeBuilder  phonemeBuilder  =  new  PhonemBuilder();  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(ruleType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  ruleType.maxPhonemes;  }  else  {  PhonemeBuilder  phonemeBuilder  =  new  PhonemBuilder();  }	  final    int    maxPhonemes    =    ruleType.maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
2270	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes,  NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes,  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes,  NAME_PREFIXES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
2271	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  maxPhonemes,  NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  maxPhonemes,  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARAMS,  maxPhonemes,  NAME_PREFIXES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
2272	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  NAME_PREFIXES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
2273	[BUG]  [BUGGY]  This(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  true);  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  true);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  true);	  this(nameType,    ruleType,    concat,    DEFAULT_PHONEMES,    false);    	non-compiled	[CE]  <identifier>  expected	259	None	replace
2274	[BUG]  [BUGGY]  if(ruleType!=  null)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(ruleType!=  null)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(ruleType!=  null)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super(nameType,    ruleType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
2275	[BUG]  [BUGGY]  if(ruleType!=  null)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(ruleType!=  null)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(ruleType!=  null)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }	  super(nameType,    ruleType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
2276	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NEW)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NEW)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NEW)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super(nameType,    ruleType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
2277	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME)  {  super(nameType,  ruleType);  this.ruleType  =  ruleType;  }	  super(nameType,    ruleType);    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
2278	[BUG]  [BUGGY]  if(nameType  ==  null)  {  Preconditions.checkState(nameType!=  null);  this.nameType  =  nameType;  }  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  null)  {  Preconditions.checkState(nameType!=  null);  this.nameType  =  nameType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  null)  {  Preconditions.checkState(nameType!=  null);  this.nameType  =  nameType;  }	  Preconditions.checkState(nameType!=    null);    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	325	None	replace
2279	[BUG]  [BUGGY]  if(nameType  ==  null)  {  Preconditions.checkState(nameType!=  null);  this.nameType  =  nameType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  null)  {  Preconditions.checkState(nameType!=  null);  this.nameType  =  nameType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  null)  {  Preconditions.checkState(nameType!=  null);  this.nameType  =  nameType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Preconditions.checkState(nameType!=    null);    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	325	None	replace
2280	[BUG]  [BUGGY]  if(nameType!=  null)  {  Preconditions.checkState(nameType!=  null);  this.nameType  =  nameType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType!=  null)  {  Preconditions.checkState(nameType!=  null);  this.nameType  =  nameType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  null)  {  Preconditions.checkState(nameType!=  null);  this.nameType  =  nameType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Preconditions.checkState(nameType!=    null);    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	325	None	replace
2281	[BUG]  [BUGGY]  Iterator  <  RuleType>  ruleType  =  ruleType.getRules();  [CE]  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Iterator  <  RuleType>  ruleType  =  ruleType.getRules();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Iterator  <  RuleType>  ruleType  =  ruleType.getRules();	  This.ruleType    =    ruleType;    	non-compiled	[CE]  	234	None	replace
2282	[BUG]  [BUGGY]  if(nameType  ==  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(nameType!=    ruleType)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	294	None	replace
2283	[BUG]  [BUGGY]  if(nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }	  if(nameType!=    ruleType)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	294	None	replace
2284	[BUG]  [BUGGY]  if(nameType  ==  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  ruleType)  {  super(nameType);  this.ruleType  =  ruleType;  }	  if(nameType!=    ruleType)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	294	None	replace
2285	[BUG]  [BUGGY]  (final  boolean  maxPhonemes  >  maxPhonemes))  {  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  (final  boolean  maxPhonemes  >  maxPhonemes))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	(final  boolean  maxPhonemes  >  maxPhonemes))  {	  (final    boolean    maxPhonemes))    {    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
2286	[BUG]  [BUGGY]  (final  boolean  maxPhonemes  <  =  maxPhonemes))  {  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  (final  boolean  maxPhonemes  <  =  maxPhonemes))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	(final  boolean  maxPhonemes  <  =  maxPhonemes))  {	  (final    boolean    maxPhonemes))    {    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
2287	[BUG]  [BUGGY]  (final  boolean  maxPhonemes  ||  super.maxPhonemes  <  =  maxPhonemes))  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  (final  boolean  maxPhonemes  ||  super.maxPhonemes  <  =  maxPhonemes))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	(final  boolean  maxPhonemes  ||  super.maxPhonemes  <  =  maxPhonemes))  {	  (final    boolean    maxPhonemes))    {    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
2288	[BUG]  [BUGGY]  (final  boolean  maxPhonemes  ||  super.maxPhonemes))  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  (final  boolean  maxPhonemes  ||  super.maxPhonemes))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	(final  boolean  maxPhonemes  ||  super.maxPhonemes))  {	  (final    boolean    maxPhonemes))    {    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
2289	[BUG]  [BUGGY]  (final  boolean  maxPhonemes)||  nameType.equals(ruleType.nameType))  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  (final  boolean  maxPhonemes)||  nameType.equals(ruleType.nameType))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	(final  boolean  maxPhonemes)||  nameType.equals(ruleType.nameType))  {	  (final    boolean    maxPhonemes))    {    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
2290	[BUG]  [BUGGY]  (final  boolean  maxPhonemes)||  nameType.equals(ruleType.nameType));  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  (final  boolean  maxPhonemes)||  nameType.equals(ruleType.nameType));  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	(final  boolean  maxPhonemes)||  nameType.equals(ruleType.nameType));	  (final    boolean    maxPhonemes))    {    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
2291	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  16);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  16);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  16);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    4);    	non-compiled	[CE]  illegal  start  of  type	329	None	replace
2292	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  false,  null,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  false,  null,  maxPhonemes);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  false,  null,  maxPhonemes);	  this(nameType,    ruleType,    concat,    false,    null);    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
2293	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MIN_PHONEMES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
2294	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  finalRules)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  finalRules)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  finalRules)  {	  final    int    maxPhonemes,    finalRules)    {    	non-compiled	[CE]  illegal  start  of  type	246	None	replace
2295	[BUG]  [BUGGY]  final  int  maxPhonemes,  Arrays.asList(numberPhonemes))  {  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  Arrays.asList(numberPhonemes))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  Arrays.asList(numberPhonemes))  {	  final    int    maxPhonemes,    finalRules)    {    	non-compiled	[CE]  <identifier>  expected	246	None	replace
2296	[BUG]  [BUGGY]  final  int  maxPhonemes,  Arrays.asList(new  ArrayList  <  RuleType>()))  {  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  Arrays.asList(new  ArrayList  <  RuleType>()))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  Arrays.asList(new  ArrayList  <  RuleType>()))  {	  final    int    maxPhonemes,    finalRules)    {    	non-compiled	[CE]  <identifier>  expected	246	None	replace
2297	[BUG]  [BUGGY]  final  int  maxPhonemes,  Arrays.asList(maxPhonemes))  {  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  Arrays.asList(maxPhonemes))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  Arrays.asList(maxPhonemes))  {	  final    int    maxPhonemes,    finalRules)    {    	non-compiled	[CE]  <identifier>  expected	246	None	replace
2298	[BUG]  [BUGGY]  final  int  maxPhonemes,  Arrays.asList(params))  {  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  Arrays.asList(params))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  Arrays.asList(params))  {	  final    int    maxPhonemes,    finalRules)    {    	non-compiled	[CE]  <identifier>  expected	246	None	replace
2299	[BUG]  [BUGGY]  this.nameType  =  namesType.toString();  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  namesType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  namesType.toString();	  this.nameType    =    nameType.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
2300	[BUG]  [BUGGY]  final  int  maxPhonemes  =  ruleType.getMaxPhonemes()  *  2;  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  ruleType.getMaxPhonemes()  *  2;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  ruleType.getMaxPhonemes()  *  2;	  final    int    maxPhonemes    =    nameType.getMaxPhonemes()    /    2;    	non-compiled	[CE]  	191	None	replace
2301	[BUG]  [BUGGY]  Preconditions.checkState(nameType  ==  RuleType.NAME_PREFIXES);  this.nameType  =  nameType;  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Preconditions.checkState(nameType  ==  RuleType.NAME_PREFIXES);  this.nameType  =  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Preconditions.checkState(nameType  ==  RuleType.NAME_PREFIXES);  this.nameType  =  nameType;	  NameType    nameType)    {    this.nameType    =    ruleType;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
2302	[BUG]  [BUGGY]  super(nameType);  this.nameType  =  ruleType;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType);  this.nameType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType);  this.nameType  =  ruleType;	  NameType    nameType)    {    this.nameType    =    ruleType;    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
2303	[BUG]  [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME_PREFIXES);  }  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME_PREFIXES);  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME_PREFIXES);  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   "    +    RuleType.NAME_PREFIXES);    }    	non-compiled	[CE]  illegal  start  of  type	227	None	replace
2304	[BUG]  [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME_  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME_  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " "  +  RuleType.NAME_	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   "    +    RuleType.NAME_PREFIXES);    }    	non-compiled	[CE]  illegal  start  of  type	227	None	replace
2305	[BUG]  [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.toString()  :  nameType;  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.toString()  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.toString()  :  nameType;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType.toString()    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	311	None	replace
2306	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  HashSet  <  Rule>(nameType);  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  HashSet  <  Rule>(nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  HashSet  <  Rule>(nameType);	  NameType    nameType,    ruleType,    concat.names    =    new    HashSet    <    Rule>();    	non-compiled	[CE]  <identifier>  expected	334	None	replace
2307	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  HashSet  <  Rule>(1);  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  HashSet  <  Rule>(1);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  HashSet  <  Rule>(1);	  NameType    nameType,    ruleType,    concat.names    =    new    HashSet    <    Rule>();    	non-compiled	[CE]  <identifier>  expected	334	None	replace
2308	[BUG]  [BUGGY]  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes  +  1;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes  +  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes  +  1;	  this.lang    =    Lang.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
2309	[BUG]  [BUGGY]  this.lang  =  Lang.instance(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.lang  =  Lang.instance(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.lang  =  Lang.instance(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;	  this.lang    =    Lang.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
2310	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PREFIXES,  DEFAULT_GLOBAL_PREFIXES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PREFIXES,  DEFAULT_GLOBAL_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PREFIXES,  DEFAULT_GLOBAL_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_GLOBAL_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	316	None	replace
2311	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PREFIXES,  DEFAULT_ALL_PHONEMES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PREFIXES,  DEFAULT_ALL_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PREFIXES,  DEFAULT_ALL_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_GLOBAL_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	316	None	replace
2312	[BUG]  [BUGGY]  this.nameType  =  nameType.toString(),  concat,  null);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.toString(),  concat,  null);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.toString(),  concat,  null);	  this.nameType    =    nameType.toString(),    concat;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
2313	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  4);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  4);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  4);	  this(nameType,    ruleType,    concat,    maxPhonemes,    0);    	non-compiled	[CE]  illegal  start  of  type	180	None	replace
2314	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  1,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  1,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  1,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_MAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
2315	[BUG]  [BUGGY]  final  char  maxPhonemes,  String.valueOf(concat))  {  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  char  maxPhonemes,  String.valueOf(concat))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  char  maxPhonemes,  String.valueOf(concat))  {	  final    int    maxPhonemes,    String.valueOf(concat))    {    	non-compiled	[CE]  <identifier>  expected	243	None	replace
2316	[BUG]  [BUGGY]  final  int  maxPhonemes,  String.valueOf(concat)&&  nameType.equals(ruleType);  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  String.valueOf(concat)&&  nameType.equals(ruleType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  String.valueOf(concat)&&  nameType.equals(ruleType);	  final    int    maxPhonemes,    String.valueOf(concat))    {    	non-compiled	[CE]  <identifier>  expected	243	None	replace
2317	[BUG]  [BUGGY]  final  NameType  nameType,  ruleType,  Concat,  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType,  ruleType,  Concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType,  ruleType,  Concat,	  NameType    nameType,    ruleType,    Concat,    	non-compiled	[CE]  <identifier>  expected	262	None	replace
2318	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  Concat,  this.maxPhonemes,  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  Concat,  this.maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  Concat,  this.maxPhonemes,	  NameType    nameType,    ruleType,    Concat,    	non-compiled	[CE]  <identifier>  expected	262	None	replace
2319	[BUG]  [BUGGY]  this.ruleType,  new  RuleType(ruleType,  concat),  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType,  new  RuleType(ruleType,  concat),  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  new  RuleType(ruleType,  concat),  maxPhonemes)  {	  this.ruleType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
2320	[BUG]  [BUGGY]  this.ruleType,  new  RuleType(ruleType,  maxPhonemes))  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType,  new  RuleType(ruleType,  maxPhonemes))  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  new  RuleType(ruleType,  maxPhonemes))  {	  this.ruleType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
2321	[BUG]  [BUGGY]  this.ruleType,  new  RuleType(ruleType),  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType,  new  RuleType(ruleType),  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  new  RuleType(ruleType),  maxPhonemes)  {	  this.ruleType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
2322	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.toLowerCase()  :  nameType.toString();  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.toLowerCase()  :  nameType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.toLowerCase()  :  nameType.toString();	  this.nameType    =    nameType    ==    null?    nameType.toString()    :    nameType.toString();    	non-compiled	[CE]  illegal  start  of  type	301	None	replace
2323	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.toName()  :  nameType.toString();  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.toName()  :  nameType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.toName()  :  nameType.toString();	  this.nameType    =    nameType    ==    null?    nameType.toString()    :    nameType.toString();    	non-compiled	[CE]  illegal  start  of  type	301	None	replace
2324	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MULTIPLE_PHONEMES,  false);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MULTIPLE_PHONEMES,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MULTIPLE_PHONEMES,  false);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    false);    	non-compiled	[CE]  illegal  start  of  type	258	None	replace
2325	[BUG]  [BUGGY]  This(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  true);  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  true);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  true);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    false);    	non-compiled	[CE]  <identifier>  expected	258	None	replace
2326	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  deFAULT_MAX_PHONEMES,  true);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  deFAULT_MAX_PHONEMES,  true);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  deFAULT_MAX_PHONEMES,  true);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    false);    	non-compiled	[CE]  illegal  start  of  type	258	None	replace
2327	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getTarget());  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getTarget());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getTarget());	  this.ruleType    =    new    RuleType(nameType.getSimpleName(),    ruleType.getSimpleName());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2328	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getReferenceName());  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getReferenceName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getSimpleName(),  ruleType.getReferenceName());	  this.ruleType    =    new    RuleType(nameType.getSimpleName(),    ruleType.getSimpleName());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2329	[BUG]  [BUGGY]  final  PhonemeBuilder  phonemeBuilder  =  nameType.phonemeBuilder();  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  PhonemeBuilder  phonemeBuilder  =  nameType.phonemeBuilder();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  PhonemeBuilder  phonemeBuilder  =  nameType.phonemeBuilder();	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    else    {    PhonemeBuilder    phonemeBuilder    =    new    PhonemeBuilder();    }    	non-compiled	[CE]  	331	None	replace
2330	[BUG]  [BUGGY]  final  PhonemeBuilder  phonemeBuilder  =  nameType.phoneme();  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  PhonemeBuilder  phonemeBuilder  =  nameType.phoneme();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  PhonemeBuilder  phonemeBuilder  =  nameType.phoneme();	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    else    {    PhonemeBuilder    phonemeBuilder    =    new    PhonemeBuilder();    }    	non-compiled	[CE]  	331	None	replace
2331	[BUG]  [BUGGY]  final  PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder(nameType);  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder(nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  PhonemeBuilder  phonemeBuilder  =  new  PhonemeBuilder(nameType);	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    else    {    PhonemeBuilder    phonemeBuilder    =    new    PhonemeBuilder();    }    	non-compiled	[CE]  	331	None	replace
2332	[BUG]  [BUGGY]  NameType  ruleType,  ruleType.getSimpleName());  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType,  ruleType.getSimpleName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType,  ruleType.getSimpleName());	  NameType    nameType,    ruleType.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
2333	[BUG]  [BUGGY]  NameType  nameType,  ruleType.getRawClass());  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.getRawClass());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.getRawClass());	  NameType    nameType,    ruleType.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
2334	[BUG]  [BUGGY]  NameType  ruleType,  final  ruleType,  boolean  concat,  [CE]  <identifier>  expected  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType,  final  ruleType,  boolean  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType,  final  ruleType,  boolean  concat,	  NameType    nameType,    ruleType,    boolean    concat,    	non-compiled	[CE]  <identifier>  expected	204	None	replace
2335	[BUG]  [BUGGY]  this.nameType  =  nameType.substring(0,  orderType.length());  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.substring(0,  orderType.length());  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.substring(0,  orderType.length());	  this.nameType    =    nameType.substring(0,    nameType.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
2336	[BUG]  [BUGGY]  this.nameType  =  nameType.substring(0,  nameType.length())+  1;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.substring(0,  nameType.length())+  1;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.substring(0,  nameType.length())+  1;	  this.nameType    =    nameType.substring(0,    nameType.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
2337	[BUG]  [BUGGY]  this.nameType  =  nameType.substring(0,  namedType.length());  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.substring(0,  namedType.length());  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.substring(0,  namedType.length());	  this.nameType    =    nameType.substring(0,    nameType.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
2338	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.toName()  :  nameType.toString();  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.toName()  :  nameType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.toName()  :  nameType.toString();	  this.nameType    =    nameType!=    null?    nameType.toString()    :    nameType.toString();    	non-compiled	[CE]  illegal  start  of  type	239	None	replace
2339	[BUG]  [BUGGY]  final  char  maxPhonemes,  Integer  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  char  maxPhonemes,  Integer  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  char  maxPhonemes,  Integer  concat)  {	  final    int    maxPhonemes,    Integer    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	48	None	replace
2340	[BUG]  [BUGGY]  this.nameType  =  nameType.getReferenceName(),  concat,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getReferenceName(),  concat,  DEFAULT_MAX_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getReferenceName(),  concat,  DEFAULT_MAX_PHONEMES);	  this.nameType    =    nameType.getReferenceName(),    concat;    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
2341	[BUG]  [BUGGY]  this.nameType  =  nameType.getReferenceName(),  concat,  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getReferenceName(),  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getReferenceName(),  concat,	  this.nameType    =    nameType.getReferenceName(),    concat;    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
2342	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_NAX_PHONEMES,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_NAX_PHONEMES,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_NAX_PHONEMES,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    NAME_PREFIXES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	215	None	replace
2343	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maximumPhonemes  +  1);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maximumPhonemes  +  1);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maximumPhonemes  +  1);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes    +    1);    	non-compiled	[CE]  illegal  start  of  type	221	None	replace
2344	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  else  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  else  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  else  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }	  this.nameType    =    nameType;    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	206	None	replace
2345	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  else  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  else  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME)  {  this.nameType  =  nameType;  this.nameType  =  nameType;  }  else  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }	  this.nameType    =    nameType;    this.nameType    =    nameType;    	non-compiled	[CE]  illegal  start  of  type	206	None	replace
2346	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  false,  nameType.nameType);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  false,  nameType.nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  false,  nameType.nameType);	  this(nameType,    ruleType,    concat,    false,    nameType);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
2347	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  false,  0);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  false,  0);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  false,  0);	  this(nameType,    ruleType,    concat,    false,    nameType);    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
2348	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  super(ruleType);  this.maxPhonemes  =  maxPhonemes;  }  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  super(ruleType);  this.maxPhonemes  =  maxPhonemes;  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(ruleType  ==  RuleType.NAME_PREFIXES)  {  super(ruleType);  this.maxPhonemes  =  maxPhonemes;  }	  super(ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	223	None	replace
2349	[BUG]  [BUGGY]  if(ruleType!=  null)  {  super(ruleType);  this.maxPhonemes  =  maxPhonemes;  }  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(ruleType!=  null)  {  super(ruleType);  this.maxPhonemes  =  maxPhonemes;  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(ruleType!=  null)  {  super(ruleType);  this.maxPhonemes  =  maxPhonemes;  }	  super(ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	223	None	replace
2350	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  super(ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  super(ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(ruleType  ==  RuleType.NAME_PREFIXES)  {  super(ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super(ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	223	None	replace
2351	[BUG]  [BUGGY]  if(ruleType!=  null)  {  super(ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(ruleType!=  null)  {  super(ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(ruleType!=  null)  {  super(ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super(ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	223	None	replace
2352	[BUG]  [BUGGY]  if(ruleType!=  ruleType)  {  super(ruleType);  this.maxPhonemes  =  maxPhonemes;  }  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(ruleType!=  ruleType)  {  super(ruleType);  this.maxPhonemes  =  maxPhonemes;  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(ruleType!=  ruleType)  {  super(ruleType);  this.maxPhonemes  =  maxPhonemes;  }	  super(ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	223	None	replace
2353	[BUG]  [BUGGY]  if(ruleType!=  ruleType)  {  super(ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(ruleType!=  ruleType)  {  super(ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(ruleType!=  ruleType)  {  super(ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super(ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	223	None	replace
2354	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(ruleType  ==  RuleType.NAME_PREFIXES)  {  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super(ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	223	None	replace
2355	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :  new  RuleType(nameType);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :  new  RuleType(nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?  nameType  :  new  RuleType(nameType);	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
2356	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null,  false)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null,  false)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null,  false)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    null)    {    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
2357	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null,  null)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null,  null)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null,  null)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    null)    {    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
2358	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  true,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  true,  maxPhonemes);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  true,  maxPhonemes);	  this(nameType,    ruleType,    concat,    false,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
2359	[BUG]  [BUGGY]  this.maxPhonemes  =  new  int[nameType.maxPhonemes];  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  new  int[nameType.maxPhonemes];  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  new  int[nameType.maxPhonemes];	  this.maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
2360	[BUG]  [BUGGY]  this.maxPhonemes  =  _maxPhonemes;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  _maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  _maxPhonemes;	  this.maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
2361	[BUG]  [BUGGY]  this.nameType  =  nameType.trim().toLowerCase()?  nameType.trim().toLowerCase()  :  null;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.trim().toLowerCase()?  nameType.trim().toLowerCase()  :  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.trim().toLowerCase()?  nameType.trim().toLowerCase()  :  null;	  super(ruleType,    nameType);    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
2362	[BUG]  [BUGGY]  this.nameType  =  nameType.trim().toLowerCase()?  nameType.trim().toLowerCase()  :  nameType;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.trim().toLowerCase()?  nameType.trim().toLowerCase()  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.trim().toLowerCase()?  nameType.trim().toLowerCase()  :  nameType;	  super(ruleType,    nameType);    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
2363	[BUG]  [BUGGY]  this.nameType  =  nameType.restrictByNotNullOrUndefined()?  nameType.restrictByNotNullOrUndefined()  :  nameType);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.restrictByNotNullOrUndefined()?  nameType.restrictByNotNullOrUndefined()  :  nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.restrictByNotNullOrUndefined()?  nameType.restrictByNotNullOrUndefined()  :  nameType);	  super(ruleType,    nameType);    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
2364	[BUG]  [BUGGY]  this.nameType  =  nameType.restrictByNotNullOrUndefined();  this.ruleType  =  ruleType;  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.restrictByNotNullOrUndefined();  this.ruleType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.restrictByNotNullOrUndefined();  this.ruleType  =  ruleType;	  super(ruleType,    nameType);    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
2365	[BUG]  [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( "Rule  type  must  not  be   "  +  RuleType.RULES);  }  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( "Rule  type  must  not  be   "  +  RuleType.RULES);  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( "Rule  type  must  not  be   "  +  RuleType.RULES);  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    instanceof    RuleType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
2366	[BUG]  [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( "  rule  type  must  not  be   "  +  RuleType.RULES);  }  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( "  rule  type  must  not  be   "  +  RuleType.RULES);  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( "  rule  type  must  not  be   "  +  RuleType.RULES);  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    instanceof    RuleType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
2367	[BUG]  [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  instanceof  RuleType)  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    instanceof    RuleType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
2368	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  Integer.MAX_VALUE)  {  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  Integer.MAX_VALUE)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  Integer.MAX_VALUE)  {	  final    int    maxPhonemes,    Integer.MAX_VALUE)    {    	non-compiled	[CE]  <identifier>  expected	244	None	replace
2369	[BUG]  [BUGGY]  super(nameType,  ruleType.narrowBy(concat),  ruleType.ruleType);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType.narrowBy(concat),  ruleType.ruleType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.narrowBy(concat),  ruleType.ruleType);	  super(nameType,    ruleType.ruleType);    	non-compiled	[CE]  illegal  start  of  type	319	None	replace
2370	[BUG]  [BUGGY]  super(nameType,  ruleType.narrowBy(concat));  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType.narrowBy(concat));  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType.narrowBy(concat));	  super(nameType,    ruleType.ruleType);    	non-compiled	[CE]  illegal  start  of  type	319	None	replace
2371	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  defFullPhonemes)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  defFullPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  defFullPhonemes)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    nameType)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
2372	[BUG]  [BUGGY]  super(new  NameType(nameType,  ruleType),  concat,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(new  NameType(nameType,  ruleType),  concat,  DEFAULT_MAX_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(nameType,  ruleType),  concat,  DEFAULT_MAX_PHONEMES);	  super(new    NameType(nameType,    ruleType),    concat);    	non-compiled	[CE]  illegal  start  of  type	228	None	replace
2373	[BUG]  [BUGGY]  this.nameType  =  nameType!=  ruleType?  nameType  :((  RuleType)nameType).nameType;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  ruleType?  nameType  :((  RuleType)nameType).nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  ruleType?  nameType  :((  RuleType)nameType).nameType;	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :((    RuleType)nameType).nameType;    	non-compiled	[CE]  illegal  start  of  type	265	None	replace
2374	[BUG]  [BUGGY]  this.nameType  =  nameType!=  RuleType?  nameType  :((  RuleType)nameType).nameType;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  RuleType?  nameType  :((  RuleType)nameType).nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  RuleType?  nameType  :((  RuleType)nameType).nameType;	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :((    RuleType)nameType).nameType;    	non-compiled	[CE]  illegal  start  of  type	265	None	replace
2375	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_NAX_PHONEMES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_NAX_PHONEMES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_NAX_PHONEMES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    NAME_PREFIXES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	220	None	replace
2376	[BUG]  [BUGGY]  This(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes);  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    NAME_PREFIXES,    maxPhonemes);    	non-compiled	[CE]  <identifier>  expected	220	None	replace
2377	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    NAME_PREFIXES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	220	None	replace
2378	[BUG]  [BUGGY]  static  final  boolean  maxPhonemes,  NameType  nameType)  {  [CE]  modifier  static  not  allowed  here  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  static  final  boolean  maxPhonemes,  NameType  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  boolean  maxPhonemes,  NameType  nameType)  {	  final    boolean    maxPhonemes,    NameType    nameType)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	196	None	replace
2379	[BUG]  [BUGGY]  Final  boolean  maxPhonemes,  NameType  nameType)  {  [CE]  <identifier>  expected  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Final  boolean  maxPhonemes,  NameType  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Final  boolean  maxPhonemes,  NameType  nameType)  {	  final    boolean    maxPhonemes,    NameType    nameType)    {    	non-compiled	[CE]  <identifier>  expected	196	None	replace
2380	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  final  int  maxPhonemes  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  final  int  maxPhonemes  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.maxPhonemes,  final  int  maxPhonemes	  NameType    nameType,    ruleType,    concat,    this.maxPhonemes,    	non-compiled	[CE]  <identifier>  expected	37	None	replace
2381	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  LinkedList  <  RuleType>(4);  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  LinkedList  <  RuleType>(4);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  LinkedList  <  RuleType>(4);	  NameType    nameType,    ruleType,    concat.names    =    new    LinkedList    <    RuleType>();    	non-compiled	[CE]  <identifier>  expected	337	None	replace
2382	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  LinkedList  <  RuleType>(8);  [CE]  <identifier>  expected  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  LinkedList  <  RuleType>(8);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  LinkedList  <  RuleType>(8);	  NameType    nameType,    ruleType,    concat.names    =    new    LinkedList    <    RuleType>();    	non-compiled	[CE]  <identifier>  expected	337	None	replace
2383	[BUG]  [BUGGY]  Preconditions.checkState(nameType.isUnknownType());  this.nameType,  nameType,  concat,  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Preconditions.checkState(nameType.isUnknownType());  this.nameType,  nameType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Preconditions.checkState(nameType.isUnknownType());  this.nameType,  nameType,  concat,	  This.nameType,    nameType,    concat,    	non-compiled	[CE]  <identifier>  expected	11	None	replace
2384	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getNameType();  this.nameType  =  nameType,  concat,  [CE]  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getNameType();  this.nameType  =  nameType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getNameType();  this.nameType  =  nameType,  concat,	  This.nameType,    nameType,    concat,    	non-compiled	[CE]  	11	None	replace
2385	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  1,  maxPhonemes,  DEFAULT_PAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  1,  maxPhonemes,  DEFAULT_PAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  1,  maxPhonemes,  DEFAULT_PAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	293	None	replace
2386	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME)  {  super(nameType);  this.ruleType  =  ruleType;  }	  if(nameType!=    RuleType.NAME)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	253	None	replace
2387	[BUG]  [BUGGY]  (nameType  ==  RuleType.NAME)?  nameType  :  nameType;  this.ruleType  =  ruleType;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  (nameType  ==  RuleType.NAME)?  nameType  :  nameType;  this.ruleType  =  ruleType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	(nameType  ==  RuleType.NAME)?  nameType  :  nameType;  this.ruleType  =  ruleType;	  if(nameType!=    RuleType.NAME)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	253	None	replace
2388	[BUG]  [BUGGY]  This.phonemeBuilder,  nameType,  ruleType,  concat,  maxPhonemes)  {  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.phonemeBuilder,  nameType,  ruleType,  concat,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.phonemeBuilder,  nameType,  ruleType,  concat,  maxPhonemes)  {	  this.phonemeBuilder,    nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  <identifier>  expected	109	None	replace
2389	[BUG]  [BUGGY]  this.phonemeBuilder,  titleType,  ruleType,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder,  titleType,  ruleType,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder,  titleType,  ruleType,  maxPhonemes)  {	  this.phonemeBuilder,    nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
2390	[BUG]  [BUGGY]  this.phonemeBuilder,  nameType,  ruleType,  concat);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder,  nameType,  ruleType,  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder,  nameType,  ruleType,  concat);	  this.phonemeBuilder,    nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
2391	[BUG]  [BUGGY]  NameType  ruleType  =  ruleType.getRawRuleType();  [CE]  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType  =  ruleType.getRawRuleType();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType  =  ruleType.getRawRuleType();	  NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  	295	None	replace
2392	[BUG]  [BUGGY]  NameType  ruleType  =  ruleType.getRawClass();  [CE]  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType  =  ruleType.getRawClass();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType  =  ruleType.getRawClass();	  NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  	295	None	replace
2393	[BUG]  [BUGGY]  NameType  ruleType  =  ruleType.getRawParameterType(0);  [CE]  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType  =  ruleType.getRawParameterType(0);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType  =  ruleType.getRawParameterType(0);	  NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  	295	None	replace
2394	[BUG]  [BUGGY]  NameType  ruleType  =  ruleType.getRightType();  [CE]  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType  =  ruleType.getRightType();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType  =  ruleType.getRightType();	  NameType    ruleType    =    nameType.getRuleType();    	non-compiled	[CE]  	295	None	replace
2395	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getLabel();  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getLabel();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getLabel();	  NameType    nameType    =    ruleType.getRawName();    	non-compiled	[CE]  	90	None	replace
2396	[BUG]  [BUGGY]  final  boolean  nameType,  int  maxPhonemes)  {  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  nameType,  int  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  nameType,  int  maxPhonemes)  {	  final    boolean    maxPhonemes,    int    nameType)    {    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	197	None	replace
2397	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  Class  <?>  nameType)  {  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  Class  <?>  nameType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  Class  <?>  nameType)  {	  final    boolean    maxPhonemes,    String    nameType)    {    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	198	None	replace
2398	[BUG]  [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType)  {  this.nameType  =  nameType;  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(!concat)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
2399	[BUG]  [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  if(!concat)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  if(!concat)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType)  {  this.nameType  =  nameType;  }  if(!concat)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(!concat)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
2400	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  defULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  defULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  maxPhonemes,  defULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    0,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	176	None	replace
2401	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  ruleType.getName());  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  ruleType.getName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getName()  :  ruleType.getName());	  this.nameType    =    nameType.getName());    	non-compiled	[CE]  illegal  start  of  type	210	None	replace
2402	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(ruleType);  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(ruleType);  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(ruleType);  }	  super(ruleType);    	non-compiled	[CE]  illegal  start  of  type	182	None	replace
2403	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(ruleType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(ruleType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(ruleType);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super(ruleType);    	non-compiled	[CE]  illegal  start  of  type	182	None	replace
2404	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(ruleType);  }  else  {  finalRules  =  NAME_PREFIXES;  }  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(ruleType);  }  else  {  finalRules  =  NAME_PREFIXES;  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(ruleType);  }  else  {  finalRules  =  NAME_PREFIXES;  }	  super(ruleType);    	non-compiled	[CE]  illegal  start  of  type	182	None	replace
2405	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(ruleType);  }  else  {  finalRules  =  new  Set  <  RuleType>();  }  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(ruleType);  }  else  {  finalRules  =  new  Set  <  RuleType>();  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(ruleType);  }  else  {  finalRules  =  new  Set  <  RuleType>();  }	  super(ruleType);    	non-compiled	[CE]  illegal  start  of  type	182	None	replace
2406	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(ruleType);  }  else  {  nameType  =  ruleType.getName();  }  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(ruleType);  }  else  {  nameType  =  ruleType.getName();  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(ruleType);  }  else  {  nameType  =  ruleType.getName();  }	  super(ruleType);    	non-compiled	[CE]  illegal  start  of  type	182	None	replace
2407	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(ruleType);  }  else  {  nameType  =  nameType;  }  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(ruleType);  }  else  {  nameType  =  nameType;  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(ruleType);  }  else  {  nameType  =  nameType;  }	  super(ruleType);    	non-compiled	[CE]  illegal  start  of  type	182	None	replace
2408	[BUG]  [BUGGY]  if(nameType!=  null)  {  super(ruleType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType!=  null)  {  super(ruleType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  null)  {  super(ruleType);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super(ruleType);    	non-compiled	[CE]  illegal  start  of  type	182	None	replace
2409	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat,  }  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat,  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat,  }	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    this.concat,    	non-compiled	[CE]  illegal  start  of  type	207	None	replace
2410	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat,  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat,  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat,  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    this.concat,    	non-compiled	[CE]  illegal  start  of  type	207	None	replace
2411	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat,  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat,  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat,  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    this.concat,    	non-compiled	[CE]  illegal  start  of  type	207	None	replace
2412	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat,  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat,  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat,  }  else  {  throw  new  IllegalStateException( " ");  }	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    this.concat,    	non-compiled	[CE]  illegal  start  of  type	207	None	replace
2413	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat,  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat,  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat,  }  else  {  throw  new  IllegalStateException( " ");  }	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    this.concat,    	non-compiled	[CE]  illegal  start  of  type	207	None	replace
2414	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat,  }  else  {  final  int  maxPhonemes  =  maxPhonemes;  }  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat,  }  else  {  final  int  maxPhonemes  =  maxPhonemes;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat,  }  else  {  final  int  maxPhonemes  =  maxPhonemes;  }	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    this.concat,    	non-compiled	[CE]  illegal  start  of  type	207	None	replace
2415	[BUG]  [BUGGY]  final  NameType  nameType,  RuleType  ruleType,  Concat,  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType,  RuleType  ruleType,  Concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType,  RuleType  ruleType,  Concat,	  NameType    nameType,    RuleType    ruleType,    Concat,    	non-compiled	[CE]  <identifier>  expected	162	None	replace
2416	[BUG]  [BUGGY]  this.ruleType,  ruleType,  concat,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType,  ruleType,  concat,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  ruleType,  concat,  maxPhonemes);	  this.ruleType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	270	None	replace
2417	[BUG]  [BUGGY]  this.ruleType,  ruleType,  concat,  new  int[]  {  }  )  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType,  ruleType,  concat,  new  int[]  {  }  )  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  ruleType,  concat,  new  int[]  {  }  )  {	  this.ruleType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	270	None	replace
2418	[BUG]  [BUGGY]  this.ruleType,  ruleType,  concat,  4);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType,  ruleType,  concat,  4);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType,  ruleType,  concat,  4);	  this.ruleType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	270	None	replace
2419	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  1,  0)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  1,  0)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  1,  0)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0)    {    	non-compiled	[CE]  illegal  start  of  type	296	None	replace
2420	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PLREFIXES);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_PLREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_PLREFIXES);	  super(nameType,    ruleType,    concat,    DEFAULT_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	218	None	replace
2421	[BUG]  [BUGGY]  this.maxPhonemes  =  Concat.instance(nameType);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  Concat.instance(nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  Concat.instance(nameType);	  super(nameType);    this.maxPhonemes    =    concat;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
2422	[BUG]  [BUGGY]  this.maxPhonemes  =  Concat.instance;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  Concat.instance;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  Concat.instance;	  super(nameType);    this.maxPhonemes    =    concat;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
2423	[BUG]  [BUGGY]  this.minPhonemes  =  Long.instance(nameType);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.minPhonemes  =  Long.instance(nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.minPhonemes  =  Long.instance(nameType);	  super(nameType);    this.maxPhonemes    =    concat;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
2424	[BUG]  [BUGGY]  this.maxPhonemes  =  Concat.instance(concat);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  Concat.instance(concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  Concat.instance(concat);	  super(nameType);    this.maxPhonemes    =    concat;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
2425	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  boolean  concat);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  boolean  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  boolean  concat);	  final    int    maxPhonemes,    final    boolean    concat)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
2426	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  concat);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  concat);	  final    int    maxPhonemes,    final    boolean    concat)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
2427	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  boolean  concat,  final  RuleType  ruleType)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  boolean  concat,  final  RuleType  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  boolean  concat,  final  RuleType  ruleType)  {	  final    int    maxPhonemes,    final    boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	42	None	replace
2428	[BUG]  [BUGGY]  static  final  int  maxPhonemes  =  nameType.maxPhonemes  -  3;  [CE]  modifier  static  not  allowed  here  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  static  final  int  maxPhonemes  =  nameType.maxPhonemes  -  3;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  int  maxPhonemes  =  nameType.maxPhonemes  -  3;	  static    final    int    maxPhonemes    =    nameType.maxPhonemes;    	non-compiled	[CE]  modifier  static  not  allowed  here	256	None	replace
2429	[BUG]  [BUGGY]  NameType  nameType  =  rule.getName();  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  rule.getName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  rule.getName();	  NameType    nameType    =    rules.getName();    	non-compiled	[CE]  	195	None	replace
2430	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  defPhonemes)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  defPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  defPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
2431	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes),  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes),  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  maxPhonemes),	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
2432	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_BAD_PHONEMES);  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_BAD_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_BAD_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MIN_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	209	None	replace
2433	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MEMBER_PHONEMES);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MEMBER_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MEMBER_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MIN_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	209	None	replace
2434	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MILLISECOND);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MILLISECOND);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_MILLISECOND);	  this(nameType,    ruleType,    concat,    DEFAULT_MIN_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	209	None	replace
2435	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_SIZE);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_SIZE);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_SIZE);	  this(nameType,    ruleType,    concat,    DEFAULT_MIN_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	209	None	replace
2436	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_FACTOR);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_FACTOR);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MIN_PHONEMES,  DEFAULT_FACTOR);	  this(nameType,    ruleType,    concat,    DEFAULT_MIN_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	209	None	replace
2437	[BUG]  [BUGGY]  this.nameType  =  nameType.getName()  :  ruleType.getName();  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getName()  :  ruleType.getName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getName()  :  ruleType.getName();	  this.nameType    =    nameType.getName()    +    1;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
2438	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType,  ruleType.getName(),  concat);  [CE]  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  new  NameType(nameType,  ruleType.getName(),  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  new  NameType(nameType,  ruleType.getName(),  concat);	  NameType    nameType    =    new    NameType(nameType.getName(),    concat);    	non-compiled	[CE]  	86	None	replace
2439	[BUG]  [BUGGY]  nameType,  ruleType,  concat,  this.defaultRules  =  new  LinkedList  <  RuleType>();  [CE]  <identifier>  expected  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  concat,  this.defaultRules  =  new  LinkedList  <  RuleType>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat,  this.defaultRules  =  new  LinkedList  <  RuleType>();	  nameType,    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	9	None	replace
2440	[BUG]  [BUGGY]  nameType,  ruleType,  concat,  this.defaultRules  =  new  ArrayList  <  RuleType>();  [CE]  <identifier>  expected  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  concat,  this.defaultRules  =  new  ArrayList  <  RuleType>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat,  this.defaultRules  =  new  ArrayList  <  RuleType>();	  nameType,    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	9	None	replace
2441	[BUG]  [BUGGY]  nameType,  ruleType,  concat,  this.maxPhonemes  =  maxPhonemes;  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  concat,  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat,  this.maxPhonemes  =  maxPhonemes;	  nameType,    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	9	None	replace
2442	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.namePhonemes,  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.namePhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.namePhonemes,	  NameType    nameType,    ruleType,    concat,    this.numberPhonemes,    	non-compiled	[CE]  <identifier>  expected	39	None	replace
2443	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  final  int  maxPhonemes  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  final  int  maxPhonemes  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.numberPhonemes,  final  int  maxPhonemes	  NameType    nameType,    ruleType,    concat,    this.numberPhonemes,    	non-compiled	[CE]  <identifier>  expected	39	None	replace
2444	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  null,  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  null,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  null,	  NameType    nameType,    ruleType,    concat,    this.numberPhonemes,    	non-compiled	[CE]  <identifier>  expected	39	None	replace
2445	[BUG]  [BUGGY]  this.ruleType  =  nameType);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  nameType);	  this.ruleType    =   "ruletype   ";    	non-compiled	[CE]  illegal  start  of  type	338	None	replace
2446	[BUG]  [BUGGY]  final  boolean  concat,  Boolean  maxPhonemes)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  concat,  Boolean  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  concat,  Boolean  maxPhonemes)  {	  final    int    maxPhonemes,    Boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	274	None	replace
2447	[BUG]  [BUGGY]  final  char  maxPhonemes,  Boolean  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  char  maxPhonemes,  Boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  char  maxPhonemes,  Boolean  concat)  {	  final    int    maxPhonemes,    Boolean    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	274	None	replace
2448	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getReferenceName());  [CE]  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  new  NameType(nameType.getReferenceName());  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  new  NameType(nameType.getReferenceName());	  NameType    nameType    =    new    NameType(nameType.getName());    	non-compiled	[CE]  	87	None	replace
2449	[BUG]  [BUGGY]  NameType  nameType  =  new  NameType(nameType.getRawClass());  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  new  NameType(nameType.getRawClass());  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  new  NameType(nameType.getRawClass());	  NameType    nameType    =    new    NameType(nameType.getName());    	non-compiled	[CE]  	87	None	replace
2450	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.nameGenerator);  [CE]  <identifier>  expected  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.nameGenerator);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.nameGenerator);	  NameType    nameType,    RuleType    ruleType,    concat,    this);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
2451	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.defaultRules);  [CE]  <identifier>  expected  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.defaultRules);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.defaultRules);	  NameType    nameType,    RuleType    ruleType,    concat,    this);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
2452	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  this.phonemes);  [CE]  <identifier>  expected  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  this.phonemes);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  this.phonemes);	  NameType    nameType,    RuleType    ruleType,    concat,    this);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
2453	[BUG]  [BUGGY]  this.nameType  =  nameType,  concat,  null;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType,  concat,  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType,  concat,  null;	  this.nameType    =    nameType,    concat;    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
2454	[BUG]  [BUGGY]  this.nameType  =  nameType,  concat,  false);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType,  concat,  false);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType,  concat,  false);	  this.nameType    =    nameType,    concat;    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
2455	[BUG]  [BUGGY]  this.nameType  =  nameType,  concat);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType,  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType,  concat);	  this.nameType    =    nameType,    concat;    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
2456	[BUG]  [BUGGY]  this.nameType  =  nameType,  Concat;  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType,  Concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType,  Concat;	  this.nameType    =    nameType,    concat;    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
2457	[BUG]  [BUGGY]  this.nameType  =  nameType,  concat,  false;  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType,  concat,  false;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType,  concat,  false;	  this.nameType    =    nameType,    concat;    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
2458	[BUG]  [BUGGY]  NameType  nameType,  ruleType.nameType,  Boolean  concat,  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.nameType,  Boolean  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.nameType,  Boolean  concat,	  NameType    nameType,    RuleType    ruleType,    Boolean    concat,    	non-compiled	[CE]  <identifier>  expected	164	None	replace
2459	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  Locale.US)  {  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  Locale.US)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  Locale.US)  {	  final    boolean    maxPhonemes,    Locale.getDefault())    {    	non-compiled	[CE]  <identifier>  expected	199	None	replace
2460	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_NAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_NAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_NAX_PHONEMES);	  super(nameType,    ruleType,    concat,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	168	None	replace
2461	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_BAD_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_BAD_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_BAD_PHONEMES);	  super(nameType,    ruleType,    concat,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	168	None	replace
2462	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  NameType.DEFAULT_MAX_PHONEMES  :  NameType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  NameType.DEFAULT_MAX_PHONEMES  :  NameType.NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  NameType.DEFAULT_MAX_PHONEMES  :  NameType.NAME_PREFIXES;	  this.nameType    =    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
2463	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  NameType.DEFAULT_NAM_PHONEMES  :  NameType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  NameType.DEFAULT_NAM_PHONEMES  :  NameType.NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  NameType.DEFAULT_NAM_PHONEMES  :  NameType.NAME_PREFIXES;	  this.nameType    =    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
2464	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  NameType.NOT_IMPLEMENTED  :  NameType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  NameType.NOT_IMPLEMENTED  :  NameType.NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  NameType.NOT_IMPLEMENTED  :  NameType.NAME_PREFIXES;	  this.nameType    =    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
2465	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  NameType.ALL  :  NameType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  NameType.ALL  :  NameType.NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  NameType.ALL  :  NameType.NAME_PREFIXES;	  this.nameType    =    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
2466	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  NameType.NOT_OBJECT  :  NameType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  NameType.NOT_OBJECT  :  NameType.NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  NameType.NOT_OBJECT  :  NameType.NAME_PREFIXES;	  this.nameType    =    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
2467	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  NameType.DEFAULT_NAMES  :  NameType.NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  NameType.DEFAULT_NAMES  :  NameType.NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  NameType.DEFAULT_NAMES  :  NameType.NAME_PREFIXES;	  this.nameType    =    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
2468	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getDeclaredName()  :  nameType.getDeclaredName();  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getDeclaredName()  :  nameType.getDeclaredName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.getDeclaredName()  :  nameType.getDeclaredName();	  this.nameType    =    nameType.getDeclaredName();    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
2469	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  ruleType.getDeclaredName();  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  ruleType.getDeclaredName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getName()  :  ruleType.getDeclaredName();	  this.nameType    =    nameType.getDeclaredName();    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
2470	[BUG]  [BUGGY]  this.ruleType  =  ruleType.restrictByNotNullOrUndefined();  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  ruleType.restrictByNotNullOrUndefined();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  ruleType.restrictByNotNullOrUndefined();	  NameType    nameType    =    nameType.toString();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
2471	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getReferenceName();  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  ruleType.getReferenceName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  ruleType.getReferenceName();	  NameType    nameType    =    nameType.toString();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
2472	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	261	None	replace
2473	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_PHONEMES,  DEFAULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_PHONEMES,  DEFAULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_PHONEMES,  DEFAULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	261	None	replace
2474	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getReferencedName();  [CE]  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getReferencedName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getReferencedName();	  NameType    nameType    =    ruleType.getFullName();    	non-compiled	[CE]  	238	None	replace
2475	[BUG]  [BUGGY]  this.minPhonemes  =  ruleType.minPhonemes;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.minPhonemes  =  ruleType.minPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.minPhonemes  =  ruleType.minPhonemes;	  this.minPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
2476	[BUG]  [BUGGY]  this.minPhonemes  =  new  int[maxPhonemes];  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.minPhonemes  =  new  int[maxPhonemes];  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.minPhonemes  =  new  int[maxPhonemes];	  this.minPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
2477	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  ruleType);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  ruleType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  ruleType);	  final    boolean    maxPhonemes,    final    RuleType    ruleType)    {    	non-compiled	[CE]  illegal  start  of  type	271	None	replace
2478	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  ruleType)  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  ruleType)  {	  final    boolean    maxPhonemes,    final    RuleType    ruleType)    {    	non-compiled	[CE]  illegal  start  of  type	271	None	replace
2479	[BUG]  [BUGGY]  this.nameType  =  nameType!=  ruleType?  nameType  :((  RuleType)nameType).getName();  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  ruleType?  nameType  :((  RuleType)nameType).getName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  ruleType?  nameType  :((  RuleType)nameType).getName();	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :((    RuleType)nameType).getName();    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
2480	[BUG]  [BUGGY]  this.nameType  =  nameType!=  RuleType?  nameType  :((  RuleType)nameType).getName();  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  RuleType?  nameType  :((  RuleType)nameType).getName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  RuleType?  nameType  :((  RuleType)nameType).getName();	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :((    RuleType)nameType).getName();    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
2481	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  ruleType?  nameType  :((  RuleType)nameType).getName();  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  ruleType?  nameType  :((  RuleType)nameType).getName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  ruleType?  nameType  :((  RuleType)nameType).getName();	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :((    RuleType)nameType).getName();    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
2482	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getReferenceName());  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getReferenceName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getReferenceName());	  this.ruleType    =    new    RuleType(nameType.getName(),    ruleType.getSimpleName());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
2483	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  &  DEFAULT_MAX_PHONEMES;  [CE]  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  &  DEFAULT_MAX_PHONEMES;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes  &  DEFAULT_MAX_PHONEMES;	  final    int    maxPhonemes    =    nameType.maxPhonemes    &    1;    	non-compiled	[CE]  	29	None	replace
2484	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  &  2;  [CE]  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  &  2;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes  &  2;	  final    int    maxPhonemes    =    nameType.maxPhonemes    &    1;    	non-compiled	[CE]  	29	None	replace
2485	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_SYNTHETIC)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_SYNTHETIC)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_SYNTHETIC)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    nameType)    {    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
2486	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_RULES)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_RULES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_RULES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    nameType)    {    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
2487	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
2488	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
2489	[BUG]  [BUGGY]  if(nameType!=  ruleType)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType!=  ruleType)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  ruleType)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
2490	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalStateException( " ");  }	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
2491	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
2492	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME)  {  this.nameType  =  nameType;  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalStateException( " ");  }	  this.nameType    =    nameType;    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
2493	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  ArrayMap  <  String,  Rule>();  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  ArrayMap  <  String,  Rule>();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  ArrayMap  <  String,  Rule>();	  NameType    nameType,    ruleType,    concat.names    =    new    LinkedHashMap    <    String,    Rule>();    	non-compiled	[CE]  <identifier>  expected	336	None	replace
2494	[BUG]  [BUGGY]  NameType  ruleType,  ruleType,  concat,  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType,  ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType,  ruleType,  concat,	  NameType    ruleType,    RuleType    ruleType,    boolean    concat,    	non-compiled	[CE]  <identifier>  expected	286	None	replace
2495	[BUG]  [BUGGY]  NameType  ruleType,  RuleType  ruleType,  Concat,  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType,  RuleType  ruleType,  Concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType,  RuleType  ruleType,  Concat,	  NameType    ruleType,    RuleType    ruleType,    boolean    concat,    	non-compiled	[CE]  <identifier>  expected	286	None	replace
2496	[BUG]  [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  /  4;  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  ruleType.maxPhonemes  /  4;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  ruleType.maxPhonemes  /  4;	  final    int    maxPhonemes    =    nameType.maxPhonemes    -    4;    	non-compiled	[CE]  	257	None	replace
2497	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  1,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  1,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  1,  maxPhonemes);	  super(nameType,    ruleType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	167	None	replace
2498	[BUG]  [BUGGY]  this.maxPhonemes  =  maxPhonemes  *  4;  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  maxPhonemes  *  4;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  maxPhonemes  *  4;	  this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
2499	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  null,  ruleType);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  concat,  null,  ruleType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  null,  ruleType);	  this.nameType,    nameType,    concat,    null);    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
2500	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  null,  0);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  concat,  null,  0);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  null,  0);	  this.nameType,    nameType,    concat,    null);    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
2501	[BUG]  [BUGGY]  this.phonemeBuilder  =  Lang.instance(nameType,  ruleType);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Lang.instance(nameType,  ruleType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Lang.instance(nameType,  ruleType);	  this.phonemeBuilder    =    Lang.instance(nameType);    	non-compiled	[CE]  illegal  start  of  type	283	None	replace
2502	[BUG]  [BUGGY]  this.phonemeBuilder  =  Lan.instance(nameType);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Lan.instance(nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Lan.instance(nameType);	  this.phonemeBuilder    =    Lang.instance(nameType);    	non-compiled	[CE]  illegal  start  of  type	283	None	replace
2503	[BUG]  [BUGGY]  this.phonemeBuilder  =  Lang.instance(nameType,  nameType);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Lang.instance(nameType,  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Lang.instance(nameType,  nameType);	  this.phonemeBuilder    =    Lang.instance(nameType);    	non-compiled	[CE]  illegal  start  of  type	283	None	replace
2504	[BUG]  [BUGGY]  this.phonemeBuilder  =  Lang.instance(nameType  + ", "  +  ruleType);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Lang.instance(nameType  + ", "  +  ruleType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Lang.instance(nameType  + ", "  +  ruleType);	  this.phonemeBuilder    =    Lang.instance(nameType);    	non-compiled	[CE]  illegal  start  of  type	283	None	replace
2505	[BUG]  [BUGGY]  this.nameType  =  nameType.getName()  + "_ "  +  ruleType.toString();  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType.getName()  + "_ "  +  ruleType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType.getName()  + "_ "  +  ruleType.toString();	  this.nameType    =    nameType.toString()    +   "_   "    +    ruleType.toString();    	non-compiled	[CE]  illegal  start  of  type	303	None	replace
2506	[BUG]  [BUGGY]  if(nameType!=  RuleType.NAME_PREFIXES  ||  nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType!=  RuleType.NAME_PREFIXES  ||  nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType!=  RuleType.NAME_PREFIXES  ||  nameType!=  RuleType.NAME_PREFIXES)  {  super(nameType);  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(nameType!=    RuleType.NAME_PREFIXES)    {    super(nameType);    this.ruleType    =    ruleType;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	249	None	replace
2507	[BUG]  [BUGGY]  static  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  -  3;  [CE]  modifier  static  not  allowed  here  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  static  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  -  3;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	static  final  int  maxPhonemes  =  nameType.getMaxPhonemes()  -  3;	  static    final    int    maxPhonemes    =    nameType.getMaxPhonemes();    	non-compiled	[CE]  modifier  static  not  allowed  here	216	None	replace
2508	[BUG]  [BUGGY]  this.nameType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  nameType;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  instanceof  RuleType?  NameType.NAME_PREFIXES  :  nameType;	  this.nameType    =    nameType    instanceof    RuleType?    NameType.NAME_PREFIXES    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	263	None	replace
2509	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getRawClass(),  ruleType.getName());  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getRawClass(),  ruleType.getName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getRawClass(),  ruleType.getName());	  this.ruleType    =    new    RuleType(nameType.getRawClass(),    ruleType.getRawClass());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
2510	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getRawClass(),  ruleType.getRules());  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getRawClass(),  ruleType.getRules());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getRawClass(),  ruleType.getRules());	  this.ruleType    =    new    RuleType(nameType.getRawClass(),    ruleType.getRawClass());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
2511	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  this.nameType);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  this.nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  this.nameType);	  super(nameType,    ruleType,    concat,    nameType);    	non-compiled	[CE]  illegal  start  of  type	217	None	replace
2512	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  this.defaultRules);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  this.defaultRules);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  this.defaultRules);	  super(nameType,    ruleType,    concat,    nameType);    	non-compiled	[CE]  illegal  start  of  type	217	None	replace
2513	[BUG]  [BUGGY]  this.phonemeBuilder  =  Lang.instance(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Lang.instance(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Lang.instance(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;	  this.phonemeBuilder    =    Lang.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	281	None	replace
2514	[BUG]  [BUGGY]  this.phonemeBuilder  =  Lan.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  Lan.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  Lan.instance(nameType);  this.maxPhonemes  =  maxPhonemes;	  this.phonemeBuilder    =    Lang.instance(nameType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	281	None	replace
2515	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.toString(),  ruleType.toString())+  1;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.toString(),  ruleType.toString())+  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.toString(),  ruleType.toString())+  1;	  this.ruleType    =    new    RuleType(nameType.toString(),    ruleType.toString());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
2516	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType,  ruleType.toString(),  nameType.toString());  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType,  ruleType.toString(),  nameType.toString());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType,  ruleType.toString(),  nameType.toString());	  this.ruleType    =    new    RuleType(nameType.toString(),    ruleType.toString());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
2517	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.toString(),  ruleType.toString()  +  1,  concat);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.toString(),  ruleType.toString()  +  1,  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.toString(),  ruleType.toString()  +  1,  concat);	  this.ruleType    =    new    RuleType(nameType.toString(),    ruleType.toString());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
2518	[BUG]  [BUGGY]  NameType  ruleType,  RuleType  ruleType,  Concat);  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType,  RuleType  ruleType,  Concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType,  RuleType  ruleType,  Concat);	  NameType    nameType,    RuleType    ruleType,    Concat);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
2519	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  CONCAT);  [CE]  <identifier>  expected  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  CONCAT);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  CONCAT);	  NameType    nameType,    RuleType    ruleType,    Concat);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
2520	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  RuleType.NAME_PREFIXES;  }  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  RuleType.NAME_PREFIXES;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  RuleType.NAME_PREFIXES;  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
2521	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  1,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  1,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  1,  maxPhonemes)  {	  this(nameType,    ruleType,    concat,    DEFAULT_PARENTHESES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	297	None	replace
2522	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARENTHESES,  maxPhonemes,  DEFAULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_PARENTHESES,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	297	None	replace
2523	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_SMALL_PHONEMES,  DEFAULT_SYNTHETIC);  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_SMALL_PHONEMES,  DEFAULT_SYNTHETIC);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_SMALL_PHONEMES,  DEFAULT_SYNTHETIC);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  type	312	None	replace
2524	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC,  DEFAULT_NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC,  DEFAULT_NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC,  DEFAULT_NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  type	312	None	replace
2525	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  this.ruleType);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  this.ruleType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  this.ruleType);	  this.nameType,    nameType,    concat,    ruleType);    	non-compiled	[CE]  illegal  start  of  type	321	None	replace
2526	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  this.defaultRules);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  this.defaultRules);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  this.defaultRules);	  this.nameType,    nameType,    concat,    ruleType);    	non-compiled	[CE]  illegal  start  of  type	321	None	replace
2527	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  this.minPhonemes);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  this.minPhonemes);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  this.minPhonemes);	  this.nameType,    nameType,    concat,    ruleType);    	non-compiled	[CE]  illegal  start  of  type	321	None	replace
2528	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  this.defaultRuleType);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  this.defaultRuleType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  this.defaultRuleType);	  this.nameType,    nameType,    concat,    ruleType);    	non-compiled	[CE]  illegal  start  of  type	321	None	replace
2529	[BUG]  [BUGGY]  super(nameType);  this.nameType  =  nameType;  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType);  this.nameType  =  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType);  this.nameType  =  nameType;	  this.nameType,    nameType,    Concat,    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
2530	[BUG]  [BUGGY]  NameType  nameType,  ruleType.nameType,  concat,  this.maxPhonemes  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.nameType,  concat,  this.maxPhonemes  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.nameType,  concat,  this.maxPhonemes	  NameType    nameType,    ruleType.nameType,    concat,    	non-compiled	[CE]  <identifier>  expected	38	None	replace
2531	[BUG]  [BUGGY]  NameType  nameType,  ruleType.nameType,  concat,  0);  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType.nameType,  concat,  0);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType.nameType,  concat,  0);	  NameType    nameType,    ruleType.nameType,    concat,    	non-compiled	[CE]  <identifier>  expected	38	None	replace
2532	[BUG]  [BUGGY]  This.nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES);  [CE]  <identifier>  expected  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES);	  this.nameType,    nameType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
2533	[BUG]  [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  /  2  +  4;  [CE]  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes  =  nameType.maxPhonemes  /  2  +  4;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes  =  nameType.maxPhonemes  /  2  +  4;	  final    int    maxPhonemes    =    nameType.maxPhonemes    /    2;    	non-compiled	[CE]  	28	None	replace
2534	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(ruleType,  concat);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(ruleType,  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(ruleType,  concat);	  this.phonemeBuilder    =    PhonemeBuilder.instance(nameType,    concat);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	225	None	replace
2535	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  ruleType.getName()  :  nameType;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  ruleType.getName()  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.NAME_PREFIXES?  ruleType.getName()  :  nameType;	  this.nameType    =    nameType    ==    RuleType.NAME_PREFIXES?    nameType.getName()    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	309	None	replace
2536	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  nameType.getSimpleName();  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  nameType.getSimpleName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getName()  :  nameType.getSimpleName();	  this.nameType    =    nameType!=    null?    nameType.getName()    :    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	202	None	replace
2537	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  nameType.getQualifiedName();  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  nameType.getQualifiedName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getName()  :  nameType.getQualifiedName();	  this.nameType    =    nameType!=    null?    nameType.getName()    :    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	202	None	replace
2538	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getNameId()  :  nameType.getName();  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getNameId()  :  nameType.getName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getNameId()  :  nameType.getName();	  this.nameType    =    nameType!=    null?    nameType.getName()    :    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	202	None	replace
2539	[BUG]  [BUGGY]  this.ruleType  ||  nameType  ==  ruleType;  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  ||  nameType  ==  ruleType;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  ||  nameType  ==  ruleType;	  this.ruleType;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
2540	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  Boolean  concat,  boolean  lang)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  Boolean  concat,  boolean  lang)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  Boolean  concat,  boolean  lang)  {	  final    int    maxPhonemes,    boolean    concat,    boolean    lang)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	276	None	replace
2541	[BUG]  [BUGGY]  final  int  lang,  boolean  concat,  boolean  maxPhonemes)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  lang,  boolean  concat,  boolean  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  lang,  boolean  concat,  boolean  maxPhonemes)  {	  final    int    maxPhonemes,    boolean    concat,    boolean    lang)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	276	None	replace
2542	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  MAX_PHONEMES,  nameType);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  MAX_PHONEMES,  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  MAX_PHONEMES,  nameType);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
2543	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  short  concat,  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  short  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  short  concat,	  NameType    nameType,    RuleType    ruleType,    short    concat,    	non-compiled	[CE]  <identifier>  expected	205	None	replace
2544	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  2)  {  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  2)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  2)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    0)    {    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
2545	[BUG]  [BUGGY]  this.ruleType  =  ruleType  {  null? "null "  :  ruleType;  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  ruleType  {  null? "null "  :  ruleType;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  ruleType  {  null? "null "  :  ruleType;	  this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
2546	[BUG]  [BUGGY]  this.ruleType  =  ruleType  {  null?  null  :  ruleType.getRawParameterType(0);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  ruleType  {  null?  null  :  ruleType.getRawParameterType(0);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  ruleType  {  null?  null  :  ruleType.getRawParameterType(0);	  this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
2547	[BUG]  [BUGGY]  this.ruleType  =  ruleType  {  null?  null  :  ruleType.getRawClass();  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  ruleType  {  null?  null  :  ruleType.getRawClass();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  ruleType  {  null?  null  :  ruleType.getRawClass();	  this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
2548	[BUG]  [BUGGY]  super(new  NameType(nameType,  ruleType,  concat));  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(new  NameType(nameType,  ruleType,  concat));  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(new  NameType(nameType,  ruleType,  concat));	  super(nameType,    concat);    	non-compiled	[CE]  illegal  start  of  type	181	None	replace
2549	[BUG]  [BUGGY]  NameType  nameType  =  nameType.toString();  this.ruleType  =  ruleType.toString();  [CE]  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  nameType.toString();  this.ruleType  =  ruleType.toString();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  nameType.toString();  this.ruleType  =  ruleType.toString();	  This.nameType,    ruleType,    concat,    	non-compiled	[CE]  	134	None	replace
2550	[BUG]  [BUGGY]  NameType  nameType  =  nameType.getName(),  ruleType,  concat,  [CE]  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  nameType.getName(),  ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  nameType.getName(),  ruleType,  concat,	  This.nameType,    ruleType,    concat,    	non-compiled	[CE]  	134	None	replace
2551	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType.concat;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType.concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.ruleType  =  ruleType.concat;	  super(nameType,    ruleType.concat);    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
2552	[BUG]  [BUGGY]  this(nameType,  ruleType.concat,  concat);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType.concat,  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType.concat,  concat);	  super(nameType,    ruleType.concat);    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
2553	[BUG]  [BUGGY]  Super(nameType,  ruleType.concat);  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Super(nameType,  ruleType.concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Super(nameType,  ruleType.concat);	  super(nameType,    ruleType.concat);    	non-compiled	[CE]  <identifier>  expected	156	None	replace
2554	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(runType,  nameType);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(runType,  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(runType,  nameType);	  this.ruleType    =    new    RuleType(nameType,    ruleType);    	non-compiled	[CE]  illegal  start  of  type	232	None	replace
2555	[BUG]  [BUGGY]  this.maxPhonemes,  boolean  concat)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes,  boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes,  boolean  concat)  {	  final    char    maxPhonemes,    boolean    concat)    {    	non-compiled	[CE]  illegal  start  of  type	273	None	replace
2556	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  }	  super(nameType,    ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
2557	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super(nameType,    ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
2558	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  finalRules  =  NAME_PREFIXES;  }  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  finalRules  =  NAME_PREFIXES;  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  finalRules  =  NAME_PREFIXES;  }	  super(nameType,    ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
2559	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super(nameType,    ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
2560	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  finalRules  =  new  Set  <  RuleType>();  }  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  finalRules  =  new  Set  <  RuleType>();  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  finalRules  =  new  Set  <  RuleType>();  }	  super(nameType,    ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
2561	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalStateException( " ");  }	  super(nameType,    ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
2562	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( "The  rule  type  must  not  be  null. ");  }  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( "The  rule  type  must  not  be  null. ");  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME_PREFIXES)  {  super(nameType,  ruleType);  this.maxPhonemes  =  maxPhonemes;  }  else  {  throw  new  IllegalArgumentException( "The  rule  type  must  not  be  null. ");  }	  super(nameType,    ruleType);    this.maxPhonemes    =    maxPhonemes;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
2563	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PREFIXES,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
2564	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_ALL_PHONEMES);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_ALL_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_ALL_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
2565	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :  NameType.NAME_PREFIXES,  ruleType);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  RuleType?  nameType  :  NameType.NAME_PREFIXES,  ruleType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  RuleType?  nameType  :  NameType.NAME_PREFIXES,  ruleType);	  this.nameType    =    nameType    instanceof    RuleType?    nameType    :    NameType.NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
2566	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getSimpleName()  :  null;  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getSimpleName()  :  null;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getSimpleName()  :  null;	  this.nameType    =    nameType.getSimpleName();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
2567	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getSimpleName()  : "null ";  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getSimpleName()  : "null ";  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getSimpleName()  : "null ";	  this.nameType    =    nameType.getSimpleName();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
2568	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.restrictByNotNullOrUndefined();  this.nameType  =  nameType;  [CE]  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.restrictByNotNullOrUndefined();  this.nameType  =  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.restrictByNotNullOrUndefined();  this.nameType  =  nameType;	  NameType    nameType,    final    RuleType    ruleType)    {    this.nameType    =    nameType;    }    	non-compiled	[CE]  	324	None	replace
2569	[BUG]  [BUGGY]  Preconditions.checkState(nameType!=  ruleType);  this.nameType  =  nameType;  [CE]  <identifier>  expected  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Preconditions.checkState(nameType!=  ruleType);  this.nameType  =  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Preconditions.checkState(nameType!=  ruleType);  this.nameType  =  nameType;	  NameType    nameType,    final    RuleType    ruleType)    {    this.nameType    =    nameType;    }    	non-compiled	[CE]  <identifier>  expected	324	None	replace
2570	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(defaultRules);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(defaultRules);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(defaultRules);	  this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  illegal  start  of  type	226	None	replace
2571	[BUG]  [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  false);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  false);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.phonemeBuilder  =  PhonemeBuilder.instance(nameType,  false);	  this.phonemeBuilder    =    PhonemeBuilder.instance(nameType);    	non-compiled	[CE]  illegal  start  of  type	226	None	replace
2572	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  Integer  ruleType,  NameType  ruleType)  {  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  Integer  ruleType,  NameType  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  Integer  ruleType,  NameType  ruleType)  {	  final    int    maxPhonemes,    boolean    concat,    NameType    ruleType)    {    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine	275	None	replace
2573	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  Boolean  concat,  NameType  ruleType)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  Boolean  concat,  NameType  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  Boolean  concat,  NameType  ruleType)  {	  final    int    maxPhonemes,    boolean    concat,    NameType    ruleType)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	275	None	replace
2574	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  1,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  1,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  1,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    MAX_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
2575	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    MAX_PHONEMES,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
2576	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  1,  maxPhonemes,  defULT_MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  1,  maxPhonemes,  defULT_MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  1,  maxPhonemes,  defULT_MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    maxPhonemes,    defULT_MAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	292	None	replace
2577	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  defULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  maxPhonemes,  defULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  maxPhonemes,  defULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    defULT_MAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	292	None	replace
2578	[BUG]  [BUGGY]  RuleType  ruleType,  boolean  concat);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  RuleType  ruleType,  boolean  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	RuleType  ruleType,  boolean  concat);	  NameType    nameType,    RuleType    ruleType,    boolean    concat);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
2579	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat);  this.nameType  =  nameType;  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat);  this.nameType  =  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat);  this.nameType  =  nameType;	  NameType    nameType,    RuleType    ruleType,    boolean    concat);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
2580	[BUG]  [BUGGY]  RuleType  nameType,  ruleType,  concat);  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  RuleType  nameType,  ruleType,  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	RuleType  nameType,  ruleType,  concat);	  NameType    nameType,    RuleType    ruleType,    boolean    concat);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
2581	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getFunctionName(),  concat;  [CE]  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getFunctionName(),  concat;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getFunctionName(),  concat;	  NameType    nameType    =    ruleType.getName(),    concat;    	non-compiled	[CE]  	136	None	replace
2582	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_FREFIXES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_FREFIXES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_FREFIXES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_FREFIXES);    	non-compiled	[CE]  illegal  start  of  type	313	None	replace
2583	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes,  NAME_PREFIXES)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  false,  maxPhonemes,  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  false,  maxPhonemes,  NAME_PREFIXES)  {	  this(nameType,    ruleType,    concat,    false,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
2584	[BUG]  [BUGGY]  this.nameType  =  ruleType  ==  null?  nameType  :  nameType;  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType  ==  null?  nameType  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType  ==  null?  nameType  :  nameType;	  this.nameType    =    nameType    ==    null?    nameType    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	310	None	replace
2585	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType  :  new  NameType(nameType);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType  :  new  NameType(nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType  :  new  NameType(nameType);	  this.nameType    =    nameType    ==    null?    nameType    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	310	None	replace
2586	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  syntacticRules,  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  syntacticRules,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  syntacticRules,	  NameType    nameType,    RuleType    ruleType,    finalRules,    	non-compiled	[CE]  <identifier>  expected	174	None	replace
2587	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  ArrayList  <  RuleType>(4);  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  ArrayList  <  RuleType>(4);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  ArrayList  <  RuleType>(4);	  NameType    nameType,    ruleType,    concat.names    =    new    ArrayList    <    RuleType>();    	non-compiled	[CE]  <identifier>  expected	333	None	replace
2588	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  ArrayList  <  RuleType>(2);  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  ArrayList  <  RuleType>(2);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  ArrayList  <  RuleType>(2);	  NameType    nameType,    ruleType,    concat.names    =    new    ArrayList    <    RuleType>();    	non-compiled	[CE]  <identifier>  expected	333	None	replace
2589	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  ArrayList  <  RuleType>(1);  [CE]  <identifier>  expected  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat.names  =  new  ArrayList  <  RuleType>(1);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat.names  =  new  ArrayList  <  RuleType>(1);	  NameType    nameType,    ruleType,    concat.names    =    new    ArrayList    <    RuleType>();    	non-compiled	[CE]  <identifier>  expected	333	None	replace
2590	[BUG]  [BUGGY]  super(nameType.getReferenceName());  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType.getReferenceName());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType.getReferenceName());	  super(nameType.getName());    	non-compiled	[CE]  illegal  start  of  type	183	None	replace
2591	[BUG]  [BUGGY]  super(nameType.getRawClass());  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType.getRawClass());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType.getRawClass());	  super(nameType.getName());    	non-compiled	[CE]  illegal  start  of  type	183	None	replace
2592	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  DEFAULT_PAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  maxPhonemes,  DEFAULT_PAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  maxPhonemes,  DEFAULT_PAX_PHONEMES);	  this(nameType,    ruleType,    concat,    maxPhonemes,    DEFAULT_PAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	179	None	replace
2593	[BUG]  [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  nameType  :  new  NameType(nameType);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  instanceof  NameType?  nameType  :  new  NameType(nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  instanceof  NameType?  nameType  :  new  NameType(nameType);	  this.nameType    =    nameType    instanceof    NameType?    nameType    :    nameType;    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
2594	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  NAME_PREFIXES,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  NAME_PREFIXES,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  NAME_PREFIXES,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
2595	[BUG]  [BUGGY]  this.lang,  nameType,  ruleType,  null,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.lang,  nameType,  ruleType,  null,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.lang,  nameType,  ruleType,  null,  maxPhonemes)  {	  this.lang,    nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
2596	[BUG]  [BUGGY]  this.lang,  nameType,  ruleType,  Concat)  {  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.lang,  nameType,  ruleType,  Concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.lang,  nameType,  ruleType,  Concat)  {	  this.lang,    nameType,    ruleType,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
2597	[BUG]  [BUGGY]  final  long  maxPhonemes,  final  Integer  concat)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  long  maxPhonemes,  final  Integer  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  long  maxPhonemes,  final  Integer  concat)  {	  final    int    maxPhonemes,    final    Integer    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	45	None	replace
2598	[BUG]  [BUGGY]  NameType  ruleType,  new  RuleType(ruleType.getName(),  concat),  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType,  new  RuleType(ruleType.getName(),  concat),  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType,  new  RuleType(ruleType.getName(),  concat),	  NameType    ruleType,    nameType,    concat,    	non-compiled	[CE]  illegal  start  of  type	280	None	replace
2599	[BUG]  [BUGGY]  NameType  ruleType,  new  RuleType(ruleType.getRawClass()),  concat,  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType,  new  RuleType(ruleType.getRawClass()),  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType,  new  RuleType(ruleType.getRawClass()),  concat,	  NameType    ruleType,    nameType,    concat,    	non-compiled	[CE]  illegal  start  of  type	280	None	replace
2600	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  DEFAULT_NAME_PREFIXES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  DEFAULT_NAME_PREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  DEFAULT_NAME_PREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_PAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	212	None	replace
2601	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  DEFAULT_MIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  DEFAULT_MIN_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  DEFAULT_MIN_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_PAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	212	None	replace
2602	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  DEFAULT_FREFIXES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  DEFAULT_FREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  DEFAULT_FREFIXES);	  this(nameType,    ruleType,    concat,    DEFAULT_PAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	212	None	replace
2603	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  DEFAULT_SYNTHETIC);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  DEFAULT_SYNTHETIC);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PAX_PHONEMES,  DEFAULT_SYNTHETIC);	  this(nameType,    ruleType,    concat,    DEFAULT_PAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	212	None	replace
2604	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_RANGE_PHONEMES,  DEFAULT_ALL_PHONEMES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_RANGE_PHONEMES,  DEFAULT_ALL_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_RANGE_PHONEMES,  DEFAULT_ALL_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_RANGE_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	317	None	replace
2605	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_RANGE_PHONEMES,  DEFAULT_PLAIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_RANGE_PHONEMES,  DEFAULT_PLAIN_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_RANGE_PHONEMES,  DEFAULT_PLAIN_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_RANGE_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	317	None	replace
2606	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_RANGE_PHONEMES,  DEFAULT_LOAD_FACTOR);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_RANGE_PHONEMES,  DEFAULT_LOAD_FACTOR);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_RANGE_PHONEMES,  DEFAULT_LOAD_FACTOR);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_RANGE_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	317	None	replace
2607	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_SYNTHETIC);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_SYNTHETIC);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_SYNTHETIC);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    nameType);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
2608	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_SIZE);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_SIZE);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_SIZE);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    nameType);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
2609	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_ALL_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_ALL_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_ALL_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    nameType);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
2610	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_PARENTHESIZED);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_PARENTHESIZED);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  DEFAULT_PARENTHESIZED);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    nameType);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
2611	[BUG]  [BUGGY]  NameType  nameType)  {  this.nameType  =  ruleType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType)  {  this.nameType  =  ruleType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType)  {  this.nameType  =  ruleType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType!=    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
2612	[BUG]  [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ")  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ")  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ")	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType!=    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
2613	[BUG]  [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType)  {  this.nameType  =  nameType;  }  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType!=    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
2614	[BUG]  [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType!=  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType!=    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
2615	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  ruleType.getSimpleName();  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  ruleType.getSimpleName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getName()  :  ruleType.getSimpleName();	  this.nameType    =    nameType!=    null?    nameType.getName()    :    ruleType.getName();    	non-compiled	[CE]  illegal  start  of  type	299	None	replace
2616	[BUG]  [BUGGY]  this.nameType  =  ruleType!=  null?  nameType.getName()  :  ruleType.getName();  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType!=  null?  nameType.getName()  :  ruleType.getName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType!=  null?  nameType.getName()  :  ruleType.getName();	  this.nameType    =    nameType!=    null?    nameType.getName()    :    ruleType.getName();    	non-compiled	[CE]  illegal  start  of  type	299	None	replace
2617	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_SYNTHETIC);	  super(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	170	None	replace
2618	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PROTOTYPES);  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PROTOTYPES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PROTOTYPES);	  super(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	170	None	replace
2619	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_FREFIXES);  [CE]  illegal  start  of  type  [FE]                                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_FREFIXES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_FREFIXES);	  super(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	170	None	replace
2620	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PLAIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PLAIN_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_PLAIN_PHONEMES);	  super(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	170	None	replace
2621	[BUG]  [BUGGY]  if(ruleType!=  null)  {  super();  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(ruleType!=  null)  {  super();  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(ruleType!=  null)  {  super();  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
2622	[BUG]  [BUGGY]  if(nameType  ==  RuleType.NAME)  {  super();  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType  ==  RuleType.NAME)  {  super();  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType  ==  RuleType.NAME)  {  super();  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
2623	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  super();  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  super();  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(ruleType  ==  RuleType.NAME_PREFIXES)  {  super();  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
2624	[BUG]  [BUGGY]  if(ruleType  ==  RuleType.NAME)  {  super();  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(ruleType  ==  RuleType.NAME)  {  super();  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(ruleType  ==  RuleType.NAME)  {  super();  this.ruleType  =  ruleType;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  super();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
2625	[BUG]  [BUGGY]  if(ruleType!=  null)  {  super();  this.ruleType  =  ruleType;  }  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(ruleType!=  null)  {  super();  this.ruleType  =  ruleType;  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(ruleType!=  null)  {  super();  this.ruleType  =  ruleType;  }	  super();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
2626	[BUG]  [BUGGY]  this.maxPhonemes  =  maxPhonemes?  concat  :  1;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.maxPhonemes  =  maxPhonemes?  concat  :  1;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.maxPhonemes  =  maxPhonemes?  concat  :  1;	  this.maxPhonemes    =    concat;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
2627	[BUG]  [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getAllParameterTypes());  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getAllParameterTypes());  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  new  RuleType(nameType.getName(),  ruleType.getAllParameterTypes());	  this.ruleType    =    new    RuleType(nameType.getName(),    ruleType.getParameterTypes());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
2628	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  finalPhonemes,  null);  [CE]  illegal  start  of  type  [FE]                                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  finalPhonemes,  null);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  finalPhonemes,  null);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    null);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
2629	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null,  0);  [CE]  illegal  start  of  type  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null,  0);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes,  null,  0);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    maxPhonemes,    null);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
2630	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_PLAIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_PLAIN_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_PLAIN_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PLAIN_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	314	None	replace
2631	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAM_PHONEMES,  DEFAULT_PLAIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PARAM_PHONEMES,  DEFAULT_PLAIN_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PARAM_PHONEMES,  DEFAULT_PLAIN_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PLAIN_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	314	None	replace
2632	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_RANGE_PHONEMES,  DEFAULT_PLAIN_PHONEMES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_RANGE_PHONEMES,  DEFAULT_PLAIN_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_RANGE_PHONEMES,  DEFAULT_PLAIN_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PLAIN_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	314	None	replace
2633	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  defULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  defULT_MAX_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  defULT_MAX_PHONEMES);	  this.nameType,    nameType,    concat,    defULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	322	None	replace
2634	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  def);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  def);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  def);	  this(nameType,    ruleType,    concat);    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
2635	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES));  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES));  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes,  DEFAULT_PHONEMES));	  super(nameType,    ruleType,    concat,    maxPhonemes));    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
2636	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  defULT_MAX_PHONEMES));  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  maxPhonemes,  defULT_MAX_PHONEMES));  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  maxPhonemes,  defULT_MAX_PHONEMES));	  super(nameType,    ruleType,    concat,    maxPhonemes));    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
2637	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  nameType.getQualifiedName();  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.getName()  :  nameType.getQualifiedName();  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.getName()  :  nameType.getQualifiedName();	  this.nameType    =    nameType    ==    null?    nameType.getName()    :    nameType.getName();    	non-compiled	[CE]  illegal  start  of  type	203	None	replace
2638	[BUG]  [BUGGY]  final  NameType  nameType,  RuleType  ruleType,  concat)  [CE]  <identifier>  expected  [FE]                                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType,  RuleType  ruleType,  concat)  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType,  RuleType  ruleType,  concat)	  NameType    nameType,    RuleType    ruleType,    concat)    	non-compiled	[CE]  <identifier>  expected	56	None	replace
2639	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType;  concat,  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.ruleType  =  ruleType;  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.ruleType  =  ruleType;  concat,	  this.nameType    =    nameType;    this.ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	242	None	replace
2640	[BUG]  [BUGGY]  this.nameType  =  ruleType;  this.ruleType,  concat,  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  ruleType;  this.ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  ruleType;  this.ruleType,  concat,	  this.nameType    =    nameType;    this.ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	242	None	replace
2641	[BUG]  [BUGGY]  this.nameType  =  nameType;  setRuleType(ruleType);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  setRuleType(ruleType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  setRuleType(ruleType);	  this.nameType    =    nameType;    this.ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	242	None	replace
2642	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getParameterType(0);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  ruleType.getParameterType(0);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  ruleType.getParameterType(0);	  NameType    nameType    =    nameType.getName();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
2643	[BUG]  [BUGGY]  this.ruleType  =  ruleType.getRawParameterType(0);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.ruleType  =  ruleType.getRawParameterType(0);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.ruleType  =  ruleType.getRawParameterType(0);	  NameType    nameType    =    nameType.getName();    this.ruleType    =    ruleType;    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
2644	[BUG]  [BUGGY]  Set  <  RuleType>  phonemes  =  Sets.newHashSet();  [CE]  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Set  <  RuleType>  phonemes  =  Sets.newHashSet();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Set  <  RuleType>  phonemes  =  Sets.newHashSet();	  setRuleType(nameType,    ruleType);    	non-compiled	[CE]  	158	None	replace
2645	[BUG]  [BUGGY]  Set  <  RuleType>  phonemes  =  Sets.newHashSet(nameType);  [CE]  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  Set  <  RuleType>  phonemes  =  Sets.newHashSet(nameType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	Set  <  RuleType>  phonemes  =  Sets.newHashSet(nameType);	  setRuleType(nameType,    ruleType);    	non-compiled	[CE]  	158	None	replace
2646	[BUG]  [BUGGY]  setFunctionName(nameType,  ruleType);  [CE]  <identifier>  expected  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  setFunctionName(nameType,  ruleType);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	setFunctionName(nameType,  ruleType);	  setRuleType(nameType,    ruleType);    	non-compiled	[CE]  <identifier>  expected	158	None	replace
2647	[BUG]  [BUGGY]  setRule(nameType,  ruleType,  concat,  true);  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  setRule(nameType,  ruleType,  concat,  true);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	setRule(nameType,  ruleType,  concat,  true);	  super(nameType,    ruleType,    concat,    true);    	non-compiled	[CE]  <identifier>  expected	166	None	replace
2648	[BUG]  [BUGGY]  setRule(nameType,  ruleType,  concat);  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  setRule(nameType,  ruleType,  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	setRule(nameType,  ruleType,  concat);	  super(ruleType,    concat);    	non-compiled	[CE]  <identifier>  expected	184	None	replace
2649	[BUG]  [BUGGY]  supervise(nameType,  ruleType,  concat);  [CE]  <identifier>  expected  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  supervise(nameType,  ruleType,  concat);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	supervise(nameType,  ruleType,  concat);	  super(ruleType,    concat);    	non-compiled	[CE]  <identifier>  expected	184	None	replace
2650	[BUG]  [BUGGY]  this.nameType  =  nameType,  ruleType,  concat);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType,  ruleType,  concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType,  ruleType,  concat);	  this.nameType    =    nameType,    ruleType,    concat,    	non-compiled	[CE]  illegal  start  of  type	290	None	replace
2651	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  maxPhonemes;  [CE]  <identifier>  expected  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  maxPhonemes;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  maxPhonemes;	  NameType    nameType,    ruleType,    concat;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
2652	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  true,  maxPhonemes,  DEFAULT_PAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  true,  maxPhonemes,  DEFAULT_PAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  true,  maxPhonemes,  DEFAULT_PAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    true,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
2653	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  : "null ",  nameType);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  : "null ",  nameType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getName()  : "null ",  nameType);	  this.nameType    =    nameType!=    null?    nameType.getName()    :   "null   ";    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
2654	[BUG]  [BUGGY]  NameType  ruleType,  Concat);  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  ruleType,  Concat);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  ruleType,  Concat);	  NameType    nameType,    ruleType,    Concat);    	non-compiled	[CE]  <identifier>  expected	231	None	replace
2655	[BUG]  [BUGGY]  NameType  nameType;  RuleType  ruleType  =  ruleType.getRuleType();  [CE]  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType;  RuleType  ruleType  =  ruleType.getRuleType();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType;  RuleType  ruleType  =  ruleType.getRuleType();	  NameType    nameType,    RuleType    ruleType,    concat;    	non-compiled	[CE]  	173	None	replace
2656	[BUG]  [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ")  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ")  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ")	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(type    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
2657	[BUG]  [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType)  {  this.nameType  =  nameType;  }  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(type    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
2658	[BUG]  [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(type  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(type    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
2659	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  defPhonemes);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  defPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  defPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
2660	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  1,  0,  maxPhonemes);  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  1,  0,  maxPhonemes);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  1,  0,  maxPhonemes);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
2661	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  final  maxPhonemes,  [CE]  <identifier>  expected  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  final  maxPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  final  maxPhonemes,	  NameType    nameType,    RuleType    ruleType,    final    int    maxPhonemes,    	non-compiled	[CE]  <identifier>  expected	159	None	replace
2662	[BUG]  [BUGGY]  NameType  nameType,  ruleType,  concat,  lastPhonemes,  [CE]  <identifier>  expected  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  ruleType,  concat,  lastPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  ruleType,  concat,  lastPhonemes,	  NameType    nameType,    RuleType    ruleType,    final    int    maxPhonemes,    	non-compiled	[CE]  <identifier>  expected	159	None	replace
2663	[BUG]  [BUGGY]  NameType  nameType,  RuleType  ruleType,  final  setPhonemes,  [CE]  <identifier>  expected  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType,  RuleType  ruleType,  final  setPhonemes,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType,  RuleType  ruleType,  final  setPhonemes,	  NameType    nameType,    RuleType    ruleType,    final    int    maxPhonemes,    	non-compiled	[CE]  <identifier>  expected	159	None	replace
2664	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType  :(NameType)nameType;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType  :(NameType)nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType  :(NameType)nameType;	  this.nameType    =    nameType    instanceof    NameType?    nameType    :(NameType)nameType;    	non-compiled	[CE]  illegal  start  of  type	266	None	replace
2665	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  Set  <  String>  phonemes)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  Set  <  String>  phonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  Set  <  String>  phonemes)  {	  final    int    maxPhonemes,    final    String    concat)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	46	None	replace
2666	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  Set  <  String>  phones)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  Set  <  String>  phones)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  Set  <  String>  phones)  {	  final    int    maxPhonemes,    final    String    concat)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	46	None	replace
2667	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  String  concat,  boolean  lang)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  String  concat,  boolean  lang)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  String  concat,  boolean  lang)  {	  final    int    maxPhonemes,    final    String    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	46	None	replace
2668	[BUG]  [BUGGY]  final  int  maxPhonemes,  final  String  concat,  final  boolean  lang)  {  [CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine  [FE]                                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  final  String  concat,  final  boolean  lang)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  final  String  concat,  final  boolean  lang)  {	  final    int    maxPhonemes,    final    String    concat)    {    	non-compiled	[CE]  variable  concat  is  already  defined  in  constructor  PhoneticEngine	46	None	replace
2669	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getRawSimpleName();  [CE]  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getRawSimpleName();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getRawSimpleName();	  NameType    nameType    =    ruleType.getSimpleName();    	non-compiled	[CE]  	89	None	replace
2670	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.toUpperCase()  :  nameType.toLowerCase();  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.toUpperCase()  :  nameType.toLowerCase();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.toUpperCase()  :  nameType.toLowerCase();	  this.nameType    =    nameType.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
2671	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.toUpperCase()  :  nameType.toUpperCase();  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  nameType.toUpperCase()  :  nameType.toUpperCase();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  nameType.toUpperCase()  :  nameType.toUpperCase();	  this.nameType    =    nameType.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
2672	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.toUpperCase()  :  ruleType.toUpperCase();  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.toUpperCase()  :  ruleType.toUpperCase();  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.toUpperCase()  :  ruleType.toUpperCase();	  this.nameType    =    nameType.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
2673	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_NAMES,  DEFAULT_PARENTHESES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_NAMES,  DEFAULT_PARENTHESES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_NAMES,  DEFAULT_PARENTHESES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PARENTHESES);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
2674	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_PARENTHESES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_PARENTHESES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_PHONEMES,  DEFAULT_PARENTHESES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_PARENTHESES);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
2675	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {  [CE]  illegal  start  of  type  [FE]            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  maxPhonemes)  {	  this.nameType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	268	None	replace
2676	[BUG]  [BUGGY]  this.nameType,  ruleType,  concat,  defPhonemes)  {  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  ruleType,  concat,  defPhonemes)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  ruleType,  concat,  defPhonemes)  {	  this.nameType,    ruleType,    concat,    maxPhonemes)    {    	non-compiled	[CE]  illegal  start  of  type	268	None	replace
2677	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  null,  0);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  null,  0);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  null,  0);	  super(nameType,    ruleType,    concat,    null);    	non-compiled	[CE]  illegal  start  of  type	165	None	replace
2678	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  null,  null);  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  null,  null);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  null,  null);	  super(nameType,    ruleType,    concat,    null);    	non-compiled	[CE]  illegal  start  of  type	165	None	replace
2679	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  DEFAULT_PAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  concat,  DEFAULT_PAX_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  DEFAULT_PAX_PHONEMES);	  this.nameType,    nameType,    concat,    maxPhonemes);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
2680	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES,  DEFAULT_ALL_PHONEMES);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES,  DEFAULT_ALL_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES,  DEFAULT_ALL_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
2681	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES,  DEFAULT_SYNTHETIC);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES,  DEFAULT_SYNTHETIC);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_NAME_PREFIXES,  DEFAULT_SYNTHETIC);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_NAME_PREFIXES);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
2682	[BUG]  [BUGGY]  final  int  maxPhonemes,  RuleType  ruleType,  String  nameType,  boolean  concat)  {  [CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  maxPhonemes,  RuleType  ruleType,  String  nameType,  boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  maxPhonemes,  RuleType  ruleType,  String  nameType,  boolean  concat)  {	  final    int    maxPhonemes,    String    nameType,    boolean    concat)    {    	non-compiled	[CE]  variable  ruleType  is  already  defined  in  constructor  PhoneticEngine	44	None	replace
2683	[BUG]  [BUGGY]  final  int  nameType,  String  nameType,  boolean  concat)  {  [CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  int  nameType,  String  nameType,  boolean  concat)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  int  nameType,  String  nameType,  boolean  concat)  {	  final    int    maxPhonemes,    String    nameType,    boolean    concat)    {    	non-compiled	[CE]  variable  nameType  is  already  defined  in  constructor  PhoneticEngine	44	None	replace
2684	[BUG]  [BUGGY]  if(nameType.maxPhonemes!=  maxPhonemes)  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType.maxPhonemes!=  maxPhonemes)  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType.maxPhonemes!=  maxPhonemes)  {  final  int  maxPhonemes  =  nameType.maxPhonemes;  }	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    	non-compiled	[CE]  illegal  start  of  type	330	None	replace
2685	[BUG]  [BUGGY]  if(nameType.maxPhonemes!=  maxPhonemes)  {  final  int  maxPhonemes  =  ruleType.maxPhonemes;  }  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType.maxPhonemes!=  maxPhonemes)  {  final  int  maxPhonemes  =  ruleType.maxPhonemes;  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType.maxPhonemes!=  maxPhonemes)  {  final  int  maxPhonemes  =  ruleType.maxPhonemes;  }	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    	non-compiled	[CE]  illegal  start  of  type	330	None	replace
2686	[BUG]  [BUGGY]  if(nameType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  RuleType.maxPhonemes;  }  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  RuleType.maxPhonemes;  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  RuleType.maxPhonemes;  }	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    	non-compiled	[CE]  illegal  start  of  type	330	None	replace
2687	[BUG]  [BUGGY]  if(nameType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  nameType.maxPhonemes  +  1;  }  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  if(nameType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  nameType.maxPhonemes  +  1;  }  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	if(nameType.maxPhonemes  ==  maxPhonemes)  {  final  int  maxPhonemes  =  nameType.maxPhonemes  +  1;  }	  if(nameType.maxPhonemes    ==    maxPhonemes)    {    final    int    maxPhonemes    =    nameType.maxPhonemes;    }    	non-compiled	[CE]  illegal  start  of  type	330	None	replace
2688	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  Rule  type  ruleType)  {  [CE]  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  Rule  type  ruleType)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  Rule  type  ruleType)  {	  final    boolean    maxPhonemes,    RuleType    ruleType)    {    	non-compiled	[CE]  	200	None	replace
2689	[BUG]  [BUGGY]  this(nameType,  ruleType.ruleType);  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType.ruleType);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType.ruleType);	  this(nameType,    ruleType);    	non-compiled	[CE]  illegal  start  of  type	230	None	replace
2690	[BUG]  [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ")  [CE]  illegal  start  of  type  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ")  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ")	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
2691	[BUG]  [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType)  {  this.nameType  =  nameType;  }  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( " ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
2692	[BUG]  [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  NameType  nameType)  {  this.nameType  =  nameType;  }  else  if(ruleType  ==  RuleType.NAME_PREFIXES)  {  throw  new  IllegalArgumentException( "Name  type  must  not  be  null. ");  }	  NameType    nameType)    {    this.nameType    =    nameType;    }    else    if(ruleType    ==    RuleType.NAME_PREFIXES)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
2693	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_LOAD_FACTOR);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_LOAD_FACTOR);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  0,  DEFAULT_MAX_PHONEMES,  DEFAULT_LOAD_FACTOR);	  this(nameType,    ruleType,    concat,    0,    DEFAULT_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
2694	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PARAMS,  DEFAULT_THRESHOLD);  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PARAMS,  DEFAULT_THRESHOLD);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PARAMS,  DEFAULT_THRESHOLD);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_GLOBAL_PARAMS);    	non-compiled	[CE]  illegal  start  of  type	315	None	replace
2695	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PARAMS,  DEFAULT_LOAD_FACTOR);  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PARAMS,  DEFAULT_LOAD_FACTOR);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  DEFAULT_GLOBAL_PARAMS,  DEFAULT_LOAD_FACTOR);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    DEFAULT_GLOBAL_PARAMS);    	non-compiled	[CE]  illegal  start  of  type	315	None	replace
2696	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.DEFAULT_NAME_PREFIXES?  NameType.DEFAULT_MAX_PHONEMES  :  NameType.DEFAULT_NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.DEFAULT_NAME_PREFIXES?  NameType.DEFAULT_MAX_PHONEMES  :  NameType.DEFAULT_NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.DEFAULT_NAME_PREFIXES?  NameType.DEFAULT_MAX_PHONEMES  :  NameType.DEFAULT_NAME_PREFIXES;	  this.nameType    =    NameType.DEFAULT_NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
2697	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  NameType.DEFAULT_NAME_PREFIXES  :  nameType;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  NameType.DEFAULT_NAME_PREFIXES  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  NameType.DEFAULT_NAME_PREFIXES  :  nameType;	  this.nameType    =    NameType.DEFAULT_NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
2698	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.DEFAULT_NAME_PREFIXES?  NameType.DEFAULT_ALL_PHONEMES  :  NameType.DEFAULT_NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.DEFAULT_NAME_PREFIXES?  NameType.DEFAULT_ALL_PHONEMES  :  NameType.DEFAULT_NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.DEFAULT_NAME_PREFIXES?  NameType.DEFAULT_ALL_PHONEMES  :  NameType.DEFAULT_NAME_PREFIXES;	  this.nameType    =    NameType.DEFAULT_NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
2699	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.DEFAULT_NAME_PREFIXES?  NameType.DEFAULT_SYNTHETIC  :  NameType.DEFAULT_NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.DEFAULT_NAME_PREFIXES?  NameType.DEFAULT_SYNTHETIC  :  NameType.DEFAULT_NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.DEFAULT_NAME_PREFIXES?  NameType.DEFAULT_SYNTHETIC  :  NameType.DEFAULT_NAME_PREFIXES;	  this.nameType    =    NameType.DEFAULT_NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
2700	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  null?  NameType.DEFAULT_NAME_PREFIXES  :  nameType;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  null?  NameType.DEFAULT_NAME_PREFIXES  :  nameType;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  null?  NameType.DEFAULT_NAME_PREFIXES  :  nameType;	  this.nameType    =    NameType.DEFAULT_NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
2701	[BUG]  [BUGGY]  this.nameType  =  nameType  ==  RuleType.DEFAULT_NAME_PREFIXES?  NameType.DEFAULT_NAM_PHONEMES  :  NameType.DEFAULT_NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType  ==  RuleType.DEFAULT_NAME_PREFIXES?  NameType.DEFAULT_NAM_PHONEMES  :  NameType.DEFAULT_NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType  ==  RuleType.DEFAULT_NAME_PREFIXES?  NameType.DEFAULT_NAM_PHONEMES  :  NameType.DEFAULT_NAME_PREFIXES;	  this.nameType    =    NameType.DEFAULT_NAME_PREFIXES;    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
2702	[BUG]  [BUGGY]  super(nameType,  ruleType,  concat,  defult_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  super(nameType,  ruleType,  concat,  defult_MAX_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	super(nameType,  ruleType,  concat,  defult_MAX_PHONEMES);	  this.nameType,    nameType,    concat,    defult_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	323	None	replace
2703	[BUG]  [BUGGY]  this.nameType,  nameType,  concat,  defulT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType,  nameType,  concat,  defulT_MAX_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType,  nameType,  concat,  defulT_MAX_PHONEMES);	  this.nameType,    nameType,    concat,    defult_MAX_PHONEMES);    	non-compiled	[CE]  illegal  start  of  type	323	None	replace
2704	[BUG]  [BUGGY]  nameType,  ruleType,  concat,  defult_MAX_PHONEMES);  [CE]  <identifier>  expected  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  nameType,  ruleType,  concat,  defult_MAX_PHONEMES);  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	nameType,  ruleType,  concat,  defult_MAX_PHONEMES);	  this.nameType,    nameType,    concat,    defult_MAX_PHONEMES);    	non-compiled	[CE]  <identifier>  expected	323	None	replace
2705	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  final  Set  NAME_PREFIXES)  {  [CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)  [FE]              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  final  Set  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  final  Set  NAME_PREFIXES)  {	  final    boolean    maxPhonemes,    final    Map    NAME_PREFIXES)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PhoneticEngine(NameType,RuleType,boolean,int)	269	None	replace
2706	[BUG]  [BUGGY]  final  boolean  maxPhonemes,  final  Map  <  Name,  RuleType>  NAME_PREFIXES)  {  [CE]  cannot  find  symbol  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  final  boolean  maxPhonemes,  final  Map  <  Name,  RuleType>  NAME_PREFIXES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	final  boolean  maxPhonemes,  final  Map  <  Name,  RuleType>  NAME_PREFIXES)  {	  final    boolean    maxPhonemes,    final    Map    NAME_PREFIXES)    {    	non-compiled	[CE]  cannot  find  symbol	269	None	replace
2707	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.nameType,  Concat,  [CE]  illegal  start  of  type  [FE]                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.nameType,  Concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.nameType,  Concat,	  this.nameType    =    nameType;    this.nameType,    concat,    	non-compiled	[CE]  illegal  start  of  type	208	None	replace
2708	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.nameType  =  ruleType;  concat,  [CE]  illegal  start  of  type  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.nameType  =  ruleType;  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.nameType  =  ruleType;  concat,	  this.nameType    =    nameType;    this.nameType,    concat,    	non-compiled	[CE]  illegal  start  of  type	208	None	replace
2709	[BUG]  [BUGGY]  this.nameType  =  nameType;  this.nameType,  concat  [CE]  illegal  start  of  type  [FE]                    ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType;  this.nameType,  concat  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType;  this.nameType,  concat	  this.nameType    =    nameType;    this.nameType,    concat,    	non-compiled	[CE]  illegal  start  of  type	208	None	replace
2710	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getNameType();  this.nameType,  nameType,  ruleType,  concat,  [CE]  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getNameType();  this.nameType,  nameType,  ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getNameType();  this.nameType,  nameType,  ruleType,  concat,	  this.nameType,    nameType,    ruleType,    concat,    	non-compiled	[CE]  	289	None	replace
2711	[BUG]  [BUGGY]  NameType  nameType  =  ruleType.getNameType();  this.nameType  =  nameType,  ruleType,  concat,  [CE]  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  NameType  nameType  =  ruleType.getNameType();  this.nameType  =  nameType,  ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	NameType  nameType  =  ruleType.getNameType();  this.nameType  =  nameType,  ruleType,  concat,	  this.nameType,    nameType,    ruleType,    concat,    	non-compiled	[CE]  	289	None	replace
2712	[BUG]  [BUGGY]  This.nameType,  nameType,  ruleType,  concat,  [CE]  <identifier>  expected  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  This.nameType,  nameType,  ruleType,  concat,  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	This.nameType,  nameType,  ruleType,  concat,	  this.nameType,    nameType,    ruleType,    concat,    	non-compiled	[CE]  <identifier>  expected	289	None	replace
2713	[BUG]  [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.getName()  :  NAME_PREFIXES;  [CE]  illegal  start  of  type  [FE]                            ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.getName()  :  NAME_PREFIXES;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.getName()  :  NAME_PREFIXES;	  this.nameType    =    nameType!=    RuleType.NAME_PREFIXES?    nameType.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	308	None	replace
2714	[BUG]  [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.toString()  :  null;  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.toString()  :  null;  [BUGGY]      final  int  maxPhonemes)  {  if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  RuleType.NAME_PREFIXES?  nameType.toString()  :  null;	  this.nameType    =    nameType!=    RuleType.NAME_PREFIXES?    nameType.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	308	None	replace
2715	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  MAX_PHONEMES)  {  [CE]  illegal  start  of  type  [FE]                              ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  MAX_PHONEMES)  {  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  MAX_PHONEMES)  {	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES)    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
2716	[BUG]  [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  DEFAULT_MAX_PHONEMES);  [CE]  illegal  start  of  type  [FE]                                ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  DEFAULT_MAX_PHONEMES);  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this(nameType,  ruleType,  concat,  DEFAULT_MAX_PHONEMES,  0,  DEFAULT_MAX_PHONEMES);	  this(nameType,    ruleType,    concat,    DEFAULT_MAX_PHONEMES,    0);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
2717	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.toString()  :  null;  [CE]  illegal  start  of  type  [FE]                      ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.toString()  :  null;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.toString()  :  null;	  this.nameType    =    nameType!=    null?    nameType.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
2718	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.toName()  :  null;  [CE]  illegal  start  of  type  [FE]                        ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.toName()  :  null;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.toName()  :  null;	  this.nameType    =    nameType!=    null?    nameType.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
2719	[BUG]  [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  defaultRules;  [CE]  illegal  start  of  type  [FE]                          ExceptionInInitializerError      [CONTEXT]      public  PhoneticEngine(final  NameType  nameType,  final  RuleType  ruleType,  final  boolean  concat,      [BUGGY]  this.nameType  =  nameType!=  null?  nameType.getName()  :  defaultRules;  [BUGGY]      if  (ruleType  ==  RuleType.RULES)  {  throw  new  IllegalArgumentException(     "ruleType  must  not  be       "  +  RuleType.RULES);  }  this.nameType  =  nameType;  this.ruleType  =  ruleType;  this.concat  =  concat;  this.lang  =  Lang.instance(nameType);  this.maxPhonemes  =  maxPhonemes;  }  [CLASS]  PhoneticEngine  PhonemeBuilder  RulesApplication  [METHOD]  <init>  [RETURN_TYPE]  RuleType,boolean,int)  NameType  nameType  RuleType  ruleType  final  boolean  concat  final  int  maxPhonemes  [VARIABLES]  PhonemeBuilder  phonemeBuilder  Set  phonemes  boolean  concat  found  CharSequence  input  Lang  lang  NameType  nameType  RuleType  ruleType  Map  NAME_PREFIXES  finalRules  int  DEFAULT_MAX_PHONEMES  i  maxPhonemes  	projects/Codec14/src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java	1.0	310	310	4	replace	this.nameType  =  nameType!=  null?  nameType.getName()  :  defaultRules;	  this.nameType    =    nameType!=    null?    nameType.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
