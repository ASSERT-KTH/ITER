bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(_parsingContext.inObject()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.inObject()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.inObject()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!_parsingContext.inObject()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
2	[BUG]  [BUGGY]  if(!_parsingContext.inObject()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(!_parsingContext.inObject()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(!_parsingContext.inObject()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!_parsingContext.inObject()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
3	[BUG]  [BUGGY]  if(!_parsingContext.inArray()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(!_parsingContext.inArray()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(!_parsingContext.inArray()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!_parsingContext.inObject()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
4	[BUG]  [BUGGY]  if(_parsingContext.inObject()  ||  _currToken!=  JsonToken.END_COMMA)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.inObject()  ||  _currToken!=  JsonToken.END_COMMA)  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.inObject()  ||  _currToken!=  JsonToken.END_COMMA)  {	  if(!_parsingContext.inObject()    &&    _currToken!=    JsonToken.END_COMMA)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
5	[BUG]  [BUGGY]  if(!_parsingContext.inObject()  ||  _currToken!=  JsonToken.END_COMMA)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(!_parsingContext.inObject()  ||  _currToken!=  JsonToken.END_COMMA)  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(!_parsingContext.inObject()  ||  _currToken!=  JsonToken.END_COMMA)  {	  if(!_parsingContext.inObject()    &&    _currToken!=    JsonToken.END_COMMA)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
6	[BUG]  [BUGGY]  if(!_parsingContext.inObject()  &&  _currToken  ==  JsonToken.END_COMMA)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(!_parsingContext.inObject()  &&  _currToken  ==  JsonToken.END_COMMA)  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(!_parsingContext.inObject()  &&  _currToken  ==  JsonToken.END_COMMA)  {	  if(!_parsingContext.inObject()    &&    _currToken!=    JsonToken.END_COMMA)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
7	[BUG]  [BUGGY]  i  =  _parsingContext.skipWS();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  i  =  _parsingContext.skipWS();  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	i  =  _parsingContext.skipWS();	  i    =    _skipWS();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  i  =  _currToken;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  i  =  _currToken;  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	i  =  _currToken;	  i    =    _skipWS();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
9	[BUG]  [BUGGY]  i  =  _parsingContext.getTypeDesc();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  i  =  _parsingContext.getTypeDesc();  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	i  =  _parsingContext.getTypeDesc();	  i    =    _skipWS();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
10	[BUG]  [BUGGY]  i  =  _parsingContext.inObject();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  i  =  _parsingContext.inObject();  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	i  =  _parsingContext.inObject();	  i    =    _skipWS();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
11	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  1);  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  1);	  _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
12	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  2);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  2);  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  2);	  _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
13	[BUG]  [BUGGY]  if(_parsingContext.isComma()  &&!_parsingContext.inObject())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.isComma()  &&!_parsingContext.inObject())  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.isComma()  &&!_parsingContext.inObject())  {	  if(_parsingContext.isComma()    ||!_parsingContext.inObject())    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
14	[BUG]  [BUGGY]  ((  _parsingContext  =  _parsingContext.getParent())  ==  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  ((  _parsingContext  =  _parsingContext.getParent())  ==  null);  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	((  _parsingContext  =  _parsingContext.getParent())  ==  null);	  ((    _parsingContext    =    _parsingContext.getParent())!=    null);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
15	[BUG]  [BUGGY]  ((  _parsingContext  =  _parsingContext.getRoot())!=  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  ((  _parsingContext  =  _parsingContext.getRoot())!=  null);  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	((  _parsingContext  =  _parsingContext.getRoot())!=  null);	  ((    _parsingContext    =    _parsingContext.getParent())!=    null);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
16	[BUG]  [BUGGY]  ((  _parsingContext  =  _parsingContext.getNext())!=  null);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  ((  _parsingContext  =  _parsingContext.getNext())!=  null);  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	((  _parsingContext  =  _parsingContext.getNext())!=  null);	  ((    _parsingContext    =    _parsingContext.getParent())!=    null);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
17	[BUG]  [BUGGY]  if(_parsingContext.inArray()  ||!_parsingContext.expectComma())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.inArray()  ||!_parsingContext.expectComma())  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.inArray()  ||!_parsingContext.expectComma())  {	  if(_parsingContext.expectComma()    ||!_parsingContext.inArray())    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
18	[BUG]  [BUGGY]  JsonToken  comma  =  _parsingContext.nextToken();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  JsonToken  comma  =  _parsingContext.nextToken();  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	JsonToken  comma  =  _parsingContext.nextToken();	  JsonToken    comma    =    _parsingContext.getCurrentToken();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
19	[BUG]  [BUGGY]  JsonToken  comma  =  _parsingContext.getComponentType();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  JsonToken  comma  =  _parsingContext.getComponentType();  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	JsonToken  comma  =  _parsingContext.getComponentType();	  JsonToken    comma    =    _parsingContext.getCurrentToken();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
20	[BUG]  [BUGGY]  JsonToken  comma  =  _parsingContext.getCurrentName();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  JsonToken  comma  =  _parsingContext.getCurrentName();  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	JsonToken  comma  =  _parsingContext.getCurrentName();	  JsonToken    comma    =    _parsingContext.getCurrentToken();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
21	[BUG]  [BUGGY]  if(!_parsingContext.inObject()  ||!_skipWS())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(!_parsingContext.inObject()  ||!_skipWS())  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(!_parsingContext.inObject()  ||!_skipWS())  {	  if(!_parsingContext.inObject()    &&!_skipWS())    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
22	[BUG]  [BUGGY]  if(!_parsingContext.inArray()  &&!_skipWS())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(!_parsingContext.inArray()  &&!_skipWS())  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(!_parsingContext.inArray()  &&!_skipWS())  {	  if(!_parsingContext.inObject()    &&!_skipWS())    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
23	[BUG]  [BUGGY]  if(i  >=  INT_COMMA)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(i  >=  INT_COMMA)  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(i  >=  INT_COMMA)  {	  if(i!=    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
24	[BUG]  [BUGGY]  _reportMismatchedEndMarker(i,  '[');  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  _reportMismatchedEndMarker(i,  '[');  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	_reportMismatchedEndMarker(i,  '[');	  if(i!=    INT_COMMA)    {    _reportMismatchedEndMarker(i,    '[');    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
25	[BUG]  [BUGGY]  _reportUnexpectedChar(i,   "was  expecting  comma  to  separate   "+_parsingContext.getTypeDesc()+ "  entries ");  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  _reportUnexpectedChar(i,   "was  expecting  comma  to  separate   "+_parsingContext.getTypeDesc()+ "  entries ");  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	_reportUnexpectedChar(i,   "was  expecting  comma  to  separate   "+_parsingContext.getTypeDesc()+ "  entries ");	  if(i!=    INT_COMMA)    {    _reportMismatchedEndMarker(i,    '[');    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
26	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inObject()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
27	[BUG]  [BUGGY]  JsonToken  comma  =  _parsingContext.getComment();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  JsonToken  comma  =  _parsingContext.getComment();  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	JsonToken  comma  =  _parsingContext.getComment();	  JsonToken    comma    =    _parsingContext.getParent();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
28	[BUG]  [BUGGY]  JsonToken  comma  =  _parsingContext.getCompiler();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  JsonToken  comma  =  _parsingContext.getCompiler();  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	JsonToken  comma  =  _parsingContext.getCompiler();	  JsonToken    comma    =    _parsingContext.getParent();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
29	[BUG]  [BUGGY]  if(_parsingContext.inComma())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.inComma())  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.inComma())  {	  if(!_parsingContext.inComma())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
30	[BUG]  [BUGGY]  if(!_parsingContext.inComma()  &&!_skipWS())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(!_parsingContext.inComma()  &&!_skipWS())  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(!_parsingContext.inComma()  &&!_skipWS())  {	  if(!_parsingContext.inComma())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
31	[BUG]  [BUGGY]  if(_parsingContext.inComma()  ||!_skipWS())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.inComma()  ||!_skipWS())  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.inComma()  ||!_skipWS())  {	  if(!_parsingContext.inComma())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
32	[BUG]  [BUGGY]  if(_parsingContext.isEnabled(Feature.QUOTE_COMMA))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.isEnabled(Feature.QUOTE_COMMA))  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.isEnabled(Feature.QUOTE_COMMA))  {	  if(_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
33	[BUG]  [BUGGY]  if(!_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(!_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(!_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
34	[BUG]  [BUGGY]  if(_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES)||!_parsingContext.inObject())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES)||!_parsingContext.inObject())  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES)||!_parsingContext.inObject())  {	  if(_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
35	[BUG]  [BUGGY]  if(_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES)||!_skipWS())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES)||!_skipWS())  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES)||!_skipWS())  {	  if(_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
36	[BUG]  [BUGGY]  if(_parsingContext.inComment())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.inComment())  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.inComment())  {	  if(!_parsingContext.inArray())    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
37	[BUG]  [BUGGY]  if(!_parsingContext.inComment())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(!_parsingContext.inComment())  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(!_parsingContext.inComment())  {	  if(!_parsingContext.inArray())    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
38	[BUG]  [BUGGY]  if(_parsingContext.inObject()  ||  i!=  INT_COMMA)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.inObject()  ||  i!=  INT_COMMA)  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.inObject()  ||  i!=  INT_COMMA)  {	  if(!_parsingContext.inObject()    &&    i!=    INT_COMMA)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
39	[BUG]  [BUGGY]  if(!_parsingContext.inObject()  ||  i!=  INT_COMMA)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(!_parsingContext.inObject()  ||  i!=  INT_COMMA)  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(!_parsingContext.inObject()  ||  i!=  INT_COMMA)  {	  if(!_parsingContext.inObject()    &&    i!=    INT_COMMA)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
40	[BUG]  [BUGGY]  if(!_parsingContext.inObject()  &&  i  ==  INT_COMMA)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(!_parsingContext.inObject()  &&  i  ==  INT_COMMA)  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(!_parsingContext.inObject()  &&  i  ==  INT_COMMA)  {	  if(!_parsingContext.inObject()    &&    i!=    INT_COMMA)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
41	[BUG]  [BUGGY]  if(!_skipWS())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(!_skipWS())  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(!_skipWS())  {	  if(_skipWS())    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
42	[BUG]  [BUGGY]  if(_parsingContext.inObject()  ||!_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.inObject()  ||!_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.inObject()  ||!_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inObject()    &&!_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
43	[BUG]  [BUGGY]  if(!_parsingContext.inObject()  &&!_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(!_parsingContext.inObject()  &&!_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(!_parsingContext.inObject()  &&!_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inObject()    &&!_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
44	[BUG]  [BUGGY]  if(_parsingContext.inArray()  &&!_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.inArray()  &&!_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.inArray()  &&!_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inObject()    &&!_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
45	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(i,  _currToken);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(i,  _currToken);  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(i,  _currToken);	  _parsingContext    =    _parsingContext.createChildObjectContext(i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
46	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(i  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(i  +  1);  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(i  +  1);	  _parsingContext    =    _parsingContext.createChildObjectContext(i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
47	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(i,  _bufferRecyclable);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(i,  _bufferRecyclable);  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(i,  _bufferRecyclable);	  _parsingContext    =    _parsingContext.createChildObjectContext(i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
48	[BUG]  [BUGGY]  if(_parsingContext.inObject()  ||!_currTokenIncomplete)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.inObject()  ||!_currTokenIncomplete)  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.inObject()  ||!_currTokenIncomplete)  {	  if(_parsingContext.inObject()    ||!_skipWS())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
49	[BUG]  [BUGGY]  if(_parsingContext.inComment()  ||!_parsingContext.inObject())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.inComment()  ||!_parsingContext.inObject())  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.inComment()  ||!_parsingContext.inObject())  {	  if(_parsingContext.inObject()    ||!_parsingContext.inObject())    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
50	[BUG]  [BUGGY]  if(_parsingContext.inObject()  ||!_currToken.inObject())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.inObject()  ||!_currToken.inObject())  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.inObject()  ||!_currToken.inObject())  {	  if(_parsingContext.inObject()    ||!_parsingContext.inObject())    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
51	[BUG]  [BUGGY]  if(!_parsingContext.inObject()  &&!_parsingContext.expectComma())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(!_parsingContext.inObject()  &&!_parsingContext.expectComma())  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(!_parsingContext.inObject()  &&!_parsingContext.expectComma())  {	  if(_parsingContext.inObject()    ||!_parsingContext.expectComma())    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
52	[BUG]  [BUGGY]  if(!_parsingContext.inObject()  ||!_parsingContext.expectComma())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(!_parsingContext.inObject()  ||!_parsingContext.expectComma())  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(!_parsingContext.inObject()  ||!_parsingContext.expectComma())  {	  if(_parsingContext.inObject()    ||!_parsingContext.expectComma())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
53	[BUG]  [BUGGY]  if(_parsingContext.inObject()  ||!_parsingContext.isComma())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.inObject()  ||!_parsingContext.isComma())  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.inObject()  ||!_parsingContext.isComma())  {	  if(_parsingContext.inObject()    ||!_parsingContext.expectComma())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
54	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1);  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1);	  _parsingContext    =    _parsingContext.getParent();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
55	[BUG]  [BUGGY]  if(_parsingContext.isComma()  ||!_parsingContext.inArray())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.isComma()  ||!_parsingContext.inArray())  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.isComma()  ||!_parsingContext.inArray())  {	  if(_parsingContext.isComma()    ||!_parsingContext.inObject())    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
56	[BUG]  [BUGGY]  if(_parsingContext.inObject()  &&  _currToken!=  JsonToken.END_COMMA)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.inObject()  &&  _currToken!=  JsonToken.END_COMMA)  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.inObject()  &&  _currToken!=  JsonToken.END_COMMA)  {	  if(!_parsingContext.inObject()    &&    _currToken!=    JsonToken.END_COMMA)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
57	[BUG]  [BUGGY]  if(_parsingContext.inObject()  &&!_parsingContext.inObject())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.inObject()  &&!_parsingContext.inObject())  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.inObject()  &&!_parsingContext.inObject())  {	  if(_parsingContext.inObject()    ||!_parsingContext.inObject())    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
58	[BUG]  [BUGGY]  i  =  _parsingContext.skipEnd();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  i  =  _parsingContext.skipEnd();  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	i  =  _parsingContext.skipEnd();	  i    =    _skipWS();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
59	[BUG]  [BUGGY]  i  =  _parsingContext.skipChildren();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  i  =  _parsingContext.skipChildren();  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	i  =  _parsingContext.skipChildren();	  i    =    _skipWS();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
60	[BUG]  [BUGGY]  if(!_parsingContext.inObject()  &&  isEnabled(Feature.QUOTE_COMMA))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(!_parsingContext.inObject()  &&  isEnabled(Feature.QUOTE_COMMA))  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(!_parsingContext.inObject()  &&  isEnabled(Feature.QUOTE_COMMA))  {	  if(!_parsingContext.inObject()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
61	[BUG]  [BUGGY]  if(_parsingContext.inObject()  &&!_parsingContext.expectComma())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.inObject()  &&!_parsingContext.expectComma())  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.inObject()  &&!_parsingContext.expectComma())  {	  if(_parsingContext.inObject()    ||!_parsingContext.expectComma())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
62	[BUG]  [BUGGY]  if(!_parsingContext.inComma()  &&  _currToken!=  JsonToken.END_COMMA)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(!_parsingContext.inComma()  &&  _currToken!=  JsonToken.END_COMMA)  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(!_parsingContext.inComma()  &&  _currToken!=  JsonToken.END_COMMA)  {	  if(!_parsingContext.inComma())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
63	[BUG]  [BUGGY]  if(_parsingContext.inObject()  &&  i!=  INT_COMMA)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.inObject()  &&  i!=  INT_COMMA)  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.inObject()  &&  i!=  INT_COMMA)  {	  if(!_parsingContext.inObject()    &&    i!=    INT_COMMA)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
64	[BUG]  [BUGGY]  if(!_parsingContext.isEnabled(Feature.QUOTE_COMMA))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(!_parsingContext.isEnabled(Feature.QUOTE_COMMA))  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(!_parsingContext.isEnabled(Feature.QUOTE_COMMA))  {	  if(_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
65	[BUG]  [BUGGY]  if(_parsingContext.isEnabled(Feature.QUOTE_COMMA)||  _parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.isEnabled(Feature.QUOTE_COMMA)||  _parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.isEnabled(Feature.QUOTE_COMMA)||  _parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
66	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(-1,  -1);	  _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
67	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(0,  0);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(0,  0);  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(0,  0);	  _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
68	[BUG]  [BUGGY]  if(_parsingContext.inObject()  &&  isEnabled(Feature.QUOTE_COMMA))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.inObject()  &&  isEnabled(Feature.QUOTE_COMMA))  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.inObject()  &&  isEnabled(Feature.QUOTE_COMMA))  {	  if(_parsingContext.inObject()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
69	[BUG]  [BUGGY]  if(_parsingContext.inArray()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.inArray()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.inArray()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inObject()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
70	[BUG]  [BUGGY]  if(_parsingContext.inArray())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.inArray())  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.inArray())  {	  if(!_parsingContext.inArray())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
71	[BUG]  [BUGGY]  if(!_parsingContext.inObject()  &&  i!=  JsonToken.END_COMMA)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(!_parsingContext.inObject()  &&  i!=  JsonToken.END_COMMA)  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(!_parsingContext.inObject()  &&  i!=  JsonToken.END_COMMA)  {	  if(!_parsingContext.inObject()    &&    _currToken!=    JsonToken.END_COMMA)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
72	[BUG]  [BUGGY]  JsonToken  comma  =  _parsingContext.createChildObjectContext(-1,  -1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  JsonToken  comma  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	JsonToken  comma  =  _parsingContext.createChildObjectContext(-1,  -1);	  JsonToken    comma    =    _parsingContext.getCurrentToken();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
73	[BUG]  [BUGGY]  JsonToken  comma  =  _parsingContext.getCurrentToken(_currToken);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  JsonToken  comma  =  _parsingContext.getCurrentToken(_currToken);  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	JsonToken  comma  =  _parsingContext.getCurrentToken(_currToken);	  JsonToken    comma    =    _parsingContext.getCurrentToken();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
74	[BUG]  [BUGGY]  if(_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!_parsingContext.inObject())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  if(_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!_parsingContext.inObject())  {  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!_parsingContext.inObject())  {	  if(_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
75	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext();  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext();	  _parsingContext    =    _parsingContext.getParent();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
76	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.next();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  _parsingContext  =  _parsingContext.next();  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	_parsingContext  =  _parsingContext.next();	  _parsingContext    =    _parsingContext.getParent();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
77	[BUG]  [BUGGY]  i  =  _skipEnd();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  i  =  _skipEnd();  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	i  =  _skipEnd();	  i    =    _skipWS();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
78	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(i,  _skipWS());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(i,  _skipWS());  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(i,  _skipWS());	  _parsingContext    =    _parsingContext.createChildObjectContext(i);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
79	[BUG]  [BUGGY]  JsonToken  comma  =  _parsingContext.getCommentStart();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }        [BUGGY]  JsonToken  comma  =  _parsingContext.getCommentStart();  [BUGGY]      if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,       "was  expecting  comma  to  separate       "+_parsingContext.getTypeDesc()+     "  entries     ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	JsonToken  comma  =  _parsingContext.getCommentStart();	  JsonToken    comma    =    _parsingContext.getParent();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
