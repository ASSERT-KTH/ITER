bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(i  ==  INT_COMMA)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  if(i  ==  INT_COMMA)  {  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(i  ==  INT_COMMA)  {	  if(i!=    INT_COMMA)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2	[BUG]  [BUGGY]  if(i!=  INT_QUOTE)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  if(i!=  INT_QUOTE)  {  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(i!=  INT_QUOTE)  {	  if(i!=    INT_COMMA)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
3	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  if(i  ==  INT_QUOTE)  {  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(i  ==  INT_QUOTE)  {	  if(i!=    INT_COMMA)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
4	[BUG]  [BUGGY]  if(!_parsingContext.inComma())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  if(!_parsingContext.inComma())  {  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(!_parsingContext.inComma())  {	  if(!_parsingContext.expectComma())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  if(!_parsingContext.inArray())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  if(!_parsingContext.inArray())  {  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(!_parsingContext.inArray())  {	  if(!_parsingContext.expectComma())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  if(_parsingContext.inObject()  &&!_skipWS())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  if(_parsingContext.inObject()  &&!_skipWS())  {  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.inObject()  &&!_skipWS())  {	  if(_parsingContext.inObject())    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
7	[BUG]  [BUGGY]  if(_parsingContext.inObject()  ||!_skipWS())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  if(_parsingContext.inObject()  ||!_skipWS())  {  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.inObject()  ||!_skipWS())  {	  if(_parsingContext.inObject())    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
8	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.getParent();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  _parsingContext  =  _parsingContext.getParent();  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	_parsingContext  =  _parsingContext.getParent();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
9	[BUG]  [BUGGY]  i  =  _skipWS();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  i  =  _skipWS();  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	i  =  _skipWS();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
10	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(i);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(i);  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(i);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
11	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(-1,  -1);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
12	[BUG]  [BUGGY]  if(!_parsingContext.inObject()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  if(!_parsingContext.inObject()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(!_parsingContext.inObject()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!_parsingContext.inObject())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
13	[BUG]  [BUGGY]  if(!_parsingContext.inObject()  &&!_skipWS())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  if(!_parsingContext.inObject()  &&!_skipWS())  {  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(!_parsingContext.inObject()  &&!_skipWS())  {	  if(!_parsingContext.inObject())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
14	[BUG]  [BUGGY]  if(_parsingContext.inObject()  ||!_parsingContext.expectComma())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  if(_parsingContext.inObject()  ||!_parsingContext.expectComma())  {  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.inObject()  ||!_parsingContext.expectComma())  {	  if(_parsingContext.expectComma()    ||!_parsingContext.inObject())    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
15	[BUG]  [BUGGY]  if(_parsingContext.isComma()  ||!_parsingContext.inObject())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  if(_parsingContext.isComma()  ||!_parsingContext.inObject())  {  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.isComma()  ||!_parsingContext.inObject())  {	  if(_parsingContext.expectComma()    ||!_parsingContext.inObject())    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
16	[BUG]  [BUGGY]  if(_parsingContext.inObject()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  if(_parsingContext.inObject()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.inObject()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inObject())    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
17	[BUG]  [BUGGY]  if(_parsingContext.inObject()  ||!_parsingContext.inObject())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  if(_parsingContext.inObject()  ||!_parsingContext.inObject())  {  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.inObject()  ||!_parsingContext.inObject())  {	  if(_parsingContext.inObject())    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
18	[BUG]  [BUGGY]  if(_parsingContext.inObject()  &&!_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  if(_parsingContext.inObject()  &&!_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.inObject()  &&!_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_parsingContext.inObject())    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
19	[BUG]  [BUGGY]  if(_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  if(_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(i!=    INT_COMMA)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
20	[BUG]  [BUGGY]  if(!_parsingContext.inObject()  &&  _currToken!=  JsonToken.END_COMMA)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  if(!_parsingContext.inObject()  &&  _currToken!=  JsonToken.END_COMMA)  {  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(!_parsingContext.inObject()  &&  _currToken!=  JsonToken.END_COMMA)  {	  if(!_parsingContext.inObject())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
21	[BUG]  [BUGGY]  JsonToken  comma  =  _parsingContext.getParent();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  JsonToken  comma  =  _parsingContext.getParent();  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	JsonToken  comma  =  _parsingContext.getParent();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
22	[BUG]  [BUGGY]  if(i!=  INT_COMMA)  {  _reportMismatchedEndMarker(i,  '[');  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  if(i!=  INT_COMMA)  {  _reportMismatchedEndMarker(i,  '[');  }  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(i!=  INT_COMMA)  {  _reportMismatchedEndMarker(i,  '[');  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
23	[BUG]  [BUGGY]  if(!_parsingContext.inObject()  &&  i!=  INT_COMMA)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  if(!_parsingContext.inObject()  &&  i!=  INT_COMMA)  {  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(!_parsingContext.inObject()  &&  i!=  INT_COMMA)  {	  if(!_parsingContext.inObject())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
24	[BUG]  [BUGGY]  if(_skipWS())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  if(_skipWS())  {  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_skipWS())  {	  if(i!=    INT_COMMA)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
25	[BUG]  [BUGGY]  JsonToken  comma  =  _parsingContext.getCurrentToken();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  JsonToken  comma  =  _parsingContext.getCurrentToken();  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	JsonToken  comma  =  _parsingContext.getCurrentToken();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
26	[BUG]  [BUGGY]  ((  _parsingContext  =  _parsingContext.getParent())!=  null);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  ((  _parsingContext  =  _parsingContext.getParent())!=  null);  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	((  _parsingContext  =  _parsingContext.getParent())!=  null);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
27	[BUG]  [BUGGY]  if(_parsingContext.expectComma()  ||!_parsingContext.inArray())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  if  (i  ==  INT_RCURLY)  {  if  (!_parsingContext.inObject())  {  _reportMismatchedEndMarker(i,  ']');  }  _parsingContext  =  _parsingContext.getParent();  return  (_currToken  =  JsonToken.END_OBJECT);  }      [BUGGY]  if(_parsingContext.expectComma()  ||!_parsingContext.inArray())  {  [BUGGY]    if  (i  !=  INT_COMMA)  {  _reportUnexpectedChar(i,     "was  expecting  comma  to  separate     "+_parsingContext.getTypeDesc()+   "  entries   ");  }  i  =  _skipWS();  }      [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	684	684	1	replace	if(_parsingContext.expectComma()  ||!_parsingContext.inArray())  {	  if(_parsingContext.expectComma()    ||!_parsingContext.inObject())    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
