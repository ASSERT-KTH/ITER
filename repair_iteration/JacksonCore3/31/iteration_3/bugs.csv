bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE  ||  i  >=  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i  ==  INT_QUOTE  ||  i  >=  INT_QUOTE)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i  ==  INT_QUOTE  ||  i  >=  INT_QUOTE)  {	  if(i    ==    INT_QUOTE    ||    i!=    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
2	[BUG]  [BUGGY]  if(i  ==  INT_ARRAY  ||  i!=  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i  ==  INT_ARRAY  ||  i!=  INT_QUOTE)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i  ==  INT_ARRAY  ||  i!=  INT_QUOTE)  {	  if(i    ==    INT_QUOTE    ||    i!=    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
3	[BUG]  [BUGGY]  if(i  ==  INT_ARRAY  ||  i  ==  INT_COLON)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i  ==  INT_ARRAY  ||  i  ==  INT_COLON)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i  ==  INT_ARRAY  ||  i  ==  INT_COLON)  {	  if(i    ==    INT_ARRAY    ||    i    ==    INT_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
4	[BUG]  [BUGGY]  if(i  ==  INT_OBJECT  ||  i  ==  INT_ARRAY)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i  ==  INT_OBJECT  ||  i  ==  INT_ARRAY)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i  ==  INT_OBJECT  ||  i  ==  INT_ARRAY)  {	  if(i    ==    INT_ARRAY    ||    i    ==    INT_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
5	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
6	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING);  }  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING);  }	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
7	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  +  1);  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  +  1);	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
8	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol,  _currToken);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol,  _currToken);  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol,  _currToken);	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
9	[BUG]  [BUGGY]  switch(i.toString())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  switch(i.toString())  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	switch(i.toString())  {	  switch(_currToken.toString())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
10	[BUG]  [BUGGY]  switch(_currToken.toLowerCase())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  switch(_currToken.toLowerCase())  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	switch(_currToken.toLowerCase())  {	  switch(_currToken.toString())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
11	[BUG]  [BUGGY]  switch(_currToken.toString(),  i)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  switch(_currToken.toString(),  i)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	switch(_currToken.toString(),  i)  {	  switch(_currToken.toString())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
12	[BUG]  [BUGGY]  switch(_parsingContext.getTypeDesc(),  _tokenInputRow,  _tokenInputCol)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  switch(_parsingContext.getTypeDesc(),  _tokenInputRow,  _tokenInputCol)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	switch(_parsingContext.getTypeDesc(),  _tokenInputRow,  _tokenInputCol)  {	  switch(_parsingContext.getTypeDesc(),    _tokenInputCol)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  switch(_parsingContext.getTypeDesc(),  _tokenInputCol,  _currToken)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  switch(_parsingContext.getTypeDesc(),  _tokenInputCol,  _currToken)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	switch(_parsingContext.getTypeDesc(),  _tokenInputCol,  _currToken)  {	  switch(_parsingContext.getTypeDesc(),    _tokenInputCol)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
14	[BUG]  [BUGGY]  switch(i,  _tokenInputRow)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  switch(i,  _tokenInputRow)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	switch(i,  _tokenInputRow)  {	  switch(_currToken,    _tokenInputRow)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
15	[BUG]  [BUGGY]  switch(_currToken,  _tokenInputCol)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  switch(_currToken,  _tokenInputCol)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	switch(_currToken,  _tokenInputCol)  {	  switch(_currToken,    _tokenInputRow)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
16	[BUG]  [BUGGY]  switch(_parsingContext,  _tokenInputRow)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  switch(_parsingContext,  _tokenInputRow)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	switch(_parsingContext,  _tokenInputRow)  {	  switch(_currToken,    _tokenInputRow)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
17	[BUG]  [BUGGY]  switch(i,  _currToken)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  switch(i,  _currToken)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	switch(i,  _currToken)  {	  switch(_currToken,    _tokenInputRow)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
18	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING	  _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
19	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING);  }  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING);  }	  _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
20	[BUG]  [BUGGY]  case  '[':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  case  '[':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	case  '[':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);	  case    '[':    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
21	[BUG]  [BUGGY]  case  ']':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  case  ']':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	case  ']':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);	  case    '[':    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
22	[BUG]  [BUGGY]  case  ']':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  case  ']':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	case  ']':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);	  case    '[':    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
23	[BUG]  [BUGGY]  case  '[':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  break;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  case  '[':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  break;  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	case  '[':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  break;	  case    '[':    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    break;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
24	[BUG]  [BUGGY]  case  '[':  _currToken  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  break;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  case  '[':  _currToken  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  break;  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	case  '[':  _currToken  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  break;	  case    '[':    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    break;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
25	[BUG]  [BUGGY]  case  ']':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  break;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  case  ']':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  break;  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	case  ']':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  break;	  case    '[':    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    break;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
26	[BUG]  [BUGGY]  if(i  ==  JsonToken.START_ARRAY)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i  ==  JsonToken.START_ARRAY)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i  ==  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
27	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
28	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(_currToken!=  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(_currToken!=  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
29	[BUG]  [BUGGY]  if(i  ==  INT_RANGE  ||  i  ==  INT_RANGE)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i  ==  INT_RANGE  ||  i  ==  INT_RANGE)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i  ==  INT_RANGE  ||  i  ==  INT_RANGE)  {	  if(i    ==    INT_QUOTE    ||    i    ==    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
30	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol,  _currToken);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol,  _currToken);  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol,  _currToken);	  _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
31	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  +  1);  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  +  1);	  _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
32	[BUG]  [BUGGY]  case  '[':  _currToken  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  case  '[':  _currToken  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING);  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	case  '[':  _currToken  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING);	  case    '[':    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
33	[BUG]  [BUGGY]  case  ']':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  case  ']':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	case  ']':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING	  case    '[':    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
34	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE  ||  i  ==  INT_ARRAY)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i  ==  INT_QUOTE  ||  i  ==  INT_ARRAY)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i  ==  INT_QUOTE  ||  i  ==  INT_ARRAY)  {	  if(i!=    INT_ARRAY    ||    i    ==    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
35	[BUG]  [BUGGY]  if(i  ==  INT_ARRAY  ||  i  >=  INT_ARRAY)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i  ==  INT_ARRAY  ||  i  >=  INT_ARRAY)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i  ==  INT_ARRAY  ||  i  >=  INT_ARRAY)  {	  if(i    ==    INT_ARRAY    ||    i    >    INT_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
36	[BUG]  [BUGGY]  if(i  ==  INT_ARRAY  ||  i  <  INT_ARRAY)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i  ==  INT_ARRAY  ||  i  <  INT_ARRAY)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i  ==  INT_ARRAY  ||  i  <  INT_ARRAY)  {	  if(i    ==    INT_ARRAY    ||    i    >    INT_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
37	[BUG]  [BUGGY]  switch(_currToken.getTypeDesc(),  _parsingContext)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  switch(_currToken.getTypeDesc(),  _parsingContext)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	switch(_currToken.getTypeDesc(),  _parsingContext)  {	  switch(_parsingContext.getTypeDesc(),    _currToken)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
38	[BUG]  [BUGGY]  switch(_currToken.getTypeDesc(),  _currToken)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  switch(_currToken.getTypeDesc(),  _currToken)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	switch(_currToken.getTypeDesc(),  _currToken)  {	  switch(_parsingContext.getTypeDesc(),    _currToken)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
39	[BUG]  [BUGGY]  switch(_parsingContext.getTypeDesc(),  _tokenInputRow),  _tokenInputCol)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  switch(_parsingContext.getTypeDesc(),  _tokenInputRow),  _tokenInputCol)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	switch(_parsingContext.getTypeDesc(),  _tokenInputRow),  _tokenInputCol)  {	  switch(_parsingContext.getTypeDesc(),    _tokenInputRow)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
40	[BUG]  [BUGGY]  switch(_parsingContext.getTypeDesc(),  _tokenInputRow,  _currToken)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  switch(_parsingContext.getTypeDesc(),  _tokenInputRow,  _currToken)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	switch(_parsingContext.getTypeDesc(),  _tokenInputRow,  _currToken)  {	  switch(_parsingContext.getTypeDesc(),    _tokenInputRow)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
41	[BUG]  [BUGGY]  if(i!=  JsonToken.START_ARRAY)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i!=  JsonToken.START_ARRAY)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i!=  JsonToken.START_ARRAY)  {	  if(_currToken!=    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
42	[BUG]  [BUGGY]  switch(_parsingContext.getCurrentToken())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  switch(_parsingContext.getCurrentToken())  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	switch(_parsingContext.getCurrentToken())  {	  switch(_parsingContext)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
43	[BUG]  [BUGGY]  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING	  case    '[':    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
44	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i  ==  INT_LCURLY)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i  ==  INT_LCURLY)  {	  if(i!=    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
45	[BUG]  [BUGGY]  switch(_parsingContext.getTypeDesc(),  _tokenInputCol,  _tokenInputRow)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  switch(_parsingContext.getTypeDesc(),  _tokenInputCol,  _tokenInputRow)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	switch(_parsingContext.getTypeDesc(),  _tokenInputCol,  _tokenInputRow)  {	  switch(_parsingContext.getTypeDesc(),    _tokenInputCol)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
46	[BUG]  [BUGGY]  if(i!=  INT_QUOTE  ||  i  ==  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i!=  INT_QUOTE  ||  i  ==  INT_QUOTE)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i!=  INT_QUOTE  ||  i  ==  INT_QUOTE)  {	  if(i    ==    INT_QUOTE    ||    i!=    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
47	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE  &&  i!=  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i  ==  INT_QUOTE  &&  i!=  INT_QUOTE)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i  ==  INT_QUOTE  &&  i!=  INT_QUOTE)  {	  if(i    ==    INT_QUOTE    ||    i!=    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
48	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(_currToken!=  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.END_ARRAY)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(_currToken!=  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.END_ARRAY)  {	  if(_currToken    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
49	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
50	[BUG]  [BUGGY]  if(i!=  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i!=  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i!=  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING	  _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
51	[BUG]  [BUGGY]  if(i  ==  INT_ARRAY  ||  i  >=  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i  ==  INT_ARRAY  ||  i  >=  INT_QUOTE)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i  ==  INT_ARRAY  ||  i  >=  INT_QUOTE)  {	  if(i!=    INT_ARRAY    ||    i    ==    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
52	[BUG]  [BUGGY]  if(i!=  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i!=  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i!=  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
53	[BUG]  [BUGGY]  switch(_parsingContext.getTypeDesc(),  JsonToken.START_ARRAY)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  switch(_parsingContext.getTypeDesc(),  JsonToken.START_ARRAY)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	switch(_parsingContext.getTypeDesc(),  JsonToken.START_ARRAY)  {	  switch(_parsingContext.getTypeDesc(),    _currToken)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
54	[BUG]  [BUGGY]  switch(_currToken.toArray())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  switch(_currToken.toArray())  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	switch(_currToken.toArray())  {	  switch(_currToken.toString())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
55	[BUG]  [BUGGY]  switch(_currToken.toString(),  _tokenInputRow)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  switch(_currToken.toString(),  _tokenInputRow)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	switch(_currToken.toString(),  _tokenInputRow)  {	  switch(_currToken.toString())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
56	[BUG]  [BUGGY]  if(i!=  INT_ARRAY  ||  i  ==  INT_OBJECT)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i!=  INT_ARRAY  ||  i  ==  INT_OBJECT)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i!=  INT_ARRAY  ||  i  ==  INT_OBJECT)  {	  if(i    ==    INT_ARRAY    ||    i    ==    INT_OBJECT)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
57	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }	  _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
58	[BUG]  [BUGGY]  case  '[':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  case  '[':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	case  '[':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING	  case    '[':    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
59	[BUG]  [BUGGY]  switch(_currToken,  _tokenInputRow,  _tokenInputCol)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  switch(_currToken,  _tokenInputRow,  _tokenInputCol)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	switch(_currToken,  _tokenInputRow,  _tokenInputCol)  {	  switch(_currToken,    _tokenInputRow)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
60	[BUG]  [BUGGY]  switch(_tokenInputRow,  _currToken)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  switch(_tokenInputRow,  _currToken)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	switch(_tokenInputRow,  _currToken)  {	  switch(_currToken,    _tokenInputRow)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
61	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_QUOTE)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i  ==  INT_RBRACKET  ||  i  ==  INT_QUOTE)  {	  if(i    ==    INT_ARRAY    ||    i    ==    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
62	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE  &&  i  ==  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i  ==  INT_QUOTE  &&  i  ==  INT_QUOTE)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i  ==  INT_QUOTE  &&  i  ==  INT_QUOTE)  {	  if(i    ==    INT_QUOTE    ||    i    ==    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
63	[BUG]  [BUGGY]  case  '[':  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  case  '[':  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING);  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	case  '[':  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING);	  case    '[':    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
64	[BUG]  [BUGGY]  if(i  ==  INT_ARRAY  ||  i  ==  INT_LCURLY)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i  ==  INT_ARRAY  ||  i  ==  INT_LCURLY)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i  ==  INT_ARRAY  ||  i  ==  INT_LCURLY)  {	  if(i    ==    INT_ARRAY    ||    i!=    INT_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
65	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STR  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STR  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STR	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
66	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE  ||  i!=  INT_ARRAY)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i  ==  INT_QUOTE  ||  i!=  INT_ARRAY)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i  ==  INT_QUOTE  ||  i!=  INT_ARRAY)  {	  if(i!=    INT_ARRAY    ||    i    ==    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
67	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  else  {  _finishString();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  else  {  _finishString();  }  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  else  {  _finishString();  }	  _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
68	[BUG]  [BUGGY]  case  '[':  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  case  '[':  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	case  '[':  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);	  case    '[':    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
69	[BUG]  [BUGGY]  case  '[':  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  case  '[':  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING);  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	case  '[':  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING);	  case    '[':    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
70	[BUG]  [BUGGY]  if(i  ==  INT_ARRAY  ||  i  ==  INT_LBRACKET)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i  ==  INT_ARRAY  ||  i  ==  INT_LBRACKET)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i  ==  INT_ARRAY  ||  i  ==  INT_LBRACKET)  {	  if(i!=    INT_ARRAY    ||    i    ==    INT_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
71	[BUG]  [BUGGY]  switch(_parsingContext.toString())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  switch(_parsingContext.toString())  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	switch(_parsingContext.toString())  {	  switch(_currToken.toString())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
72	[BUG]  [BUGGY]  switch(_currToken.toString(),  _tokenInputCol)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  switch(_currToken.toString(),  _tokenInputCol)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	switch(_currToken.toString(),  _tokenInputCol)  {	  switch(_currToken.toString())    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
73	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
74	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_ARRAY  ||  _currToken!=  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(_currToken!=  JsonToken.START_ARRAY  ||  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(_currToken!=  JsonToken.START_ARRAY  ||  _currToken!=  JsonToken.START_OBJECT)  {	  if(_currToken!=    JsonToken.START_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
75	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE  ||  i  >  INT_QUOTE)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }      [BUGGY]  if(i  ==  INT_QUOTE  ||  i  >  INT_QUOTE)  {  [BUGGY]      case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	778	778	1	replace	if(i  ==  INT_QUOTE  ||  i  >  INT_QUOTE)  {	  if(i    ==    INT_ARRAY    ||    i    >    INT_ARRAY)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
