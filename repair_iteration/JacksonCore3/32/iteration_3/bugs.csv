bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  *  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  *  1);  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  *  1);	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol    +    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  *  2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  *  2);  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  *  2);	  _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol    *    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
3	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  *  4);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  *  4);  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  *  4);	  _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol    *    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  *  3);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  *  3);  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  *  3);	  _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol    *    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
5	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_ioContext,  _tokenInputCol,  _tokenInputRow);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_ioContext,  _tokenInputCol,  _tokenInputRow);  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(_ioContext,  _tokenInputCol,  _tokenInputRow);	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol,    _ioContext);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
6	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol,  _ioContext);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol,  _ioContext);  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol,  _ioContext);	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol,    _ioContext);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
7	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol,  i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol,  i);  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol,  i);	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol,    _ioContext);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
8	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputCol,  _tokenInputRow);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputCol,  _tokenInputRow);  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputCol,  _tokenInputRow);	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputCol,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
9	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputCol,  _tokenInputRow);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputCol,  _tokenInputRow);  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputCol,  _tokenInputRow);	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputCol,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
10	[BUG]  [BUGGY]  ||  i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  ||  i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	||  i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);	  if(i    ==    INT_QUOTE)    {    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
11	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING);  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING);	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
12	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
13	[BUG]  [BUGGY]  _reportUnexpectedChar(i,  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  _reportUnexpectedChar(i,  1);  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	_reportUnexpectedChar(i,  1);	  _reportUnexpectedChar(i,       "expected    a    value   ");    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
14	[BUG]  [BUGGY]  _reportUnexpectedChar(i,  1, "expected  a  value ");  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  _reportUnexpectedChar(i,  1, "expected  a  value ");  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	_reportUnexpectedChar(i,  1, "expected  a  value ");	  _reportUnexpectedChar(i,       "expected    a    value   ");    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
15	[BUG]  [BUGGY]  ||  i  ==  INT_OBJECT)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  ||  i  ==  INT_OBJECT)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	||  i  ==  INT_OBJECT)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }	  ||    i    ==    INT_QUOTE)    {    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
16	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  -  1);  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  -  1);	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol    -    1);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
17	[BUG]  [BUGGY]  ||  i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  ||  i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	||  i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);	  ||    i    ==    INT_QUOTE)    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
18	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  {  _parsingContext  =  _parsing  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  {  _parsingContext  =  _parsing  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  {  _parsingContext  =  _parsing	  if(i    ==    INT_QUOTE)    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    }    else    {    _parsingContext    =    _parsingContext.createChild    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
19	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
20	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol,  _inputBuffer);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol,  _inputBuffer);  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol,  _inputBuffer);	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol,    _ioContext);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
21	[BUG]  [BUGGY]  _reportInvalidEOF(i, "expected  a  value ");  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  _reportInvalidEOF(i, "expected  a  value ");  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	_reportInvalidEOF(i, "expected  a  value ");	  _reportUnexpectedChar(i,       "expected    a    value   ");    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
22	[BUG]  [BUGGY]  ||  i  ==  INT_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  ||  i  ==  INT_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	||  i  ==  INT_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }	  ||    i    ==    INT_QUOTE)    {    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
23	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputCol,  _tokenInputCol);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputCol,  _tokenInputCol);  }  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputCol,  _tokenInputCol);  }	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputCol,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
24	[BUG]  [BUGGY]  _parsingContext.setCurrentName(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  _parsingContext.setCurrentName(_tokenInputRow,  _tokenInputCol);  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	_parsingContext.setCurrentName(_tokenInputRow,  _tokenInputCol);	  _reportUnexpectedChar(i,       "expected    a    value   ");    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
25	[BUG]  [BUGGY]  ||  i  ==  INT_LBRACKET)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  ||  i  ==  INT_LBRACKET)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	||  i  ==  INT_LBRACKET)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }	  ||    i    ==    INT_QUOTE)    {    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
26	[BUG]  [BUGGY]  ||  i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  ||  i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	||  i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol	  ||    i    ==    INT_QUOTE)    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
27	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  {  _parsingContext  =  _parsingContext.  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  {  _parsingContext  =  _parsingContext.  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  {  _parsingContext  =  _parsingContext.	  if(i    ==    INT_QUOTE)    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    }    else    {    _parsingContext    =    _parsingContext.createChild    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
28	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  {  _parsingContext  =  _parsingContext.createCh  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  {  _parsingContext  =  _parsingContext.createCh  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  else  {  _parsingContext  =  _parsingContext.createCh	  if(i    ==    INT_QUOTE)    {    _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    }    else    {    _parsingContext    =    _parsingContext.createChild    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
29	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING)  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING)  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.VALUE_STRING)	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
30	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol,  _currentObject());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol,  _currentObject());  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol,  _currentObject());	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol,    _ioContext);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
31	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol,  _currentObject);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol,  _currentObject);  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol,  _currentObject);	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol,    _ioContext);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
32	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  else  {  _parsingContext  =  _parsingContext.createChil  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      {  if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':      [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  else  {  _parsingContext  =  _parsingContext.createChil  [BUGGY]      return  (_currToken  =  JsonToken.START_OBJECT);  case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	783	783	1	replace	if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  else  {  _parsingContext  =  _parsingContext.createChil	  _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    i);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
