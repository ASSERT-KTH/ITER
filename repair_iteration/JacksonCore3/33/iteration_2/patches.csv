bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  case  '[':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  case  '[':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	case  '[':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);	  case    '[':    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
2	[BUG]  [BUGGY]  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  +  1);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  +  1);	  case    '[':    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
3	[BUG]  [BUGGY]  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol,  _ioContext);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol,  _ioContext);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol,  _ioContext);	  case    '[':    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
4	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  1);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  1);	  return(_currToken    =    JsonToken.START_OBJECT)&&(i    ==    0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
5	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i!=  0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i!=  0);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT)&&(i!=  0);	  return(_currToken    =    JsonToken.START_OBJECT)&&(i    ==    0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
6	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_NUMBER_INT)+  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.VALUE_NUMBER_INT)+  1;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_NUMBER_INT)+  1;	  return(_currToken    =    JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
7	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_NUMBER_INT  ||  i  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.VALUE_NUMBER_INT  ||  i  ==  INT_QUOTE);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_NUMBER_INT  ||  i  ==  INT_QUOTE);	  return(_currToken    =    JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
8	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_NUMBER_INT  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.VALUE_NUMBER_INT  +  1);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_NUMBER_INT  +  1);	  return(_currToken    =    JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
9	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_NUMBER_INT  ||  _currToken  =  JsonToken.START_OBJECT);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.VALUE_NUMBER_INT  ||  _currToken  =  JsonToken.START_OBJECT);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_NUMBER_INT  ||  _currToken  =  JsonToken.START_OBJECT);	  return(_currToken    =    JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
10	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
11	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);  }  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);  }	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
12	[BUG]  [BUGGY]  if(i!=  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  if(i!=  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);  }  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	if(i!=  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);  }	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
13	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL,  _tokenInputCol);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_NULL,  _tokenInputCol);	  return(_currToken    =    JsonToken.VALUE_NULL,    _tokenInputRow);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
14	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL,  _tokenInputRow  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL,  _tokenInputRow  +  1);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_NULL,  _tokenInputRow  +  1);	  return(_currToken    =    JsonToken.VALUE_NULL,    _tokenInputRow);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
15	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL,  _tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL,  _tokenInputRow,  _tokenInputCol);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_NULL,  _tokenInputRow,  _tokenInputCol);	  return(_currToken    =    JsonToken.VALUE_NULL,    _tokenInputRow);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
16	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL,  _tokenInputRow,  _tokenInputEnd);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL,  _tokenInputRow,  _tokenInputEnd);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_NULL,  _tokenInputRow,  _tokenInputEnd);	  return(_currToken    =    JsonToken.VALUE_NULL,    _tokenInputRow);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
17	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  +  1);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol  +  1);	  _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
18	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol,  _ioContext);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol,  _ioContext);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol,  _ioContext);	  _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
19	[BUG]  [BUGGY]  case  '[':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  break;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  case  '[':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  break;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	case  '[':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  break;	  case    '[':    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    break;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
20	[BUG]  [BUGGY]  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  +  1);  break;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  +  1);  break;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  +  1);  break;	  case    '[':    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    break;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
21	[BUG]  [BUGGY]  case  '[':  _currToken  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  break;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  case  '[':  _currToken  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  break;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	case  '[':  _currToken  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  break;	  case    '[':    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    break;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
22	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i!=  INT_QUOTE  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i!=  INT_QUOTE  +  1);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT)&&(i!=  INT_QUOTE  +  1);	  return(_currToken    =    JsonToken.START_OBJECT)&&(i    ==    INT_QUOTE    +    1);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
23	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  INT_QUOTE  +  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  INT_QUOTE  +  2);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  INT_QUOTE  +  2);	  return(_currToken    =    JsonToken.START_OBJECT)&&(i    ==    INT_QUOTE    +    1);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
24	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_ARRAY);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_ARRAY);  }  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_ARRAY);  }	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.START_ARRAY);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
25	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_ARRAY);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_ARRAY);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_ARRAY);	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.START_ARRAY);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
26	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  &&  i  ==  INT_QUOTE  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  &&  i  ==  INT_QUOTE  +  1);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT  &&  i  ==  INT_QUOTE  +  1);	  return(_currToken    =    JsonToken.START_OBJECT    ||    i    ==    INT_QUOTE    +    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  ||  i!=  INT_QUOTE  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  ||  i!=  INT_QUOTE  +  1);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT  ||  i!=  INT_QUOTE  +  1);	  return(_currToken    =    JsonToken.START_OBJECT    ||    i    ==    INT_QUOTE    +    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
28	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  0  ||  i  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  0  ||  i  ==  INT_QUOTE);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  0  ||  i  ==  INT_QUOTE);	  return(_currToken    =    JsonToken.START_OBJECT)&&(i    ==    INT_QUOTE    ||    i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
29	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  INT_QUOTE  ||  i  >=  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  INT_QUOTE  ||  i  >=  INT_QUOTE);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  INT_QUOTE  ||  i  >=  INT_QUOTE);	  return(_currToken    =    JsonToken.START_OBJECT)&&(i    ==    INT_QUOTE    ||    i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
30	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  INT_QUOTE  ||  i!=  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  INT_QUOTE  ||  i!=  INT_QUOTE);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  INT_QUOTE  ||  i!=  INT_QUOTE);	  return(_currToken    =    JsonToken.START_OBJECT)&&(i    ==    INT_QUOTE    ||    i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
31	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  ||  i!=  INT_QUOTE)?  JsonToken.END_ARRAY  :  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  ||  i!=  INT_QUOTE)?  JsonToken.END_ARRAY  :  JsonToken.END_OBJECT;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT  ||  i!=  INT_QUOTE)?  JsonToken.END_ARRAY  :  JsonToken.END_OBJECT;	  return(_currToken    =    JsonToken.START_OBJECT    ||    i    ==    INT_QUOTE)?    JsonToken.END_ARRAY    :    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
32	[BUG]  [BUGGY]  return(_currToken  =  INT_OBJECT  ||  i  ==  INT_QUOTE)?  JsonToken.END_ARRAY  :  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  INT_OBJECT  ||  i  ==  INT_QUOTE)?  JsonToken.END_ARRAY  :  JsonToken.END_OBJECT;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  INT_OBJECT  ||  i  ==  INT_QUOTE)?  JsonToken.END_ARRAY  :  JsonToken.END_OBJECT;	  return(_currToken    =    JsonToken.START_OBJECT    ||    i    ==    INT_QUOTE)?    JsonToken.END_ARRAY    :    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
33	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_ARRAY  ||  i  ==  INT_QUOTE)?  JsonToken.END_ARRAY  :  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_ARRAY  ||  i  ==  INT_QUOTE)?  JsonToken.END_ARRAY  :  JsonToken.END_OBJECT;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_ARRAY  ||  i  ==  INT_QUOTE)?  JsonToken.END_ARRAY  :  JsonToken.END_OBJECT;	  return(_currToken    =    JsonToken.START_OBJECT    ||    i    ==    INT_QUOTE)?    JsonToken.END_ARRAY    :    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
34	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_STRING  ||  i  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.VALUE_STRING  ||  i  ==  INT_QUOTE);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_STRING  ||  i  ==  INT_QUOTE);	  return(_currToken    =    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
35	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_STRING  ||  i!=  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.VALUE_STRING  ||  i!=  INT_QUOTE);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_STRING  ||  i!=  INT_QUOTE);	  return(_currToken    =    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
36	[BUG]  [BUGGY]  case  '[':  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  break;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  case  '[':  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  break;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	case  '[':  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  break;	  case    '[':    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    break;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
37	[BUG]  [BUGGY]  return(i  =  INT_QUOTE  ||  i  ==  JsonToken.START_OBJECT);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(i  =  INT_QUOTE  ||  i  ==  JsonToken.START_OBJECT);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(i  =  INT_QUOTE  ||  i  ==  JsonToken.START_OBJECT);	  return(i    =    JsonToken.START_OBJECT    ||    i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
38	[BUG]  [BUGGY]  return(i  =  INT_OBJECT  ||  i  ==  JsonToken.START_ARRAY);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(i  =  INT_OBJECT  ||  i  ==  JsonToken.START_ARRAY);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(i  =  INT_OBJECT  ||  i  ==  JsonToken.START_ARRAY);	  return(i    =    JsonToken.START_OBJECT    ||    i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
39	[BUG]  [BUGGY]  return(i  =  JsonToken.START_OBJECT  &&  i  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(i  =  JsonToken.START_OBJECT  &&  i  ==  INT_QUOTE);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(i  =  JsonToken.START_OBJECT  &&  i  ==  INT_QUOTE);	  return(i    =    JsonToken.START_OBJECT    ||    i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
40	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)+  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)+  1;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT)+  1;	  return    _currToken    =    JsonToken.START_OBJECT    +    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
41	[BUG]  [BUGGY]  return  _currToken  =  JsonToken.START_OBJECT  ||  JsonToken.START_OBJECT  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return  _currToken  =  JsonToken.START_OBJECT  ||  JsonToken.START_OBJECT  +  1;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return  _currToken  =  JsonToken.START_OBJECT  ||  JsonToken.START_OBJECT  +  1;	  return    _currToken    =    JsonToken.START_OBJECT    +    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
42	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_EMBEDDED_ARRAY);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.VALUE_EMBEDDED_ARRAY);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_EMBEDDED_ARRAY);	  return(_currToken    =    JsonToken.VALUE_EMBEDDED_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
43	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_EMBEDDED_OBJECT  ||  i  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.VALUE_EMBEDDED_OBJECT  ||  i  ==  INT_QUOTE);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_EMBEDDED_OBJECT  ||  i  ==  INT_QUOTE);	  return(_currToken    =    JsonToken.VALUE_EMBEDDED_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
44	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  &&  i  ==  0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  &&  i  ==  0);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT  &&  i  ==  0);	  return(_currToken    =    JsonToken.START_OBJECT    ||    i    ==    0);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
45	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  ||  i!=  0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  ||  i!=  0);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT  ||  i!=  0);	  return(_currToken    =    JsonToken.START_OBJECT    ||    i    ==    0);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
46	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  +  1);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  +  1);	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
47	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_currToken,  _tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_currToken,  _tokenInputRow,  _tokenInputCol);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(_currToken,  _tokenInputRow,  _tokenInputCol);	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
48	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL  ||  i  ==  0);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL  ||  i  ==  0);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_NULL  ||  i  ==  0);	  return(_currToken    =    JsonToken.VALUE_NULL    ||    i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
49	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL  ||  i!=  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL  ||  i!=  INT_QUOTE);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_NULL  ||  i!=  INT_QUOTE);	  return(_currToken    =    JsonToken.VALUE_NULL    ||    i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
50	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL  ||  i  ==  INT_QUOTE  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL  ||  i  ==  INT_QUOTE  +  1);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_NULL  ||  i  ==  INT_QUOTE  +  1);	  return(_currToken    =    JsonToken.VALUE_NULL    ||    i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
51	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  &&  i!=  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  &&  i!=  INT_QUOTE);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT  &&  i!=  INT_QUOTE);	  return(_currToken    =    JsonToken.START_OBJECT    ||    i!=    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
52	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  ||  i  >=  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  ||  i  >=  INT_QUOTE);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT  ||  i  >=  INT_QUOTE);	  return(_currToken    =    JsonToken.START_OBJECT    ||    i!=    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
53	[BUG]  [BUGGY]  return  i  ==  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return  i  ==  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return  i  ==  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE;	  return    _currToken    =    JsonToken.START_OBJECT    ||    i    ==    INT_QUOTE;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
54	[BUG]  [BUGGY]  return  _currToken  =  JsonToken.START_OBJECT  &&  i  ==  INT_QUOTE;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return  _currToken  =  JsonToken.START_OBJECT  &&  i  ==  INT_QUOTE;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return  _currToken  =  JsonToken.START_OBJECT  &&  i  ==  INT_QUOTE;	  return    _currToken    =    JsonToken.START_OBJECT    ||    i    ==    INT_QUOTE;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
55	[BUG]  [BUGGY]  return  _currToken  =  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return  _currToken  =  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE  +  1;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return  _currToken  =  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE  +  1;	  return    _currToken    =    JsonToken.START_OBJECT    ||    i    ==    INT_QUOTE;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
56	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i  >=  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i  >=  INT_QUOTE);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT)&&(i  >=  INT_QUOTE);	  return(_currToken    =    JsonToken.START_OBJECT)&&(i!=    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
57	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  ||  _currToken  =  JsonToken.START_ARRAY);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  ||  _currToken  =  JsonToken.START_ARRAY);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT  ||  _currToken  =  JsonToken.START_ARRAY);	  return    _currToken    =    JsonToken.START_OBJECT    ||    _currToken    =    JsonToken.START_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
58	[BUG]  [BUGGY]  return  _currToken  =  JsonToken.START_OBJECT  ||  _currToken  =  JsonToken.END_ARRAY;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return  _currToken  =  JsonToken.START_OBJECT  ||  _currToken  =  JsonToken.END_ARRAY;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return  _currToken  =  JsonToken.START_OBJECT  ||  _currToken  =  JsonToken.END_ARRAY;	  return    _currToken    =    JsonToken.START_OBJECT    ||    _currToken    =    JsonToken.START_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
59	[BUG]  [BUGGY]  return  _currToken  =  JsonToken.START_OBJECT  &&  _currToken  =  JsonToken.START_ARRAY;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return  _currToken  =  JsonToken.START_OBJECT  &&  _currToken  =  JsonToken.START_ARRAY;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return  _currToken  =  JsonToken.START_OBJECT  &&  _currToken  =  JsonToken.START_ARRAY;	  return    _currToken    =    JsonToken.START_OBJECT    ||    _currToken    =    JsonToken.START_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
60	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.FIELD_NAME,  _tokenInputRow);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.FIELD_NAME,  _tokenInputRow);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.FIELD_NAME,  _tokenInputRow);	  return(_currToken    =    JsonToken.FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
61	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.FIELD_NAME)+  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.FIELD_NAME)+  1;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.FIELD_NAME)+  1;	  return(_currToken    =    JsonToken.FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
62	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  |  JsonToken.START_ARRAY);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  |  JsonToken.START_ARRAY);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT  |  JsonToken.START_ARRAY);	  return(_currToken    =    JsonToken.START_ARRAY    |    JsonToken.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
63	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  |  _currToken);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  |  _currToken);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT  |  _currToken);	  return(_currToken    =    JsonToken.START_ARRAY    |    JsonToken.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
64	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_ARRAY  |  JsonToken.START_OBJECT,  _tokenInputRow);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_ARRAY  |  JsonToken.START_OBJECT,  _tokenInputRow);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_ARRAY  |  JsonToken.START_OBJECT,  _tokenInputRow);	  return(_currToken    =    JsonToken.START_ARRAY    |    JsonToken.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
65	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT);	  return(_currToken    =    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
66	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.END_OBJECT);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.END_OBJECT);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.END_OBJECT);	  return(_currToken    =    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
67	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NULL);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NULL);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.VALUE_NULL);	  return(_currToken    =    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
68	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  |  JsonToken.END_ARRAY);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  |  JsonToken.END_ARRAY);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT  |  JsonToken.END_ARRAY);	  return(_currToken    =    JsonToken.START_ARRAY    |    JsonToken.END_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
69	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_ARRAY  |  JsonToken.END_OBJECT,  _tokenInputRow);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_ARRAY  |  JsonToken.END_OBJECT,  _tokenInputRow);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_ARRAY  |  JsonToken.END_OBJECT,  _tokenInputRow);	  return(_currToken    =    JsonToken.START_ARRAY    |    JsonToken.END_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
70	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_ARRAY  &  JsonToken.END_OBJECT);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_ARRAY  &  JsonToken.END_OBJECT);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_ARRAY  &  JsonToken.END_OBJECT);	  return(_currToken    =    JsonToken.START_ARRAY    |    JsonToken.END_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
71	[BUG]  [BUGGY]  return(i  =  JsonToken.START_OBJECT  &&  _currToken  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(i  =  JsonToken.START_OBJECT  &&  _currToken  ==  INT_QUOTE);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(i  =  JsonToken.START_OBJECT  &&  _currToken  ==  INT_QUOTE);	  return(_currToken    =    JsonToken.START_OBJECT    &&    i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
72	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.END_OBJECT  ||  i  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.END_OBJECT  ||  i  ==  INT_QUOTE);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.END_OBJECT  ||  i  ==  INT_QUOTE);	  return(_currToken    =    JsonToken.START_OBJECT    &&    i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
73	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL  &&  i  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL  &&  i  ==  INT_QUOTE);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_NULL  &&  i  ==  INT_QUOTE);	  return(_currToken    =    JsonToken.VALUE_NULL    ||    i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
74	[BUG]  [BUGGY]  return(i  =  JsonToken.VALUE_NULL  ||  i  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(i  =  JsonToken.VALUE_NULL  ||  i  ==  INT_QUOTE);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(i  =  JsonToken.VALUE_NULL  ||  i  ==  INT_QUOTE);	  return(_currToken    =    JsonToken.VALUE_NULL    ||    i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
75	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)||(i!=  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)||(i!=  INT_QUOTE);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT)||(i!=  INT_QUOTE);	  return(_currToken    =    JsonToken.START_OBJECT)&&(i!=    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
76	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_ARRAY)&&(i!=  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_ARRAY)&&(i!=  INT_QUOTE);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_ARRAY)&&(i!=  INT_QUOTE);	  return(_currToken    =    JsonToken.START_OBJECT)&&(i!=    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
77	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.END_OBJECT);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.END_OBJECT);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.END_OBJECT);	  return(_currToken    =    JsonToken.VALUE_STRING);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
78	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL  &&  _currToken!=  JsonToken.START_OBJECT);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL  &&  _currToken!=  JsonToken.START_OBJECT);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_NULL  &&  _currToken!=  JsonToken.START_OBJECT);	  return(_currToken    =    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
79	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_ARRAY  &  JsonToken.START_OBJECT);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_ARRAY  &  JsonToken.START_OBJECT);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_ARRAY  &  JsonToken.START_OBJECT);	  return(_currToken    =    JsonToken.START_ARRAY    |    JsonToken.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
80	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputBuffer,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputBuffer,  _tokenInputCol);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputBuffer,  _tokenInputCol);	  _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
81	[BUG]  [BUGGY]  case  '[':  _currToken  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  case  '[':  _currToken  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	case  '[':  _currToken  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);	  case    '[':    _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
82	[BUG]  [BUGGY]  return  i  {  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return  i  {  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return  i  {  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE;	  return    _currToken    =    JsonToken.START_OBJECT    ||    i    ==    INT_QUOTE;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
83	[BUG]  [BUGGY]  return  _currToken  =  JsonToken.START_ARRAY  |  JsonToken.START_OBJECT;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return  _currToken  =  JsonToken.START_ARRAY  |  JsonToken.START_OBJECT;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return  _currToken  =  JsonToken.START_ARRAY  |  JsonToken.START_OBJECT;	  return    _currToken    =    JsonToken.START_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
84	[BUG]  [BUGGY]  return  _currToken  =  JsonToken.FIELD_NAME;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return  _currToken  =  JsonToken.FIELD_NAME;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return  _currToken  =  JsonToken.FIELD_NAME;	  return    _currToken    =    JsonToken.START_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
85	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_ARRAY  &&  i  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_ARRAY  &&  i  ==  INT_QUOTE);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_ARRAY  &&  i  ==  INT_QUOTE);	  return(_currToken    =    JsonToken.START_OBJECT    &&    i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
86	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  -  1);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol  -  1);	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
87	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJ  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJ  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJ	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
88	[BUG]  [BUGGY]  if(i  ==  INT_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJ  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  if(i  ==  INT_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJ  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	if(i  ==  INT_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJ	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
89	[BUG]  [BUGGY]  if(i  ==  INT_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  if(i  ==  INT_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	if(i  ==  INT_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
90	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i  <  =  0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i  <  =  0);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT)&&(i  <  =  0);	  return(_currToken    =    JsonToken.START_OBJECT)&&(i    ==    0);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
91	[BUG]  [BUGGY]  return(i  =  JsonToken.START_OBJECT  ||  i!=  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(i  =  JsonToken.START_OBJECT  ||  i!=  INT_QUOTE);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(i  =  JsonToken.START_OBJECT  ||  i!=  INT_QUOTE);	  return(_currToken    =    JsonToken.START_OBJECT    ||    i!=    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
92	[BUG]  [BUGGY]  return(i  =  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(i  =  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE  +  1);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(i  =  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE  +  1);	  return(_currToken    =    JsonToken.START_OBJECT    ||    i    ==    INT_QUOTE    +    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
93	[BUG]  [BUGGY]  return  _currToken  =  JsonToken.START_ARRAY  ||  _currToken  =  JsonToken.START_OBJECT;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return  _currToken  =  JsonToken.START_ARRAY  ||  _currToken  =  JsonToken.START_OBJECT;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return  _currToken  =  JsonToken.START_ARRAY  ||  _currToken  =  JsonToken.START_OBJECT;	  return    _currToken    =    JsonToken.START_OBJECT    ||    _currToken    =    JsonToken.START_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
94	[BUG]  [BUGGY]  return  _currToken  =  JsonToken.START_OBJECT  ||  _currToken  =  JsonToken.START_ARRAY  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return  _currToken  =  JsonToken.START_OBJECT  ||  _currToken  =  JsonToken.START_ARRAY  +  1;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return  _currToken  =  JsonToken.START_OBJECT  ||  _currToken  =  JsonToken.START_ARRAY  +  1;	  return    _currToken    =    JsonToken.START_OBJECT    ||    _currToken    =    JsonToken.START_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
95	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_ARRA  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_ARRA  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_ARRA	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.START_ARRAY);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
96	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_ARRAY  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_ARRAY  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_ARRAY	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.START_ARRAY);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
97	[BUG]  [BUGGY]  if(i  ==  INT_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  if(i  ==  INT_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	if(i  ==  INT_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.START_ARRAY);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
98	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.START_OBJECT);	  return(_currToken    =    JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
99	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT);	  return(_currToken    =    JsonToken.VALUE_NUMBER_INT);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
100	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i!=  INT_QUOTE  ||  i  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i!=  INT_QUOTE  ||  i  ==  INT_QUOTE);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT)&&(i!=  INT_QUOTE  ||  i  ==  INT_QUOTE);	  return(_currToken    =    JsonToken.START_OBJECT)&&(i    ==    INT_QUOTE    ||    i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
101	[BUG]  [BUGGY]  return(i  ==  JsonToken.START_OBJECT)&&(i  ==  INT_QUOTE  ||  i  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(i  ==  JsonToken.START_OBJECT)&&(i  ==  INT_QUOTE  ||  i  ==  INT_QUOTE);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(i  ==  JsonToken.START_OBJECT)&&(i  ==  INT_QUOTE  ||  i  ==  INT_QUOTE);	  return(_currToken    =    JsonToken.START_OBJECT)&&(i    ==    INT_QUOTE    ||    i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
102	[BUG]  [BUGGY]  return(i  =  JsonToken.START_OBJECT  ||  i  ==  0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(i  =  JsonToken.START_OBJECT  ||  i  ==  0);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(i  =  JsonToken.START_OBJECT  ||  i  ==  0);	  return(_currToken    =    JsonToken.START_OBJECT    ||    i    ==    0);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
103	[BUG]  [BUGGY]  return(i  ==  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE)?  JsonToken.END_ARRAY  :  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(i  ==  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE)?  JsonToken.END_ARRAY  :  JsonToken.END_OBJECT;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(i  ==  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE)?  JsonToken.END_ARRAY  :  JsonToken.END_OBJECT;	  return(_currToken    =    JsonToken.START_OBJECT    ||    i    ==    INT_QUOTE)?    JsonToken.END_ARRAY    :    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
104	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_ARRAY  ||  i  ==  INT_QUOTE)?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_ARRAY  ||  i  ==  INT_QUOTE)?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_ARRAY  ||  i  ==  INT_QUOTE)?  JsonToken.END_OBJECT  :  JsonToken.END_OBJECT;	  return(_currToken    =    JsonToken.START_OBJECT    ||    i    ==    INT_QUOTE)?    JsonToken.END_ARRAY    :    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
105	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.FIELD_NAME  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.FIELD_NAME  +  1);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.FIELD_NAME  +  1);	  return(_currToken    =    JsonToken.FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
106	[BUG]  [BUGGY]  return  _currToken  =  JsonToken.START_OBJECT  +  1L;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return  _currToken  =  JsonToken.START_OBJECT  +  1L;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return  _currToken  =  JsonToken.START_OBJECT  +  1L;	  return    _currToken    =    JsonToken.START_OBJECT    +    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
107	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  INT_QUOTE  *  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  INT_QUOTE  *  1);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  INT_QUOTE  *  1);	  return(_currToken    =    JsonToken.START_OBJECT)&&(i    ==    INT_QUOTE    +    1);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
108	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.FIELD_NAME  ||  i  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.FIELD_NAME  ||  i  ==  INT_QUOTE);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.FIELD_NAME  ||  i  ==  INT_QUOTE);	  return(_currToken    =    JsonToken.FIELD_NAME);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
109	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  |  _parsingContext);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  |  _parsingContext);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT  |  _parsingContext);	  return(_currToken    =    JsonToken.START_ARRAY    |    JsonToken.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
110	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  |  _tokenInputRow);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  |  _tokenInputRow);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT  |  _tokenInputRow);	  return(_currToken    =    JsonToken.START_ARRAY    |    JsonToken.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
111	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL,  _tokenInputRow  *  2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL,  _tokenInputRow  *  2);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_NULL,  _tokenInputRow  *  2);	  return(_currToken    =    JsonToken.VALUE_NULL,    _tokenInputRow);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
112	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  }	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
113	[BUG]  [BUGGY]  return  _currToken  =  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return  _currToken  =  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return  _currToken  =  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY;	  return    _currToken    =    JsonToken.START_OBJECT    ||    _currToken    =    JsonToken.START_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
114	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
115	[BUG]  [BUGGY]  if(i  ==  INT_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  if(i  ==  INT_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);  }  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	if(i  ==  INT_ARRAY)  {  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);  }	  _parsingContext    =    _parsingContext.createChildArrayContext(_tokenInputRow,    _tokenInputCol);    return(_currToken    =    JsonToken.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
116	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL  ||  i  ==  INT_QUOTE)?  JsonToken.START_OBJECT  :  JsonToken.VALUE_NULL;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL  ||  i  ==  INT_QUOTE)?  JsonToken.START_OBJECT  :  JsonToken.VALUE_NULL;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_NULL  ||  i  ==  INT_QUOTE)?  JsonToken.START_OBJECT  :  JsonToken.VALUE_NULL;	  return(_currToken    =    JsonToken.VALUE_NULL    ||    i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
117	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL  ||  i  ==  INT_QUOTE)?  JsonToken.END_ARRAY  :  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL  ||  i  ==  INT_QUOTE)?  JsonToken.END_ARRAY  :  JsonToken.END_OBJECT;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_NULL  ||  i  ==  INT_QUOTE)?  JsonToken.END_ARRAY  :  JsonToken.END_OBJECT;	  return(_currToken    =    JsonToken.VALUE_NULL    ||    i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
118	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	if(i  ==  INT_QUOTE)  {  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  }	  _parsingContext    =    _parsingContext.createChildObjectContext(_tokenInputRow,    _tokenInputCol);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
119	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_ARRAY);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_ARRAY);  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_ARRAY);	  return(_currToken    =    JsonToken.VALUE_NULL    ||    _currToken!=    JsonToken.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
120	[BUG]  [BUGGY]  return  _currToken  =  JsonToken.START_OBJECT?  JsonToken.FIELD_NAME  :  JsonToken.START_ARRAY  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return  _currToken  =  JsonToken.START_OBJECT?  JsonToken.FIELD_NAME  :  JsonToken.START_ARRAY  +  1;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return  _currToken  =  JsonToken.START_OBJECT?  JsonToken.FIELD_NAME  :  JsonToken.START_ARRAY  +  1;	  return    _currToken    =    JsonToken.START_OBJECT    +    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
121	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE)?  JsonToken.END_ARRAY  :  JsonToken.END_ARRAY;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE)?  JsonToken.END_ARRAY  :  JsonToken.END_ARRAY;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE)?  JsonToken.END_ARRAY  :  JsonToken.END_ARRAY;	  return(_currToken    =    JsonToken.START_OBJECT    ||    i    ==    INT_QUOTE)?    JsonToken.END_ARRAY    :    JsonToken.END_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
122	[BUG]  [BUGGY]  return  _currToken  =  JsonToken.VALUE_NULL;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);      [BUGGY]  return  _currToken  =  JsonToken.VALUE_NULL;  [BUGGY]      case  ']':  case  '}':    _reportUnexpectedChar(i,       "expected  a  value     ");  case  't':  _matchToken(     "true     ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(     "false     ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return  _currToken  =  JsonToken.VALUE_NULL;	  return    _currToken    =    JsonToken.START_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
