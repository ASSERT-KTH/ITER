bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  INT_QUOTE  +  1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  INT_QUOTE  +  1);  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  INT_QUOTE  +  1);	  return(_currToken    =    JsonToken.START_OBJECT)&&(i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
2	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  0);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  0);  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  0);	  return(_currToken    =    JsonToken.START_OBJECT)&&(i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
3	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  INT_QUOTE  ||  i  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  INT_QUOTE  ||  i  ==  INT_QUOTE);  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT)&&(i  ==  INT_QUOTE  ||  i  ==  INT_QUOTE);	  return(_currToken    =    JsonToken.START_OBJECT)&&(i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
4	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  &&  i  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  &&  i  ==  INT_QUOTE);  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT  &&  i  ==  INT_QUOTE);	  return(_currToken    =    JsonToken.START_OBJECT    ||    i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
5	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE  +  1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE  +  1);  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE  +  1);	  return(_currToken    =    JsonToken.START_OBJECT    ||    i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
6	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  ||  i  ==  0);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  ||  i  ==  0);  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT  ||  i  ==  0);	  return(_currToken    =    JsonToken.START_OBJECT    ||    i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
7	[BUG]  [BUGGY]  return  _currToken  =  JsonToken.START_ARRAY;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  return  _currToken  =  JsonToken.START_ARRAY;  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return  _currToken  =  JsonToken.START_ARRAY;	  return    _currToken    =    JsonToken.START_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
8	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_STRING);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  return(_currToken  =  JsonToken.VALUE_STRING);  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_STRING);	  return(_currToken    =    JsonToken.START_ARRAY);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
9	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_ARRAY  |  JsonToken.START_OBJECT);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  return(_currToken  =  JsonToken.START_ARRAY  |  JsonToken.START_OBJECT);  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_ARRAY  |  JsonToken.START_OBJECT);	  return(_currToken    =    JsonToken.START_ARRAY);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
10	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_ARRAY  |  JsonToken.END_OBJECT);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  return(_currToken  =  JsonToken.START_ARRAY  |  JsonToken.END_OBJECT);  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_ARRAY  |  JsonToken.END_OBJECT);	  return(_currToken    =    JsonToken.START_ARRAY);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
11	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_NUMBER_INT);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  return(_currToken  =  JsonToken.VALUE_NUMBER_INT);  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_NUMBER_INT);	  return(_currToken    =    JsonToken.VALUE_NULL);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
12	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL,  _tokenInputRow);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL,  _tokenInputRow);  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_NULL,  _tokenInputRow);	  return(_currToken    =    JsonToken.VALUE_NULL);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
13	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
14	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	_parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
15	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_OBJECT);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_ARRAY);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_ARRAY);  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	_parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return(_currToken  =  JsonToken.START_ARRAY);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.FIELD_NAME);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  return(_currToken  =  JsonToken.FIELD_NAME);  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.FIELD_NAME);	  return(_currToken    =    JsonToken.VALUE_NULL);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
18	[BUG]  [BUGGY]  return(i  =  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  return(i  =  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE);  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(i  =  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE);	  return(_currToken    =    JsonToken.START_OBJECT    ||    i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
19	[BUG]  [BUGGY]  return  _currToken  =  JsonToken.START_OBJECT  ||  _currToken  =  JsonToken.START_ARRAY;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  return  _currToken  =  JsonToken.START_OBJECT  ||  _currToken  =  JsonToken.START_ARRAY;  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return  _currToken  =  JsonToken.START_OBJECT  ||  _currToken  =  JsonToken.START_ARRAY;	  return    _currToken    =    JsonToken.START_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
20	[BUG]  [BUGGY]  return  _currToken  =  JsonToken.START_OBJECT  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  return  _currToken  =  JsonToken.START_OBJECT  +  1;  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return  _currToken  =  JsonToken.START_OBJECT  +  1;	  return    _currToken    =    JsonToken.START_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
21	[BUG]  [BUGGY]  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
22	[BUG]  [BUGGY]  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  break;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  break;  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  break;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
23	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i!=  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT)&&(i!=  INT_QUOTE);  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT)&&(i!=  INT_QUOTE);	  return(_currToken    =    JsonToken.START_OBJECT)&&(i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
24	[BUG]  [BUGGY]  case  '[':  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  break;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  case  '[':  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  break;  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	case  '[':  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  break;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
25	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  ||  i!=  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  ||  i!=  INT_QUOTE);  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT  ||  i!=  INT_QUOTE);	  return(_currToken    =    JsonToken.START_OBJECT    ||    i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
26	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE)?  JsonToken.END_ARRAY  :  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  return(_currToken  =  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE)?  JsonToken.END_ARRAY  :  JsonToken.END_OBJECT;  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE)?  JsonToken.END_ARRAY  :  JsonToken.END_OBJECT;	  return(_currToken    =    JsonToken.START_OBJECT    ||    i    ==    INT_QUOTE);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
27	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL  ||  i  ==  INT_QUOTE);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL  ||  i  ==  INT_QUOTE);  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_NULL  ||  i  ==  INT_QUOTE);	  return(_currToken    =    JsonToken.VALUE_NULL);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
28	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  return(_currToken  =  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT);  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT);	  return(_currToken    =    JsonToken.VALUE_NULL);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
29	[BUG]  [BUGGY]  return  _currToken  =  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  return  _currToken  =  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE;  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return  _currToken  =  JsonToken.START_OBJECT  ||  i  ==  INT_QUOTE;	  return    _currToken    =    JsonToken.START_OBJECT;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
30	[BUG]  [BUGGY]  return(_currToken  =  JsonToken.VALUE_EMBEDDED_OBJECT);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (i  ==  INT_QUOTE)  {  _tokenIncomplete  =  true;  return  (_currToken  =  JsonToken.VALUE_STRING);  }  switch  (i)  {  case  '[':  _parsingContext  =  _parsingContext.createChildArrayContext(_tokenInputRow,  _tokenInputCol);  return  (_currToken  =  JsonToken.START_ARRAY);  case  '{':  _parsingContext  =  _parsingContext.createChildObjectContext(_tokenInputRow,  _tokenInputCol);    [BUGGY]  return(_currToken  =  JsonToken.VALUE_EMBEDDED_OBJECT);  [BUGGY]    case  ']':  case  '}':    _reportUnexpectedChar(i,     "expected  a  value   ");  case  't':  _matchToken(   "true   ",  1);  return  (_currToken  =  JsonToken.VALUE_TRUE);  case  'f':  _matchToken(   "false   ",  1);  [CLASS]  UTF8StreamJsonParser  [METHOD]  _nextTokenNotInObject  [RETURN_TYPE]  JsonToken  int  i  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	784	784	1	replace	return(_currToken  =  JsonToken.VALUE_EMBEDDED_OBJECT);	  return(_currToken    =    JsonToken.START_ARRAY);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
