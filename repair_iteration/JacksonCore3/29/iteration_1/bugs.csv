bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  _nextToken(JsonToken.FIELD_NAME);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  _reportUnexpectedChar(i,   "was  expecting  comma  to  separate   "+_parsingContext.getTypeDesc()+ "  entries ");  }  i  =  _skipWS();  }      if  (!_parsingContext.inObject())  {  [BUGGY]  return  _nextToken(JsonToken.FIELD_NAME);  [BUGGY]  }  Name  n  =  _parseName(i);  _parsingContext.setCurrentName(n.getName());  _currToken  =  JsonToken.FIELD_NAME;  if  (_inputPtr  <  _inputEnd  &&  _inputBuffer[_inputPtr]  ==  ':')  {  ++_inputPtr;  }  else  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	696	696	1	replace	return  _nextToken(JsonToken.FIELD_NAME);	return  _nextTokenNotInObject(i);  	non-compiled	[CE]  illegal  start  of  type	57	None	replace
2	[BUG]  [BUGGY]  _reportUnexpectedChar(i, "was  expecting  comma  to  separate "+_parsingContext.getTypeDesc()  + "  entries ");  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  _reportUnexpectedChar(i,   "was  expecting  comma  to  separate   "+_parsingContext.getTypeDesc()+ "  entries ");  }  i  =  _skipWS();  }      if  (!_parsingContext.inObject())  {  [BUGGY]  _reportUnexpectedChar(i, "was  expecting  comma  to  separate "+_parsingContext.getTypeDesc()  + "  entries ");  [BUGGY]  }  Name  n  =  _parseName(i);  _parsingContext.setCurrentName(n.getName());  _currToken  =  JsonToken.FIELD_NAME;  if  (_inputPtr  <  _inputEnd  &&  _inputBuffer[_inputPtr]  ==  ':')  {  ++_inputPtr;  }  else  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	696	696	1	replace	_reportUnexpectedChar(i, "was  expecting  comma  to  separate "+_parsingContext.getTypeDesc()  + "  entries ");	return  _nextTokenNotInObject(i);  	non-compiled	[CE]  illegal  start  of  type	57	None	replace
3	[BUG]  [BUGGY]  return  _nextTokenNotInObject(i,  JsonToken.FIELD_NAME);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  _reportUnexpectedChar(i,   "was  expecting  comma  to  separate   "+_parsingContext.getTypeDesc()+ "  entries ");  }  i  =  _skipWS();  }      if  (!_parsingContext.inObject())  {  [BUGGY]  return  _nextTokenNotInObject(i,  JsonToken.FIELD_NAME);  [BUGGY]  }  Name  n  =  _parseName(i);  _parsingContext.setCurrentName(n.getName());  _currToken  =  JsonToken.FIELD_NAME;  if  (_inputPtr  <  _inputEnd  &&  _inputBuffer[_inputPtr]  ==  ':')  {  ++_inputPtr;  }  else  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	696	696	1	replace	return  _nextTokenNotInObject(i,  JsonToken.FIELD_NAME);	return  _nextTokenNotInObject(i);  	non-compiled	[CE]  illegal  start  of  type	57	None	replace
4	[BUG]  [BUGGY]  return  _parsingContext.nextToken(i);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  _reportUnexpectedChar(i,   "was  expecting  comma  to  separate   "+_parsingContext.getTypeDesc()+ "  entries ");  }  i  =  _skipWS();  }      if  (!_parsingContext.inObject())  {  [BUGGY]  return  _parsingContext.nextToken(i);  [BUGGY]  }  Name  n  =  _parseName(i);  _parsingContext.setCurrentName(n.getName());  _currToken  =  JsonToken.FIELD_NAME;  if  (_inputPtr  <  _inputEnd  &&  _inputBuffer[_inputPtr]  ==  ':')  {  ++_inputPtr;  }  else  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	696	696	1	replace	return  _parsingContext.nextToken(i);	return  _nextTokenNotInObject(i);  	non-compiled	[CE]  illegal  start  of  type	57	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  _reportUnexpectedChar(i,   "was  expecting  comma  to  separate   "+_parsingContext.getTypeDesc()+ "  entries ");  }  i  =  _skipWS();  }      if  (!_parsingContext.inObject())  {  [BUGGY]    [BUGGY]  }  Name  n  =  _parseName(i);  _parsingContext.setCurrentName(n.getName());  _currToken  =  JsonToken.FIELD_NAME;  if  (_inputPtr  <  _inputEnd  &&  _inputBuffer[_inputPtr]  ==  ':')  {  ++_inputPtr;  }  else  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	696	696	1	replace	  	return  _nextTokenNotInObject(i);  	non-compiled	[CE]  illegal  start  of  type	57	None	replace
6	[BUG]  [BUGGY]  return  _parsingContext.nextTokenNotInObject(i);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  _reportUnexpectedChar(i,   "was  expecting  comma  to  separate   "+_parsingContext.getTypeDesc()+ "  entries ");  }  i  =  _skipWS();  }      if  (!_parsingContext.inObject())  {  [BUGGY]  return  _parsingContext.nextTokenNotInObject(i);  [BUGGY]  }  Name  n  =  _parseName(i);  _parsingContext.setCurrentName(n.getName());  _currToken  =  JsonToken.FIELD_NAME;  if  (_inputPtr  <  _inputEnd  &&  _inputBuffer[_inputPtr]  ==  ':')  {  ++_inputPtr;  }  else  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	696	696	1	replace	return  _parsingContext.nextTokenNotInObject(i);	return  _nextTokenNotInObject(i);  	non-compiled	[CE]  illegal  start  of  type	57	None	replace
7	[BUG]  [BUGGY]  return  _nextTokenNotInObject(i,  JsonToken.END_OBJECT);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  _reportUnexpectedChar(i,   "was  expecting  comma  to  separate   "+_parsingContext.getTypeDesc()+ "  entries ");  }  i  =  _skipWS();  }      if  (!_parsingContext.inObject())  {  [BUGGY]  return  _nextTokenNotInObject(i,  JsonToken.END_OBJECT);  [BUGGY]  }  Name  n  =  _parseName(i);  _parsingContext.setCurrentName(n.getName());  _currToken  =  JsonToken.FIELD_NAME;  if  (_inputPtr  <  _inputEnd  &&  _inputBuffer[_inputPtr]  ==  ':')  {  ++_inputPtr;  }  else  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	696	696	1	replace	return  _nextTokenNotInObject(i,  JsonToken.END_OBJECT);	return  _nextTokenNotInObject(i);  	non-compiled	[CE]  illegal  start  of  type	57	None	replace
8	[BUG]  [BUGGY]  return  _nextTokenNotInObject(i,  JsonToken.VALUE_NULL);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  _reportUnexpectedChar(i,   "was  expecting  comma  to  separate   "+_parsingContext.getTypeDesc()+ "  entries ");  }  i  =  _skipWS();  }      if  (!_parsingContext.inObject())  {  [BUGGY]  return  _nextTokenNotInObject(i,  JsonToken.VALUE_NULL);  [BUGGY]  }  Name  n  =  _parseName(i);  _parsingContext.setCurrentName(n.getName());  _currToken  =  JsonToken.FIELD_NAME;  if  (_inputPtr  <  _inputEnd  &&  _inputBuffer[_inputPtr]  ==  ':')  {  ++_inputPtr;  }  else  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	696	696	1	replace	return  _nextTokenNotInObject(i,  JsonToken.VALUE_NULL);	return  _nextTokenNotInObject(i);  	non-compiled	[CE]  illegal  start  of  type	57	None	replace
