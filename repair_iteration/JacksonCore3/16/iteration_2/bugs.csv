bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _numTypesValid  =  0L;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {    [BUGGY]  _numTypesValid  =  0L;  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	_numTypesValid  =  0L;	  _numTypesValid    =    0;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
2	[BUG]  [BUGGY]  _numTypesValid  =  1L;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  _numTypesValid  =  1L;  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	_numTypesValid  =  1L;	  _numTypesValid    =    1;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
3	[BUG]  [BUGGY]  _numTypesValid  =  JsonToken.VALUE_STRING;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {    [BUGGY]  _numTypesValid  =  JsonToken.VALUE_STRING;  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	_numTypesValid  =  JsonToken.VALUE_STRING;	  _numTypesValid    =    JsonToken.VALUE_NULL;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
4	[BUG]  [BUGGY]  _numTypesValid  =  NR_QUOTE  +  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  _numTypesValid  =  NR_QUOTE  +  1;  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	_numTypesValid  =  NR_QUOTE  +  1;	  _numTypesValid    =    NR_QUOTE;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
5	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterString();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterString();  }  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterString();  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
6	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextString();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextString();  }  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextString();  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
7	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterString();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterString();  }  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterString();  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
8	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_STRING)  {  return  _nextString();  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_STRING)  {  return  _nextString();  }  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_STRING)  {  return  _nextString();  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
9	[BUG]  [BUGGY]  _numTypesValid  =  _currToken  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {    [BUGGY]  _numTypesValid  =  _currToken  +  1;  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	_numTypesValid  =  _currToken  +  1;	  _numTypesValid    =    NR_UNKNOWN    +    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  _numTypesValid  =  _numTypes  +  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  _numTypesValid  =  _numTypes  +  1;  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	_numTypesValid  =  _numTypes  +  1;	  _numTypesValid    =    NR_UNKNOWN    +    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
11	[BUG]  [BUGGY]  _numTypesValid  =  _nextToken()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {    [BUGGY]  _numTypesValid  =  _nextToken()  +  1;  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	_numTypesValid  =  _nextToken()  +  1;	  _numTypesValid    =    NR_UNKNOWN    +    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
12	[BUG]  [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NUMBER_INT  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {    [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NUMBER_INT  +  1;  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	_numTypesValid  =  JsonToken.VALUE_NUMBER_INT  +  1;	  _numTypesValid    =    JsonToken.VALUE_NUMBER_INT;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
13	[BUG]  [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NUMBER_FLOAT;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {    [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	_numTypesValid  =  JsonToken.VALUE_NUMBER_FLOAT;	  _numTypesValid    =    JsonToken.VALUE_NUMBER_INT;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
14	[BUG]  [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NUMBER_INT  |  JsonToken.VALUE_NUMBER_FLOAT;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {    [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NUMBER_INT  |  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	_numTypesValid  =  JsonToken.VALUE_NUMBER_INT  |  JsonToken.VALUE_NUMBER_FLOAT;	  _numTypesValid    =    JsonToken.VALUE_NUMBER_INT;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
15	[BUG]  [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NULL  |  JsonToken.END_ARRAY;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {    [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NULL  |  JsonToken.END_ARRAY;  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	_numTypesValid  =  JsonToken.VALUE_NULL  |  JsonToken.END_ARRAY;	  _numTypesValid    =    JsonToken.VALUE_NULL;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
16	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	if(_currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  _nextAfterName();  }  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  _nextAfterName();  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
18	[BUG]  [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NUMBER_INT  |  JsonToken.END_ARRAY;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {    [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NUMBER_INT  |  JsonToken.END_ARRAY;  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	_numTypesValid  =  JsonToken.VALUE_NUMBER_INT  |  JsonToken.END_ARRAY;	  _numTypesValid    =    JsonToken.VALUE_NUMBER_INT;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
19	[BUG]  [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NUMBER_INT  |  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {    [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NUMBER_INT  |  JsonToken.END_OBJECT;  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	_numTypesValid  =  JsonToken.VALUE_NUMBER_INT  |  JsonToken.END_OBJECT;	  _numTypesValid    =    JsonToken.VALUE_NUMBER_INT;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
20	[BUG]  [BUGGY]  _numTypesValid  =  NR_TYPE;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  _numTypesValid  =  NR_TYPE;  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	_numTypesValid  =  NR_TYPE;	  _numTypesValid    =    NR_QUOTE;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
21	[BUG]  [BUGGY]  _numTypesValid  =  NR_UNKNOWN  +  1L;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {    [BUGGY]  _numTypesValid  =  NR_UNKNOWN  +  1L;  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	_numTypesValid  =  NR_UNKNOWN  +  1L;	  _numTypesValid    =    NR_UNKNOWN    +    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
22	[BUG]  [BUGGY]  _numTypesValid  =  NR_UNKNOWN  +  2;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  _numTypesValid  =  NR_UNKNOWN  +  2;  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	_numTypesValid  =  NR_UNKNOWN  +  2;	  _numTypesValid    =    NR_UNKNOWN    +    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
23	[BUG]  [BUGGY]  _numTypesValid  =  2;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  _numTypesValid  =  2;  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	_numTypesValid  =  2;	  _numTypesValid    =    1;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
24	[BUG]  [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NULL  |  JsonToken.VALUE_NUMBER_FLOAT;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    {    [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NULL  |  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	_numTypesValid  =  JsonToken.VALUE_NULL  |  JsonToken.VALUE_NUMBER_FLOAT;	  _numTypesValid    =    JsonToken.VALUE_NULL;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
25	[BUG]  [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NULL  |  JsonToken.VALUE_FALSE;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    {    [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NULL  |  JsonToken.VALUE_FALSE;  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	_numTypesValid  =  JsonToken.VALUE_NULL  |  JsonToken.VALUE_FALSE;	  _numTypesValid    =    JsonToken.VALUE_NULL;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
26	[BUG]  [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NULL  |  JsonToken.VALUE_STRING;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {    [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NULL  |  JsonToken.VALUE_STRING;  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	_numTypesValid  =  JsonToken.VALUE_NULL  |  JsonToken.VALUE_STRING;	  _numTypesValid    =    JsonToken.VALUE_NULL;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
27	[BUG]  [BUGGY]  _reportError( "Current  token( "+_currToken+ ")not  a  string  value ");  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    {    [BUGGY]  _reportError( "Current  token( "+_currToken+ ")not  a  string  value ");  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	_reportError( "Current  token( "+_currToken+ ")not  a  string  value ");	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
28	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  return  _nextAfterName();  }  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_ARRAY)  {  return  _nextAfterName();  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
29	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  _skipString();  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    {    [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  _skipString();  }  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  return  _skipString();  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
30	[BUG]  [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NUMBER_INT  ||  JsonToken.VALUE_NUMBER_FLOAT;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    {    [BUGGY]  _numTypesValid  =  JsonToken.VALUE_NUMBER_INT  ||  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]        if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  JsonToken  t  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  ch  col  count  decodedData  end  features  i  minAvailable  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  Name  n  	projects/JacksonCore3/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	636	636	1	replace	_numTypesValid  =  JsonToken.VALUE_NUMBER_INT  ||  JsonToken.VALUE_NUMBER_FLOAT;	  _numTypesValid    =    JsonToken.VALUE_NUMBER_INT;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
