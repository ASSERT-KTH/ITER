compilation error,540,replace,[CE] illegal start of expression, //  addAgedItems(false);  if(added)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  ,if(added) { // this.data.removeAgedItems(true); if(notify)) { fireSeriesChanged(); } ; delt
patch is same with buggy,540,replace,, //  this.data.add(item,  new  LinkedList  <  TimeSeriesDataItem>());  ,// this.data.add(item, new LinkedList < TimeSeriesDataItem>());
patch is same with buggy,880,replace,, System.err.println( "Requires  end  -  start.   ");  ,System.err.println("Requires end - start. ");
patch is same with buggy,880,replace,, System.err.println( "Requires  end  -  start.   ");  ,System.err.println("Requires end - start. ");
patch is same with buggy,880,replace,, System.err.println( "Requires  end  -  start.   ");  ,System.err.println("Requires end - start.");
patch is same with buggy,880,replace,, System.err.println( "Requires  start  %  2  <=  0   ");  ,System.err.println("Requires start % 2 <= 0 ");
patch is same with buggy,880,replace,, System.err.println( "Requires  start  %  2  <=  0   ");  ,System.err.println( "Requires start % 2 <= 0 ");
compilation error,540,replace,[CE] cannot find symbol, //  removeAgedItems(false);  if(added)!=  fireSeriesChanged();  slated  ,while(item.getPeriod().equals(this.data.getPeriodClass())) bodied : item.getPeriod().toString();
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  &  b.toString()  :  null;  ,// removeAgedItems(false); if(notify)) { fireSeriesChanged(); & b.toString() : null;
compilation error,174,replace,[CE] bad operand types for binary operator '/', this.domain  =  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION  +  0;  ,this.domain = DEFAULT_DOMAIN_DESCRIPTION / DEFAULT_RANGE_DESCRIPTION + 0;
patch is same with buggy,540,replace,, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  ,// removeAgedItems(true, item); if(notify) { fireSeriesChanged(); } ; b.toString() : null;
patch is same with buggy,540,replace,, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  ,// removeAgedItems(true, item); if(notify) { fireSeriesChanged(); } ; b.toString() : null;
compilation error,174,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = Integer.MAX_VALUE * 2;
compilation error,174,add,[CE] cannot find symbol MaximumItemCount, ,this.MaximumItemCount = Integer.MAX_VALUE * 2;
compilation error,540,add,[CE] illegal start of expression, ,if(notify)) { fireSeriesChanged(); } ; // removeAgedItems(false); } ;
patch is same with buggy,540,replace,, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  fiance  ,// removeAgedItems(false); this.data.add(item); if(notify) { fireSeriesChanged(); } ; fiance
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  fiance  ,if(added) { // removeAgedItems(false); this.data.add(item); if(notify) { fireSeriesChanged(); } ; fiance
compilation error,174,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = Math.max(1, 0);
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))!=  this.data.  ,// deleteAgedItems(true); if(notify) { fireSeriesChanged(); hopped && item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))!= this.data.
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bodied ; b.toString() : null; Added
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(true);  if(notify))  {  fireSeriesChanged();  }  ;  }  ,if(added) { // removedAgedItems(true); if(notify)) { fireSeriesChanged(); } ; }
compilation error,174,replace,[CE] bad operand types for binary operator '/', if(this.domain  ==  null)  {  this.domain  =  domain;  }  else  {  timePeriodClass  =  timePeriodClass;  }  ,this.domain = DEFAULT_DOMAIN_DESCRIPTION + DEFAULT_RANGE_DESCRIPTION / 2;
compilation error,173,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = Integer.MAX_VALUE / 12;
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))!=  this.data.  ,// deleteAgedItems(true); if(notify) { fireSeriesChanged(); && item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))!= this.data.
patch is same with buggy,540,replace,, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  else  if(added)  {  this.data.add(item);  b.toString()  :  null;  }  ,// removeAgedItems(true); if(notify) { fireSeriesChanged(); bodied else if(added) { this.data.add(item); b.toString() : null; }
compilation error,174,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = Integer.MIN_VALUE * 2;
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  &  ;  }  ,if(added) { // removeAgedItems(true); this.data.add(item); if(notify) { fireSeriesChanged(); } ;
patch is same with buggy,540,replace,, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  >>  ;  ,// removeAgedItems(false, item); if(notify) { fireSeriesChanged(); >> ;
compilation error,540,add,[CE] illegal start of expression, ,if(notify) { fireSeriesChanged(); & b.toString() : null; & b.toString(); } ; & b.to
compilation error,174,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = Math.max(this.maximumItemCount, 4);
patch is same with buggy,540,replace,, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  ,// removeAgedItems(true); if(notify) { fireSeriesChanged(); bodied ; b.toString() : null;
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  this.data.add(item);  if(notify)  }  fireSeriesChanged();  bodied  , 
patch is same with buggy,540,replace,, //  removedAgedItems(true;  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  ,// removedAgedItems(true; if(notify) { fireSeriesChanged(); } && item.getPeriod().getTime().equals(this.timePeriodClass.getName())) { this.data.remove
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {    ,// deleteAgedItems(true); if(notify) { fireSeriesChanged(); } && item.getPeriod().getTime().equals(this.data.get(item.getPeriod())) {
compilation error,174,replace,[CE] cannot find symbol minimumItemCount, this.maximumItemAge  =  getMaximumItemAge()  +  1;  ,this.minimumItemCount = this.maximumItemCount + 4;
compilation error,174,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = maximumItemCount * 4;
compilation error,174,add,[CE] cannot find symbol maximalItemCount, ,this.maximumItemCount = maximalItemCount * 4;
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  bodied  ;  bodied  if(notify)  {  fireSeriesChange  ,if(added) { // removedAgedItems(false); if(notify)) { fireSeriesChanged(); } ; fiance
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); slated ; hopped ; boolean! notify = b.toString()!= this.data.get(item); b.toString(); b.
patch is same with buggy,540,replace,, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  }  ,// removeAgedItems(true, item); if(notify) { fireSeriesChanged(); } ; bodied? b.toString() : null; }
patch is same with buggy,174,replace,, if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  timePeriodClass  =  timePeriodClass;  }  ,if(domain == null) { this.domain = domain; this.range = range; } else { timePeriodClass = timePeriodClass; }
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  &  b.toString()  :  null;  }  ;  ,// removeAgedItems(false); if(notify)) { fireSeriesChanged(); & b.toString() : null; } ;
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  &  b.toString()  :  null;  }  ;  ,// removeAgedItems(false); if(notify)) { fireSeriesChanged(); & b.toString() : null; } ;
compilation error,174,add,[CE] illegal start of expression, ,if(this.domain == null) { this.domain = domain;!= else { timePeriodClass = timePeriodClass; }
compilation error,174,add,[CE] illegal start of expression, ,if(domain!= null && range!= null) { this.domain = domain; this.range = range; >>
compilation error,540,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  //  do  not  notify  any,  because  that  //  happens  next  anyway...  ,if(added) { if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); } ; }
compilation error,540,replace,[CE] illegal start of expression, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  //  do  not  notify  any,  because  that  //  happens  next  anyway...  ,if(!added) { if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); } ; }
compilation error,540,add,[CE] ';' expected, ,if(notify) { fireSeriesChanged(); fiance
compilation error,540,add,[CE] illegal start of expression, ,if(notify) { fireSeriesChanged(); } ); bodied
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied?  b.toString()  :  null;  }  ;  bodied?  b.toString()  :  null;  }  ;  ,// removeAgedItems(false); if(notify) { fireSeriesChanged(); bodied ; bodied? b.toString() : null; } ; bodied? b.toString() : null; } ;
patch is same with buggy,540,replace,, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  ,// removeAgedItems(false, item); if(notify) { fireSeriesChanged(); bodied ; bodied ; } ; } ; } ; } ; } ; } ; } ; } ;
patch is same with buggy,540,replace,, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  ,// removeAgedItems(false, item); if(notify) { fireSeriesChanged(); bodied ; bodied ; } ; } ; } ; } ; } ; } ; } ; } ;
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remov  ,// deleteAgedItems(true); if(notify) { fireSeriesChanged(); } && item.getPeriod().getTime().equals(this.timePeriodClass.getName())) { this.data.remov
compilation error,540,add,[CE] illegal start of expression, ,if(notify) { fireSeriesChanged(); bodied :? boolean notify = b.toString()!= this.data.get(item); b.toString(); b.toString();
compilation error,540,replace,[CE] illegal start of expression, //  this.data.add(item,  this.timePeriodClass);  ,if(item.getItemCount() > 1) { // removeAgedItems(false, item); if(notify) { fireSeriesChanged(); bodied ; bodied if(notify) { fireSeriesChanged(); } ; bodied if(notify)
compilation error,540,add,[CE] ';' expected, ,if(notify) { if(!added) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); } ; delt
compilation error,540,add,[CE] ';' expected, ,if(notify) { if(!added) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); } ; bodied
compilation error,540,add,[CE] ';' expected, ,if(notify) { if(!added) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); } ; ridden
patch is same with buggy,174,replace,, this.maximumItemCount  =  Integer.MAX_VALUE  /  2  +  1;  ,this.maximumItemCount = Integer.MAX_VALUE / 2 + 1;
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  bodied  ;  b.toString()  :  null;  slated  ;  ,// removeAgedItems(false); if(notify) { fireSeriesChanged(); } ; b.toString() : null; bodied ; b.toString() : null; slated ;
compilation error,540,add,[CE] illegal start of expression, ,if(added) { // deleteAgedItems(false); this.data.add(item, this.maximumItemCount); if(notify) { fireSeriesChanged(); } ; delt
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ,// deleteAgedItems(false); if(notify)) { fireSeriesChanged(); bodied
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  fiance  ,if(added) { // removeAgedItems(true); this.data.add(item); if(notify) { fireSeriesChanged(); } ; fiance
patch is same with buggy,540,replace,, //  removeAgedItems(false,  item);  if(notify)!=  fireSeriesChanged();  }  ;  ,// removeAgedItems(false, item); if(notify)!= fireSeriesChanged(); } ;
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  ,// deleteAgedItems(false); && item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  , 
patch is same with buggy,174,replace,, this.maximumItemCount  =  Math.max(1,  0);  ,this.maximumItemCount = Math.max(1, 0);
compilation error,540,add,[CE] illegal start of expression, ,if(notify)) { fireSeriesChanged(); bodied ; b.toString() : null; slated
compilation error,540,add,[CE] illegal start of expression, ,if(added) { // removedAllAgedItems(false); if(notify) { fireSeriesChanged(); } ; fiance
patch is same with buggy,540,replace,, //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString()  ,// removedAllAgedItems(false); if(notify) { fireSeriesChanged(); hopped && item.getDataItemCount() > this.maximumItemCount); b.append(item.getPeriod().toString()
patch is same with buggy,540,replace,, //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString()  ,// removedAllAgedItems(false); if(notify) { fireSeriesChanged(); hopped && item.getDataItemCount() > this.maximumItemCount); b.append(item.getPeriod().toString()
compilation error,540,add,[CE] class or interface expected, ,boolean jumped = this.data.isEmpty(); if(notify) { fireSeriesChanged(); } ; } 
compilation error,540,add,[CE] illegal start of expression, ,if(notify) { fireSeriesChanged(); && item.getPeriod()!= this.data.get(item.getPeriod())) borne this.data.remove(0); } 
compilation error,540,replace,[CE] illegal start of expression, //  this.data.getAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  }  ,if(added) { // removeAgedItems(false); this.data.remove(item); if(notify) { fireSeriesChanged(); } ; }
patch is same with buggy,540,replace,, //  removedAgedItems(true,  item);  b.addChangeListener(this);  ,// removedAgedItems(true, item); b.addChangeListener(this);
patch is same with buggy,540,replace,, //  this.data.add(item,  new  LinkedList  <  TimeSeriesDataItem>());  ,// this.data.add(item, new LinkedList < TimeSeriesDataItem>());
compilation error,540,replace,[CE] illegal start of expression, //  deleteAgedItems(true);  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))!=  this.data.remove;  ,if(added) { // deleteAgedItems(true); this.data.add(item); if(notify) { fireSeriesChanged(); } ; fiance
patch is same with buggy,540,replace,, //  this.data.getAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  delt  ,// this.data.getAgedItems(true); if(notify) { fireSeriesChanged(); } ; delt
patch is same with buggy,540,replace,, //  this.data.getAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  delt  , 
patch is same with buggy,540,replace,, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  ,// removeAgedItems(false, item); if(notify) { fireSeriesChanged(); } ; bodied ; } ; } ; } ; } ; } ; } ; } ; } ;
patch is same with buggy,540,replace,, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  ,// removeAgedItems(false, item); if(notify) { fireSeriesChanged(); } ; bodied ; } ; } ; } ; } ; } ; } ; } ; } ;
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bod ;
compilation error,540,add,[CE] illegal start of expression, ,if(added) { // removeAgedItems(false); this.data.add(item); if(notify) { fireSeriesChanged(); slated ; }
compilation error,540,add,[CE] cannot find symbol bod, ,bod = Collections.singleton(this.data);
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify)  induced  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString()  ,// deleteAgedItems(false); if(notify) induced fireSeriesChanged(); && item.getDataItemCount() > this.maximumItemCount); b.append(item.getPeriod().toString()
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod())).equals(this.data.get(item.getPeriod()))  ,// deleteAgedItems(true); && item.getPeriod().getTime().equals(this.data.get(item.getPeriod())).equals(this.data.get(item.getPeriod()))
patch is same with buggy,540,replace,, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;  }  ;  hopped?  b.toString()  :  null;  ,// removeAgedItems(true, item); if(notify) { fireSeriesChanged(); } ; bodied ; b.toString() : null; } ; hopped? b.toString() : null;
patch is same with buggy,540,replace,, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;  }  ;  hopped?  b.toString()  :  null;  , 
patch is same with buggy,540,replace,, //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ,// this.data.removeAgedItems(true); if(notify) { fireSeriesChanged(); bodied
patch is same with buggy,540,replace,, //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  slated  ;  bodied  ,// this.data.removeAgedItems(true); if(notify) { fireSeriesChanged(); slated ; bodied
patch is same with buggy,540,replace,, //  this.data.add(item);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  b.toString();  ,// this.data.add(item); if(notify) { fireSeriesChanged(); hopped && item.getPeriod().startsWith(this.maximumItemCount)) { b.toString(); b.toString();
compilation error,173,add,[CE] cannot find symbol domino, ,this.domino = domain + DEFAULT_DOMAIN_DESCRIPTION + 6;
compilation error,173,add,[CE] cannot find symbol domAIN, ,this.domAIN = domain + DEFAULT_DOMAIN_DESCRIPTION + 6;
patch is same with buggy,880,replace,, System.err.println( "Requires  begin  <=  0   ".length());  ,System.err.println("Requires begin <= 0 ".length());
compilation error,174,add,[CE] cannot find symbol minimumItemAge, ,this.minimumItemAge = getMaximumItemAge() + 1;
compilation error,174,add,[CE] cannot find symbol minimumItemAge, ,this.minimumItemAge = getMinimumItemAge() + 1;
patch is same with buggy,540,replace,, //  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.add(item);  }    ,// removedAgedItems(true); if(notify) { fireSeriesChanged(); && item.getPeriod().getTime().equals(this.timePeriodClass.getName())) { this.data.add(item); }
patch is same with buggy,540,replace,, //  this.data.add(item);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  b.toString();  ,// this.data.add(item); if(notify) { fireSeriesChanged(); rang && item.getPeriod().startsWith(this.maximumItemCount)) { b.toString(); b.toString();
patch is same with buggy,540,replace,, //  this.data.add(item);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  b.toString();  ,// this.data.add(item); if(notify) { fireSeriesChanged(); rang && item.getPeriod().startsWith(this.maximumItemCount)) { b.toString(); b.toString();
patch is same with buggy,173,replace,, this.maximumItemCount  =  Integer.MAX_VALUE  /  2  +  1;  ,this.maximumItemCount = Integer.MAX_VALUE / 2 + 1;
compilation error,174,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = this.maximumItemCount / 3;
compilation error,540,add,[CE] not a statement, ,rang && item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))
compilation error,174,replace,[CE] cannot find symbol minimumItemAge, this.maximumItemAge  =  getMaximumItemAge()  +  1;  ,this.minimumItemAge = getMaximumItemAge() - 1;
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  ,// removeAgedItems(false); if(notify)) { fireSeriesChanged(); & b.toString() : null; } ; & b.toString() : null;
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  ,if(added) { // removeAgedItems(false); if(notify)) { fireSeriesChanged(); & b.toString() : null; } ; & b.toString() : null; }
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  , 
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString()  ,// deleteAgedItems(false); if(notify) consulted fireSeriesChanged(); && item.getDataItemCount() > this.maximumItemCount); b.append(item.getPeriod().toString()
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bodied ; & b.toString() : null; bodied
patch is same with buggy,174,replace,, if(range!=  null)  {  this.domain  =  domain;  }  ,if(range!= null) { this.domain = domain; }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  }  ;  &  ,if(added) { // removeAgedItems(false); if(notify)) { fireSeriesChanged(); } ; }
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  bodied  ;  &  b.toString()  :  null;  ,// removeAgedItems(false); if(notify) { fireSeriesChanged(); & b.toString() : null; bodied ; & b.toString() : null;
compilation error,540,replace,[CE] illegal start of expression, //  deleteAgedItems(false);  this.data.add(item,  getItemCount()  -  1);  ,if(added) { // deleteAgedItems(true); this.data.add(item, this.maximumItemCount); if(notify) { fireSeriesChanged(); } ; }
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(1);  bodied  ,// deleteAgedItems(false); if(notify) { fireSeriesChanged(); && item.getPeriod()!= this.data.get(item.getPeriod())) { this.data.remove(1); bodied
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(1);  bodied  , 
patch is same with buggy,540,replace,, //  removedAllUnagedItems(false);  this.data.add(item);  ,// removedAllUnagedItems(false); this.data.add(item);
patch is same with buggy,174,replace,, this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  ,this.range = range; this.timePeriodClass = timePeriodClass;
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  nu  ,if(added) { // removeAgedItems(false); if(notify)) { fireSeriesChanged(); } ; b.toString() : null; bodied ; b.toString() : null; slated ;
patch is same with buggy,173,replace,, this.domain  =  domain  + "DEFAULT_DOMAIN_DESCRIPTION  = "  +  DEFAULT_RANGE_DESCRIPTION;  ,this.domain = domain +" DEFAULT_DOMAIN_DESCRIPTION = " + DEFAULT_RANGE_DESCRIPTION;
patch is same with buggy,173,replace,, this.domain  =  domain  + "DEFAULT_DOMAIN_DESCRIPTION  = "  +  DEFAULT_RANGE_DESCRIPTION;  ,this.domain = domain +"DEFAULT_DOMAIN_DESCRIPTION = " + DEFAULT_RANGE_DESCRIPTION;
patch is same with buggy,173,replace,, this.domain  =  domain  + "DEFAULT_DOMAIN_DESCRIPTION  = "  +  DEFAULT_RANGE_DESCRIPTION;  , 
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(true,  true);  if(notify))  {  fireSeriesChanged();  }  ;  }  ,if(added) { // removedAgedItems(true, true); if(notify)) { fireSeriesChanged(); } ; }
patch is same with buggy,540,replace,, //  removeAgedItems(true);  this.data.add(item,  getItemCount()  -  1);  ,// removeAgedItems(true); this.data.add(item, getItemCount() - 1);
patch is same with buggy,880,replace,, System.err.println( "Requires  start  constituted  start.   ");  ,System.err.println("Requires start constituted start. ");
patch is same with buggy,880,replace,, System.err.println( "Requires  start  constituted  start.   ");  ,System.err.println( "Requires start constituted start. ");
patch is same with buggy,880,replace,, System.err.println( "Requires  start  constituted  start.   ");  , 
patch is same with buggy,540,replace,, //  this.data.addAgedItem(false);  ,// this.data.addAgedItem(false);
patch is same with buggy,880,replace,, System.err.println( "Requires  end  =  1.0 ");  ,System.err.println("Requires end = 1.0");
patch is same with buggy,880,replace,, System.err.println( "Requires  end  =  1.0 ");  ,System.err.println("Requires end = 1.0 ");
compilation error,540,add,[CE] ';' expected, ,if(!added) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); } ; bodied
compilation error,540,add,[CE] not a statement, ,if(!added) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); bodied ; }
compilation error,540,add,[CE] ';' expected, ,if(!added) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); } ; delt
patch is same with buggy,174,replace,, this.range  =  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION  +  1;  ,this.range = DEFAULT_DOMAIN_DESCRIPTION + DEFAULT_RANGE_DESCRIPTION + 1;
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bod ; bod : b.toString()!= this.data.get(item); b.toString(); b.toString(); }  } 
compilation error,173,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = Integer.MAX_VALUE / 2 + 1;
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  bodied  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.  ,// deleteAgedItems(true); bodied && item.getPeriod().getTime().equals(this.data.get(item.getPeriod())) { this.data.
compilation error,540,replace,[CE] illegal start of expression, //  addAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  ,if(item.getSeriesCount() > 1) { // removeAgedItems(false); if(notify)) { fireSeriesChanged(); } ;
patch is same with buggy,540,replace,, //  this.data.getAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  delt  ,// this.data.getAgedItems(false); if(notify) { fireSeriesChanged(); } ; delt
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(true);  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove;  ,if(added) { // deleteAgedItems(true); this.data.add(item); if(notify) { fireSeriesChanged(); } ;
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  this.data.remove(item);  if(notify)  {  fireSeriesChanged();  bodied  ,// deleteAgedItems(true); this.data.remove(item); if(notify) { fireSeriesChanged(); bodied
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  bodied  ;  b.toString()  :  null;  }  ;  b.toString()  :  ,// removeAgedItems(false); if(notify)) { fireSeriesChanged(); } ; b.toString() : null; bodied ; b.toString() : null; } ; b.toString() :
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  delt  ,// deleteAgedItems(true); this.data.add(item); if(notify) { fireSeriesChanged(); } ; delt
patch is same with buggy,540,replace,, //  removeAgedItems(false);  this.data.add(item,  this.maximumItemCount);  if(notify)  {  fireSeriesChanged();  }    ,// removeAgedItems(false); this.data.add(item, this.maximumItemCount); if(notify) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(true,  item);  b.addChangeListener(this);  ,if(added) { // removedAgedItems(true, true); if(notify)) { fireSeriesChanged(); } ; fiance
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.itemCount)) { // removedAllAgedItems(false); if(notify)) { fireSeriesChanged(); } ; delt
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().size() > 0) { // removedAllAgedItems(false); if(notify)) { fireSeriesChanged(); } ; delt
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  bodied  ;  b.toString()  :  null;  }  ;  b.toString()  :  nu  ,if(item.getItemCount() > 1) { // removeAgedItems(false); if(notify)) { fireSeriesChanged(); } ; b.toString() : null; slated ; b.toString() : null; }
patch is same with buggy,880,replace,, System.err.println( "Requires  end  <=  0   ");  ,System.err.println("Requires end <= 0 ");
patch is same with buggy,880,replace,, System.err.println( "Requires  end  <=  0   ");  , 
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ,// removeAgedItems(false); if(notify)) { fireSeriesChanged(); bodied ; b.toString() : null; }
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ,// removeAgedItems(false); if(notify)) { fireSeriesChanged(); bodied ; b.toString() : null; }
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,if(item.getPeriod().size() > 0) { // removedAgedItems(false); if(notify)) { fireSeriesChanged(); } ; delt
patch is same with buggy,880,replace,, System.err.println( "Requires  end? "  +  start  + "  : ");  ,System.err.println("Requires end? " + start +" :");
patch is same with buggy,880,replace,, System.err.println( "Requires  end? "  +  start  + "  : ");  , 
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); rang && item.getPeriod().getTime().equals(this.timePeriodClass.getName())) { this.data.add(item); } 
patch is same with buggy,174,replace,, this.maximumItemCount  =  this.maximumItemCount  *  2  +  1;  ,this.maximumItemCount = this.maximumItemCount * 2 + 1;
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  null;  ,if(item.getItemCount() > 1) { // removeAgedItems(false); if(notify) { fireSeriesChanged(); } ; b.toString() : null; slated ; b.toString() : null; }
patch is same with buggy,540,replace,, //  removedAllAgedItems(false,  false);  if(notify)  {  fireSeriesChanged();  }    ,// removedAllAgedItems(false, false); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); limb ; Afterward if(notify) { fireSeriesChanged(); figured ;
patch is same with buggy,174,replace,, if(timePeriodClass  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  timePeriodClass  =  timePeriodClass;  }  ,if(timePeriodClass == null) { this.domain = domain; } else { this.range = range; timePeriodClass = timePeriodClass; }
compilation error,173,add,[CE] possible loss of precision, ,this.maximumItemCount = Long.MAX_VALUE / 10;
compilation error,173,add,[CE] cannot find symbol minimumItemAge, ,this.minimumItemAge = Long.MAX_VALUE / 10;
patch is same with buggy,540,replace,, //  removeAgedItems(true);  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove;  ,// removeAgedItems(true); rang && item.getPeriod().getTime().equals(this.timePeriodClass.getName())) { this.data.remove;
compilation error,540,replace,[CE] illegal start of expression, //  deleteAgedItems(true);  this.data.remove(item);  if(notify)  {  fireSeriesChanged();  bodied  ,if(added) { // deleteAgedItems(false); this.data.add(item); if(notify)) { fireSeriesChanged(); } ; }
patch is same with buggy,540,replace,, //  removedAgedItems(true;  if(notify)  {  fireSeriesChanged();  }  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod()).toString();  ,// removedAgedItems(true; if(notify) { fireSeriesChanged(); } && item.getDataItemCount() > this.maximumItemCount); b.append(item.getPeriod()).toString();
patch is same with buggy,534,replace,, if(!item.getPeriod().equals( "/ "))  {  ,if(!item.getPeriod().equals("/")) {
patch is same with buggy,534,replace,, if(!item.getPeriod().equals( "/ "))  {  , 
patch is same with buggy,540,replace,, //  removedAllAgedItems(false,  false);  if(notify)  {  fireSeriesChanged();  }  ;  }    ,// removedAllAgedItems(false, false); if(notify) { fireSeriesChanged(); } ; }
patch is same with buggy,174,replace,, this.maximumItemAge  =  Math.max(0,  0);  ,this.maximumItemAge = Math.max(0, 0);
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  ,if(item!= null) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); bodied ; }
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  ,if(item!= null) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); } ; bodied
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify)!=  fireSeriesChanged();  ,// deleteAgedItems(false); if(notify)!= fireSeriesChanged();
compilation error,174,add,[CE] cannot find symbol minimumItemAge, ,this.minimumItemAge = maximumItemAge + 1;
patch is same with buggy,540,replace,, //  this.data.addAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ,// this.data.addAgedItems(true); if(notify) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  ,if(added) { // removeAgedItems(false); if(notify) { fireSeriesChanged(); } ; b.toString() : null; slated ;
compilation error,540,add,[CE] illegal start of expression, ,if(item!= null) { // deleteAgedItems(false); this.data.add(item); if(added) { fireSeriesChanged(); } ; }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  >>  ;  ,if(added) { // removedAllAgedItems(false); if(notify)) { fireSeriesChanged(); } ; fiance
compilation error,540,add,[CE] illegal start of expression, ,if(notify)) { fireSeriesChanged(); bodied ; bodied? b.toString() : null; bodied ; bodied? b.toString() : null; Possibly
compilation error,540,add,[CE] illegal start of expression, ,if(notify)) { fireSeriesChanged(); bodied ; bodied? b.toString() : null; } ; bodied? b.toString() : null; Possibly
patch is same with buggy,540,replace,, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  boolean!  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b  ,// removeAgedItems(true); if(notify) { fireSeriesChanged(); } ; hopped ; boolean! notify = b.toString()!= this.data.get(item); b.toString(); b
patch is same with buggy,540,replace,, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  bod  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  }  ,// removeAgedItems(true); if(notify) { fireSeriesChanged(); bodied ; bod ; boolean notify = b.toString()!= this.data.get(item); b.toString(); }
compilation error,540,add,[CE] illegal start of expression, ,if(added) { // deleteAgedItems(false); if(notify)) { fireSeriesChanged(); } ; }
compilation error,174,add,[CE] incompatible types, ,this.maximumItemCount = DEFAULT_DOMAIN_DESCRIPTION + DEFAULT_RANGE_DESCRIPTION + 1;
compilation error,174,add,[CE] bad operand types for binary operator '-', ,this.maximumItemCount = DEFAULT_DOMAIN_DESCRIPTION + DEFAULT_RANGE_DESCRIPTION - 1;
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove;  hopped  &&  item.getPeriod  ,// deleteAgedItems(true); hopped && item.getPeriod().getTime().equals(this.timePeriodClass.getName())) { this.data.remove; hopped && item.getPeriod
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove;  hopped  &&  item.getPeriod  ,// deleteAgedItems(true); hopped && item.getPeriod().getTime().equals(this.timePeriodClass.getName())) { this.data.remove; hopped && item.getPeriod
compilation error,174,add,[CE] illegal start of expression, ,if(timePeriodClass == null) { this.domain = domain; if(timePeriodClass == null) { this.domain = domain; }
compilation error,174,add,[CE] illegal start of expression, ,if(timePeriodClass!= null) { this.domain = domain; if(timePeriodClass == null) { this.domain = domain; }
patch is same with buggy,540,replace,, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  bodied  ;  , 
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); figured ; && item.getPeriod()!= this.data.get(item.getPeriod())) { this.data.remove(0); figured
patch is same with buggy,173,replace,, this.maximumItemCount  =  Integer.MAX_VALUE  /  10  +  1;  ,this.maximumItemCount = Integer.MAX_VALUE / 10 + 1;
compilation error,540,replace,[CE] illegal start of expression, //  deleteAgedItems(true);  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))!=  this.data.remove;  ,if(added) { // deleteAgedItems(false); this.data.add(item); if(notify) { fireSeriesChanged(); } ; fiance
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); limb if(notify) { fireSeriesChanged(); bodied if(notify) { fireSeriesChanged(); } ; bodied if(notify) { fireSeriesChanged(); }
patch is same with buggy,174,replace,, this.maximumItemCount  =  Integer.MIN_VALUE  /  2  +  1;  ,this.maximumItemCount = Integer.MIN_VALUE / 2 + 1;
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bod  ;  bod?  bod  :  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  }    ,if(item.getPeriod() > this.maximumItemCount) { // removeAgedItems(false); if(notify)) { fireSeriesChanged(); bodied ; b.toString() : null; } ;
patch is same with buggy,174,replace,, if(domain!=  null  &&  range!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  ,if(domain!= null && range!= null) { this.domain = domain; this.range = range; }
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))!=  this.data.  ,// deleteAgedItems(true); if(notify) { fireSeriesChanged(); hopped && item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))!= this.data.
patch is same with buggy,880,replace,, System.err.println( "Requires  start  %  2  ==  0.   ");  ,System.err.println("Requires start % 2 == 0. ");
patch is same with buggy,880,replace,, System.err.println( "Requires  start  %  2  ==  0.   ");  ,System.err.println("Requires start % 2 == 0.");
patch is same with buggy,540,replace,, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  ,// removeAgedItems(true, item); if(notify) { fireSeriesChanged(); } ; bodied? b.toString() : null;
patch is same with buggy,540,replace,, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  ,// removeAgedItems(true, item); if(notify) { fireSeriesChanged(); } ; bodied? b.toString() : null;
patch is same with buggy,540,replace,, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  ,// removeAgedItems(false, item); if(notify) { fireSeriesChanged(); bodied ; bodied if(notify) { fireSeriesChanged(); } ; bodied ;
patch is same with buggy,540,replace,, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  ,// removeAgedItems(false, item); if(notify) { fireSeriesChanged(); bodied ; bodied if(notify) { fireSeriesChanged(); } ; bodied ;
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  ,// removeAgedItems(false); if(notify) { fireSeriesChanged(); } ; bodied ;
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  ,// removeAgedItems(false); if(notify) { fireSeriesChanged(); } ; bodied ;
compilation error,540,add,[CE] illegal start of expression, ,if(notify)) { fireSeriesChanged(); bodied ; b.toString() : null; } ;
compilation error,174,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = maximumItemCount / 4;
compilation error,174,add,[CE] cannot find symbol itemCount, ,this.itemCount = maximumItemCount / 4;
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  slated  ;  b.toString()  :  null;  }  ;  b.toString()  :  ,// removeAgedItems(false); if(notify) { fireSeriesChanged(); } ; b.toString() : null; slated ; b.toString() : null; } ; b.toString() :
patch is same with buggy,540,replace,, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  ,// removeAgedItems(true, item); if(notify) { fireSeriesChanged(); } ; b.toString() : null; }
compilation error,540,add,[CE] illegal start of expression, ,if(added) { // removeAgedItems(false); if(notify) { fireSeriesChanged(); } ; & b.toString() : null; & b.toString() : null; bodied
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  this.data.add(item,  this.maximumItemCount);  if(notify)  {  fireSeriesChanged();  }  ;  }    ,if(added) { // removeAgedItems(false); this.data.add(item, this.maximumItemCount); if(notify) { fireSeriesChanged(); } ; }
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bodied ; b.toString() : null; Afterward
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify)  propagate  fireSeriesChanged();  bodied  ,// deleteAgedItems(false); if(notify) propagate fireSeriesChanged(); bodied
patch is same with buggy,540,replace,, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  bod  ;  ,// removeAgedItems(true); if(notify) { fireSeriesChanged(); bodied ; bod ;
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  if(notify)  propag  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.  ,// deleteAgedItems(true); if(notify) propag fireSeriesChanged(); && item.getPeriod().getTime().equals(this.data.get(item.getPeriod())) { this.data.
patch is same with buggy,174,replace,, this.maximumItemCount  =  Integer.MAX_VALUE  *  2;  ,this.maximumItemCount = Integer.MAX_VALUE * 2;
compilation error,540,replace,[CE] illegal start of expression, //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ,if(added) { // removeAgedItems(true); this.data.add(item); if(notify) { fireSeriesChanged(); } ; &&!b.append('ufffd'); }
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); hopped && item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))
compilation error,540,replace,[CE] illegal start of expression, //  deleteAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  delt  ,if(added) { // deleteAgedItems(false); this.data.add(item); if(notify) { fireSeriesChanged(); } ; delt
patch is same with buggy,540,replace,, //  addAgedItems(false);  if(added)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  ,// addAgedItems(false); if(added) { fireSeriesChanged(); bodied ; b.toString() : null; } ;
patch is same with buggy,540,replace,, //  addAgedItems(false);  if(added)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  ,// addAgedItems(false); if(added) { fireSeriesChanged(); bodied ; b.toString() : null; } ;
compilation error,173,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = Integer.MAX_VALUE % 10;
compilation error,534,add,[CE] illegal start of expression, ,if(!item.getPeriod().equals( "/ ")) }
compilation error,174,add,[CE] illegal start of expression, ,if(domain!= null) { this.domain = domain; >>
compilation error,540,add,[CE] illegal start of expression, ,if(added) { // removeAgedItems(true); this.data.add(item); if(notify) { fireSeriesChanged(); } ; delt
patch is same with buggy,173,replace,, this.maximumItemCount  =  Integer.MIN_VALUE  /  2;  ,this.maximumItemCount = Integer.MIN_VALUE / 2;
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bodied ; bodied? boolean notify = b.toString()!= this.data.get(item); b.toString(); b.toString(); b.toString(); } 
compilation error,540,add,[CE] illegal start of expression, ,if(added) { // removedAllAgedItems(false); this.data.add(item); if(notify) { fireSeriesChanged(); } ; }
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,if(item!= null) { // removedAgedItems(true); item.addChangeListener(this); if(notify) { fireSeriesChanged(); } ; delt
compilation error,540,add,[CE] illegal start of expression, ,if(notify) { fireSeriesChanged(); && item.getPeriod()!= this.data.get(item.getPeriod())) { this.data.remove(1); bodied
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  bodied  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))!=  this.data.  ,// deleteAgedItems(true); bodied && item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))!= this.data.
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(false);  item.addChangeListener(this);  if(notify)  {  fireSeriesChanged();  }    ,if(added) { // removedItems(false); this.data.add(item); if(notify) { fireSeriesChanged(); } ; }
compilation error,174,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = this.maximumItemCount / 2 + 1;
compilation error,174,add,[CE] cannot find symbol itemCount, ,this.itemCount = this.itemCount / 2 + 1;
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bodied ; hopped ; boolean! notify = b.toString()!= this.data.get(item); b.toString(); b.
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  nu  , 
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bod ;? bod : b.toString()!= this.data.get(item); b.toString(); b.toString(); }  } 
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,if(notify) { fireSeriesChanged(); >>
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); hopped ; bodied ; slated ; slated ;
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  >>  ;  ,if(item.getSeriesCount() > 1) { // removeAgedItems(false, item); if(notify) { fireSeriesChanged(); } ;
patch is same with buggy,540,replace,, //  this.data.add(item,  this.timePeriodClass);  ,// this.data.add(item, this.timePeriodClass);
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); hopped && item.getPeriod().startsWith(this.maximumItemCount)) { b.toString(); b.toString();
compilation error,540,add,[CE] illegal start of expression, ,if(notify) { fireSeriesChanged(); } ); } if(notify) { fireSeriesChanged(); } ; }? b.toString() : null; }
compilation error,540,add,[CE] illegal start of expression, ,if(notify) { fireSeriesChanged(); } ); } if(notify) { fireSeriesChanged(); } ; }
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bodied ; bodied ; bodied if(notify) { fireSeriesChanged(); } ; bodied ; bodied if(notify) { fireSeriesChange
patch is same with buggy,540,replace,, //  removedUnagedItems(true);  ,// removedUnagedItems(true);
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  bodied  ;  b.toString()  :  null;  }  ;  b.toString()  :  ,// removeAgedItems(false); if(notify) { fireSeriesChanged(); } ; b.toString() : null; bodied ; b.toString() : null; } ; b.toString() :
patch is same with buggy,540,replace,, //  this.data.addAgedItems(false,  false);  ,// this.data.addAgedItems(false, false);
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))!=  this.data.remove;  ,// deleteAgedItems(true); rang && item.getPeriod().getTime().equals(this.timePeriodClass.getName()))!= this.data.remove;
compilation error,173,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = Integer.MAX_VALUE / 10 + 1;
patch is same with buggy,540,replace,, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  bodied  ,// removedAgedItems(true); this.data.add(item); if(notify) { fireSeriesChanged(); bodied
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(added))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  ,// removeAgedItems(false); if(added)) { fireSeriesChanged(); bodied ; b.toString() : null; } ;
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(added))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  ,// removeAgedItems(false); if(added)) { fireSeriesChanged(); bodied ; b.toString() : null; } ;
compilation error,540,replace,[CE] illegal start of expression, //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  slated  ;  bodied  ,if(added) { // this.data.removeAgedItems(false); if(notify)) { fireSeriesChanged(); } ; delt
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify)  propag  fireSeriesChanged();  fought  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  ,// deleteAgedItems(false); if(notify) propag fireSeriesChanged(); fought && item.getPeriod().getTime().equals(this.timePeriodClass.getName())) { this.data.remove
compilation error,174,replace,[CE] bad operand types for binary operator '/', this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  3;  ,this.range = range + DEFAULT_DOMAIN_DESCRIPTION / 3;
patch is same with buggy,174,replace,, this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  3;  , 
patch is same with buggy,540,replace,, //  this.data.addAgedItems(false,  false);  ,// this.data.addAgedItems(false, false);
patch is same with buggy,880,replace,, System.err.println( "Requires  start  %  2  <=  0.   ");  ,System.err.println("Requires start % 2 <= 0. ");
patch is same with buggy,880,replace,, System.err.println( "Requires  start  %  2  <=  0.   ");  ,System.err.println( "Requires start % 2 <= 0. ");
patch is same with buggy,540,replace,, //  removedAgedItems(false);  item.addChangeListener(this);  if(notify)  {  fireSeriesChanged();  }    ,// removedAgedItems(false); item.addChangeListener(this); if(notify) { fireSeriesChanged(); }
patch is same with buggy,540,replace,, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  &  hopped  ;  boolean  alert  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  ,// removeAgedItems(true); if(notify) { fireSeriesChanged(); & hopped ; boolean alert = b.toString()!= this.data.get(item); b.toString(); b.toString();
compilation error,174,add,[CE] illegal start of expression, ,if(this.domain!= null) { this.domain = domain; this.timePeriodClass = timePeriodClass; >>
compilation error,540,add,[CE] illegal start of expression, ,if(added) { // deleteAgedItems(false); this.data.add(item, this.maximumItemCount); if(notify) { fireSeriesChanged(); } ;
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bodied else if(getItemCount() > this.maximumItemCount) { this.data.remove(0); }
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); rang else if(getItemCount() > this.maximumItemCount) { this.data.remove(0); }
patch is same with buggy,540,replace,, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;  }  ;  ,// removeAgedItems(true, item); if(notify) { fireSeriesChanged(); } ; bodied ; b.toString() : null; } ;
patch is same with buggy,540,replace,, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;  }  ;  ,// removeAgedItems(true, item); if(notify) { fireSeriesChanged(); } ; bodied ; b.toString() : null; } ;
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify)  propag  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  ,// deleteAgedItems(false); if(notify) propag fireSeriesChanged(); hopped && item.getPeriod().getTime().equals(this.timePeriodClass.getName())) { this.data.remove
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify)  propag  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  ,// deleteAgedItems(false); if(notify) propag fireSeriesChanged(); hopped && item.getPeriod().getTime().equals(this.timePeriodClass.getName())) { this.data.remove
patch is same with buggy,540,replace,, //  this.data.removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  slated  ;  }  ,// this.data.removeAgedItems(true); if(notify)) { fireSeriesChanged(); slated ; }
compilation error,540,replace,[CE] not a statement, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,if(notify) { fireSeriesChanged(); bodied ; bodied if(notify) { fireSeriesChanged(); } ; bodied ; bodied if(notify) { fireSeriesChange
compilation error,174,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = Integer.MIN_VALUE / 2 + 1;
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  &  b.toString()  :  null;  ,if(added) { // removeAgedItems(false); if(notify) { fireSeriesChanged(); b.toString() : null; } ; & b.toString() : null; }
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  }  ;  &  ,// removeAgedItems(false); if(notify)) { fireSeriesChanged(); } ; & b.toString() : null; } ; & b.toString() : null; } ; &
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  }  ;  &  ,// removeAgedItems(false); if(notify)) { fireSeriesChanged(); } ; & b.toString() : null; } ; & b.toString() : null; } ; &
compilation error,174,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = Math.max(10, 0);
compilation error,174,add,[CE] cannot find symbol MaximumItemCount, ,this.MaximumItemCount = Math.max(10, 0);
patch is same with buggy,880,replace,, System.err.println( "Requires  end  constituted  start.   ");  ,System.err.println("Requires end constituted start. ");
patch is same with buggy,880,replace,, System.err.println( "Requires  end  constituted  start.   ");  ,System.err.println( "Requires end constituted start. ");
patch is same with buggy,880,replace,, System.err.println( "Requires  end  constituted  start.   ");  , 
patch is same with buggy,540,replace,, //  addAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ,// addAgedItems(false); if(notify) { fireSeriesChanged(); bodied ; b.toString() : null; }
compilation error,174,add,[CE] not a statement, ,if(timePeriodClass == null) { this.domain = domain; } else { this.range = range; meanwhile
compilation error,174,replace,[CE] cannot find symbol minimumItemCount, this.maximumItemCount  =  this.maximumItemCount  *  2  +  1;  ,this.minimumItemCount = maximumItemCount * 2 / 1;
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  this.data.add(item,  getItemCount()  -  1);  ,// deleteAgedItems(false); this.data.add(item, getItemCount() - 1);
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(false);  item.addChangeListener(this);  if(notify)  {  fireSeriesChanged();  }    ,if(added) { // removedItems(true); this.data.add(item); if(notify) { fireSeriesChanged(); } ; }
patch is same with buggy,540,replace,, //  addAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  ,// addAgedItems(false); if(notify) { fireSeriesChanged(); bodied ; b.toString() : null; } ;
patch is same with buggy,540,replace,, //  addAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  ,// addAgedItems(false); if(notify) { fireSeriesChanged(); bodied ; b.toString() : null; } ;
patch is same with buggy,174,replace,, this.domain  =  domain;  if(timePeriodClass  ==  null)  {  this.domain  =  domain;  }  ,this.domain = domain; if(timePeriodClass == null) { this.domain = domain; }
patch is same with buggy,880,replace,, System.err.println( "Requires  start  <  0.   ");  ,System.err.println("Requires start < 0. ");
patch is same with buggy,540,replace,, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  //  do  not  notify  any,  because  that  //  happens  next  anyway...  ,if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); // removeAgedItems(false); // do not notify any, because that // happens next anyway...
compilation error,540,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  //  do  not  notify  any,  because  that  //  happens  next  anyway...  ,if(notify) { fireSeriesChanged(); bodied ; // removeAgedItems(false); // removeAgedItems(false); // do not notify any, because that // happens next anyway...
compilation error,540,add,[CE] illegal start of expression, ,if(notify)) { fireSeriesChanged(); } ; // removeAgedItems(false); // removeAgedItems(false); // do not notify any, because that // happens next anyway...
compilation error,540,add,[CE] illegal start of expression, ,if(added) { // removedAgedItems(true, true); if(notify) { fireSeriesChanged(); } ; fiance
patch is same with buggy,880,replace,, System.err.println( "Requires  start  %  2  >=  0   ".length());  ,System.err.println("Requires start % 2 >= 0 ".length());
patch is same with buggy,174,replace,, this.maximumItemCount  =  this.maximumItemCount  /  2  +  1;  ,this.maximumItemCount = this.maximumItemCount / 2 + 1;
patch is same with buggy,174,replace,, this.maximumItemCount  =  Math.max(1,  0);  , 
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,if(added) { // removedAgedItems(false); this.data.add(item); if(notify) { fireSeriesChanged(); } ; }
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  bodied  ;  b.toString()  :  null;  }  ;  b.toString()  :  nu  ,// removeAgedItems(false); if(notify) { fireSeriesChanged(); } ; b.toString() : null; bodied ; b.toString() : null; } ; b.toString() : nu
compilation error,540,add,[CE] ';' expected, ,if(item!= null) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); } ; delt
compilation error,540,add,[CE] ';' expected, ,if(item == null) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); } ; delt
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); figured && item.getPeriod() > this.maximumItemCount); b.append(item.getPeriod().toString());
compilation error,174,replace,[CE] bad operand types for binary operator '/', this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  3;  ,this.range = domain + DEFAULT_DOMAIN_DESCRIPTION / 3;
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  ,if(added) { // removedAgedItems(false); if(notify)) { fireSeriesChanged(); } ; bodied
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(true);  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove;  ,if(added) { // deleteAgedItems(false); this.data.add(item); if(notify) { fireSeriesChanged(); } ;
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  &  b.toString()  :  null;  ,if(added) { // removeAgedItems(true); if(notify) { fireSeriesChanged(); & b.toString() : null; } ; & b.toString() : null; }
compilation error,880,replace,[CE] , System.err.println( "Requires  start  %  2  ==  0   ".length());  ,System.err.println("Requires start - 1 ").length());
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  figured  &&  item.getDataItemCount()  >  this.maximumItemCount;  b.append(item.getPeriod().toString());  ,// deleteAgedItems(false); figured && item.getDataItemCount() > this.maximumItemCount; b.append(item.getPeriod().toString());
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  this.data.add(item);  if(added)  {  fireSeriesChanged();  bodied  ,// deleteAgedItems(false); this.data.add(item); if(added) { fireSeriesChanged(); bodied
patch is same with buggy,174,replace,, if(this.domain!=  null)  {  this.range  =  domain;  this.timePeriodClass  =  timePeriodClass;  }  ,if(this.domain!= null) { this.range = domain; this.timePeriodClass = timePeriodClass; }
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); figured && item.getDataItemCount() > this.maximumItemCount); b.append(item.getPeriod().toString());
patch is same with buggy,174,replace,, if(this.range!=  null)  {  this.range  =  domain;  this.timePeriodClass  =  timePeriodClass;  }  ,if(this.range!= null) { this.range = domain; this.timePeriodClass = timePeriodClass; }
patch is same with buggy,174,replace,, this.maximumItemAge  =  maximumItemAge  +  1;  ,this.maximumItemAge = maximumItemAge + 1;
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  if(added)!=  fireSeriesChanged();  slated  ,if(item.getPeriod().startsWith("-")) { // removeAgedItems(true); if(notify)) { fireSeriesChanged(); } ;
patch is same with buggy,173,replace,, this.maximumItemCount  =  Integer.MAX_VALUE  *  2;  ,this.maximumItemCount = Integer.MAX_VALUE * 2;
patch is same with buggy,540,replace,, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  boolean  alert  =  b.toString()!=  this.data.get(item);  b.toString();  b.to  ,// removeAgedItems(true); if(notify) { fireSeriesChanged(); } ; hopped ; boolean alert = b.toString()!= this.data.get(item); b.toString(); b.to
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))!=  this.data.  , 
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bod ; bod? bod : bod
compilation error,174,add,[CE] cannot find symbol domino, ,this.domino = DEFAULT_DOMAIN_DESCRIPTION + DEFAULT_RANGE_DESCRIPTION + 2;
compilation error,174,add,[CE] not a statement, ,if(timePeriodClass!= null) { this.domain = domain; } else utilise timePeriodClass = timePeriodClass; }
patch is same with buggy,540,replace,, //  this.data.add(item);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  b.toString();  ,// this.data.add(item); if(notify) { fireSeriesChanged(); rang && item.getPeriod().startsWith(this.maximumItemCount)) { b.toString(); b.toString();
patch is same with buggy,540,replace,, //  removeAgedItems(true);  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  ,// removeAgedItems(true); && item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))
compilation error,540,add,[CE] illegal start of expression, ,if(added) { // removeAgedItems(false); if(notify)) { fireSeriesChanged(); } ; & b.toString() : null; & b.toString() : null; }
patch is same with buggy,174,replace,, if(timePeriodClass!=  null)  {  this.domain  =  domain;  }  else  {  timePeriodClass  =  timePeriodClass;  }  ,if(timePeriodClass!= null) { this.domain = domain; } else { timePeriodClass = timePeriodClass; }
compilation error,174,add,[CE] illegal start of expression, ,if(domain == null) { this.domain = domain; this.range = range; } else { timePeriodClass = timePeriodClass; >>
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  fiance  ,if(added) { // removeAgedItems(false); this.data.add(item); if(notify) { fireSeriesChanged(); } ;
compilation error,174,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = Integer.MAX_VALUE / 2 + 1;
compilation error,174,add,[CE] cannot find symbol itemCount, ,this.itemCount = Integer.MAX_VALUE / 2 + 1;
patch is same with buggy,540,replace,, //  this.data.getAgedItems(false);  if(notify))  {  fireSeriesChanged();  }    ,// this.data.getAgedItems(false); if(notify)) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(added) { // removeAgedItems(false, item); if(notify) { fireSeriesChanged(); limb if(notify) { fireSeriesChanged(); } ; bodied if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,* removedItems(); b.addChangeListener(this, item);
compilation error,174,replace,[CE] bad operand types for binary operator '/', if(this.domain  ==  null)  {  this.domain  =  domain;  }  else  {  timePeriodClass  =  timePeriodClass;  }  ,this.domain = domain + DEFAULT_DOMAIN_DESCRIPTION / 1;
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  bodied  ;  b.toString()  :  null;  }  ;  b.toString()  :  ,if(item.getItemCount() > 1) { // removeAgedItems(false); if(notify)) { fireSeriesChanged(); } ; b.toString() : null; bodied ; b.toString() : null; }
compilation error,540,add,[CE] illegal start of expression, ,if(added) { // deleteAgedItems(true); this.data.add(item); if(notify) { fireSeriesChanged(); } ; bodied
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,if(added) { // removedAgedItems(true); this.data.add(item); if(notify) { fireSeriesChanged(); } ; delt
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  &  ;  }  ,if(added) { // removeAgedItems(false); this.data.add(item); if(notify) { fireSeriesChanged(); } ; & ; ; }
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  ,// removeAgedItems(false); if(notify) { fireSeriesChanged(); bodied ;
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod() > this.maximumItemCount) { if(added) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod() > this.maximumItemCount) { if(!Added) { fireSeriesChanged(); }
patch is same with buggy,880,replace,, System.err.println( "Requires  start  %  2  ==  0   ".length());  ,System.err.println("Requires start % 2 == 0 ".length());
compilation error,880,replace,[CE] , System.err.println( "Requires  start  %  2  ==  0   ".length());  ,System.err.println("Requires start % 2 == 0 ").length());
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  b.addListener(this,  item);  ,// deleteAgedItems(true); b.addListener(this, item);
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify)  induced  fireSeriesChanged();  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString()  ,// deleteAgedItems(false); if(notify) induced fireSeriesChanged(); figured && item.getDataItemCount() > this.maximumItemCount); b.append(item.getPeriod().toString()
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  ,// removeAgedItems(false); if(notify)) { fireSeriesChanged(); } ; b.toString() : null; } ; b.toString() : null; } ; b.toString() :
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.to  ,// removeAgedItems(false); if(notify) { fireSeriesChanged(); } ; bodied? boolean notify = b.toString()!= this.data.get(item); b.toString(); b.to
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  fiance  ,if(notify) { fireSeriesChanged(); bod ; bod? bod! bod : bod
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  bodied  ,if(added) { // removedAgedItems(false); this.data.add(item); if(notify)) { fireSeriesChanged(); } ; }
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(added)!=  fireSeriesChanged();  slated  ,// removeAgedItems(false); if(added)!= fireSeriesChanged(); slated
compilation error,174,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = this.maximumItemCount * 2 + 1;
compilation error,174,add,[CE] cannot find symbol itemCount, ,this.itemCount = this.itemCount * 2 + 1;
patch is same with buggy,880,replace,, System.err.println( "Usage:  failed  to  add  cloned  item...   ");  ,System.err.println("Usage: failed to add cloned item...");
patch is same with buggy,880,replace,, System.err.println( "Usage:  failed  to  add  cloned  item...   ");  ,System.err.println("Usage: failed to add cloned item... ");
patch is same with buggy,880,replace,, System.err.println( "Usage:  failed  to  add  cloned  item...   ");  , 
patch is same with buggy,540,replace,, //  removeAgedItems(true);  if(notify))  propagate  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  ,// removeAgedItems(true); if(notify)) propagate fireSeriesChanged(); bodied ; b.toString() : null;
compilation error,540,replace,[CE] not a statement, //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ,if(notify) { fireSeriesChanged(); bod ; bod : bod
compilation error,174,add,[CE] cannot find symbol minimumItemAge, ,this.minimumItemAge = Math.max(0, 0);
patch is same with buggy,540,replace,, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  &  b.toString()  :  null;  ,// removeAgedItems(true); if(notify) { fireSeriesChanged(); bodied ; & b.toString() : null;
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  slated  ,// removeAgedItems(false); if(notify)) { fireSeriesChanged(); bodied ; b.toString() : null; slated
patch is same with buggy,880,replace,, System.err.println( "Requires  end  <<  0   ");  , 
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  if(added))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  ,if(item!= null) { // removeAgedItems(false); this.data.add(item); if(added) { fireSeriesChanged(); } ; }
compilation error,540,replace,[CE] illegal start of expression, //  addAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  ,if(added) { // removeAgedItems(false); this.data.add(item); if(notify) { fireSeriesChanged(); } ; delt
compilation error,174,add,[CE] no suitable method found for max(int), ,this.maximumItemCount = Math.max(this.maximumItemCount / 3);
compilation error,540,add,[CE] cannot find symbol, ,b.append(item.getItemCount());
compilation error,540,add,[CE] cannot find symbol, ,b.append(item.getItemCount() - this.maximumItemCount);
compilation error,540,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  //  do  not  notify  any,  because  that  //  happens  next  anyway...  ,if(notify) { fireSeriesChanged(); slated ; // removeAgedItems(false); & ; // removeAgedItems(false); } ;
compilation error,540,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  //  do  not  notify  any,  because  that  //  happens  next  anyway...  ,if(notify) { fireSeriesChanged(); slated ; // removeAgedItems(false); &! removeAgedItems(false); } ;
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  ,this.data.remove(0); limb ; slated ;
patch is same with buggy,540,replace,, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  boolean!  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b  ,// removeAgedItems(true); if(notify) { fireSeriesChanged(); } ; hopped ; boolean! notify = b.toString()!= this.data.get(item); b.toString(); b
compilation error,540,replace,[CE] not a statement, //  this.data.addAgedItem(false);  ,boolean : b.toString().equals(getItemCount() - this.maximumItemCount);
compilation error,540,add,[CE] ';' expected, ,boolean rang =(this.data.isEmpty())&& item.getPeriod().getTime().equals(this.timePeriodClass.getName()));
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(1);  bodied  ,// deleteAgedItems(false); if(notify) { fireSeriesChanged(); && item.getPeriod()!= this.data.get(item.getPeriod())) { this.data.remove(1); bodied
increase failing tests,540,add, [FE]  Size, ,this.data.remove(1);
compilation error,540,replace,[CE] not a statement, //  this.data.add(item);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  b.toString();  ,rang && item.getPeriod().startsWith(this.maximumItemCount)) { b.toString(); b.toString();
compilation error,540,replace,[CE] not a statement, //  this.data.add(item);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  b.toString();  ,rang && item.getPeriod().startsWith(this.maximumItemCount)) { b.toString(); b.toString(); rang
patch is same with buggy,540,replace,, //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString()  , 
compilation error,540,add,[CE] cannot find symbol b, ,this.data.add(item); b.addListener(this);
increase failing tests,540,add, [FE] AssertionFailedError, ,this.data.add(item); if(!added) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(true);  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove;  ,if(this.data.size() > this.maximumItemCount) { // deleteAgedItems(false); this.data.add(item); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] cannot find symbol b, ,this.data.add(item); b.toString();
compilation error,540,add,[CE] ';' expected, ,this.data.remove(0); b.toString() : null;
compilation error,540,add,[CE] not a statement, ,b.append(item.getPeriod().getTime()); hopped && item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))
compilation error,174,add,[CE] incompatible types, ,this.maximumItemAge = DEFAULT_DOMAIN_DESCRIPTION + DEFAULT_RANGE_DESCRIPTION + 1;
compilation error,540,add,[CE] cannot find symbol b, ,b.append(item.getPeriod().toString()); b.append(";n");
compilation error,540,add,[CE] cannot find symbol, ,this.data.removeAgedItems(false); b.addChangeListener(this);
compilation error,540,replace,[CE] not a statement, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,b.append(Item.getTime()); limb ; bodied if(notify) { fireSeriesChanged(); limb ; bodied ; Toujours ; Toujours ;
compilation error,540,replace,[CE] not a statement, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,b.append(item.getPeriod()); limb ; bodied if(notify) { fireSeriesChanged(); limb ; Toujours ; Toujours ;
patch is same with buggy,540,replace,, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  boolean  alert  =  b.toString()!=  this.data.get(item);  b.toString();  b.to  ,// removeAgedItems(true); if(notify) { fireSeriesChanged(); } ; hopped ; boolean alert = b.toString()!= this.data.get(item); b.toString(); b.to
compilation error,540,add,[CE] ';' expected, ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); } ; meanwhile
compilation error,540,add,[CE] ';' expected, ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); } ; bodied
compilation error,540,add,[CE] ';' expected, ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); } ; slated
compilation error,540,add,[CE] illegal start of expression, ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); } ; && item.getItemCount() > this.maximumItemCount) { this.data.remove(0); }
compilation error,540,add,[CE] cannot find symbol, ,this.data.removeAgedItems(true, item);
patch is same with buggy,880,replace,, System.err.println( "Requires  start  constituted  start.   ");  , 
compilation error,540,add,[CE] not a statement, ,this.data.removeAgedItems(true); slated ;
compilation error,540,add,[CE] illegal start of expression, ,if(this.data.getAgedItems(0)) { if(notify) { fireSeriesChanged(); }
increase failing tests,540,add, [FE] AssertionFailedError, ,bod : Collections.singleton(this.data); this.data.add(item);
compilation error,540,add,[CE] ';' expected, ,Boolean bod : Collections.singleton(this.data);
compilation error,540,add,[CE] cannot find symbol b, ,b.append(item.getPeriod()).toString();
compilation error,540,add,[CE] cannot find symbol b, ,this.data.add(item.getPeriod()); b.append(item.getPeriod()).toString();
compilation error,540,add,[CE] ';' expected, ,this.data.removeAgedItems(false); delt
patch is same with buggy,534,replace,, if(!item.getPeriod().equals( "/ "))  {  ,if(!item.getPeriod().equals("/")) {
compilation error,174,add,[CE] no suitable method found for max(int), ,this.maximumItemCount = Math.max(this.maximumItemCount * 2 + 1);
compilation error,540,replace,[CE] not a statement, //  this.data.add(item);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  b.toString();  ,this.data.add(item); rang && item.getPeriod().startsWith(this.maximumItemCount)) { b.toString(); b.toString();
compilation error,540,add,[CE] cannot find symbol b, ,this.data.remove(0); b.add(item);
compilation error,540,add,[CE] cannot find symbol b, ,this.data.remove(0); b.append(item);
patch is same with buggy,880,replace,, System.err.println( "Requires  end? "  +  start  + "  : ");  ,System.err.println("Requires end? " + start +" :");
patch is same with buggy,880,replace,, System.err.println( "Requires  end? "  +  start  + "  : ");  , 
compilation error,540,add,[CE] not a statement, ,b.append(item.getPeriod()); Added if(added) { fireSeriesChanged(); bodied ;
compilation error,540,add,[CE] not a statement, ,b.append(Item.getTime()); Added if(added) { fireSeriesChanged(); bodied ;
compilation error,540,add,[CE] cannot find symbol, ,this.data.addAgedItems(false); b.addListener(this);
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  ,b.append(item.getPeriod()); bodied ; bodied ; slated ;
compilation error,540,add,[CE] illegal start of expression, ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); } ; & }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  fiance  ,if(!this.data.containsKey(item.getPeriod())) { if(notify) { fireSeriesChanged(); & ; }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  fiance  ,if(!this.data.containsKey(item.getPeriod())) { if(notify) { fireSeriesChanged(); } ; & ; }
compilation error,540,add,[CE] cannot find symbol b, ,this.data.add(item); b.append(getItemCount() - this.maximumItemCount);
compilation error,540,add,[CE] cannot find symbol b, ,this.data.add(item); b.append(getItemCount() / this.maximumItemCount);
compilation error,540,add,[CE] illegal start of expression, ,if(added) { // removedAgedItems(true); if(notify) { fireSeriesChanged(); }
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString()  ,// deleteAgedItems(false); if(notify) consulted fireSeriesChanged(); && item.getDataItemCount() > this.maximumItemCount); b.append(item.getPeriod().toString()
compilation error,540,add,[CE] not a statement, ,limb && item.getDataItemCount() > this.maximumItemCount); b.append(item.getPeriod().toString();
compilation error,540,add,[CE] not a statement, ,limb && item.getDataItemCount() > this.maximumItemCount); b.append(this.data.getPeriod().toString());
compilation error,540,replace,[CE] illegal start of expression, //  this.data.add(item,  this.timePeriodClass);  ,if(item.getItemCount() > this.maximumItemCount) { // removeAgedItems(false, item); if(notify) { fireSeriesChanged(); figured ; bodied if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] not a statement, ,boolean! b.hasChanged();
compilation error,540,add,[CE] not a statement, ,boolean! b.hasArg();
compilation error,540,add,[CE] ';' expected, ,if(notify) { fireSeriesChanged(); } ; b.toString() : null;
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); } ; bodied? b.toString() : null;
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); } ; bodied? b.toString() : null; b.toString() : null; }
compilation error,540,replace,[CE] cannot find symbol b, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  >>  ;  ,b.append(item.getPeriod()); b.removeChangeListener(this);
patch is same with buggy,540,replace,, //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  slated  ;  bodied  ,// this.data.removeAgedItems(true); if(notify) { fireSeriesChanged(); slated ; bodied
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ,// deleteAgedItems(false); if(notify)) { fireSeriesChanged(); bodied
compilation error,540,add,[CE] cannot find symbol, ,b.append(item.getPeriod().getTime()); b.removeChangeListener(this);
compilation error,540,add,[CE] cannot find symbol Item, ,b.append(Item.getPeriod().getTime()); b.removeChangeListener(this);
compilation error,540,add,[CE] generics are not supported in -source 1.4, ,this.data.add(item, new LinkedList < TimeSeriesDataItem>());
compilation error,540,add,[CE] method get in interface List cannot be applied to given types;, ,b.append(item.getPeriod()).append(this.data.get(item.getPeriod()));
compilation error,540,add,[CE] cannot find symbol, ,if(item.getPeriod().startsWith(this.maximumItemCount)) { b.toString(); b.toString(); } else { throw new IllegalArgumentException(""); }
compilation error,540,add,[CE] cannot find symbol, ,if(item.getPeriod().startsWith(this.maximumItemCount)) { b.toString(); b.toString(); } else { this.data.add(item); }
compilation error,540,add,[CE] cannot find symbol, ,b.append(item.getPeriod().startsWith(this.maximumItemCount)); b.toString();
compilation error,540,add,[CE] cannot find symbol, ,b.append(item.getPeriod().startsWith(this.maximumItemCount));
compilation error,540,add,[CE] cannot find symbol b, ,b.append(item.getPeriod()); b.toString();
compilation error,540,add,[CE] illegal start of expression, ,if(!this.data.contains(item)) { if(notify) { fireSeriesChanged(); } ; && item.getItemCount() > this.maximumItemCount); this.data.add(item); b.removeChangeListener(this
compilation error,540,add,[CE] illegal start of expression, ,if(!this.data.contains(item)) { if(notify) { fireSeriesChanged(); } ; && item.getPeriod().equals(getItemCount() - this.maximumItemCount); this.data.add
compilation error,540,add,[CE] ';' expected, ,if(!this.data.contains(item)) { if(notify) { fireSeriesChanged(); } ; meanwhile
compilation error,540,replace,[CE] illegal start of expression, //  addAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  ,if(item.getItemCount() > this.maximumItemCount) { // removeAgedItems(false); if(notify)) hi fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  addAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  ,if(added) { // removeAgedItems(false); if(notify)hike fireSeriesChanged(); }
compilation error,540,add,[CE] cannot find symbol, ,this.data.remove(0); b.append(item.getPeriod().getTime());
compilation error,540,replace,[CE] ';' expected, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  ,if(added) { if(notify) { fireSeriesChanged(); b.toString() : null; & b.toString() : null; } ; & b.toString() : null; }
compilation error,540,replace,[CE] ';' expected, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  ,if(!added) { if(notify) { fireSeriesChanged(); b.toString() : null; & b.toString() : null; } ; & b.toString() : null; }
compilation error,540,replace,[CE] illegal start of expression, //  removedAllUnagedItems(false);  this.data.add(item);  ,if(item.getPeriod() > this.maximumItemCount) { // removedAgedItems(true); b.append(item.getPeriod()).append('n'); }
patch is same with buggy,540,replace,, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  bodied  ,// removedAgedItems(true); this.data.add(item); if(notify) { fireSeriesChanged(); bodied
compilation error,540,add,[CE] cannot find symbol b, ,b.append(getItemCount() / this.maximumItemCount);
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); bodied? b.toString() : null; }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  ,if(item.getItemCount() > this.maximumItemCount) { TimeSeriesDataItem item = getDataItem(item); if(added) { fireSeriesChanged(); }
compilation error,540,replace,[CE] cannot find symbol slated, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  }  ;  &  ,this.data.remove(0); slated = true;
compilation error,540,add,[CE] not a statement, ,this.data.remove(0); rang && item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))) { this.data.remove(0);
compilation error,540,add,[CE] not a statement, ,this.data.remove(0); rang && item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))) { this.data.
compilation error,880,replace,[CE] unclosed string literal, System.err.println( "Requires  start  <  0.   ");  ,System.err.println("Requires start >= 0".equals(start + end)");
compilation error,540,add,[CE] not a statement, ,if(aged) { if(notify) { fireSeriesChanged(); bodied ;
compilation error,540,add,[CE] not a statement, ,if(aged) { if(notify) { fireSeriesChanged(); } ; bodied ;
patch is same with buggy,174,replace,, this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  ,this.range = range; this.timePeriodClass = timePeriodClass;
compilation error,174,replace,[CE] illegal start of expression, this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  ,if(range!= null) { if(timePeriodClass!= null) { this.range = range; this.timePeriodClass = timePeriodClass; }
patch is same with buggy,174,replace,, this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  , 
compilation error,540,add,[CE] cannot find symbol b, ,b.removeAgedItems(true);
compilation error,540,add,[CE] cannot find symbol b, ,b.toString().append(item.getPeriod());
compilation error,540,add,[CE] cannot find symbol b, ,this.data.add(item); b.addAgedItems(true, item);
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(true);  if(notify))  {  fireSeriesChanged();  }  ;  }  ,if(!this.data.containsKey(item.getPeriod())) { if(notify) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(true);  if(notify))  {  fireSeriesChanged();  }  ;  }  ,if(!this.data.containsKey(item)) { if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] cannot find symbol items, ,this.data.remove(0); b.addChangeListener(this, items);
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); slated else if(getItemCount() > this.maximumItemCount) { this.data.remove(0); }
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); figured else if(getItemCount() > this.maximumItemCount) { this.data.remove(0); }
compilation error,540,add,[CE] illegal start of expression, ,if(notify) { fireSeriesChanged(); if(getItemCount() > this.maximumItemCount) { this.data.remove(0); }
compilation error,540,add,[CE] not a statement, ,if(item.getItemCount() > this.maximumItemCount) { if(!added) { fireSeriesChanged(); limb ; thankfully ; Afterward if(notify) { fireSeriesChanged(); limb ; luckily ;
compilation error,540,add,[CE] not a statement, ,if(item.getItemCount() > this.maximumItemCount) { if(!added) { fireSeriesChanged(); limb ; thankfully ; Afterward if(notify) { fireSeriesChanged(); limb ;
compilation error,540,add,[CE] not a statement, ,if(item.getItemCount() > this.maximumItemCount) { if(!added) { fireSeriesChanged(); limb ; thankfully ; Afterward if(notify) { fireSeriesChanged(); limb ; thankfully ;
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  this.data.remove(item);  if(notify)  {  fireSeriesChanged();  bodied  ,// deleteAgedItems(true); this.data.remove(item); if(notify) { fireSeriesChanged(); bodied
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  delt  ,// deleteAgedItems(true); this.data.add(item); if(notify) { fireSeriesChanged(); } ; delt
compilation error,540,add,[CE] not a statement, ,limb && item.getPeriod().toString().toString()); b.append(this.data.getPeriod().toString());
compilation error,540,add,[CE] not a statement, ,limb && item.getPeriod().toString().equals(this.data.get(item)); b.append(getItemCount().toString());
compilation error,540,add,[CE] cannot find symbol, ,this.data.removeAgedItems(true); b.addChangeListener(this);
compilation error,540,add,[CE] illegal start of expression, ,& removeAgedItems(false); & b.toString() : null; & b.toString() : null;
compilation error,540,add,[CE] illegal start of expression, ,& b.toString() : null; & b.toString() : null;
compilation error,540,add,[CE] cannot find symbol b, ,b.append(getItemCount() - this.data.size());
compilation error,540,add,[CE] cannot find symbol b, ,this.data.add(item); b.append(item.getPeriod()).append('n');
compilation error,540,add,[CE] ';' expected, ,this.data.removeAgedItems(true); delt
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); rang ;? boolean notify = b.toString()!= this.data.get(item); b.toString(); rang ;? boolean notify = b.toString()!= this.data.
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); rang ;? boolean notify = b.toString()!= this.data.get(item); b.toString(); rang ;? boolean notify = b.toString()!= this.data.get(
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); rang ;? boolean notify = b.toString()!= this.data.get(item); b.toString(); }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bod  ;  bod?  bod  :  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  }    ,if(item.getItemCount() > this.maximumItemCount) { // removeAgedItems(false); if(notify)) { fireSeriesChanged(); bodied ; b.toString() : null; }
compilation error,540,add,[CE] not a statement, ,b.append(item.getPeriod().toString()); hopped && item.getDataItemCount() > this.maximumItemCount) { this.data.remove(0);
compilation error,540,add,[CE] not a statement, ,b.append(item.getPeriod().toString()); hopped && item.getDataItemCount() > this.maximumItemCount); b.append(item.getPeriod().toString());
compilation error,540,replace,[CE] illegal start of expression, //  removedAllUnagedItems(false);  this.data.add(item);  ,if(item.getItemCount() > this.maximumItemCount) { // removedAllAgedItems(true, true); if(notify)) { fireSeriesChanged(); }
compilation error,540,add,[CE] cannot find symbol, ,this.data.addAgedItems(false); b.removeChangeListener(this);
patch is same with buggy,540,replace,, //  removedAllUnagedItems(false);  this.data.add(item);  ,// removedAllUnagedItems(false); this.data.add(item);
compilation error,540,add,[CE] cannot find symbol, ,this.data.addAgedItems(true); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] cannot find symbol, ,if(!this.data.addAgedItems(true)) { fireSeriesChanged(); }
compilation error,540,add,[CE] not a statement, ,b.append(Item.getTime()); bodied ; Added if(added) { fireSeriesChanged(); bodied ;
compilation error,540,add,[CE] not a statement, ,b.append(item.getPeriod()); slated ;
patch is same with buggy,880,replace,, System.err.println( "Requires  end  constituted  start.   ");  ,System.err.println("Requires end constituted start. ");
patch is same with buggy,880,replace,, System.err.println( "Requires  end  constituted  start.   ");  ,System.err.println("Requires end constituted start.");
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  bodied  ;  &  b.toString()  :  null;  ,if(added) { fireSeriesChanged(); & b.toString() : null; & b.toString() : null; & b.toString() : null; & b.toString() : null; }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  bodied  ;  &  b.toString()  :  null;  ,if(added) { fireSeriesChanged(); & b.toString() : null; & b.toString() : null; & b.toString() : null; & b.toString() : null;
patch is same with buggy,540,replace,, //  this.data.add(item,  new  LinkedList  <  TimeSeriesDataItem>());  , 
compilation error,540,replace,[CE] cannot find symbol, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  slated  ,this.data.addAgedItems(true); b.append(item);
patch is same with buggy,880,replace,, System.err.println( "Requires  end  -  start.   ");  ,System.err.println("Requires end - start. ");
patch is same with buggy,540,replace,, //  this.data.getAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  delt  ,// this.data.getAgedItems(false); if(notify) { fireSeriesChanged(); } ; delt
compilation error,540,add,[CE] not a statement, ,bodied ; bodied : b.toString() : null;
compilation error,540,add,[CE] not a statement, ,bodied ; bodied? b.toString() : null;
compilation error,540,add,[CE] not a statement, ,bodied ; bodied ; b.toString() : null;
compilation error,540,replace,[CE] illegal start of expression, //  this.data.getAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  }  ,if(added) { // this.data.getAgedItems(false); if(notify) { fireSeriesChanged(); }
patch is same with buggy,880,replace,, System.err.println( "Requires  begin  <=  0   ".length());  ,System.err.println("Requires begin <= 0 ".length());
patch is same with buggy,880,replace,, System.err.println( "Requires  begin  <=  0   ".length());  , 
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false);  this.data.add(item,  this.maximumItemCount);  if(notify)  {  fireSeriesChanged();  }    ,b.append(item.getPeriod().toString()); figured && item.getDataItemCount() > this.maximumItemCount); b.append(item.getPeriod().toString());
compilation error,540,add,[CE] not a statement, ,if(!b.toString()) { if(notify) { fireSeriesChanged(); bodied ; b.toString() : null; }
patch is same with buggy,880,replace,, System.err.println( "Requires  start  %  2  ==  0   ".length());  ,System.err.println("Requires start % 2 == 0".length());
compilation error,540,add,[CE] cannot find symbol items, ,b.removeChangeListener(this, items);
compilation error,540,add,[CE] cannot find symbol, ,this.data.removeAllItems();
compilation error,540,replace,[CE] not a statement, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,if(notify) { fireSeriesChanged(); limb ; bodied ;
compilation error,540,add,[CE] cannot find symbol b, ,b.append(item.getPeriod().toString()); this.data.remove(0);
compilation error,880,add,[CE] , ,System.err.println("Requires begin <= 0 ").length());
compilation error,540,replace,[CE] cannot find symbol b, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  >>  ;  ,b.append(getItemCount() - this.data.size() - 1);
compilation error,174,add,[CE] cannot find symbol itemCount, ,this.itemCount = Math.max(10, 0);
compilation error,540,add,[CE] not a statement, ,boolean(this.data.containsKey(item.getItemCount())) { if(notify) { fireSeriesChanged(); bodied ; bodied : b.toString() : null; bodied ;
compilation error,540,add,[CE] not a statement, ,boolean(this.data.containsKey(item.getItemCount())) { if(notify) { fireSeriesChanged(); bodied ; bodied : b.toString() : null; bodied ; bodied : b.toString()
compilation error,540,add,[CE] not a statement, ,boolean(this.data.containsKey(item.getItemCount())) { if(notify) { fireSeriesChanged(); bodied ; bodied? b.toString() : null; bodied ; bodied : b.toString()
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  if(added))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  ,if(this.data.size() > this.maximumItemCount) { // removeAgedItems(false); this.data.add(item); if(added) { fireSeriesChanged(); }
compilation error,540,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  //  do  not  notify  any,  because  that  //  happens  next  anyway...  ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); Afterward ; // removeAgedItems(false); // removeAgedItems(false); // do not notify any, because that
compilation error,540,add,[CE] cannot find symbol b, ,b.removeChangeListener(false);
compilation error,540,add,[CE] cannot find symbol b, ,this.data.add(item, b);
compilation error,174,add,[CE] illegal start of expression, ,if(this.domain!= null) { if(this.range!= null) { this.range = range; this.timePeriodClass = timePeriodClass; }
compilation error,174,add,[CE] illegal start of expression, ,if(this.domain!= null) { if(this.domain!= null) { this.range = range; this.timePeriodClass = timePeriodClass; }
compilation error,540,add,[CE] not a statement, ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); regain ; hopped ; bodied ; Embry ; Toujours ; Toujours ; Added ;
compilation error,540,add,[CE] not a statement, ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); regain ; hopped ; bodied ; Toujours ; Embry ; Toujours ; Toujours ; Added ;
compilation error,540,add,[CE] not a statement, ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); regain ; hopped ; bodied ; Toujours ; Embry ; Toujours ; Added ;
compilation error,174,add,[CE] cannot find symbol minimumItemAge, ,this.minimumItemAge = minimumItemAge + 1;
compilation error,540,add,[CE] not a statement, ,if(!added) { if(notify) { fireSeriesChanged(); bodied ; bodied? b.toString() : null; bodied ; bodied? b.toString() : null; } ; bodied :
compilation error,540,add,[CE] not a statement, ,if(!added) { if(notify) { fireSeriesChanged(); bodied ; bodied? b.toString() : null; bodied ; bodied : b.toString() : null; } ; bodied :
compilation error,540,add,[CE] not a statement, ,if(!added) { if(notify) { fireSeriesChanged(); bodied ; bodied? b.toString() : null; bodied ; bodied? b.toString() : null; bodied ; bodied :
compilation error,540,add,[CE] illegal start of expression, ,&& item.getPeriod().toString().equals(this.data.getPeriod().toString())); b.append(item.getPeriod().toString());
compilation error,540,add,[CE] illegal start of expression, ,&& item.getPeriod().toString().equals(this.data.getPeriod().toString()); b.append(getItemCount().toString());
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify)  induced  fireSeriesChanged();  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString()  ,// deleteAgedItems(false); if(notify) induced fireSeriesChanged(); figured && item.getDataItemCount() > this.maximumItemCount); b.append(item.getPeriod().toString()
compilation error,174,add,[CE] illegal start of expression, ,if(this.domain!= null) { if(timePeriodClass == null) { this.domain = domain; }
compilation error,174,add,[CE] illegal start of expression, ,if(this.domain == null) { this.domain = domain; if(timePeriodClass!= null) { timePeriodClass = timePeriodClass; }
compilation error,174,add,[CE] illegal start of expression, ,if(this.domain == null) { if(timePeriodClass == null) { this.domain = domain; }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getItemCount() > this.maximumItemCount) { // removeAgedItems(false, item); if(notify) { fireSeriesChanged(); bodied ; Added if(added) { fireSeriesChanged(); }
compilation error,540,add,[CE] not a statement, ,bod ; bod : b.toString();
compilation error,540,add,[CE] not a statement, ,bod ; bod : b.toString(); this.data.remove(0);
compilation error,540,add,[CE] not a statement, ,bod ; bod : b.toString(); this.data.remove(item);
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(true);  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove;  ,if(this.data.size() > this.maximumItemCount) { // deleteAgedItems(true); this.data.add(item); if(notify) { fireSeriesChanged(); }
compilation error,540,replace,[CE] cannot find symbol, //  this.data.addAgedItem(false);  ,this.data.addAgedItems(true, false);
compilation error,540,add,[CE] illegal start of expression, ,if(!added) { b.append(item); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(!added) { b.append(Item.getTime()); if(notify) { fireSeriesChanged(); }
compilation error,174,add,[CE] illegal start of expression, ,if(timePeriodClass!= null) { if(timePeriodClass!= null) { this.range = domain; this.timePeriodClass = timePeriodClass; }
compilation error,174,add,[CE] illegal start of expression, ,if(timePeriodClass!= null) { this.domain = domain; this.range = range; if(timePeriodClass!= null) { this.data = new java.util.ArrayList(); }
patch is same with buggy,174,replace,, this.maximumItemCount  =  Integer.MAX_VALUE  /  2  +  1;  ,this.maximumItemCount = Integer.MAX_VALUE / 2 + 1;
compilation error,540,add,[CE] cannot find symbol b, ,b.append(item.getPeriod().toString()); b.append(item.getPeriod().toString());
compilation error,540,add,[CE] cannot find symbol, ,b.append(item.getPeriod().getTime().equals(this.timePeriodClass.getName()));
compilation error,540,add,[CE] cannot find symbol, ,b.append(item.getPeriod().getTime().equals(this.timePeriodClass.getName())); this.data.remove(0);
compilation error,540,add,[CE] cannot find symbol, ,b.append(item.getPeriod().getTime().equals(this.timePeriodClass.getName())); this.data.add(item);
compilation error,540,add,[CE] not a statement, ,b.append(item.getPeriod()); bodied ; bodied if(notify) { fireSeriesChanged(); Toujours ;
compilation error,540,add,[CE] not a statement, ,b.append(item.getPeriod()); bodied ; bodied if(notify) { fireSeriesChanged(); bodied ;
compilation error,540,add,[CE] not a statement, ,b.append(item.getPeriod()); bodied ; bodied if(add) { fireSeriesChanged(); Toujours ;
compilation error,540,replace,[CE] not a statement, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,b.append(item.getPeriod()); bodied if(notify) { fireSeriesChanged(); bodied ;
compilation error,540,replace,[CE] not a statement, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,b.append(Item.getTime()); bodied if(notify) { fireSeriesChanged(); bodied ;
patch is same with buggy,540,replace,, //  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.add(item);  }    ,// removedAgedItems(true); if(notify) { fireSeriesChanged(); && item.getPeriod().getTime().equals(this.timePeriodClass.getName())) { this.data.add(item); }
compilation error,540,add,[CE] not a statement, ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); bodied ; b.toString() : null; } ;
compilation error,540,add,[CE] not a statement, ,if(item.getItemCount() > this.maximumItemCount) { if(!added) { fireSeriesChanged(); bodied ; b.toString() : null; } ;
compilation error,540,add,[CE] not a statement, ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); bodied ; b.toString() : null; bodied ;
compilation error,540,add,[CE] illegal start of expression, ,if(this.data.size() > 0) { if(!added) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(this.data.containsKey(item.getPeriod())) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); }
patch is same with buggy,880,replace,, System.err.println( "Requires  end  -  start.   ");  ,System.err.println("Requires end - start. ");
patch is same with buggy,880,replace,, System.err.println( "Requires  end  -  start.   ");  ,System.err.println("Requires end - start.");
compilation error,540,add,[CE] not a statement, ,bodied && item.getPeriod() > this.maximumItemCount); b.append(item.getPeriod().toString());
compilation error,540,add,[CE] not a statement, ,bodied && item.getPeriod() > this.maximumItemCount) { b.append(item.getPeriod().toString());
compilation error,540,add,[CE] ';' expected, ,b.toString() : null; & b.toString();
compilation error,540,replace,[CE] cannot find symbol, //  removeAgedItems(false);  if(added)!=  fireSeriesChanged();  slated  ,bodied : item.getPeriod().getBytes().toString();
compilation error,540,replace,[CE] cannot find symbol, //  removeAgedItems(false);  if(added)!=  fireSeriesChanged();  slated  ,bodied : item.getPeriod().getBounds();
compilation error,174,replace,[CE] illegal start of expression, if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  timePeriodClass  =  timePeriodClass;  }  ,if(domain!= null) { if(domain == null) { this.domain = domain; this.range = range; } else { timePeriodClass = timePeriodClass; }
compilation error,540,replace,[CE] no suitable method found for add(TimeSeriesDataItem,int), //  removeAgedItems(false);  this.data.add(item,  this.maximumItemCount);  if(notify)  {  fireSeriesChanged();  }    ,this.data.add(item, getItemCount() + 1);
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  fiance  ,if(this.data.size() > this.maximumItemCount) { // removeAgedItems(false); this.data.add(item); if(notify) { fireSeriesChanged(); }
compilation error,540,replace,[CE] cannot find symbol, //  this.data.addAgedItem(false);  ,this.data.addAgedItem(null);
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))!=  this.data.  ,// deleteAgedItems(true); if(notify) { fireSeriesChanged(); hopped && item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))!= this.data.
compilation error,540,add,[CE] no suitable method found for add(TimeSeriesDataItem,int), ,this.data.add(item, getItemCount() / 2);
increase failing tests,540,replace, [FE] AssertionFailedError, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  }  ;  &  ,bodied : item.getPeriod().toString(); this.data.add(item);
compilation error,540,add,[CE] not a statement, ,b.toString().append(item.getPeriod()); bodied ; b.toString() : null; bodied ;
compilation error,540,add,[CE] not a statement, ,if(b!= null) { b.toString(); bodied ; b.toString() : null; bodied ;
compilation error,540,add,[CE] ';' expected, ,if(!this.data.containsKey(item.getPeriod())) { if(notify) { fireSeriesChanged(); } ; meanwhile
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  &  b.toString()  :  null;  }  ;  ,if(added) { // removeAgedItems(false); if(notify)) { fireSeriesChanged(); & b.toString() : null; }
patch is same with buggy,540,replace,, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  fiance  ,// removeAgedItems(false); this.data.add(item); if(notify) { fireSeriesChanged(); } ; fiance
compilation error,540,add,[CE] cannot find symbol, ,this.data.addAgedItem(false);
compilation error,540,add,[CE] unclosed character literal, ,b.append('ufffd'); this.data.add(item);
compilation error,540,add,[CE] illegal start of expression, ,if(added) { // removedAllAgedItems(false); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getItemCount() > this.maximumItemCount) { // removedAllAgedItems(false); if(notify)) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getItemCount() > this.maximumItemCount) { // removedAllAgedItems(false); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] not a statement, ,rang && item.getPeriod().getTime().equals(this.timePeriodClass.getName())) { this.data.remove;
compilation error,540,add,[CE] not a statement, ,rang && item.getPeriod().getTime().equals(this.timePeriodClass.getName()));
patch is same with buggy,540,replace,, //  this.data.getAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  delt  ,// this.data.getAgedItems(true); if(notify) { fireSeriesChanged(); } ; delt
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  }  ;  &  ,if(notify) { fireSeriesChanged(); bodied ; bod? boolean notify = b.toString()!= this.data.get(item); b.toString(); }
patch is same with buggy,540,replace,, //  addAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ,// addAgedItems(false); if(notify) { fireSeriesChanged(); bodied ; b.toString() : null; }
patch is same with buggy,540,replace,, //  addAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ,// addAgedItems(false); if(notify) { fireSeriesChanged(); bodied ; b.toString() : null; }
compilation error,540,add,[CE] not a statement, ,b.append(item.getPeriod().toString()); hopped && item.getDataItemCount() > this.maximumItemCount; b.append(item.getPeriod().toString());
patch is same with buggy,174,replace,, if(range!=  null)  {  this.domain  =  domain;  }  ,if(range!= null) { this.domain = domain; }
patch is same with buggy,540,replace,, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  , 
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bodied ; bodied = boolean.toString(); }
compilation error,540,add,[CE] unclosed character literal, ,b.append(item.getPeriod()).append('ufffd');
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  if(notify)  propag  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.  ,// deleteAgedItems(true); if(notify) propag fireSeriesChanged(); && item.getPeriod().getTime().equals(this.data.get(item.getPeriod())) { this.data.
compilation error,174,add,[CE] cannot find symbol This, ,if(domain!= null && range!= null) { this.domain = domain; This.range = range; }
compilation error,174,add,[CE] cannot find symbol, ,if(domain!= null && range!= null) { this.domain = domain; this.range = range; } else { this.data = new ArrayList(); Arrays.sort(this.data); }
compilation error,540,add,[CE] not a statement, ,if(added) { fireSeriesChanged(); bodied ; b.toString() : null; bodied ;
compilation error,540,add,[CE] not a statement, ,boolean(added) { fireSeriesChanged(); bodied ; b.toString() : null; bodied ;
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  }  ;  &  ,if(notify) { fireSeriesChanged(); bodied ; & b.toString() : null; & b.toString() : null; }
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  }  ;  &  ,if(notify) { fireSeriesChanged(); bodied ; & b.toString() : null; & b.toString() : null; bodied ;
increase failing tests,540,add, [FE] ArrayIndexOutOfBoundsException, ,this.data.remove(getItemCount() - this.maximumItemCount);
compilation error,540,add,[CE] not a statement, ,b.append(item.getPeriod().toString()); limb && item.getDataItemCount() > this.maximumItemCount); b.append(item.getPeriod().toString();
compilation error,540,add,[CE] not a statement, ,b.append(item.getPeriod().toString()); limb && item.getDataItemCount() > this.maximumItemCount); b.append(item.getPeriod().toString().toString()
compilation error,540,add,[CE] not a statement, ,boolean! add = b.toString();
compilation error,540,add,[CE] cannot find symbol b, ,b = new StringBuffer(this.data.get(item));
compilation error,540,add,[CE] cannot find symbol b, ,b = new StringBuffer(this.data.size() - 1);
compilation error,540,add,[CE] class expected, ,boolean.isEmpty() : true;
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  bodied  ;  b.toString()  :  null;  }  ;  b.toString()  :  nu  ,if(added) { if(notify) { fireSeriesChanged(); bodied ; b.toString() : null; bodied ; b.toString() : null; slated ;
compilation error,540,add,[CE] no suitable method found for add(TimeSeriesDataItem,Class), ,this.data.add(item, this.timePeriodClass);
compilation error,540,replace,[CE] cannot find symbol b, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  }  ;  &  ,if(notify) { fireSeriesChanged(); bodied : b.toString(); }
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  }  ;  &  ,if(notify) { fireSeriesChanged(); bodied? bod : b.toString(); }
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  figured  &&  item.getDataItemCount()  >  this.maximumItemCount;  b.append(item.getPeriod().toString());  ,// deleteAgedItems(false); figured && item.getDataItemCount() > this.maximumItemCount; b.append(item.getPeriod().toString());
compilation error,540,add,[CE] cannot find symbol, ,if(this.data.addAgedItem(true)) { fireSeriesChanged(); }
compilation error,540,add,[CE] ')' expected, ,if(this.data.addAgedItem(true); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] cannot find symbol, ,b.append(getDataItemCount() > this.maximumItemCount); b.append(item.getPeriod().toString());
compilation error,540,add,[CE] not a statement, ,bodied && item.getPeriod().startsWith(this.maximumItemCount)) { b.toString();
compilation error,540,add,[CE] not a statement, ,this.data.add(item); bodied && item.getPeriod().startsWith(this.maximumItemCount)) { b.toString();
compilation error,540,add,[CE] cannot find symbol b, ,boolean bod = b.toString() == this.data.get(item);
compilation error,540,replace,[CE] cannot find symbol b, //  removedAgedItems(true);  if(notify))  {  fireSeriesChanged();  }  ;  }  ,if(!added) { b.removeChangeListener(this); b.removeChangeListener(item); }
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bodied ; b.toString() : null; bodied ; b.toString() : null; } ;
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bodied ; b.toString() : null; bodied ; b.toString() : null; bodied ;
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bodied ; b.toString() : null; bodied ; b.toString() : null; bodied ; b.toString() : null; } ;
compilation error,540,replace,[CE] illegal start of expression, //  deleteAgedItems(true);  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))!=  this.data.remove;  ,if(!this.data.containsKey(item.getPeriod())) { if(notify) { fireSeriesChanged(); } ;
compilation error,540,replace,[CE] illegal start of expression, //  deleteAgedItems(true);  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))!=  this.data.remove;  ,if(!this.data.containsKey(item.getSeriesKey())) { if(notify) { fireSeriesChanged(); } ;
compilation error,540,add,[CE] unclosed character literal, ,if(item.getItemCount() > this.maximumItemCount) { b.append('ufffd'); } else { b.append(item.getItemCount() - this.maximumItemCount); b.removeChangeListener(this); }
compilation error,540,add,[CE] unclosed character literal, ,if(item.getItemCount() > this.maximumItemCount) { b.append('ufffd'); } else { b.append(item.getItemCount() - 1); b.removeChangeListener(this); }
compilation error,540,add,[CE] cannot find symbol, ,if(item.getItemCount() > this.maximumItemCount) { b.append(item.getItemCount() - 1); } else { b.append(item.getItemCount() - 1); b.removeChangeListener(this); }
compilation error,540,add,[CE] cannot find symbol b, ,this.data.add(item); b.append("n");
compilation error,540,add,[CE] not a statement, ,this.data.remove(0); bodied + 1;
compilation error,540,add,[CE] not a statement, ,this.data.add(item); bodied + 1;
compilation error,540,add,[CE] cannot find symbol b, ,b = new StringBuffer(this.data.size()); this.data.remove(0);
compilation error,540,add,[CE] cannot find symbol b, ,b = new StringBuffer(getItemCount() - this.data.size());
compilation error,540,replace,[CE] not a statement, //  this.data.add(item);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  b.toString();  ,b.append(item.getPeriod().toString()); bodied && item.getDataItemCount() > this.maximumItemCount); b.append(item.getPeriod().toString());
compilation error,540,add,[CE] cannot find symbol b, ,b.append(item.getPeriod().toString()); updateAgedItems(false);
compilation error,540,add,[CE] ';' expected, ,if(!added) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); } ; meanwhile
compilation error,540,add,[CE] ';' expected, ,if(!added) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); } ; Added
compilation error,540,add,[CE] illegal start of expression, ,if(!added) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); } ; & }
compilation error,540,replace,[CE] illegal start of expression, //  removedAllUnagedItems(false);  this.data.add(item);  ,if(item.getItemCount() > this.maximumItemCount) { // removeAgedItems(True, item); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] not a statement, ,if(item.getItemCount() > this.maximumItemCount) { if(!added) { fireSeriesChanged(); limb ; Afterward if(notify) { fireSeriesChanged(); limb ;
compilation error,540,add,[CE] not a statement, ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); limb ; Afterward if(notify) { fireSeriesChanged(); limb ;
compilation error,540,add,[CE] not a statement, ,if(item.getItemCount() > this.maximumItemCount) { if(!added) { fireSeriesChanged(); limb ; Afterward if(notify) { fireSeriesChanged(); } ;
compilation error,173,add,[CE] cannot find symbol itemCount, ,this.itemCount = Integer.MAX_VALUE / 10;
compilation error,540,add,[CE] not a statement, ,Added if(added) { fireSeriesChanged(); figured ;
compilation error,540,add,[CE] not a statement, ,Added if(item.getItemCount() > this.maximumItemCount) { fireSeriesChanged(); figured ;
compilation error,540,add,[CE] not a statement, ,Added if(item.getItemCount() > this.maximumItemCount) { throw new IllegalArgumentException(""); }
compilation error,540,add,[CE] not a statement, ,if(item == null) { if(notify) { fireSeriesChanged(); bodied if(notify) { fireSeriesChanged(); } ;
compilation error,540,add,[CE] not a statement, ,if(item == null) { if(notify) { fireSeriesChanged(); bodied if(!added) { fireSeriesChanged(); } ;
compilation error,540,add,[CE] not a statement, ,bodied ; bod : b.toString();
compilation error,540,add,[CE] cannot find symbol b, ,bodied : bod : b.toString();
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.to  ,// removeAgedItems(false); if(notify) { fireSeriesChanged(); } ; bodied? boolean notify = b.toString()!= this.data.get(item); b.toString(); b.to
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bodied ;? boolean notify = b.toString()!= this.data.get(item); b.toString(); bodied ;? boolean notify = b.toString()!= this.data.get(
compilation error,540,add,[CE] cannot find symbol b, ,b.setLength(0); this.data.remove(item);
compilation error,540,add,[CE] illegal start of expression, ,if(added) { // deleteAgedItems(false); this.data.add(item, this.maximumItemCount); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(getItemCount() > this.maximumItemCount) { // deleteAgedItems(false); this.data.add(item, this.maximumItemCount); if(notify) { fireSeriesChanged(); }
compilation error,174,add,[CE] cannot find symbol, ,if(this.domain!= null) { this.domain = domain; this.timePeriodClass = timePeriodClass; } else { this.data = new ArrayList(); this.maximumItemCount = 0; }
compilation error,540,add,[CE] illegal start of expression, ,if(added) { // removedAllUnagedItems(true); if(notify) { fireSeriesChanged(); }
compilation error,540,replace,[CE] not a statement, //  deleteAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  delt  ,rang && item.getPeriod().getTime().equals(this.timePeriodClass.getName())); this.data.remove;
compilation error,540,add,[CE] ';' expected, ,if(item.getItemCount() > this.maximumItemCount) { if(!added) { fireSeriesChanged(); } ; b.toString() : null; }
compilation error,540,add,[CE] not a statement, ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); bodied ; b.toString() : null; }
compilation error,540,add,[CE] ';' expected, ,item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))
compilation error,540,add,[CE] method get in interface List cannot be applied to given types;, ,item.getPeriod().getTime().equals(this.data.get(item.getPeriod()));
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  ,bodied + b.toString() : null;
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  ,this.data.add(item); bodied + b.toString() : null;
compilation error,540,add,[CE] method get in interface List cannot be applied to given types;, ,b.append(item.getPeriod()).append(this.data.get(item.getValue()));
compilation error,540,add,[CE] illegal start of expression, ,if(item.getItemCount() > this.maximumItemCount) { // deleteAgedItems(false, item); if(notify)) { fireSeriesChanged(); }
compilation error,540,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  //  removeAgedItems(false);?!  noAgedItems(false);  ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); Afterward ; // removeAgedItems(false); Toujours ; // removeAgedItems(false); }
compilation error,540,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  //  removeAgedItems(false);?!  noAgedItems(false);  ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); slated ; // removeAgedItems(false); Toujours ; // removeAgedItems(false); }
patch is same with buggy,174,replace,, this.maximumItemCount  =  Integer.MIN_VALUE  /  2  +  1;  ,this.maximumItemCount = Integer.MIN_VALUE / 2 + 1;
compilation error,540,replace,[CE] generics are not supported in -source 1.4, //  this.data.add(item);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  b.toString();  ,this.data.add(item, this.data.toArray(new LinkedList < TimeSeriesDataItem>()));
compilation error,174,replace,[CE] illegal start of expression, if(timePeriodClass  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  timePeriodClass  =  timePeriodClass;  }  ,if(timePeriodClass!= null) { this.domain = domain; if(timePeriodClass == range) { this.range = range; timePeriodClass = timePeriodClass; }
compilation error,540,add,[CE] not a statement, ,if(b!= null) { b.removeChangeListener(this); bodied ; b.toString() : null; bodied ;
compilation error,540,replace,[CE] cannot find symbol, //  this.data.addAgedItem(false);  ,this.data.addAgedItems(true, item);
compilation error,540,add,[CE] not a statement, ,!this.data.containsKey(item.getPeriod())) { if(notify) { fireSeriesChanged(); & b.toString() : null; & b.toString(); } ; & b.toString()
compilation error,540,replace,[CE] cannot find symbol, //  this.data.addAgedItem(false);  ,this.data.addAgedItems(null);
patch is same with buggy,173,replace,, this.maximumItemCount  =  Integer.MAX_VALUE  /  2  +  1;  ,this.maximumItemCount = Integer.MAX_VALUE / 2 + 1;
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bodied ; b.toString() : null; bodied ; b.toString() : null; }
compilation error,540,add,[CE] boolean cannot be dereferenced, ,this.data.add(item.getPeriod()).append('n');
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  bodied  ;  bodied  if(notify)  {  fireSeriesChange  ,b.append(item.getPeriod()); bodied ;
compilation error,540,add,[CE] cannot find symbol, ,b.setItemCount(item.getItemCount() - 1);
compilation error,174,add,[CE] bad operand types for binary operator '-', ,this.range = range - DEFAULT_DOMAIN_DESCRIPTION + 3;
compilation error,540,add,[CE] illegal start of expression, ,if(!this.data.containsKey(item.getItemCount())) { if(notify) { fireSeriesChanged(); } ;
compilation error,540,add,[CE] illegal start of expression, ,if(!this.data.containsKey(item)) { if(notify) { fireSeriesChanged(); } ;
patch is same with buggy,540,replace,, //  this.data.add(item,  this.timePeriodClass);  , 
compilation error,540,add,[CE] cannot find symbol, ,this.data.removeAgedItems(true); if(add) { fireSeriesChanged(); }
compilation error,540,replace,[CE] cannot find symbol b, //  addAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  ,bod : Collections.singleton(this.data, b);
compilation error,540,add,[CE] cannot find symbol, ,this.data.removeAllAgedItems(this, item);
compilation error,540,add,[CE] cannot find symbol b, ,b.setLength(0); this.data.remove(0);
compilation error,540,add,[CE] illegal start of expression, ,if(added) { fireSeriesChanged(); bodied :? boolean notify = b.toString()!= this.data.get(item); b.toString(); }
compilation error,540,add,[CE] illegal start of expression, ,if(notify) { fireSeriesChanged(); bodied :? boolean notify = b.toString()!= this.data.get(item); b.toString(); }
compilation error,540,add,[CE] illegal start of expression, ,if(notify) { fireSeriesChanged(); bodied :? boolean notify = b.toString()!= this.data.get(item); b.toString(); b.toString(); }
compilation error,540,add,[CE] no suitable method found for add(TimeSeriesDataItem,int,int), ,this.data.add(item, this.maximumItemCount, this.data.size() - 1);
compilation error,540,add,[CE] no suitable method found for add(TimeSeriesDataItem,int,int), ,this.data.add(item, this.maximumItemCount, this.data.size() - 1); updateBounds(b, this.data.get(item));
compilation error,540,add,[CE] not a statement, ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); regain ; hopped ; bodied ; Embry ; Toujours ; Possibly ; Toujours ; Added ;
compilation error,540,replace,[CE] cannot find symbol, //  this.data.addAgedItem(false);  ,this.data.addAgedItems(false, false);
compilation error,540,add,[CE] not a statement, ,if(item == null) { if(notify) { fireSeriesChanged(); limb if(notify) { fireSeriesChanged(); bodied if(notify) { fireSeriesChanged(); } ; bodied if(notify) { fireSeriesChange
compilation error,540,add,[CE] not a statement, ,if(item == null) { if(notify) { fireSeriesChanged(); limb if(notify) { fireSeriesChanged(); bodied if(notify) { fireSeriesChanged(); } ; bodied if(notify) { fireSeries
compilation error,540,add,[CE] not a statement, ,if(item == null) { if(notify) { fireSeriesChanged(); bodied if(notify) { fireSeriesChanged(); } ; bodied if(notify) { fireSeriesChanged(); } ; bodied if(notify) { fireSeries
compilation error,540,add,[CE] not a statement, ,this.data.remove(0); bodied ; b.toString() : null;
compilation error,540,add,[CE] not a statement, ,b.removeChangeListener(this); bodied ; b.toString() : null;
compilation error,540,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  //  do  not  notify  any,  because  that  //  happens  next  anyway...  ,if(notify) { fireSeriesChanged(); slated ; // removeAgedItems(false); // removeAgedItems(false);?! addAgedItems(false); } ;
compilation error,540,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  //  do  not  notify  any,  because  that  //  happens  next  anyway...  ,if(notify) { fireSeriesChanged(); bodied ; // removeAgedItems(false); // removeAgedItems(false);?! addAgedItems(false); } ;
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bod  ;  bod?  bod  :  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  ,if(b!= null) { if(getItemCount() > this.maximumItemCount) { this.data.remove(0); bodied ; & b.toString() : null; bodied ; & b.toString() : null; }
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bod  ;  bod?  bod  :  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  ,if(b!= null) { if(getItemCount() > this.maximumItemCount) { this.data.remove(0); bodied ; & b.toString() : null; slated ; & b.toString() : null; }
compilation error,540,add,[CE] not a statement, ,limb && item.getPeriod() > this.maximumItemCount); b.append(item.getPeriod().toString());
compilation error,540,add,[CE] not a statement, ,limb && item.getPeriod() > this.maximumItemCount; b.append(item.getPeriod().toString());
compilation error,540,add,[CE] not a statement, ,limb && item.getPeriod() > this.maximumItemCount) { b.append(item.getPeriod().toString());
patch is same with buggy,540,replace,, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  }  , 
compilation error,540,add,[CE] illegal start of expression, ,if(this.data.size() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(this.data.size() > this.maximumItemCount) { if(!added) { fireSeriesChanged(); }
compilation error,540,replace,[CE] not a statement, //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ,b.append(item.getPeriod()); bod ; bod : bod
compilation error,540,add,[CE] cannot find symbol b, ,boolean removed = b.toString()!= this.data.get(item);
compilation error,540,add,[CE] cannot find symbol b, ,boolean removed = b.toString();
compilation error,540,replace,[CE] illegal start of expression, //  removedAllUnagedItems(false);  this.data.add(item);  ,if(item.getItemCount() > this.maximumItemCount) { // removeAgedItems(dangerous, item); if(notify) { fireSeriesChanged(); }
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify)  propagate  fireSeriesChanged();  bodied  ,// deleteAgedItems(false); if(notify) propagate fireSeriesChanged(); bodied
compilation error,540,add,[CE] cannot find symbol b, ,b.removeAgedItems(true, true); b.addListener(item);
compilation error,540,replace,[CE] not a statement, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,b.append(Item.getTime()); bodied ; hopped ;
patch is same with buggy,540,replace,, //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  }    ,// removedAllAgedItems(false); if(notify) { fireSeriesChanged(); && item.getDataItemCount() > this.maximumItemCount); b.append(item.getPeriod().toString()); }
patch is same with buggy,540,replace,, //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  }    , 
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(added)!=  fireSeriesChanged();  slated  , 
compilation error,540,add,[CE] not a statement, ,if(!added) { if(notify) { fireSeriesChanged(); bodied ;
compilation error,540,add,[CE] not a statement, ,if(added) { if(notify) { fireSeriesChanged(); bodied ; this.data.remove(0); }
compilation error,540,add,[CE] cannot find symbol b, ,boolean bod = b.toString() < this.data.get(item); b.toString();
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bodied? true : b.toString()!= this.data.get(item); b.toString(); bodied? false : b.toString(); }
compilation error,540,add,[CE] not a statement, ,bodied ; bodied? b.toString() : null; bodied ; bodied : b.toString() : null;
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bodied ; bodied? b.toString() : null; bodied ; bodied : b.toString() : null; bodied ;
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bodied ; bodied? b.toString() : null; bodied ; bodied? b.toString() : null; bodied ;
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  ,if(item.getItemCount() > this.maximumItemCount) { // removeAgedItems(false, item); if(notify) { fireSeriesChanged(); limb ; }
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(false);  item.addChangeListener(this);  if(notify)  {  fireSeriesChanged();  }    ,if(item.getItemCount() > this.maximumItemCount) { // removedAgedItems(false); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] method get in interface List cannot be applied to given types;, ,boolean bod = b.toString().equals(this.data.get(item));
compilation error,540,add,[CE] illegal start of expression, ,if(added) { if(getItemCount() > this.maximumItemCount) { this.data.remove(item); &&!b.append('ufffd'); }
compilation error,540,add,[CE] illegal start of expression, ,if(added) { if(getItemCount() > this.maximumItemCount) { this.data.add(item); &&!b.append('ufffd'); }
compilation error,540,add,[CE] unclosed character literal, ,if(added) { if(getItemCount() > this.maximumItemCount) { this.data.add(item); b.append('ufffd'); }
compilation error,540,replace,[CE] cannot find symbol, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  boolean  alert  =  b.toString()!=  this.data.get(item);  b.toString();  b.to  ,boolean jumped = this.data.hasEmpty();
compilation error,540,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  //  removeAgedItems(false);?!!  addAgedItems(false);  ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); slated
compilation error,174,add,[CE] illegal start of expression, ,if(timePeriodClass!= null) { this.domain = domain; if(timePeriodClass!= null) { throw new IllegalArgumentException(""); }
compilation error,174,add,[CE] illegal start of expression, ,if(timePeriodClass!= null) { this.domain = domain; if(timePeriodClass == null) { throw new IllegalArgumentException(""); }
patch is same with buggy,174,replace,, this.maximumItemCount  =  Math.max(1,  0);  , 
compilation error,540,add,[CE] not a statement, ,b.append(item.getPeriod()); bod ; bod? bod : bod
compilation error,540,add,[CE] illegal start of expression, ,if(added) { // removeAgedItems(true); if(add) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getItemCount() > this.maximumItemCount) { // removedAgedItems(false, item); if(notify)) { fireSeriesChanged(); }
compilation error,540,add,[CE] cannot find symbol, ,this.data.addAgedItems(true); updateBounds(item.getPeriod(), this.data.size() - 1);
compilation error,540,add,[CE] cannot find symbol, ,updateBounds(item.getPeriod(), this.data.size() - 1);
compilation error,540,add,[CE] cannot find symbol b, ,b.append(item.getPeriod(), this.data.size() - 1);
compilation error,174,replace,[CE] illegal start of expression, if(timePeriodClass!=  null)  {  this.domain  =  domain;  }  else  {  timePeriodClass  =  timePeriodClass;  }  ,if(timePeriodClass!= null) { this.domain = domain; if(timePeriodClass == null) { timePeriodClass = timePeriodClass; }
compilation error,174,replace,[CE] not a statement, if(timePeriodClass!=  null)  {  this.domain  =  domain;  }  else  {  timePeriodClass  =  timePeriodClass;  }  ,this.domain = domain; if(timePeriodClass == null) { this.domain = domain; } else { timePeriodClass = timePeriodClass; figured
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  this.data.add(item);  if(notify)  }  fireSeriesChanged();  bodied  , 
patch is same with buggy,880,replace,, System.err.println( "Usage:  failed  to  add  cloned  item...   ");  ,System.err.println("Usage: failed to add cloned item...");
patch is same with buggy,880,replace,, System.err.println( "Usage:  failed  to  add  cloned  item...   ");  , 
compilation error,540,add,[CE] illegal start of expression, ,if(added) { // this.data.removeAgedItems(false); if(notify) { fireSeriesChanged(); }
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove;  hopped  &&  item.getPeriod  ,// deleteAgedItems(true); hopped && item.getPeriod().getTime().equals(this.timePeriodClass.getName())) { this.data.remove; hopped && item.getPeriod
compilation error,540,replace,[CE] ';' expected, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,boolean rang = this.data.isEmpty() && item.getPeriod().getTime().equals(this.timePeriodClass.getName()));
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  null;  ,if(added) { if(notify) { fireSeriesChanged(); bodied ; b.toString() : null; bodied ; b.toString() : null; bodied ; b.toString() : null; } ;
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  ,if(item.getItemCount() > this.maximumItemCount) { if(!added) { fireSeriesChanged(); } ;
compilation error,880,add,[CE] unclosed string literal, ,System.err.println("Usage: failed to add cloned item...”);
compilation error,540,add,[CE] illegal start of expression, ,if(added) { // deleteAgedItems(false); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getItemCount() > this.maximumItemCount) { // deleteAgedItems(false); if(notify)) { fireSeriesChanged(); }
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  ,if(notify) { fireSeriesChanged(); bodied ; & b.toString() : null; }
compilation error,540,add,[CE] method get in interface List cannot be applied to given types;, ,b.append(item.getPeriod().getTime().equals(this.data.get(item.getPeriod())));
compilation error,540,add,[CE] ')' expected, ,b.append(item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false,  item);  if(notify)!=  fireSeriesChanged();  }  ;  ,if(this.data.size() > this.maximumItemCount) { // this.data.add(item, null); if(notify) { fireSeriesChanged(); }
compilation error,540,replace,[CE] empty character literal, //  removedAgedItems(true;  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  ,b.append(item.getPeriod()).append(''));
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(true);  if(notify))  }  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  ,boolean! boolean! add = b.toString()!= this.data.get(item); b.remove();
compilation error,540,replace,[CE] method get in interface List cannot be applied to given types;, //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))!=  this.data.  ,StringBuffer b = new StringBuffer(this.data.get(item.getPeriod()));
compilation error,540,add,[CE] not a statement, ,b.append(item.getPeriod()); bodied ; bodied ;
compilation error,540,add,[CE] not a statement, ,b.append(Item.getTime()); bodied ; bodied ;
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify)  propag  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  ,// deleteAgedItems(false); if(notify) propag fireSeriesChanged(); hopped && item.getPeriod().getTime().equals(this.timePeriodClass.getName())) { this.data.remove
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  this.data.add(item,  this.maximumItemCount);  if(notify)  {  fireSeriesChanged();  }  ;  }    ,if(this.data.size() > this.maximumItemCount) { // removeAgedItems(false); this.data.add(item, this.maximumItemCount); if(notify) { fireSeriesChanged(); }
compilation error,174,add,[CE] illegal start of expression, ,if(range!= null) { this.domain = range; if(timePeriodClass!= null) { this.domain = domain; }
compilation error,174,add,[CE] illegal start of expression, ,if(range!= null) { this.domain = domain; if(timePeriodClass!= DEFAULT_DOMAIN_DESCRIPTION) { this.data = new java.util.ArrayList(); }
compilation error,174,add,[CE] illegal start of expression, ,if(range!= null) { this.domain = domain; if(timePeriodClass!= DEFAULT_DOMAIN_DESCRIPTION) { this.data = new ArrayList(); }
compilation error,880,add,[CE] not a statement, ,System.err.println("Requires start -> 0 ").length() + 1);
compilation error,540,add,[CE] illegal start of expression, ,&& item.getPeriod().toString().equals(this.data.getPeriod().toString())); b.append(getItemCount().toString());
compilation error,540,add,[CE] illegal start of expression, ,&& item.getPeriod().toString().equals(this.data.getPeriod().toString())); b.append(getDataItemCount().toString());
compilation error,540,add,[CE] not a statement, ,if(bodied) { if(notify) { fireSeriesChanged(); bodied? bodied : b.toString(); }
compilation error,540,add,[CE] not a statement, ,if(added) { if(notify) { fireSeriesChanged(); bodied ; bodied = b.toString(); }
compilation error,540,add,[CE] not a statement, ,if(added) { if(notify) { fireSeriesChanged(); bodied ; bodied =!b.toString(); }
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  slated  ,// removeAgedItems(false); if(notify)) { fireSeriesChanged(); bodied ; b.toString() : null; slated
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); figured ; b.toString() : null; bodied ; b.toString() : null; }
compilation error,540,add,[CE] cannot find symbol b, ,boolean bod = b.toString();
compilation error,540,replace,[CE] cannot find symbol b, //  this.data.add(item);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  b.toString();  ,b.add(item, this.data.size() - 1);
compilation error,880,add,[CE] <identifier> expected, ,System.err.println("Requires end <= 0".);
compilation error,540,add,[CE] no suitable constructor found for TimeSeriesDataItem(int,int), ,this.data.add(item, new TimeSeriesDataItem(getItemCount(), this.maximumItemCount));
compilation error,540,add,[CE] ')' expected, ,if(bod ;? bod!!this.data.containsKey(item.getValue())) { if(notify) { fireSeriesChanged(); bod ;? bod! b.toString(); b.toString(); }
compilation error,540,add,[CE] ')' expected, ,if(bod ;? bod!!this.data.containsKey(item.getValue())) { if(notify) { fireSeriesChanged(); bod ;? bod! b.toString(); }
compilation error,540,add,[CE] ')' expected, ,if(bod ;? bod!!this.data.containsKey(item.getPeriod())) { if(notify) { fireSeriesChanged(); bod ;? bod! b.toString(); b.toString(); }
compilation error,540,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  //  removeAgedItems(false);?!!  addAgedItems(false);  ,if(notify) { fireSeriesChanged(); bodied ; // removeAgedItems(false); // removeAgedItems(false);? noAgedItems(false); } ;
compilation error,540,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  //  removeAgedItems(false);?!!  addAgedItems(false);  ,if(notify) { fireSeriesChanged(); bodied ; // removeAgedItems(false); // removeAgedItems(false);?! noAgedItems(false); } ;
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,if(added) { // removedAllAgedItems(true); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] cannot find symbol, ,this.data.removeAgedItems();
patch is same with buggy,540,replace,, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  bodied  ;  bodied  if(notify)  {  fireSeriesChange  ,// removeAgedItems(false, item); if(notify) { fireSeriesChanged(); bodied ; bodied if(notify) { fireSeriesChanged(); } ; bodied ; bodied ; bodied if(notify) { fireSeriesChange
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(true);  if(notify))  }  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  ,if(notify) { fireSeriesChanged(); slated ; bodied ; b.toString() : null; }
compilation error,540,add,[CE] not a statement, ,if(aged) { fireSeriesChanged(); slated ; bodied ;
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  fiance  ,if(notify) { fireSeriesChanged(); bodied ; b.toString() : null; slated ;
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  fiance  ,b.toString().append(item.getItemCount()); bodied ; b.toString() : null; slated ;
compilation error,540,replace,[CE] illegal start of expression, //  this.data.getAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  }  ,if(added) { // this.data.addAgedItems(false); if(notify) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  this.data.getAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  }  ,if(this.data.size() > this.maximumItemCount) { // this.data.addAgedItems(false); if(notify) { fireSeriesChanged(); }
patch is same with buggy,174,replace,, this.maximumItemCount  =  maximumItemCount  *  4;  , 
compilation error,540,add,[CE] not a statement, ,b.append(Item.getTime()); if(notify) { fireSeriesChanged(); } ; bodied ; hopped ; slated ;
compilation error,540,add,[CE] not a statement, ,b.append(Item.getTime()); if(notify) { fireSeriesChanged(); bodied ; hopped ; slated ;
compilation error,540,add,[CE] not a statement, ,b.append(item.getPeriod()); bodied ; bodied? b.toString() : null;
compilation error,540,replace,[CE] , //  removedAllAgedItems(false,  false);  if(notify)  {  fireSeriesChanged();  }  ;  }    ,if(notify) { fireSeriesChanged(); } ; b.toString() : null; Added = true; throw new SeriesException(""); }
compilation error,540,replace,[CE] ';' expected, //  removedAllAgedItems(false,  false);  if(notify)  {  fireSeriesChanged();  }  ;  }    ,if(notify) { fireSeriesChanged(); } ; b.toString() : null; Added
patch is same with buggy,540,replace,, //  removedAgedItems(false);  item.addChangeListener(this);  if(notify)  {  fireSeriesChanged();  }    ,// removedAgedItems(false); item.addChangeListener(this); if(notify) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  if(added))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  ,if(item.getItemCount() > this.maximumItemCount) { // removeAgedItems(false); if(added) { fireSeriesChanged(); bodied ; b.toString() : null; }
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(added))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  ,// removeAgedItems(false); if(added)) { fireSeriesChanged(); bodied ; b.toString() : null; } ;
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bod ; bod? bod : b.toString(); }
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bod ; bod = b.toString(); }
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bod ; bod? bod : b.toString(); b.toString(); }
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,[Delete]
compilation error,540,replace,[CE] class or interface expected, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,}
compilation error,540,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  //  removeAgedItems(false);?!!  addAgedItems(false);  ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); Afterward ; // removeAgedItems(false); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod() > this.maximumItemCount) { // removedAllAgedItems(false); b.append(item.getPeriod()).append('n'); }
compilation error,540,add,[CE] not a statement, ,if(added) { if(notify) { fireSeriesChanged(); Toujours ; b.toString() : null; Toujours ; b.toString() : null; }
compilation error,540,add,[CE] not a statement, ,if(added) { if(notify) { fireSeriesChanged(); Toujours ; b.toString() : null; } ; b.toString() : null; Toujours ; b.toString() : null; }
compilation error,540,add,[CE] not a statement, ,if(added) { if(notify) { fireSeriesChanged(); Toujours ; b.toString() : null; } ;
compilation error,540,replace,[CE] cannot find symbol, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  bodied  ;  b.toString()  :  null;  }  ;  b.toString()  :  ,this.data.removeAgedItems(true); if(notify) { fireSeriesChanged(); }
compilation error,540,replace,[CE] no suitable method found for add(TimeSeriesDataItem,Object), //  this.data.add(item);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  b.toString();  ,this.data.add(item, this.data.get(this.maximumItemCount));
compilation error,174,add,[CE] illegal start of expression, ,if(domain == null) { if(domain.length() == 0) { this.domain = domain; this.range = range; }
compilation error,174,add,[CE] illegal start of expression, ,if(domain == null) { if(domain == null) { this.domain = domain; if(timePeriodClass == null) { timePeriodClass = timePeriodClass; }
compilation error,880,add,[CE] , ,System.err.println("Requires start constituted 0 ").length());
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  ,if(item!= null) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); } ; Added
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  ,if(item!= null) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); bodied ; Added
increase failing tests,540,add, [FE] AssertionFailedError, ,this.data.add(item); if(added) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(added) { b.toString(); & b.toString() : null; & b.toString() : null; }
compilation error,540,add,[CE] illegal start of expression, ,if(added) { b.toString(); & b.toString() : null; & b.toString() : null; } ;
compilation error,540,add,[CE] illegal start of expression, ,if(!b.hasChanged()) { if(notify) { fireSeriesChanged(); } ; & b.toString() : null; & b.toString() : null; } ;
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); bodied ; bodied ;
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  ,if(item.getItemCount() > this.maximumItemCount) { if(!added) { fireSeriesChanged(); bodied ; bodied ; }
compilation error,540,replace,[CE] ')' expected, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  fiance  ,if(this.data.removeAgedItems(true); if(notify)) { fireSeriesChanged(); } ;
compilation error,540,add,[CE] ';' expected, ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); } ; Added
compilation error,540,add,[CE] incompatible types, ,boolean removed = this.data.remove(0);
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  this.data.add(item,  getItemCount()  -  1);  ,// deleteAgedItems(false); this.data.add(item, getItemCount() - 1);
compilation error,540,add,[CE] not a statement, ,b.append(item.getPeriod()); limb ; bodied ;
compilation error,540,add,[CE] not a statement, ,b.append(Item.getTime()); limb ; bodied ;
compilation error,540,replace,[CE] cannot find symbol, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  slated  ,this.data.addAgedItems(true); b.append(item.getPeriod()).append('n');
compilation error,173,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = Integer.MIN_VALUE / 2 + 1;
compilation error,540,add,[CE] not a statement, ,bod ;? boolean notify = b.toString()!= this.data.get(item); b.toString(); }
compilation error,540,add,[CE] not a statement, ,bod ;? boolean notify = b.toString()!= this.data.get(item); b.toString(); bod ;? bod :? bod) { fireSeriesChanged();
compilation error,540,add,[CE] not a statement, ,this.data.remove(0); bodied ;
patch is same with buggy,173,replace,, this.domain  =  domain  + "DEFAULT_DOMAIN_DESCRIPTION  = "  +  DEFAULT_RANGE_DESCRIPTION;  ,this.domain = domain +"DEFAULT_DOMAIN_DESCRIPTION =" + DEFAULT_RANGE_DESCRIPTION;
compilation error,540,add,[CE] not a statement, ,b.append(item.getPeriod()); bodied if(notify) { fireSeriesChanged(); figured ;
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  >>  ;  ,if(item.getItemCount() > this.maximumItemCount) { // removedAllAgedItems(true); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,&& item.getPeriod() > this.maximumItemCount); b.append(item.getPeriod().toString());
compilation error,540,add,[CE] illegal start of expression, ,&& item.getPeriod() > this.maximumItemCount); b.append(this.data.getPeriod().toString());
compilation error,540,add,[CE] illegal start of expression, ,&& item.getPeriod() > this.maximumItemCount) { b.append(item.getPeriod().toString());
patch is same with buggy,174,replace,, this.maximumItemCount  =  Math.max(1,  0);  ,this.maximumItemCount = Math.max(1, 0);
compilation error,174,replace,[CE] bad operand types for binary operator '*', this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION  +  0;  ,this.range = range * DEFAULT_DOMAIN_DESCRIPTION + DEFAULT_RANGE_DESCRIPTION + 1;
compilation error,540,add,[CE] illegal start of expression, ,if(item.getSeriesCount() > this.maximumItemCount) { // removeAgedItems(false, item); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] cannot find symbol, ,this.data.add(item); b.append(getPeriod()).append('n');
compilation error,540,add,[CE] cannot find symbol b, ,this.data.remove(0); bodied : b.toString();
compilation error,540,replace,[CE] illegal start of expression, //  this.data.getAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  delt  ,if(this.data.getAgedItems()) { // this.data.getAgedItems(true); if(notify) { fireSeriesChanged(); }
patch is same with buggy,174,replace,, if(domain!=  null  &&  range!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  ,if(domain!= null && range!= null) { this.domain = domain; this.range = range; }
compilation error,540,replace,[CE] cannot find symbol b, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  slated  ,updateBounds(item.getPeriod(), b.toString(), this.data.size() - 1);
compilation error,540,replace,[CE] cannot find symbol b, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  slated  ,this.data.add(item); updateBounds(item.getPeriod(), b.toString(), this.data.size() - 1);
compilation error,540,add,[CE] ';' expected, ,this.data.remove(0); slated
compilation error,540,add,[CE] not a statement, ,if(aged) { fireSeriesChanged(); bodied ; hopped ;
compilation error,540,add,[CE] not a statement, ,boolean alert = b.toString()!= this.data.get(item); if(aged) { fireSeriesChanged(); bodied ; hopped ;
compilation error,540,add,[CE] ';' expected, ,if(notify) { fireSeriesChanged(); slated
patch is same with buggy,540,replace,, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  fiance  ,// removeAgedItems(false); this.data.add(item); if(notify) { fireSeriesChanged(); } ; fiance
patch is same with buggy,174,replace,, this.maximumItemAge  =  maximumItemAge  +  1;  ,this.maximumItemAge = maximumItemAge + 1;
compilation error,174,replace,[CE] bad operand types for binary operator '+', this.maximumItemAge  =  maximumItemAge  +  1;  ,this.maximumItemAge = timePeriodClass + 1;
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))!=  this.data.  ,// deleteAgedItems(true); if(notify) { fireSeriesChanged(); && item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))!= this.data.
compilation error,173,add,[CE] unclosed string literal, ,this.domain = domain +"DEFAULT_DOMAIN_DESCRIPTION = DEFAULT_RANGE_DESCRIPTION;
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); Toujours ;? boolean notify = b.toString()!= this.data.get(item); b.toString(); b.toString(); }
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); Toujours ;? boolean notify = b.toString()!= this.data.get(item); b.toString(); b.toString(); b.toString(); }
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); Toujours ;? boolean notify = b.toString()!= this.data.get(item); b.toString(); }
patch is same with buggy,173,replace,, this.maximumItemCount  =  Integer.MIN_VALUE  /  2;  ,this.maximumItemCount = Integer.MIN_VALUE / 2;
patch is same with buggy,880,replace,, System.err.println( "Requires  end  =  1.0 ");  ,System.err.println("Requires end = 1.0");
patch is same with buggy,880,replace,, System.err.println( "Requires  end  =  1.0 ");  ,System.err.println("Requires end = 1.0 ");
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  >>  ;  ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); regain ; hopped ; bodied ; Embry ; Toujours ; Toujours ; Toujours ; Added ;
compilation error,540,add,[CE] ')' expected, ,bodied : bodied(b.toString() : null;
compilation error,540,add,[CE] ')' expected, ,bodied : bodied(b.toString() : null);
compilation error,540,replace,[CE] illegal start of expression, //  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString()  ,if(this.data.size() > this.maximumItemCount) { // deleteAgedItems(false); this.data.add(item, this.maximumItemCount); bodied ; bodied
compilation error,540,add,[CE] not a statement, ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); regain ; bodied ; hopped ; Embry ; Toujours ; Possibly ; Toujours ; Added ;
compilation error,540,add,[CE] not a statement, ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); regain ; bodied ; hopped ; Embry ; Toujours ; Possibly ; Toujours ; Embry ;
compilation error,540,add,[CE] no suitable method found for add(TimeSeriesDataItem,int), ,this.data.add(item, getItemCount() / this.maximumItemCount);
compilation error,540,add,[CE] not a statement, ,this.data.remove(0); bodied ; & b.toString() : null;
compilation error,540,add,[CE] not a statement, ,this.data.remove(0); hopped && item.getPeriod().getTime().equals(this.timePeriodClass.getName())) { this.data.remove;
compilation error,540,add,[CE] not a statement, ,this.data.remove(0); hopped && item.getPeriod().getTime().equals(this.timePeriodClass.getName())) { this.data.add(item);
compilation error,540,add,[CE] not a statement, ,this.data.remove(0); hopped && item.getPeriod().getTime().equals(this.timePeriodClass.getName()));
compilation error,174,replace,[CE] cannot find symbol minimumItemAge, this.maximumItemAge  =  getMaximumItemAge()  +  1;  ,this.minimumItemAge = getMinimumItemAge() - 1;
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(true,  true);  if(notify))  {  fireSeriesChanged();  }  ;  }  ,if(item.getItemCount() > this.maximumItemCount) { // removedAgedItems(true, true); if(notify)) { fireSeriesChanged(); }
compilation error,880,replace,[CE] unclosed string literal, System.err.println( "Requires  start  %  2  ==  0   ".length());  ,System.err.println("Requires start % 2 : 0".equals(start)");
compilation error,540,add,[CE] illegal start of expression, ,if(item == null) { if(notify) { fireSeriesChanged(); } ;
patch is same with buggy,174,replace,, this.domain  =  domain;  if(timePeriodClass  ==  null)  {  this.domain  =  domain;  }  ,this.domain = domain; if(timePeriodClass == null) { this.domain = domain; }
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(true);  if(notify))  }  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  ,if(aged) { fireSeriesChanged(); slated ; hopped ;
compilation error,540,add,[CE] illegal start of expression, ,if(item.getItemCount() > this.maximumItemCount) { if(!added) { fireSeriesChanged(); }
compilation error,540,add,[CE] unclosed string literal, ,if(item.getItemCount() > this.maximumItemCount) { StringBuffer b = new StringBuffer(this.data.size()); if(b.startsWith("-")) { throw new IllegalArgumentException("); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getItemCount() > this.maximumItemCount) { StringBuffer b = new StringBuffer(this.data.size()); if(b.startsWith("-")) { throw new SeriesException(""); }
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  fiance  ,b.append(item.getPeriod()); bod ; bod? bod! bod : bod
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  fiance  ,b.append(Item.getPeriod()); bod ; bod? bod! bod : bod
compilation error,173,add,[CE] cannot find symbol itemCount, ,this.itemCount = domain + DEFAULT_DOMAIN_DESCRIPTION + 6;
compilation error,173,add,[CE] cannot find symbol name, ,this.name = domain + DEFAULT_DOMAIN_DESCRIPTION + 6;
compilation error,540,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  //  removeAgedItems(false);?!!  addAgedItems(false);  ,if(notify) { fireSeriesChanged(); slated ; // removeAgedItems(false); bodied ;
compilation error,540,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  //  removeAgedItems(false);?!!  addAgedItems(false);  ,if(notify) { fireSeriesChanged(); slated ; // removeAgedItems(false); bodied ; // removeAgedItems(false); Added ;
compilation error,540,add,[CE] cannot find symbol, ,this.data.addAgedItems(true); b.addChangeListener(this, item);
compilation error,540,add,[CE] illegal start of expression, ,if(item.getItemCount() > this.maximumItemCount) { b.append(item.getItemCount()); if(added) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getItemCount() > this.maximumItemCount) { b.append(item.getItemCount()); if(!added) { fireSeriesChanged(); }
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); slated ; // removeAgedItems(false); // removeAgedItems(false);
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bodied ; // removeAgedItems(false); // removeAgedItems(false);
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); slated ; // removeAgedItems(true); // removeAgedItems(false);
compilation error,540,add,[CE] not a statement, ,b.append(Item.getTime()); limb ; bodied if(notify) { fireSeriesChanged(); limb ; hopped ;
compilation error,540,add,[CE] not a statement, ,b.append(Item.getTime()); limb ; bodied if(notify) { fireSeriesChanged(); limb ; bodied ;
compilation error,540,add,[CE] not a statement, ,b.append(item.getPeriod()); limb ; bodied if(notify) { fireSeriesChanged(); limb ; hopped ;
compilation error,540,add,[CE] ';' expected, ,boolean notify =!this.data.containsKey(item.getItemCount()); b.toString() : null;
compilation error,540,add,[CE] not a statement, ,boolean! notify = b.toString()!= this.data.get(item); b.toString();
patch is same with buggy,540,replace,, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  ,// removeAgedItems(false, item); if(notify) { fireSeriesChanged(); bodied ; bodied if(notify) { fireSeriesChanged(); } ; bodied ;
patch is same with buggy,540,replace,, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  , 
compilation error,540,add,[CE] not a statement, ,this.data.remove(0); bodied && item.getPeriod().getTime().equals(this.data.get(item.getPeriod())));
compilation error,540,add,[CE] not a statement, ,if(!added) { if(notify) { fireSeriesChanged(); bodied ; bodied : b.toString() : null; bodied ; bodied : b.toString() : null; slated ;
compilation error,174,add,[CE] illegal start of expression, ,if(timePeriodClass == null) { if(domain == null) { this.domain = domain; }
compilation error,174,add,[CE] illegal start of expression, ,if(timePeriodClass == null) { if(domain!= null) { this.domain = domain; }
patch is same with buggy,174,replace,, this.maximumItemCount  =  this.maximumItemCount  *  2  +  1;  ,this.maximumItemCount = this.maximumItemCount * 2 + 1;
compilation error,540,add,[CE] ';' expected, ,if(!b.toString()) { if(notify) { fireSeriesChanged(); } ; b.toString() : null; }
patch is same with buggy,880,replace,, System.err.println( "Requires  start  %  2  ==  0.   ");  ,System.err.println("Requires start % 2 == 0.");
patch is same with buggy,880,replace,, System.err.println( "Requires  start  %  2  ==  0.   ");  , 
compilation error,540,add,[CE] illegal start of expression, ,&& item.getPeriod().startsWith(this.maximumItemCount)); b.toString();
compilation error,540,replace,[CE] illegal start of expression, //  removedAllAgedItems(false,  false);  if(notify)  {  fireSeriesChanged();  }  ;  }    ,if(item.getItemCount() > this.maximumItemCount) { // deleteAgedItems(true, item); if(notify) { fireSeriesChanged(); }
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ,// removeAgedItems(false); if(notify)) { fireSeriesChanged(); bodied ; b.toString() : null; }
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ,// removeAgedItems(false); if(notify)) { fireSeriesChanged(); bodied ; b.toString() : null; }
compilation error,540,add,[CE] not a statement, ,if(!added) { fireSeriesChanged(); bodied ;
compilation error,540,add,[CE] not a statement, ,if(aged) { fireSeriesChanged(); bodied ; removed = b.toString(); }
compilation error,540,replace,[CE] method get in interface List cannot be applied to given types;, //  removeAgedItems(true);  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  ,b.append(item.getPeriod().getTime()).equals(this.data.get(item.getPeriod())).equals(this.data.get(item.getPeriod()));
compilation error,540,add,[CE] illegal start of expression, ,if(item.getItemCount() > this.maximumItemCount) { // removeAgedItems(false, item); if(notify) { fireSeriesChanged(); bodied if(notify) { fireSeriesChanged(); }
patch is same with buggy,540,replace,, //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ,// this.data.removeAgedItems(true); if(notify) { fireSeriesChanged(); bodied
compilation error,880,add,[CE] <identifier> expected, ,System.err.println("Requires end = 1.0".);
compilation error,540,add,[CE] illegal start of expression, ,if(this.data.size() > this.maximumItemCount) { // deleteAgedItems(false); this.data.add(item); if(added) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,if(added) { // removedAgedItems(true); this.data.add(item); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,&(getItemCount() > this.maximumItemCount)? getItemCount() : null; & b.toString() : null; & b.toString() : null;
compilation error,540,add,[CE] illegal start of expression, ,&(getItemCount() > this.maximumItemCount)? null : getItemCount(); & b.toString() : null; & b.toString() : null;
compilation error,540,add,[CE] illegal start of expression, ,&(getItemCount() > this.maximumItemCount)? getItemCount() : null; & b.toString() : null;
patch is same with buggy,540,replace,, //  this.data.add(item);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  b.toString();  ,// this.data.add(item); if(notify) { fireSeriesChanged(); rang && item.getPeriod().startsWith(this.maximumItemCount)) { b.toString(); b.toString();
patch is same with buggy,540,replace,, //  this.data.add(item);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  b.toString();  , 
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bodied ; // removeAgedItems(false); } ;
compilation error,540,add,[CE] illegal start of expression, ,if(notify) { fireSeriesChanged(); && removeAgedItems(false);, b.toString(); } ;
compilation error,540,add,[CE] illegal start of expression, ,if(notify) { fireSeriesChanged(); && removeAgedItems(false);, b.toString(); b.append('ufffd'); } ;
compilation error,540,replace,[CE] not a statement, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,b.append(item.getPeriod()); bodied ; bodied if(notify) { fireSeriesChanged(); } ; bodied ;
compilation error,540,replace,[CE] not a statement, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,b.append(item.getPeriod()); bodied ; bodied if(notify) { fireSeriesChanged(); slated ; bodied ;
compilation error,540,add,[CE] not a statement, ,b.append(item.getPeriod()); limb ;
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(true;  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  ,if(item.getItemCount() > this.maximumItemCount) { // removedAgedItems(true, item); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] not a statement, ,this.data.add(item, getItemCount() - this.maximumItemCount)+ 1;
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  this.data.add(item);  if(added)  {  fireSeriesChanged();  bodied  ,// deleteAgedItems(false); this.data.add(item); if(added) { fireSeriesChanged(); bodied
compilation error,540,replace,[CE] cannot find symbol, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  slated  ,this.data.addAgedItem(true); b.append(item);
patch is same with buggy,174,replace,, this.range  =  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION  +  1;  ,this.range = DEFAULT_DOMAIN_DESCRIPTION + DEFAULT_RANGE_DESCRIPTION + 1;
compilation error,540,add,[CE] not a statement, ,if(item == null) { if(notify) { fireSeriesChanged(); bodied if(getItemCount() > this.maximumItemCount) { this.data.remove(0); }
compilation error,540,add,[CE] not a statement, ,if(item == null) { if(notify) { fireSeriesChanged(); bodied if(!added) { fireSeriesChanged(); } ; bodied if(getAgedItems(false, item)) { fireSeriesChanged(); }
compilation error,540,add,[CE] not a statement, ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); bodied if(!added) { fireSeriesChanged(); } ; bodied if(add) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  >>  ;  ,b.append(getItemCount() - this.maximumItemCount); if(notify) { fireSeriesChanged(); } ; &!b.append(item); }
compilation error,540,replace,[CE] cannot find symbol b, //  removedAgedItems(true;  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  ,this.data.remove(0); b.setLength(0);
compilation error,880,add,[CE] <identifier> expected, ,System.err.println("Requires start - 0".);
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,if(item.getItemCount() > this.maximumItemCount) { // removeAgedItems(false, item); if(notify) { fireSeriesChanged(); bodied ; bodied if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bodied ; bodied : b.toString() : null; bodied ;
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bodied ; bodied : b.toString() : null; bodied ; bodied : b.toString() : null; } ;
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bodied ; bodied? b.toString() : null; bodied ; bodied : b.toString() : null; } ;
compilation error,540,add,[CE] method get in interface List cannot be applied to given types;, ,b.append(Item.getPeriod()).append(this.data.get(item.getPeriod()));
compilation error,540,add,[CE] cannot find symbol Item, ,b.append(Item.getPeriod());
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(false);  item.addChangeListener(this);  if(notify)  {  fireSeriesChanged();  }    ,if(added) { // removedItems(true); this.data.add(item); if(notify) { fireSeriesChanged(); }
compilation error,173,add,[CE] cannot find symbol itemCount, ,this.itemCount = Integer.MAX_VALUE / 10 + 1;
compilation error,540,add,[CE] not a statement, ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); bodied ; hopped ; } ;
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  ,// deleteAgedItems(false); && item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))
compilation error,540,add,[CE] not a statement, ,this.data.remove(0); hopped && item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))) { fireSeriesChanged();
compilation error,540,add,[CE] not a statement, ,this.data.remove(0); hopped && item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))) { this.data.add(item);
compilation error,540,replace,[CE] cannot find symbol b, //  removeAgedItems(true);  this.data.add(item,  getItemCount()  -  1);  ,b.append(item.getPeriod().toString()); b.append(this.data.get(item.getPeriod().toString()));
patch is same with buggy,173,replace,, this.maximumItemCount  =  Integer.MAX_VALUE  %  10;  , 
compilation error,540,add,[CE] not a statement, ,b.append(item.getPeriod()).append(this.data.get(item.getValue())); bodied ; & b.toString() : null;
compilation error,540,add,[CE] not a statement, ,b.append(item.getPeriod()).append(this.data.get(item.getItemCount())); bodied ; & b.toString() : null;
compilation error,173,add,[CE] cannot find symbol itemCount, ,this.itemCount = Integer.MAX_VALUE / 12;
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify)  propag  fireSeriesChanged();  fought  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  ,// deleteAgedItems(false); if(notify) propag fireSeriesChanged(); fought && item.getPeriod().getTime().equals(this.timePeriodClass.getName())) { this.data.remove
compilation error,540,add,[CE] not a statement, ,b.append(item.getPeriod()); bodied ; bodied if(notify) { fireSeriesChanged(); } ;
compilation error,540,add,[CE] not a statement, ,b.append(Item.getTime()); bodied ; bodied if(notify) { fireSeriesChanged(); bodied ;
compilation error,540,replace,[CE] illegal start of expression, //  addAgedItems(false);  if(added)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  ,if(added) { // removeAgedItems(true); if(notify)) { fireSeriesChanged(); bodied ; b.toString() : null; }
patch is same with buggy,540,replace,, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  >>  ;  , 
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(true;  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  ,if(added) { // removedAgedItems(true, false); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] not a statement, ,this.data.remove(0); hopped ; bodied ; slated ;
compilation error,540,add,[CE] not a statement, ,b.append(item.getPeriod()); hopped ; bodied ; slated ;
compilation error,540,replace,[CE] cannot find symbol b, //  removedAgedItems(true;  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  ,b.append(getItemCount() - this.maximumItemCount); b.append(item.getPeriod()).toString();
compilation error,174,add,[CE] illegal start of expression, ,if(timePeriodClass == null) { this.domain = domain; if(timePeriodClass == null) { this.domain = range; }
compilation error,174,add,[CE] illegal start of expression, ,if(timePeriodClass == null) { this.domain = domain; if(timePeriodClass == null) { this.domain = domain; if(timePeriodClass == null) { this.domain = domain; }
compilation error,540,add,[CE] cannot find symbol b, ,b.append(item.getPeriod()); if(notify) { fireSeriesChanged(); } ;
compilation error,880,add,[CE] , ,System.err.println("Requires start % 2 constituted 0 ").length());
compilation error,174,replace,[CE] illegal start of expression, if(this.domain!=  null)  {  this.range  =  domain;  this.timePeriodClass  =  timePeriodClass;  }  ,if(this.range!= null) { if(this.domain!= null) { this.range = domain; this.timePeriodClass = timePeriodClass; }
compilation error,540,add,[CE] not a statement, ,b.append(getItemCount() - this.maximumItemCount); slated ; &!b.append(item);
compilation error,540,add,[CE] cannot find symbol, ,this.data.addAgedItems(true); b.addChangeListener(this);
compilation error,540,add,[CE] cannot find symbol b, ,b.addAgedItems(true); b.addChangeListener(this);
patch is same with buggy,880,replace,, System.err.println( "Requires  end  <<  0   ");  , 
compilation error,540,add,[CE] cannot find symbol, ,if(this.data.getAgedItems(true)) { fireSeriesChanged(); } ;
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  &  ;  }  ,if(this.data.size() > this.maximumItemCount) { // removeAgedItems(true); this.data.add(item); if(notify) { fireSeriesChanged(); }
compilation error,174,replace,[CE] illegal start of expression, if(this.domain  ==  null)  {  this.domain  =  domain;  }  else  {  timePeriodClass  =  timePeriodClass;  }  ,if(this.domain!= null) { this.domain = domain; if(timePeriodClass == timePeriodClass) {
compilation error,540,replace,[CE] cannot find symbol minimumItemCount, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,this.data.add(item, getItemCount() - this.minimumItemCount);
patch is same with buggy,173,replace,, this.maximumItemCount  =  Integer.MAX_VALUE  *  2;  , 
compilation error,540,add,[CE] not a statement, ,b.toString().removeAgedItems(false); if(notify) { fireSeriesChanged(); bodied ; b.toString() : null; bodied ;
compilation error,540,add,[CE] not a statement, ,b.toString().removeAgedItems(false); if(notify) { fireSeriesChanged(); bodied ; b.toString() : null; bodied ; b.toString() : null; bodied ;
compilation error,540,add,[CE] not a statement, ,b.toString().getAgedItems(); bodied ; b.toString() : null; bodied ;
compilation error,540,add,[CE] ';' expected, ,b.toString() : null; & b.toString() : null;
compilation error,540,add,[CE] illegal start of expression, ,&(getItemCount() > this.maximumItemCount)? null : getItemCount(); b.toString() : null; & b.toString() : null;
compilation error,540,add,[CE] not a statement, ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); bodied ; bodied ; bodied ;
compilation error,540,add,[CE] not a statement, ,if(item.getItemCount() > this.maximumItemCount) { if(!added) { fireSeriesChanged(); bodied ; bodied ;
compilation error,540,replace,[CE] illegal start of expression, //  this.data.add(item,  this.timePeriodClass);  ,if(item.getItemCount() > this.maximumItemCount) { // removeAgedItems(false, item); if(notify) { fireSeriesChanged(); figured ; Added if(added) { fireSeriesChanged(); }
compilation error,540,add,[CE] cannot find symbol b, ,b.removeAgedItems(true); b.addListener(this, item);
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  bodied  ;  bodied  if(notify)  {  fireSeriesChange  ,if(notify) { fireSeriesChanged(); limb ;
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  bodied  ;  bodied  if(notify)  {  fireSeriesChange  ,this.data.remove(0); limb ;
compilation error,540,add,[CE] not a statement, ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); bodied if(notify) { fireSeriesChanged(); } ; bodied : b.toString(); } ;
compilation error,540,add,[CE] not a statement, ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); bodied if(notify) { fireSeriesChanged(); } ; bodied : b.append(item.getItemCount()
compilation error,540,add,[CE] not a statement, ,if(item.getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); bodied if(notify) { fireSeriesChanged(); } ; bodied : b.toString(); }
compilation error,540,add,[CE] cannot find symbol, ,this.data.addAgedItems(true, true);
compilation error,540,add,[CE] not a statement, ,bod ;? bod : b.toString();
compilation error,540,add,[CE] not a statement, ,bod ;? bod : b.toString()!= this.data.get(item); b.toString();
compilation error,540,add,[CE] not a statement, ,bod ;? bod : b.toString(); this.data.remove(0);
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); slated ; b.toString() : null; slated ; b.toString() : null; }
compilation error,880,add,[CE] , ,System.err.println("Requires start % 2 : 0 ").length());
compilation error,540,replace,[CE] illegal start of expression, //  deleteAgedItems(true);  b.addListener(this,  item);  ,if(item.getItemCount() > this.maximumItemCount) { // deleteAgedItems(true); b.addListener(this, item); }
patch is same with buggy,540,replace,, //  this.data.add(item);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  b.toString();  , 
compilation error,540,add,[CE] not a statement, ,boolean ignored = this.data.containsKey(item.getPeriod()); if(aged) { fireSeriesChanged(); } ; hopped ;
compilation error,540,add,[CE] cannot find symbol, ,boolean ignored = this.data.containsKey(item.getPeriod()); b.toString();
compilation error,540,replace,[CE] cannot find symbol b, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  >>  ;  ,if(added) { b.append(item); if(notify) { fireSeriesChanged(); } ; }
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  >>  ;  ,if(this.data.size() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); } ; meanwhile
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify)  induced  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString()  ,// deleteAgedItems(false); if(notify) induced fireSeriesChanged(); && item.getDataItemCount() > this.maximumItemCount); b.append(item.getPeriod().toString()
patch is same with buggy,540,replace,, //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString()  ,// removedAllAgedItems(false); if(notify) { fireSeriesChanged(); hopped && item.getDataItemCount() > this.maximumItemCount); b.append(item.getPeriod().toString()
patch is same with buggy,540,replace,, //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString()  , 
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(true,  item);  b.addChangeListener(this);  ,if(added) { // removedAgedItems(true, true); if(notify) { fireSeriesChanged(); Added
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  }  ,if(item.getItemCount() > this.maximumItemCount) { // removeAgedItems(true, item); if(notify) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  }  ,if(added) { // removeAgedItems(true, item); if(notify) { fireSeriesChanged(); }
patch is same with buggy,173,replace,, this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  6;  ,this.domain = domain + DEFAULT_DOMAIN_DESCRIPTION + 6;
compilation error,174,add,[CE] cannot find symbol itemCount, ,this.itemCount = Integer.MIN_VALUE / 2 + 1;
compilation error,880,add,[CE] not a statement, ,System.err.println("Requires start - 0 ").length() + 1);
compilation error,540,add,[CE] , ,if(item.getPeriod().equals(this.data.get(item)); if(notify) { fireSeriesChanged(); } && item.getPeriod().equals(this.data.get(item)); }
compilation error,540,add,[CE] illegal start of expression, ,&& item.getPeriod().equals(this.data.get(item));
compilation error,540,add,[CE] , ,if(item.getPeriod().equals(this.data.get(item)); if(added) { fireSeriesChanged(); } && item.getPeriod().equals(this.data.get(item)); }
patch is same with buggy,174,replace,, this.maximumItemCount  =  this.maximumItemCount  /  2  +  1;  ,this.maximumItemCount = this.maximumItemCount / 2 + 1;
compilation error,540,add,[CE] ';' expected, ,if(item!= null) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); } ; blown
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  &  b.toString()  :  null;  }  ;  ,if(this.add) { if(notify) { fireSeriesChanged(); if(getItemCount() > this.maximumItemCount) { this.data.remove(0); }
compilation error,540,add,[CE] ';' expected, ,b.toString() : null;
compilation error,540,add,[CE] cannot find symbol b, ,b.append(item.getPeriod().toString()); b.append(item.getDataItemCount().toString());
compilation error,880,add,[CE] , ,System.err.println("Requires start % 2 = 0 ").length());
patch is same with buggy,173,replace,, this.maximumItemCount  =  Integer.MAX_VALUE  /  10  +  1;  , 
compilation error,540,add,[CE] cannot find symbol, ,this.data.removeAllUnagedItems(this.data, item);
compilation error,540,add,[CE] illegal start of expression, ,if(this.data.size() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); && item.getPeriod().getTime().equals(this.timePeriodClass.getName()); }
compilation error,540,add,[CE] illegal start of expression, ,if(this.data.size() > this.maximumItemCount) { if(!added) { fireSeriesChanged(); && item.getPeriod().getTime().equals(this.timePeriodClass.getName()); }
compilation error,540,add,[CE] illegal start of expression, ,if(this.data.size() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); } && item.getPeriod().getTime().equals(this.timePeriodClass.getName()); }
compilation error,540,add,[CE] no suitable method found for add(TimeSeriesDataItem,TimeSeries), ,this.data.add(item, this);
compilation error,540,add,[CE] unclosed character literal, ,if(added) { b.append('ufffd'); if(!b.hasChanged()) { fireSeriesChanged(); }
compilation error,540,add,[CE] unclosed character literal, ,if(added) { b.append('ufffd'); if(!b.hasChanged()) { this.data.remove(item); }
compilation error,540,add,[CE] not a statement, ,b.append(item.getPeriod()); bodied ; bodied = b.toString() : null;
patch is same with buggy,540,replace,, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  else  if(added)  {  this.data.add(item);  b.toString()  :  null;  }  ,// removeAgedItems(true); if(notify) { fireSeriesChanged(); bodied else if(added) { this.data.add(item); b.toString() : null; }
patch is same with buggy,540,replace,, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  else  if(added)  {  this.data.add(item);  b.toString()  :  null;  }  ,// removeAgedItems(true); if(notify) { fireSeriesChanged(); bodied else if(added) { this.data.add(item); b.toString() : null; }
compilation error,174,replace,[CE] illegal start of expression, if(this.domain!=  null)  {  this.range  =  domain;  this.timePeriodClass  =  timePeriodClass;  }  ,if(this.range!= null) { if(this.range!= null) { this.range = range; this.timePeriodClass = timePeriodClass; }
compilation error,540,add,[CE] cannot find symbol b, ,boolean removed = b.toString()!= this.data.get(item); b.toString();
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  &  b.toString()  :  null;  ,if(aged) { fireSeriesChanged(); & hopped ;
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bodied ; bodied : b.toString() : null; bodied ; bodied : b.toString() : null; }
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); bodied ; bodied? b.toString() : null; bodied ; bodied : b.toString() : null; }
compilation error,540,add,[CE] ')' expected, ,if(bod ;? boolean notify = b.toString()!= this.data.get(item); bod ;? bod :) { fireSeriesChanged(); bod ;? bod : b.toString(); b.toString(); }
compilation error,540,add,[CE] ')' expected, ,if(bod ;? boolean notify = b.toString()!= this.data.get(item); bod ;? bod :) { fireSeriesChanged(); bod ;? bod : b.toString(); }
compilation error,540,add,[CE] ')' expected, ,if(bod ;? boolean notify = b.toString()!= this.data.get(item); bod ;? bod :) { fireSeriesChanged(); bod ;?
compilation error,540,add,[CE] not a statement, ,boolean! notify = b.toString()!= this.data.get(item); bod ;
patch is same with buggy,174,replace,, this.maximumItemCount  =  Integer.MAX_VALUE  *  2;  ,this.maximumItemCount = Integer.MAX_VALUE * 2;
compilation error,174,add,[CE] illegal start of expression, ,if(this.domain!= null) { if(this.range!= null) { this.data = new ArrayList(); }
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.to  ,// removeAgedItems(false); if(notify) { fireSeriesChanged(); } ; bodied? boolean notify = b.toString()!= this.data.get(item); b.toString(); b.to
compilation error,540,add,[CE] not a statement, ,bod ; bod : b.toString(); b.toString();
compilation error,540,add,[CE] not a statement, ,boolean!(this.data.size() > this.maximumItemCount);
compilation error,540,replace,[CE] cannot find symbol b, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  slated  ,b.append(item.getPeriod()).append('-');
compilation error,540,add,[CE] cannot find symbol, ,boolean fireSeriesChanged = item.getSeriesChanged();
compilation error,540,add,[CE] method get in interface List cannot be applied to given types;, ,boolean fireSeriesChanged = this.data.get(item.getPeriod());
compilation error,540,add,[CE] cannot find symbol b, ,boolean arg =(getItemCount() > this.maximumItemCount)? this.data.get(0): b.toString();
compilation error,540,add,[CE] cannot find symbol b, ,boolean arg = getItemCount() > this.maximumItemCount; b.toString();
compilation error,540,add,[CE] cannot find symbol b, ,b.setItemCount(getItemCount() - 1); this.data.add(item);
patch is same with buggy,540,replace,, //  this.data.add(item);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  b.toString();  ,// this.data.add(item); if(notify) { fireSeriesChanged(); hopped && item.getPeriod().startsWith(this.maximumItemCount)) { b.toString(); b.toString();
patch is same with buggy,540,replace,, //  this.data.add(item);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  b.toString();  ,// this.data.add(item); if(notify) { fireSeriesChanged(); hopped && item.getPeriod().startsWith(this.maximumItemCount)) { b.toString(); b.toString();
patch is same with buggy,174,replace,, if(this.range!=  null)  {  this.range  =  domain;  this.timePeriodClass  =  timePeriodClass;  }  ,if(this.range!= null) { this.range = domain; this.timePeriodClass = timePeriodClass; }
patch is same with buggy,540,replace,, //  this.data.addAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ,// this.data.addAgedItems(true); if(notify) { fireSeriesChanged(); }
compilation error,540,replace,[CE] cannot find symbol, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  slated  ,b.append(getPeriod()).toString();
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  ,boolean!(item.getPeriod().equals(this.data.get(item.getPeriod()))) { this.data.add(item);
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  ,boolean!(item.getPeriod().equals(this.data.get(item)))) { this.data.add(item);
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  bodied  ;  b.toString()  :  null;  }  ;  b.toString()  :  ,b.append(Item.getPeriod()).append(getItemCount() - 1); bodied ;
compilation error,540,replace,[CE] cannot find symbol Added, //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  bodied  ;  b.toString()  :  null;  }  ;  b.toString()  :  ,Added = item.getPeriod().toString();
compilation error,540,replace,[CE] cannot find symbol, //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ,boolean bod = item.isAged();
compilation error,540,replace,[CE] cannot find symbol, //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ,boolean bod = item.getPeriod().hasChildren();
compilation error,540,add,[CE] illegal start of expression, ,if(item) { this.data.add(item); if(getItemCount() > this.maximumItemCount) { this.data.add(item); }
compilation error,540,add,[CE] illegal start of expression, ,if(item) { this.data.add(item); if(added) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(item) { this.data.add(item); if(!added) { fireSeriesChanged(); }
compilation error,540,replace,[CE] not a statement, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,limb ; bodied ;
compilation error,540,replace,[CE] not a statement, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,limb : bodied ;
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  ,// deleteAgedItems(false); && item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))
compilation error,540,replace,[CE] illegal start of expression, //  this.data.getAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  }  ,if(item.getItemCount() > this.maximumItemCount) { // this.data.getAgedItems(false); if(notify)) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  this.data.getAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  }  ,if(item.getItemCount() > this.maximumItemCount) { // this.data.getAgedItems(false); if(notify)) { fireSeriesChanged(); } ; }
compilation error,174,add,[CE] ';' expected, ,this.maximumItemCount = 5);
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ,// removeAgedItems(false); if(notify)) { fireSeriesChanged(); bodied ; b.toString() : null; }
patch is same with buggy,173,replace,, this.maximumItemCount  =  Integer.MAX_VALUE  /  2  +  1;  ,this.maximumItemCount = Integer.MAX_VALUE / 2 + 1;
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  &  b.toString()  :  null;  }  ;  ,// removeAgedItems(false); if(notify)) { fireSeriesChanged(); & b.toString() : null; } ;
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  &  b.toString()  :  null;  }  ;  ,// removeAgedItems(false); if(notify)) { fireSeriesChanged(); & b.toString() : null; } ;
compilation error,174,replace,[CE] cannot find symbol minimumItemCount, this.maximumItemAge  =  getMaximumItemAge()  +  1;  ,this.minimumItemCount = this.minimumItemCount + 4;
patch is same with buggy,174,replace,, this.maximumItemCount  =  this.maximumItemCount  /  2  +  1;  ,this.maximumItemCount = this.maximumItemCount / 2 + 1;
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(true);  if(notify))  }  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  ,boolean : b.append(getItemCount() - 1);
compilation error,540,add,[CE] cannot find symbol items, ,b.addChangeListener(this, items);
compilation error,540,add,[CE] ';' expected, ,boolean rang = item.getPeriod().getTime().equals(this.timePeriodClass.getName())); this.data.add(item);
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(true);  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove;  ,if(item!= null) { // deleteAgedItems(true); this.data.add(item); if(notify) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(true);  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove;  ,if(item.getPeriod().equals(this.data.size())) { // deleteAgedItems(true); this.data.add(item); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] cannot find symbol items, ,bod : items.add(item);
compilation error,540,add,[CE] illegal start of expression, ,& this.data.add(item);
compilation error,540,add,[CE] illegal start of expression, ,& item.getPeriod().equals(getItemCount() - 1);
compilation error,540,add,[CE] illegal start of expression, ,& item.getPeriod().setValue(getItemCount() - 1);
compilation error,540,add,[CE] not a statement, ,b.setLength(0); slated ; & b.toString() : null;
compilation error,540,add,[CE] not a statement, ,b.setItemCount(item.getPeriod() - 1); slated ; & b.toString() : null;
patch is same with buggy,540,replace,, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  ,// removeAgedItems(true, item); if(notify) { fireSeriesChanged(); } ; bodied? b.toString() : null;
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod()!= this.data.size()) { if(getItemCount() > this.maximumItemCount) { this.data.remove(0); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { // removeAgedItems(true); if(added) { fireSeriesChanged(); bodied ; b.toString() : null; }
compilation error,540,add,[CE] not a statement, ,limb : hopped &&!b.toString();
compilation error,540,add,[CE] not a statement, ,limb ; hopped ;
compilation error,540,add,[CE] unclosed character literal, ,limb : hopped &&!b.append(item.getPeriod()).append('ufffd');
compilation error,540,add,[CE] cannot find symbol b, ,b = new StringBuffer(getItemCount() + 1);
compilation error,174,replace,[CE] '(' expected, if(timePeriodClass!=  null)  {  this.domain  =  domain;  }  else  {  timePeriodClass  =  timePeriodClass;  }  ,if(timePeriodClass == null) { this.domain = domain; if else { timePeriodClass = timePeriodClass; }
patch is same with buggy,540,replace,, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  &  b.toString()  :  null;  ,// removeAgedItems(true); if(notify) { fireSeriesChanged(); bodied ; & b.toString() : null;
compilation error,540,add,[CE] method singleton in class Collections cannot be applied to given types;, ,bodied : Collections.singleton(this.data, item);
patch is same with buggy,173,replace,, this.domain  =  domain  + "DEFAULT_DOMAIN_DESCRIPTION  = "  +  DEFAULT_RANGE_DESCRIPTION;  ,this.domain = domain +"DEFAULT_DOMAIN_DESCRIPTION = " + DEFAULT_RANGE_DESCRIPTION;
compilation error,174,replace,[CE] cannot find symbol, this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  ,if(timePeriodClass!= null) { this.range = range; this.timePeriodClass = timePeriodClass; } else { this.data = new ArrayList(); }
compilation error,540,add,[CE] illegal start of expression, ,if(delt) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); }
compilation error,540,add,[CE] cannot find symbol b, ,if(!added) { b.append(item.getPeriod()).append('n'); } else if(getItemCount() > this.maximumItemCount) { this.data.add(item); }
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  >>  ;  ,boolean!(item.getPeriod().equals(this.data.get(item.getItemCount()))) { this.data.add(item);
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { if(add) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { if(added) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data)) { if(add) { fireSeriesChanged(); }
compilation error,174,add,[CE] cannot find symbol name, ,this.name = name + DEFAULT_DOMAIN_DESCRIPTION + 1;
compilation error,540,replace,[CE] not a statement, //  this.data.getAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  }  ,bodied ; bodied : b.toString(); slated ;
compilation error,540,replace,[CE] not a statement, //  this.data.getAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  }  ,bodied : bodied ; bodied : b.toString(); slated ;
compilation error,540,add,[CE] not a statement, ,bodied ; bodied : b.toString();
compilation error,540,add,[CE] not a statement, ,bodied : bodied ; bodied : b.toString();
compilation error,540,add,[CE] not a statement, ,b.append(item.getPeriod()).append(( TimeSeriesDataItem)item.getPeriod()).toString(); bodied ; b.toString() : null;
compilation error,540,add,[CE] not a statement, ,boolean boolean =(getItemCount() > this.maximumItemCount)&&!this.data.contains(b);
compilation error,540,add,[CE] not a statement, ,boolean boolean =(getItemCount() > this.maximumItemCount)&&!this.data.contains(item);
compilation error,540,add,[CE] not a statement, ,boolean boolean = this.data.isEmpty();
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  &  ;  }  ,if(item.getPeriod().equals(this.data.size())) { // this.data.removeAgedItems(true); if(notify)) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  &  ;  }  ,if(item.getPeriod().equals(this.data.getItemCount())) { // this.data.removeAgedItems(true); if(notify)) { fireSeriesChanged(); }
compilation error,540,add,[CE] method get in interface List cannot be applied to given types;, ,if(item.getPeriod().equals(this.data.get(item.getPeriod()))) { throw new SeriesException(""); }
compilation error,540,add,[CE] cannot find symbol b, ,boolean bod =!(this.data.size() > this.maximumItemCount); b.toString();
compilation error,540,add,[CE] cannot find symbol b, ,boolean bod =!(this.data.size() == this.maximumItemCount); b.toString();
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { // removeAgedItems(false); if(added) { fireSeriesChanged(); bod ; }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { // removeAgedItems(false); if(added) { fireSeriesChanged(); bod ; } else { this.data.add(item); }
compilation error,540,add,[CE] illegal start of expression, ,&& item.getPeriod().equals(getItemCount() - 1); b.toString() = null;
compilation error,540,add,[CE] not a statement, ,!this.data.contains(b);
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { if(notify)) hi fireSeriesChanged(); } ;
compilation error,540,add,[CE] not a statement, ,if(item.getPeriod()!= this.data.size()) { if(notify) hi fireSeriesChanged(); } ;
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  bodied  ;  b.toString()  :  null;  }  ;  b.toString()  :  nu  ,if(item.getPeriod().equals(this.data.size())) { // this.data.removeAgedItems(false); if(notify)) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  bodied  ;  b.toString()  :  null;  }  ;  b.toString()  :  nu  ,if(item.getItemCount() > this.maximumItemCount) { // this.data.removeAgedItems(false); if(notify)) { fireSeriesChanged(); }
compilation error,540,add,[CE] cannot find symbol b, ,b.append(item.getPeriod()).append('+');
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(added))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  ,// removeAgedItems(false); if(added)) { fireSeriesChanged(); bodied ; b.toString() : null; } ;
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(added))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  ,// removeAgedItems(false); if(added)) { fireSeriesChanged(); bodied ; b.toString() : null; } ;
compilation error,540,add,[CE] not a statement, ,boolean!this.data.contains(item);
compilation error,540,add,[CE] not a statement, ,boolean!(this.data.isEmpty());
compilation error,540,replace,[CE] cannot find symbol, //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))!=  this.data.  ,boolean rang = this.data.contains(item.getPeriod().getTime());
compilation error,880,add,[CE] unclosed string literal, ,System.err.println("Requires start % 2 = 0 ".".length());
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify)  propagate  fireSeriesChanged();  bodied  ,// deleteAgedItems(false); if(notify) propagate fireSeriesChanged(); bodied
patch is same with buggy,880,replace,, System.err.println( "Requires  start  %  2  ==  0   ".length());  ,System.err.println("Requires start % 2 == 0 ".length());
patch is same with buggy,880,replace,, System.err.println( "Requires  start  %  2  ==  0   ".length());  , 
compilation error,540,replace,[CE] cannot find symbol Item, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,b.append(Item.getPeriod()).append(getItemCount() - 1);
compilation error,540,add,[CE] illegal start of expression, ,if(delt) { if(getItemCount() > this.maximumItemCount) { this.data.add(-/-); }
patch is same with buggy,173,replace,, this.maximumItemCount  =  Integer.MAX_VALUE  /  10  +  1;  ,this.maximumItemCount = Integer.MAX_VALUE / 10 + 1;
patch is same with buggy,540,replace,, //  this.data.getAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  delt  ,// this.data.getAgedItems(true); if(notify) { fireSeriesChanged(); } ; delt
compilation error,540,add,[CE] not a statement, ,boolean boolean = this.data.size() < this.maximumItemCount; bod ; hopped ;
compilation error,540,add,[CE] not a statement, ,boolean boolean = this.data.size() < this.maximumItemCount; b.setLength(0);
compilation error,540,add,[CE] not a statement, ,boolean boolean = this.data.size() < this.maximumItemCount; bod ;
compilation error,540,add,[CE] class or interface expected, ,if(!added) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); } ; } ; }
compilation error,540,add,[CE] not a statement, ,if(!added) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); } ; Afterward if(!added) { if(getItemCount() > this.maximumItemCount) { this.data.remove
compilation error,540,add,[CE] not a statement, ,if(item.getPeriodType()!= this.data.size()) { if(!added) { fireSeriesChanged(); } ; bodied ; slated ; } ; } ; } ; } ; } ; } ;
compilation error,540,add,[CE] not a statement, ,if(item.getPeriod().equals(this.data.size())) { if(!added) { fireSeriesChanged(); } ; bodied ; slated ; } ; } ; } ; } ; } ;
compilation error,540,add,[CE] not a statement, ,if(item.getPeriod()!= this.data.size()) { if(!added) { fireSeriesChanged(); } ; bodied ; slated ; } ; } ; } ; } ; } ; } ;
compilation error,540,add,[CE] illegal start of expression, ,if(notify) } fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(delt) { if(getItemCount() > this.maximumItemCount) { this.data.add(item, this.data.size() - 1); }
compilation error,540,add,[CE] not a statement, ,if(!added) { this.data.add(item); rang ;? boolean notify = b.toString()!= this.data.get(item); b.toString(); b.toString(); }
compilation error,540,add,[CE] not a statement, ,if(!added) { this.data.add(item); rang ;? boolean notify = b.toString()!= this.data.get(item); b.toString(); }
compilation error,540,add,[CE] not a statement, ,if(!added) { this.data.add(item); rang ;? boolean notify = b.toString() == this.data.get(item); b.toString(); b.toString(); }
patch is same with buggy,540,replace,, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  else  if(added)  {  this.data.add(item);  b.toString()  :  null;  }  ,// removeAgedItems(true); if(notify) { fireSeriesChanged(); bodied else if(added) { this.data.add(item); b.toString() : null; }
patch is same with buggy,540,replace,, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  else  if(added)  {  this.data.add(item);  b.toString()  :  null;  }  ,// removeAgedItems(true); if(notify) { fireSeriesChanged(); bodied else if(added) { this.data.add(item); b.toString() : null; }
patch is same with buggy,540,replace,, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  else  if(added)  {  this.data.add(item);  b.toString()  :  null;  }  , 
compilation error,174,add,[CE] cannot find symbol, ,if(name == null) { this.data = new ArrayList(); } else { this.data.add(name); }
compilation error,174,add,[CE] illegal start of expression, ,if(timePeriodClass!= null) { if(this.data == null) { this.data = new ArrayList(); }
compilation error,540,replace,[CE] illegal start of expression, //  this.data.getAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  delt  ,if(item.getItemCount() > this.maximumItemCount) { // this.data.getAgedItems(true); if(notify) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  this.data.getAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  delt  ,if(item.getSeriesCount() > this.maximumItemCount) { // this.data.getAgedItems(true); if(notify) { fireSeriesChanged(); }
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString()  ,// deleteAgedItems(false); if(notify) consulted fireSeriesChanged(); && item.getDataItemCount() > this.maximumItemCount); b.append(item.getPeriod().toString()
compilation error,540,add,[CE] not a statement, ,bodied ; b.toString() : null; } else if(getItemCount() > this.maximumItemCount) { this.data.add(item); }
compilation error,540,add,[CE] not a statement, ,bodied ; b.toString() : null; } else if(item.getPeriod()!= this.data.size()) { this.data.add(item); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.get(item.getPeriod()))) { if(!added) { this.data.add(item); }
compilation error,540,add,[CE] not a statement, ,Added if(added) { fireSeriesChanged(); } ; hopped ;
compilation error,540,add,[CE] not a statement, ,Added if(item.getPeriod().equals(this.data.size())) { throw new SeriesException(""); }
compilation error,540,add,[CE] not a statement, ,Added if(item.getPeriod().equals(this.data.get(item))) { throw new SeriesException(""); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { if(notify)) { this.data.add(item); }
compilation error,540,add,[CE] cannot find symbol, ,this.data.add(item); updateBounds(item, getItemCount() / this.maximumItemCount);
patch is same with buggy,173,replace,, this.maximumItemCount  =  Integer.MIN_VALUE  /  2;  ,this.maximumItemCount = Integer.MIN_VALUE / 2;
patch is same with buggy,880,replace,, System.err.println( "Requires  start  %  2  constituted  0   ".length());  ,System.err.println("Requires start % 2 constituted 0 ".length());
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { // this.data.removeAgedItems(false); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.getItemCount())) { // this.data.removeAgedItems(false); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getSeriesCount() > this.maximumItemCount) { // this.data.removeAgedItems(false); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] cannot find symbol, ,if(item.getPeriod().equals(this.data.getItemCount())) { if(notify) { fireSeriesChanged(); } ; }
patch is same with buggy,534,replace,, if(!item.getPeriod().equals( "/ "))  {  ,if(!item.getPeriod().equals("/")) {
compilation error,540,add,[CE] cannot find symbol b, ,b.append(item.getPeriod()).append(( TimeSeriesDataItem)b.toString());
compilation error,540,add,[CE] cannot find symbol b, ,this.data.add(item); b.addAgedItems(true);
compilation error,540,add,[CE] bad operand types for binary operator , ,if(item.getPeriod()!= this.data.size()) { throw new SeriesException(""); } else if(getItemCount() > this.maximumItemCount) { this.data.add(item); }
compilation error,540,add,[CE] bad operand types for binary operator , ,if(item.getPeriod()!= this.data.size()) { throw new SeriesException(""); } else if(getItemCount() > this.maximumItemCount) { this.data.remove(0); }
compilation error,540,add,[CE] not a statement, ,if(item.getPeriodType()!= this.data.size()) { if(!added) { fireSeriesChanged(); bodied ; hopped ; } ; } ; } ; } ; } ; } ; } ;
patch is same with buggy,174,replace,, if(domain!=  null  &&  range!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  ,if(domain!= null && range!= null) { this.domain = domain; this.range = range; }
compilation error,540,add,[CE] not a statement, ,hopped!this.data.add(item);
compilation error,540,add,[CE] method singleton in class Collections cannot be applied to given types;, ,hopped : Collections.singleton(this.data, item);
compilation error,540,add,[CE] not a statement, ,if(item!= null) { if(getItemCount() > this.maximumItemCount) { this.data.remove(0); bodied ; hopped ; } ; } ; }
compilation error,540,add,[CE] not a statement, ,if(item!= null) { if(getItemCount() > this.maximumItemCount) { this.data.add(item); bodied ; hopped ; } ; } ; }
patch is same with buggy,540,replace,, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  //  do  not  notify  any,  because  that  //  happens  next  anyway...  ,if(notify) { fireSeriesChanged(); } ; // removeAgedItems(false); // removeAgedItems(false); // do not notify any, because that // happens next anyway...
compilation error,540,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  //  do  not  notify  any,  because  that  //  happens  next  anyway...  ,if(notify) { fireSeriesChanged(); Afterward ; // removeAgedItems(false); // removeAgedItems(false); // do not notify any, because that // happens next anyway...
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  bodied  ;  bodied  if(notify)  {  fireSeriesChange  ,if(item.getPeriod().equals(this.data.size())) { if(notify)) { fireSeriesChanged(); limb ; } ; }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  bodied  ;  bodied  if(notify)  {  fireSeriesChange  ,if(item.getPeriod().equals(this.data.size())) { if(notify)) { fireSeriesChanged(); limb ; } ; } ;
compilation error,540,replace,[CE] cannot find symbol b, //  removedAgedItems(true;  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  ,b.append(item.getPeriod()).append('s');
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  figured  &&  item.getDataItemCount()  >  this.maximumItemCount;  b.append(item.getPeriod().toString());  ,// deleteAgedItems(false); figured && item.getDataItemCount() > this.maximumItemCount; b.append(item.getPeriod().toString());
compilation error,540,add,[CE] cannot find symbol b, ,b.setItemCount(getItemCount() - this.maximumItemCount);
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  bodied  ;  b.toString()  :  null;  }  ;  b.toString()  :  ,b.toString(); slated ;
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  bodied  ;  b.toString()  :  null;  }  ;  b.toString()  :  ,slated ; b.toString() : null; slated ;
compilation error,540,add,[CE] not a statement, ,bodied ; & b.toString() : null;
patch is same with buggy,174,replace,, if(range!=  null)  {  this.domain  =  domain;  }  , 
compilation error,540,add,[CE] illegal start of expression, ,if(b!= null) { if(getItemCount() > this.maximumItemCount) { this.data.add(item); }
patch is same with buggy,880,replace,, System.err.println( "Requires  start  -  begin.   ");  ,System.err.println("Requires start - begin. ");
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  >>  ;  ,if(item.getPeriod().equals(this.data.size())) { // removedAllAgedItems(true); if(notify) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  this.data.removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  slated  ;  }  ,if(item.getPeriod().equals(this.data.getItemCount())) { // this.data.removeAgedItems(true); slated ;
compilation error,540,replace,[CE] illegal start of expression, //  this.data.removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  slated  ;  }  ,if(item.getPeriod().equals(this.data.get(item))) { // this.data.removeAgedItems(true); slated ;
increase failing tests,540,add, [FE] AssertionFailedError, ,if(added) { this.data.add(item); }
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {    ,// deleteAgedItems(true); if(notify) { fireSeriesChanged(); } && item.getPeriod().getTime().equals(this.data.get(item.getPeriod())) {
patch is same with buggy,880,replace,, System.err.println( "Usage:  failed  to  add  cloned  item...   ");  ,System.err.println("Usage: failed to add cloned item...");
patch is same with buggy,880,replace,, System.err.println( "Usage:  failed  to  add  cloned  item...   ");  ,System.err.println("Usage: failed to add cloned item... ");
patch is same with buggy,880,replace,, System.err.println( "Usage:  failed  to  add  cloned  item...   ");  , 
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  >>  ;  ,if(item.getPeriod().equals(this.data.size())) { // removeAgedItems(false, item); if(notify) { fireSeriesChanged(); }
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(true);  if(notify))  }  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  ,boolean!(this.data.isEmpty() && item.getPeriod().equals(getItemCount())); bodied ; hopped ;
compilation error,540,add,[CE] not a statement, ,if(item.getPeriodType()!= this.data.size()) { if(!added) { fireSeriesChanged(); bodied ; bodied ; } ; } ; } ; } ; } ; } ; } ;
compilation error,540,add,[CE] not a statement, ,if(item.getPeriodType()!= this.data.size()) { if(notify) { fireSeriesChanged(); bodied ; bodied ; } ; } ; } ; } ; } ; } ; } ;
compilation error,540,add,[CE] not a statement, ,if(item.getPeriodType()!= this.data.size()) { if(!added) { fireSeriesChanged(); bodied ; bodied ; } ; } ; } ; } ; } ; } ; } 
patch is same with buggy,540,replace,, //  removeAgedItems(false);  this.data.add(item,  this.maximumItemCount);  if(notify)  {  fireSeriesChanged();  }  ;  }    ,// removeAgedItems(false); this.data.add(item, this.maximumItemCount); if(notify) { fireSeriesChanged(); } ; }
patch is same with buggy,540,replace,, //  removedAgedItems(true,  item);  b.addChangeListener(this);  ,// removedAgedItems(true, item); b.addChangeListener(this);
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  boolean  alert  =  b.toString()!=  this.data.get(item);  b.toString();  b.to  ,if(item.getPeriod().equals(this.data.size())) { // removeAgedItems(false); if(notify) { fireSeriesChanged(); hopped ;
compilation error,174,add,[CE] cannot find symbol itemCount, ,this.itemCount = maximumItemCount * 4;
compilation error,540,add,[CE] not a statement, ,boolean!(this.data.isEmpty() ||!b.toString().equals("")) { if(getItemCount() < this.maximumItemCount) { this.data.add(item); }
compilation error,540,add,[CE] not a statement, ,boolean!(this.data.isEmpty() ||!b.toString().equals("")) { if(getItemCount() < this.maximumItemCount) { this.data.remove(0); }
compilation error,540,add,[CE] not a statement, ,boolean && item.getPeriod().equals(getItemCount() - 1);
compilation error,540,add,[CE] not a statement, ,boolean!this.data.contains(b);
compilation error,540,add,[CE] not a statement, ,boolean!(this.data.isEmpty() ||!b.toString().equals("")) { this.data.add(item);
patch is same with buggy,540,replace,, //  addAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ,// addAgedItems(false); if(notify) { fireSeriesChanged(); bodied ; b.toString() : null; }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.getItemCount())) { if(notify)) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.getItemCount())) { if(!added) { fireSeriesChanged(); }
compilation error,540,replace,[CE] method equals in class Object cannot be applied to given types;, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  fiance  ,boolean bod = item.getPeriod().equals(getItemCount() - 1);
compilation error,540,add,[CE] cannot find symbol b, ,b.addItem(item);
compilation error,174,add,[CE] illegal start of expression, ,if(timePeriodClass == null) { this.domain = domain; if(timePeriodClass == null) { this.range = range; }
compilation error,174,add,[CE] illegal start of expression, ,if(timePeriodClass == null) { this.domain = domain; if(timePeriodClass == null) { throw new IllegalArgumentException(""); }
compilation error,174,add,[CE] illegal start of expression, ,if(timePeriodClass == null) { this.domain = domain; if(timePeriodClass == null) { this.data = new ArrayList(); }
compilation error,540,add,[CE] not a statement, ,if(added) { b.append(item.getPeriod()); bodied? b.toString() : null; } ; bodied? b.toString() : null; } ; bodied? b.toString() : nu
patch is same with buggy,880,replace,, System.err.println( "Requires  start  %  2  <=  0   ");  ,System.err.println("Requires start % 2 <= 0 ");
compilation error,540,add,[CE] illegal start of expression, ,if(!added) { if(getSeriesCount() > this.maximumItemCount) { this.data.add(item); }
patch is same with buggy,880,replace,, System.err.println( "Requires  start  %  2  >=  0   ".length());  , 
compilation error,174,replace,[CE] illegal start of expression, if(this.domain!=  null)  {  this.range  =  domain;  this.timePeriodClass  =  timePeriodClass;  }  ,if(timePeriodClass!= null) { if(this.range!= null) { this.range = domain; this.timePeriodClass = timePeriodClass; }
patch is same with buggy,540,replace,, //  removeAgedItems(false);  this.data.add(item,  this.maximumItemCount);  if(notify)  {  fireSeriesChanged();  }    ,// removeAgedItems(false); this.data.add(item, this.maximumItemCount); if(notify) { fireSeriesChanged(); }
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(added)!=  fireSeriesChanged();  slated  ,// removeAgedItems(false); if(added)!= fireSeriesChanged(); slated
compilation error,540,add,[CE] not a statement, ,if(item!= null) { if(getItemCount() > this.maximumItemCount) { this.data.add(item); bodied ; hopped ; } ; } ; } ; } ;
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  delt  ,// deleteAgedItems(true); this.data.add(item); if(notify) { fireSeriesChanged(); } ; delt
compilation error,540,add,[CE] not a statement, ,limb && item.getPeriod().equals(getItemCount() - 1);
compilation error,540,add,[CE] not a statement, ,if(item.getPeriod().equals(this.data.size())) { if(notify) { fireSeriesChanged(); limb ; Afterward if(!added) { fireSeriesChanged(); } ; }
compilation error,540,add,[CE] not a statement, ,if(item.getPeriod().equals(this.data.size())) { if(!added) { fireSeriesChanged(); limb ; Afterward if(notify) { fireSeriesChanged(); } ; }
compilation error,540,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  //  removeAgedItems(false);?!!  addAgedItems(false);  ,if(item.getPeriod().equals(this.data.size())) { if(notify) { fireSeriesChanged(); figured
compilation error,540,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  //  removeAgedItems(false);?!!  addAgedItems(false);  ,if(item.getPeriod().equals(this.data.size())) { if(notify) { fireSeriesChanged(); Afterward
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.getItemCount())) { if(notify) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,if(item!= null) { if(notify) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  fiance  ,if(item!= null) { // removeAgedItems(false); this.data.add(item); if(notify) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  fiance  ,if(getItemCount() > this.maximumItemCount) { // removeAgedItems(false); this.data.add(item); if(notify) { fireSeriesChanged(); }
patch is same with buggy,540,replace,, //  removedAllAgedItems(false,  false);  if(notify)  {  fireSeriesChanged();  }    ,// removedAllAgedItems(false, false); if(notify) { fireSeriesChanged(); }
patch is same with buggy,540,replace,, //  removedAllAgedItems(false,  false);  if(notify)  {  fireSeriesChanged();  }    ,// removedAllAgedItems(false, false); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] not a statement, ,boolean!(item.getPeriod().equals(this.data.get(item)));
compilation error,540,add,[CE] illegal start of expression, ,&& item.getPeriod().equals(getItemCount());
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod()!= this.data.size()) { if(!added) { addAgedItems(false); }
compilation error,540,replace,[CE] cannot find symbol red, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  ,if(red) { fireSeriesChanged(); }
compilation error,540,add,[CE] cannot find symbol b, ,b.setValue(item.getPeriod()); b.setValue(item.getPeriod().startsWith(this.maximumItemCount));
compilation error,540,add,[CE] cannot find symbol b, ,b.setValue(item.getPeriod());
compilation error,540,add,[CE] cannot find symbol b, ,b.setValue(item.getPeriod()); b.setValue(item.getPeriod().toString());
compilation error,540,add,[CE] cannot find symbol b, ,this.data.add(item); updateBounds(item.getPeriod(), b);
compilation error,540,add,[CE] cannot find symbol b, ,this.data.add(item); b.setSeriesIndex(getItemCount() - 1);
compilation error,540,add,[CE] not a statement, ,b.setLength(0); slated ;
compilation error,174,add,[CE] no suitable method found for max(int), ,this.maximumItemCount = Math.max(this.maximumItemCount * 3);
compilation error,540,add,[CE] not a statement, ,boolean!(this.data.size() >= this.maximumItemCount);
compilation error,540,add,[CE] method get in interface List cannot be applied to given types;, ,boolean aged = this.data.get(item); b.toString();
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(true;  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  ,if(!added) { this.data.add(item); if(getItemCount() > this.maximumItemCount) { this.data.add(item); }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  ,if(!b.toString()) { if(getItemCount() > this.maximumItemCount) { this.data.add(item); }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  ,if(!b.toString()) { if(getItemCount() > this.maximumItemCount) { this.data.remove(0); }
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  this.data.add(item,  getItemCount()  -  1);  , 
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove;  hopped  &&  item.getPeriod  ,// deleteAgedItems(true); hopped && item.getPeriod().getTime().equals(this.timePeriodClass.getName())) { this.data.remove; hopped && item.getPeriod
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove;  hopped  &&  item.getPeriod  , 
compilation error,174,add,[CE] illegal start of expression, ,if(timePeriodClass == null) { if(!this.data.contains(name)) { this.data.add(name); }
compilation error,174,add,[CE] illegal start of expression, ,if(timePeriodClass!= null) { if(!this.data.contains(name)) { throw new IllegalArgumentException(""); }
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); meanwhile, item.getPeriod().setTime(getTime()); }
compilation error,540,replace,[CE] ')' expected, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  }  ;  &  ,for(int i = 0, len = item.getPeriod().length(); i < len; ++i) { TimeSeriesDataItem item =(TimeSeriesDataItem)this.data.get(i); if(item.getPeriod().equals(this.data.get
compilation error,540,add,[CE] cannot find symbol b, ,boolean bod =!(this.data.size() == this.maximumItemCount); b.append(' ');
compilation error,540,add,[CE] no suitable method found for add(TimeSeriesDataItem,int), ,this.data.add(item, -1);
compilation error,540,add,[CE] cannot find symbol delt, ,delt = item.getPeriod();
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,if(added) { b.append(item); if(getItemCount() > this.maximumItemCount) { this.data.add(item); }
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,if(added) { b.append(item); if(!added) { fireSeriesChanged(); }
compilation error,540,add,[CE] not a statement, ,if(item.getPeriod().equals(this.data.size())) { if(notify) { fireSeriesChanged(); limb ; thankfully ; Afterward if(!added) { fireSeriesChanged(); } ; } ;
compilation error,540,add,[CE] not a statement, ,if(item.getPeriod().equals(this.data.size())) { if(notify) { fireSeriesChanged(); limb ; thankfully ; Afterward if(!added) { fireSeriesChanged(); } ; }
compilation error,540,add,[CE] not a statement, ,if(item.getPeriod().equals(this.data.size())) { if(notify) { fireSeriesChanged(); limb ; thankfully ; Afterward if(!added) { this.data.add(item); }
patch is same with buggy,173,replace,, this.maximumItemCount  =  Integer.MAX_VALUE  %  10;  ,this.maximumItemCount = Integer.MAX_VALUE % 10;
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data)) { if(added) { this.data.add(item); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.get(item))) { if(added) { this.data.add(item); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.get(item.getPeriod()))) { if(added) { this.data.add(item); }
patch is same with buggy,174,replace,, this.maximumItemCount  =  Integer.MIN_VALUE  /  2  +  1;  ,this.maximumItemCount = Integer.MIN_VALUE / 2 + 1;
compilation error,173,add,[CE] cannot find symbol minimumItemAge, ,this.minimumItemAge = Integer.MAX_VALUE % 10;
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  this.data.add(item,  this.maximumItemCount);  if(notify)  {  fireSeriesChanged();  }    ,if(!added) { if(getItemCount() > this.maximumItemCount) { this.data.add(item, this.data.size() - 1); }
compilation error,880,replace,[CE] , System.err.println( "Requires  start  %  2  ==  0   ".length());  ,System.err.println("Requires start % 2 >= 0 ").length());
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  fiance  ,bodied ; b.toString() : null; slated ;
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  fiance  ,boolean!(this.data.isEmpty() || getItemCount() > this.maximumItemCount); b.toString() : null; slated ;
compilation error,540,add,[CE] illegal start of expression, ,if(!added) { this.data.add(item); if(getItemCount() > this.maximumItemCount) { this.data.add(-item); }
compilation error,540,add,[CE] not a statement, ,boolean!(this.data.isEmpty() &&!b.toString()) { this.data.add(item);
compilation error,540,add,[CE] not a statement, ,Added ;
compilation error,540,add,[CE] not a statement, ,Toujours ;
compilation error,540,add,[CE] method equals in class Object cannot be applied to given types;, ,bod : item.getPeriod().equals(getItemCount() - 1);
compilation error,540,add,[CE] cannot find symbol, ,bod : item.getPeriod().setDataItem(getItemCount() - 1);
compilation error,540,add,[CE] not a statement, ,limb && item.getPeriod().equals(getItemCount() - 1); b.append(getPeriod().toString());
compilation error,540,add,[CE] not a statement, ,limb && item.getPeriod().toString().equals(this.data.size()); b.append(" for");
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  if(added))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  ,if(item!= null) { // removeAgedItems(false); this.data.add(item); if(added) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { if(notify)) { fireSeriesChanged(); } ; & b.toString() : null; } ; & b.toString().
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { if(notify)) { fireSeriesChanged(); } ; & b.toString() : null; bodied ; & b.toString().
compilation error,540,add,[CE] cannot find symbol booleanAgedItems, ,booleanAgedItems = this.data.size() > this.maximumItemCount;
compilation error,540,add,[CE] cannot find symbol booleanAgedItems, ,booleanAgedItems = item.getAgedItems();
compilation error,540,add,[CE] cannot find symbol booleanAgedItems, ,booleanAgedItems = this.data.get(item);
patch is same with buggy,880,replace,, System.err.println( "Requires  begin  <=  0   ".length());  ,System.err.println("Requires begin <= 0 ".length());
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { // removeAgedItems(false); if(added) { fireSeriesChanged(); bodied ;
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { // removeAgedItems(false); if(added) { fireSeriesChanged(); bodied ; }
patch is same with buggy,173,replace,, this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  6;  , 
compilation error,540,add,[CE] ';' expected, ,b.append(item.getPeriod()).append(( TimeSeriesDataItem)item.getPeriod()).toString(); delt
compilation error,540,add,[CE] ';' expected, ,b.append(item.getPeriod()).append(( TimeSeriesDataItem)item.getTimePeriod()); delt
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  >>  ;  ,if(added) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  ,if(added) { // removeAgedItems(false); if(notify) { fireSeriesChanged(); bodied ; }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  else  if(added)  {  this.data.add(item);  b.toString()  :  null;  }  ,if(item.getPeriod().equals(this.data.size())) { // removeAgedItems(false); if(add) { fireSeriesChanged(); bod ; }
compilation error,540,add,[CE] not a statement, ,b.append(getItemCount() - 1); slated ; &!b.append(item);
compilation error,540,add,[CE] cannot find symbol b, ,b.append('n'); b.append(getItemCount() - 1);
compilation error,540,add,[CE] cannot find symbol b, ,b.append('n'); b.append(item);
patch is same with buggy,174,replace,, this.maximumItemCount  =  maximumItemCount  *  4;  , 
increase failing tests,540,add, [FE] SeriesException, ,if(item!= null) { throw new SeriesException(""); } else if(getItemCount() > this.maximumItemCount) { this.data.add(item); }
patch is same with buggy,174,replace,, this.domain  =  domain;  if(timePeriodClass  ==  null)  {  this.domain  =  domain;  }  ,this.domain = domain; if(timePeriodClass == null) { this.domain = domain; }
patch is same with buggy,174,replace,, this.domain  =  domain;  if(timePeriodClass  ==  null)  {  this.domain  =  domain;  }  , 
patch is same with buggy,540,replace,, //  removeAgedItems(true);  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove;  ,// removeAgedItems(true); rang && item.getPeriod().getTime().equals(this.timePeriodClass.getName())) { this.data.remove;
compilation error,173,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = Integer.MAX_VALUE / 3;
compilation error,174,replace,[CE] bad operand types for binary operator '*', if(this.domain  ==  null)  {  this.domain  =  domain;  }  else  {  timePeriodClass  =  timePeriodClass;  }  ,this.domain = DEFAULT_DOMAIN_DESCRIPTION + DEFAULT_RANGE_DESCRIPTION * 2;
compilation error,540,add,[CE] not a statement, ,!this.data.contains(item);
patch is same with buggy,880,replace,, System.err.println( "Requires  end  -  start.   ");  ,System.err.println("Requires end - start. ");
patch is same with buggy,880,replace,, System.err.println( "Requires  end  -  start.   ");  ,System.err.println("Requires end - start.");
compilation error,174,add,[CE] illegal start of expression, ,if(timePeriodClass!= null) { if(namePeriodClass!= null) { this.data = new ArrayList(); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getItemCount() > this.maximumItemCount) { // this.data.getAgedItems(true); if(notify) { fireSeriesChanged(); } ; }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod()!= this.data.size()) { if(getNotify) { fireSeriesChanged(); }
compilation error,540,add,[CE] cannot find symbol b, ,b.append(item.getPeriod()).append(( TimeSeriesDataItem)item);
compilation error,540,replace,[CE] cannot find symbol b, //  removedAgedItems(true;  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  ,this.data.add(item); b.setLength(0);
compilation error,880,replace,[CE] int cannot be dereferenced, System.err.println( "Requires  begin  <=  0   ".length());  ,System.err.println("Requires start constituted 0 " + start.length());
compilation error,540,add,[CE] illegal start of expression, ,; && item.getPeriod().equals(getItemCount() - 1);
compilation error,540,replace,[CE] illegal start of expression, //  addAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  ,if(item.getPeriod().equals(this.data.size())) { // removeAgedItems(true); if(notify)) { fireSeriesChanged(); bod ; }
compilation error,540,add,[CE] bad operand types for binary operator '-', ,boolean delt = this.data.indexOf(item.getPeriod() - 1, getItemCount() - 1);
compilation error,540,add,[CE] bad operand types for binary operator '-', ,boolean delt = this.data.indexOf(item.getPeriod() - 1);
compilation error,174,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = this.minimumItemCount / 2 + 1;
compilation error,173,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = Integer.MAX_VALUE * 2 + 1;
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  ,b.setLength(0); bodied ; & b.toString() : null;
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  ,b.setItemCount(item.getPeriod() - 1); bodied ; & b.toString() : null;
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  }  ,if(item!= null) { // removeAgedItems(true, item); if(notify) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  }  ,if(item.getPeriod().equals(this.data.size())) { // removeAgedItems(true, item); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(added) { if(getItemCount() > this.maximumItemCount) { this.data.add(-item); }
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  slated  ,// removeAgedItems(false); if(notify)) { fireSeriesChanged(); bodied ; b.toString() : null; slated
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  slated  ,// removeAgedItems(false); if(notify)) { fireSeriesChanged(); bodied ; b.toString() : null; slated
patch is same with buggy,540,replace,, //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  slated  ;  bodied  ,// this.data.removeAgedItems(true); if(notify) { fireSeriesChanged(); slated ; bodied
patch is same with buggy,540,replace,, //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  slated  ;  bodied  ,// this.data.removeAgedItems(true); if(notify) { fireSeriesChanged(); slated ; bodied
compilation error,540,add,[CE] cannot find symbol b, ,b.append(getItemCount()).toString();
compilation error,540,add,[CE] not a statement, ,hopped && item.getPeriod().equals(getItemCount() - 1);
compilation error,540,add,[CE] not a statement, ,hopped && item.getPeriod().startsWith(getItemCount() - 1);
compilation error,540,add,[CE] not a statement, ,boolean!(this.data.size() == this.maximumItemCount); hopped ;
patch is same with buggy,880,replace,, System.err.println( "Requires  end  =  1.0 ");  ,System.err.println("Requires end = 1.0");
patch is same with buggy,880,replace,, System.err.println( "Requires  end  =  1.0 ");  ,System.err.println("Requires end = 1.0 ");
patch is same with buggy,540,replace,, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  }  , 
patch is same with buggy,174,replace,, if(this.domain  ==  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.timePeriodClass  =  timePeriodClass;  this.maximumItemAge  =  0;  }  ,if(this.domain == null) { this.data = new java.util.ArrayList(); } else { this.domain = domain; this.timePeriodClass = timePeriodClass; this.maximumItemAge = 0; }
patch is same with buggy,174,replace,, if(this.domain  ==  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.timePeriodClass  =  timePeriodClass;  this.maximumItemAge  =  0;  }  , 
patch is same with buggy,540,replace,, //  addAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  ,// addAgedItems(false); if(notify) { fireSeriesChanged(); bodied ; b.toString() : null; } ;
patch is same with buggy,540,replace,, //  addAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  ,// addAgedItems(false); if(notify) { fireSeriesChanged(); bodied ; b.toString() : null; } ;
compilation error,540,add,[CE] '(' or '[' expected, ,this.data.add(item, new LinkedList >> TimeSeriesDataItem>());
patch is same with buggy,880,replace,, System.err.println( "Requires  end? "  +  start  + "  : ");  ,System.err.println("Requires end? " + start +" :");
compilation error,880,replace,[CE] , System.err.println( "Requires  end? "  +  start  + "  : ");  ,System.err.println("Requires end? " + start + 1 :");
compilation error,540,add,[CE] cannot find symbol bod, ,bod =!b.hasChildren();
compilation error,540,add,[CE] inconvertible types, ,b.append(item.getPeriod()).append(( TimeSeriesDataItem)item.getPeriod()).append(( TimeSeriesDataItem)item.getPeriod()).toString();
compilation error,540,add,[CE] not a statement, ,boolean!Added : this.data.add(item); slated ; hopped ;
compilation error,173,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = Integer.MIN_VALUE + 3;
compilation error,540,add,[CE] not a statement, ,boolean!(this.data.size() < this.maximumItemCount);
compilation error,540,add,[CE] not a statement, ,boolean!(this.data.size() == this.maximumItemCount); b.setLength(0);
compilation error,174,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = this.minimumItemCount / 3;
compilation error,174,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = Math.max(this.minimumItemCount / 3);
compilation error,540,add,[CE] not a statement, ,bodied ; bodied : b.toString(); bodied ;
compilation error,540,add,[CE] ';' expected, ,this.data.add(item); b.toString() : null;
compilation error,540,add,[CE] cannot find symbol, ,b.setSeriesKey(getItemKey(item)); b.setSeriesIndex(item.getPeriod());
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  ,if(item!= null) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); } ; meanwhile
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  ,if(item!= null) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); } ; Afterward if(added) { this.data.add(item); }
compilation error,174,add,[CE] illegal start of expression, ,if(this.domain!= null) { if(this.range!= null) { this.domain = domain; this.timePeriodClass = timePeriodClass; }
compilation error,540,add,[CE] not a statement, ,boolean? add : getItemCount() > this.maximumItemCount; bodied ; hopped ;
compilation error,540,add,[CE] not a statement, ,boolean!(this.data.size() == this.maximumItemCount); bodied ; hopped ;
compilation error,540,add,[CE] ';' expected, ,; b.toString() : null;
compilation error,540,add,[CE] unclosed character literal, ,b.setLength(0); b.append(item.getPeriod()).append('ufffd');
compilation error,540,add,[CE] cannot find symbol b, ,b.setLength(0); b.append(item.getPeriod()).append('n');
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  this.data.add(item);  if(added)  {  fireSeriesChanged();  bodied  ,// deleteAgedItems(false); this.data.add(item); if(added) { fireSeriesChanged(); bodied
compilation error,540,add,[CE] illegal start of expression, ,if(b!= null) { if(getItemCount() > this.maximumItemCount) { this.data.remove(0); }
compilation error,540,add,[CE] illegal start of expression, ,if(b!= null) { if(getItemCount() > this.maximumItemCount) { throw new SeriesException(""); }
compilation error,540,replace,[CE] illegal start of expression, //  this.data.getAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  }  ,if(item.getPeriod().equals(this.data.size())) { // this.data.addAgedItems(false); if(notify)) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  this.data.getAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  }  ,if(added) { // this.data.addAgedItems(false); if(notify)) { fireSeriesChanged(); }
patch is same with buggy,173,replace,, this.maximumItemCount  =  Integer.MAX_VALUE  *  2;  ,this.maximumItemCount = Integer.MAX_VALUE * 2;
compilation error,540,add,[CE] illegal start of expression, ,if(getItemCount() > this.maximumItemCount) { if(!added) { fireSeriesChanged(); }
patch is same with buggy,540,replace,, //  this.data.getAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  delt  ,// this.data.getAgedItems(false); if(notify) { fireSeriesChanged(); } ; delt
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { if(!added) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().startsWith("+")) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); }
patch is same with buggy,540,replace,, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  fiance  ,// removeAgedItems(false); this.data.add(item); if(notify) { fireSeriesChanged(); } ; fiance
compilation error,540,add,[CE] illegal start of expression, ,if(item == null) { if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.get(item))) { if(!added)) { fireSeriesChanged(); }
compilation error,174,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = minimumItemCount / 4;
compilation error,540,add,[CE] illegal start of expression, ,if(b!= null) { b.append(";"); if(getItemCount() > this.maximumItemCount) { this.data.add(item); }
compilation error,540,add,[CE] not a statement, ,boolean boolean =!(this.data.size() == this.maximumItemCount);
compilation error,540,add,[CE] not a statement, ,limb ;
compilation error,540,add,[CE] not a statement, ,limb && item.getPeriod().equals(this.data.get(item));
compilation error,540,add,[CE] not a statement, ,slated ; b.toString() : null;
compilation error,540,add,[CE] method get in interface List cannot be applied to given types;, ,boolean jumped = this.data.get(item.getPeriod());
compilation error,540,add,[CE] incompatible types, ,boolean jumped = this.data.indexOf(item.getPeriod());
compilation error,540,add,[CE] cannot find symbol, ,b.setSeriesKey(getItemKey(item.getPeriod()));
compilation error,540,add,[CE] ';' expected, ,boolean add = this.data.add(item); b.toString() : null;
compilation error,540,add,[CE] cannot find symbol b, ,boolean add = this.data.add(item); b.toString();
compilation error,540,add,[CE] not a statement, ,boolean!(this.data.isEmpty() && item.getPeriod()!= this.data.size());
compilation error,540,add,[CE] cannot find symbol b, ,b.append(getItemCount() - 1); b.append(item.getPeriod().toString());
compilation error,540,add,[CE] cannot find symbol b, ,this.data.add(item); b.append(getItemCount() - 1);
compilation error,540,add,[CE] cannot find symbol b, ,b.append(item.getPeriod()).append('f');
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false);  if(added)!=  fireSeriesChanged();  slated  ,boolean : item.getPeriod().toString();
compilation error,540,replace,[CE] cannot find symbol, //  removeAgedItems(false);  if(added)!=  fireSeriesChanged();  slated  ,bodied : item.getPeriod().getBytes();
patch is same with buggy,540,replace,, //  this.data.add(item,  this.timePeriodClass);  ,// this.data.add(item, this.timePeriodClass);
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { if(notify)) { fireSeriesChanged(); bodied ; b.toString() : null; } ; }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { if(notify)) { fireSeriesChanged(); bodied ; b.toString() : null; } ; } ;
patch is same with buggy,540,replace,, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  bod  ;  ,// removeAgedItems(true); if(notify) { fireSeriesChanged(); bodied ; bod ;
compilation error,540,add,[CE] cannot find symbol Arrays, ,Arrays.sort(this.data.size() - 1);
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  ,bodied ; bodied ;
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  ,bodied : bodied ; bodied ;
compilation error,540,add,[CE] illegal start of expression, ,if(added) { if(getSeriesCount() > this.maximumItemCount) { this.data.remove(0); }
compilation error,540,replace,[CE] not a statement, //  this.data.getAgedItems(false);  if(notify))  {  fireSeriesChanged();  }    ,bodied : bodied ; bodied : b.toString() : null; bodied ;
compilation error,540,replace,[CE] not a statement, //  this.data.getAgedItems(false);  if(notify))  {  fireSeriesChanged();  }    ,bodied : bodied ; bodied : b.toString(); bodied ;
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  ,limb ; slated ;
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  ,limb : slated ;
compilation error,540,add,[CE] cannot find symbol b, ,b.setSeriesIndex(item.getPeriod());
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { // removeAgedItems(true); if(add) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { // removeAgedItems(true); if(add) { fireSeriesChanged(); } ; }
patch is same with buggy,880,replace,, System.err.println( ",Requires  start  %  2!=  0 ");  ,System.err.println(",Requires start % 2!= 0 ");
patch is same with buggy,880,replace,, System.err.println( ",Requires  start  %  2!=  0 ");  ,System.err.println(",Requires start % 2!= 0");
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { // removedAllAgedItems(false); if(notify)) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals("")) { // removedAllAgedItems(false); if(notify)) { fireSeriesChanged(); }
compilation error,540,add,[CE] cannot find symbol b, ,b.setItemCount(this.data.size() - 1);
compilation error,540,add,[CE] not a statement, ,boolean!Added : this.data.add(item);
patch is same with buggy,174,replace,, this.maximumItemCount  =  maximumItemCount  /  4;  , 
compilation error,540,add,[CE] not a statement, ,b.append(Item.getPeriod()); slated ;
compilation error,540,add,[CE] not a statement, ,b.append(Item.getPeriod(0)); slated ;
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify)  induced  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString()  ,// deleteAgedItems(false); if(notify) induced fireSeriesChanged(); && item.getDataItemCount() > this.maximumItemCount); b.append(item.getPeriod().toString()
compilation error,540,add,[CE] ';' expected, ,if(item.getPeriod().equals(this.data.size())) { if(notify) { fireSeriesChanged(); } ; b.toString() : null; }
compilation error,540,add,[CE] cannot find symbol b, ,b.setLength(0); this.data.add(item, getItemCount() / 2);
compilation error,540,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  //  removeAgedItems(false);?!  noAgedItems(false);  ,if(notify) { fireSeriesChanged(); Afterward ; // removeAgedItems(false); } ; // removeAgedItems(false); }
compilation error,540,replace,[CE] not a statement, if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  removeAgedItems(false);  //  removeAgedItems(false);?!  noAgedItems(false);  ,if(notify) { fireSeriesChanged(); slated ; // removeAgedItems(false); } ; // removeAgedItems(false); }
compilation error,540,add,[CE] cannot find symbol b, ,boolean alert =!this.data.contains(item); b.toString();
compilation error,540,add,[CE] method get in interface List cannot be applied to given types;, ,boolean alert =!(this.data.get(item) == null);
compilation error,540,add,[CE] method get in interface List cannot be applied to given types;, ,boolean alert =!(this.data.get(item)!= null);
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { if(notify) { fireSeriesChanged(); } ); } } ; }
compilation error,540,add,[CE] cannot find symbol bod, ,if(notify) { this.data.add(item); bod = b.toString(); } else { this.data.add(item); b.toString(); }
compilation error,540,add,[CE] cannot find symbol bod, ,if(!added) { this.data.add(item); bod = b.toString(); } else { this.data.add(item); b.toString(); }
compilation error,540,add,[CE] cannot find symbol bod, ,if(notify) { this.data.add(item); bod = b.toString(); }
compilation error,540,replace,[CE] illegal start of expression, //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  slated  ;  bodied  ,if(getItemCount() > this.maximumItemCount) { if(added) { fireSeriesChanged(); }
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(1);  bodied  ,// deleteAgedItems(false); if(notify) { fireSeriesChanged(); && item.getPeriod()!= this.data.get(item.getPeriod())) { this.data.remove(1); bodied
compilation error,540,add,[CE] not a statement, ,bodied : bodied if(getItemCount() > this.maximumItemCount) { fireSeriesChanged(); } ;
compilation error,540,add,[CE] not a statement, ,bodied : bodied if(getItemCount() < this.maximumItemCount) { fireSeriesChanged(); } ;
compilation error,540,replace,[CE] cannot find symbol b, //  removeAgedItems(true);  this.data.add(item,  getItemCount()  -  1);  ,this.data.add(item); b.append(";n");
patch is same with buggy,540,replace,, //  removeAgedItems(true);  if(notify))  propagate  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  ,// removeAgedItems(true); if(notify)) propagate fireSeriesChanged(); bodied ; b.toString() : null;
compilation error,540,add,[CE] illegal start of expression, ,if(delt) { if(getItemCount() < this.maximumItemCount) { this.data.add(item); }
compilation error,540,add,[CE] ';' expected, ,b.setLength(0); delt
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.getItemCount())) { if(notify)) { fireSeriesChanged(); } ; fiance
compilation error,540,add,[CE] not a statement, ,if(item.getPeriod()!= this.data.size()) { if(!added) { fireSeriesChanged(); bodied ; b.toString() : null; } ;
compilation error,540,add,[CE] cannot find symbol, ,boolean add =(added)Boolean.valueOf(getItemCount() - 1);
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  bodied  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.  ,// deleteAgedItems(true); bodied && item.getPeriod().getTime().equals(this.data.get(item.getPeriod())) { this.data.
patch is same with buggy,174,replace,, this.maximumItemAge  =  maximumItemAge  +  1;  ,this.maximumItemAge = maximumItemAge + 1;
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  &  b.toString()  :  null;  ,if(item.getPeriod().equals(this.data.size())) { // removeAgedItems(true); if(notify) { fireSeriesChanged(); hopped ;
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { if(notify)) { fireSeriesChanged(); & b.toString() : null; } ; }
compilation error,540,replace,[CE] not a statement, //  this.data.getAgedItems(false);  if(notify))  {  fireSeriesChanged();  }    ,bodied ; bodied? b.toString() : null; } ;
compilation error,540,replace,[CE] not a statement, //  this.data.getAgedItems(false);  if(notify))  {  fireSeriesChanged();  }    ,bodied : bodied? b.toString() : null; bodied ; bodied? b.toString() : null; } ;
compilation error,540,replace,[CE] not a statement, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,bodied : hopped ;
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { // removeAgedItems(true); if(added) { fireSeriesChanged(); bodied ; }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { // removeAgedItems(true); if(added) { fireSeriesChanged(); bodied ;
patch is same with buggy,880,replace,, System.err.println( "Requires  start  %  2  ==  0.   ");  ,System.err.println("Requires start % 2 == 0.");
patch is same with buggy,880,replace,, System.err.println( "Requires  start  %  2  ==  0.   ");  ,System.err.println("Requires start % 2 == 0. ");
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.get(item))) { if(getItemCount() > this.maximumItemCount)) { this.data.add(item); }
increase failing tests,540,add, [FE] SeriesException, ,if(item!= null) { throw new SeriesException(""); } else { this.data.add(item); }
compilation error,540,add,[CE] not a statement, ,if(item!= null) { if(getItemCount() > this.maximumItemCount) { this.data.remove(0); bodied ; hopped ; } ; } ; } ; } ; }
compilation error,540,replace,[CE] unclosed character literal, //  deleteAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  delt  ,b.setLength(0); b.append('ufffd');
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  this.data.add(item);  if(notify)  }  fireSeriesChanged();  bodied  , 
compilation error,540,replace,[CE] generics are not supported in -source 1.4, //  this.data.add(item);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  b.toString();  ,this.data.add(item, new LinkedList < TimeSeriesDataItem>()));
compilation error,540,add,[CE] not a statement, ,boolean!(item.getPeriod().equals(this.data.get(item)))) { throw new SeriesException("");
compilation error,540,replace,[CE] illegal start of expression, //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  }    ,if(item.getPeriod().equals(this.data.size())) { // removedAgedItems(false); if(notify) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  }    ,if(item.getPeriod().equals(this.data.size())) { // removedAgedItems(false); if(notify) { fireSeriesChanged(); } ;
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  bodied  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))!=  this.data.  ,// deleteAgedItems(true); bodied && item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))!= this.data.
compilation error,540,add,[CE] method equals in class Object cannot be applied to given types;, ,boolean delt = this.data.isEmpty() && item.getPeriod().equals(getItemCount() - 1);
compilation error,540,add,[CE] ';' expected, ,boolean delt = this.data.size() < this.maximumItemCount; delt
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  bodied  ;  ,if(item.getPeriod().equals(this.data.size())) { // removedAllAgedItems(false); if(notify) { fireSeriesChanged(); }
patch is same with buggy,174,replace,, this.maximumItemCount  =  this.maximumItemCount  *  2  +  1;  ,this.maximumItemCount = this.maximumItemCount * 2 + 1;
compilation error,540,add,[CE] not a statement, ,Added if(item.getPeriod().equals(this.data.size())) { if(added) { fireSeriesChanged(); } ;
compilation error,540,add,[CE] not a statement, ,Added if(item.getPeriod().equals(this.data.size())) { if(added) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(!added) { this.data.add(item); if(notify)) { fireSeriesChanged(); } ; }
compilation error,540,add,[CE] ';' expected, ,boolean hopped = item.getPeriod().getTime().equals(this.timePeriodClass.getName())) { this.data.add(item);
compilation error,540,add,[CE] ';' expected, ,boolean hopped = item.getPeriod().getTime().equals(this.timePeriodClass.getName()));
patch is same with buggy,540,replace,, //  this.data.add(item);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  b.toString();  ,// this.data.add(item); if(notify) { fireSeriesChanged(); rang && item.getPeriod().startsWith(this.maximumItemCount)) { b.toString(); b.toString();
patch is same with buggy,540,replace,, //  this.data.add(item);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  b.toString();  ,// this.data.add(item); if(notify) { fireSeriesChanged(); rang && item.getPeriod().startsWith(this.maximumItemCount)) { b.toString(); b.toString();
compilation error,540,add,[CE] cannot find symbol b, ,boolean bod =!(this.data.size() == this.maximumItemCount); b.setLength(0);
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  if(notify)  propag  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.  ,// deleteAgedItems(true); if(notify) propag fireSeriesChanged(); && item.getPeriod().getTime().equals(this.data.get(item.getPeriod())) { this.data.
patch is same with buggy,540,replace,, //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  bodied  ;  &  b.toString()  :  null;  ,// removeAgedItems(false); if(notify) { fireSeriesChanged(); & b.toString() : null; bodied ; & b.toString() : null;
compilation error,540,add,[CE] cannot find symbol b, ,b.append(item.getPeriod()).append('n'); b.append(added);
compilation error,540,add,[CE] cannot find symbol bodied, ,bodied : bodied.getItemCount();
compilation error,540,add,[CE] cannot find symbol bodied, ,bodied : bodied.getAgedItems();
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify)  propag  fireSeriesChanged();  fought  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  ,// deleteAgedItems(false); if(notify) propag fireSeriesChanged(); fought && item.getPeriod().getTime().equals(this.timePeriodClass.getName())) { this.data.remove
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify)  propag  fireSeriesChanged();  fought  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  ,// deleteAgedItems(false); if(notify) propag fireSeriesChanged(); fought && item.getPeriod().getTime().equals(this.timePeriodClass.getName())) { this.data.remove
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bod  ;  bod?  bod  :  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  }    ,if(item.getPeriod().equals(this.data.size())) { // removeAgedItems(false); if(notify)) { fireSeriesChanged(); bodied ; b.toString() : null; }
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod())).equals(this.data.get(item.getPeriod()))  ,// deleteAgedItems(true); && item.getPeriod().getTime().equals(this.data.get(item.getPeriod())).equals(this.data.get(item.getPeriod()))
compilation error,540,add,[CE] illegal start of expression, ,bodied : &!b.toString();
compilation error,540,add,[CE] illegal start of expression, ,bodied : & b.toString();
compilation error,880,add,[CE] unclosed string literal, ,System.err.println("Requires start constituted 0 ".".length());
compilation error,880,add,[CE] unclosed string literal, ,System.err.println("Requires end -> start". ");
patch is same with buggy,540,replace,, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  ,// removeAgedItems(true, item); if(notify) { fireSeriesChanged(); } ; b.toString() : null;
patch is same with buggy,540,replace,, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  ,// removeAgedItems(true, item); if(notify) { fireSeriesChanged(); } ; b.toString() : null;
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))!=  this.data.  ,// deleteAgedItems(true); if(notify) { fireSeriesChanged(); hopped && item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))!= this.data.
compilation error,174,add,[CE] illegal start of expression, ,if(domain == null) { if(domain.isArray()) { throw new IllegalArgumentException(""); }
compilation error,174,add,[CE] illegal start of expression, ,if(domain == null) { if(domain.equals("")) { throw new IllegalArgumentException(""); }
compilation error,174,add,[CE] illegal start of expression, ,if(domain == null) { if(domain.isArray()) { throw new IllegalArgumentException("TimeSeriesDataset contains unsupported data collection"); }
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(true);  if(notify))  {  fireSeriesChanged();  }  ;  }  ,if(!added) { this.data.add(item); if(getItemCount() < this.maximumItemCount) { this.data.add(item); }
compilation error,540,replace,[CE] not a statement, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ,if(item.getPeriod().equals(this.data.size())) { if(!added) { fireSeriesChanged(); limb ; hopped ; bodied if(notify) { fireSeriesChanged(); } ; Toujours ;
compilation error,540,replace,[CE] illegal start of expression, //  removedAgedItems(false);  item.addChangeListener(this);  if(notify)  {  fireSeriesChanged();  }    ,if(item.getPeriod().equals(this.data.size())) { // removedAgedItems(false); if(notify)) { fireSeriesChanged(); }
increase failing tests,540,add, [FE] AssertionFailedError, ,boolean jumped = this.data.add(item);
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { // removeAgedItems(true); if(added) { fireSeriesChanged(); bod ; }
patch is same with buggy,540,replace,, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  bod  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  }  ,// removeAgedItems(true); if(notify) { fireSeriesChanged(); bodied ; bod ; boolean notify = b.toString()!= this.data.get(item); b.toString(); }
increase failing tests,540,add, [FE] SeriesException, ,if(added) { throw new SeriesException("TimeSeriesDataItem item does not have any data at all" + this.data.size() +" is in the range [" + this.data.size() +"] for that time period."); }
increase failing tests,540,add, [FE] SeriesException, ,if(added) { throw new SeriesException("TimeSeriesDataItem item does not have any data at all" + this.data.size() +" is too large" + this.data.size()); }
compilation error,880,add,[CE] unclosed string literal, ,System.err.println("Requires start -> 0 ".".length() + 1);
compilation error,540,replace,[CE] illegal start of expression, //  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString()  ,if(getItemCount() > this.maximumItemCount) { // deleteAgedItems(false); this.data.add(item, this.maximumItemCount); bodied ; }
patch is same with buggy,174,replace,, this.maximumItemCount  =  Integer.MAX_VALUE  /  2  +  1;  ,this.maximumItemCount = Integer.MAX_VALUE / 2 + 1;
compilation error,173,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = Long.MAX_VALUE / 10;
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod()!= this.data.size()) { if(added) { this.data.add(item); }
compilation error,540,add,[CE] bad operand types for binary operator , ,if(item.getPeriod()!= this.data.size()) { throw new SeriesException(""); }
compilation error,540,add,[CE] bad operand types for binary operator '+', ,boolean fireSeriesChanged = this.data.get(item.getPeriod() + 1);
patch is same with buggy,880,replace,, System.err.println( "Requires  end  <<  0   ");  ,System.err.println("Requires end << 0 ");
patch is same with buggy,880,replace,, System.err.println( "Requires  end  <<  0   ");  , 
compilation error,540,add,[CE] illegal start of expression, ,if(item!= null) { // deleteAgedItems(false); this.data.add(item, this.maximumItemCount); if(notify) { fireSeriesChanged(); }
compilation error,174,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = Integer.MAX_VALUE / 3;
compilation error,540,add,[CE] not a statement, ,if(item.getPeriod().equals(this.data.size())) { if(notify) { fireSeriesChanged(); limb ; bodied ; Afterward if(!added) { fireSeriesChanged(); } ; }
compilation error,540,add,[CE] not a statement, ,if(item.getPeriod().equals(this.data.size())) { if(notify) { fireSeriesChanged(); limb ; bodied ; Afterward if(notify) { fireSeriesChanged(); } ; } ;
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  if(added)!=  fireSeriesChanged();  slated  ,if(item == null) { // removeAgedItems(true); if(notify)) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  addAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  ,if(item.getPeriod().equals(this.data.size())) { // removeAgedItems(false); if(notify)) hi fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  addAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  ,if(item.getPeriod().equals(this.data.size())) { // removeAgedItems(false); if(notify)) hi fireSeriesChanged(); } ;
compilation error,540,add,[CE] not a statement, ,if(item!= null) { if(!added) { fireSeriesChanged(); limb ; Afterward if(notify) { fireSeriesChanged(); } ; }
compilation error,540,add,[CE] not a statement, ,if(item.getPeriod().equals(this.data.size())) { if(notify) { fireSeriesChanged(); limb ; Afterward if(!added) { fireSeriesChanged(); } ; } ;
compilation error,540,add,[CE] not a statement, ,if(getItemCount() > this.maximumItemCount) { if(notify) { fireSeriesChanged(); } ; bodied if(notify) { fireSeriesChanged(); }
compilation error,540,replace,[CE] method get in interface List cannot be applied to given types;, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  &  b.toString()  :  null;  ,boolean alert =!(this.data.get(item) == null); b.toString();
compilation error,540,replace,[CE] cannot find symbol bodied, //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  bodied  ;  bodied  if(notify)  {  fireSeriesChange  ,bodied : bodied.toString();
compilation error,540,replace,[CE] illegal start of expression, //  this.data.getAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  }  ,if(item!= null) { // removeAgedItems(false); this.data.remove(item); if(notify) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(true);  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove;  ,if(item!= null) { // deleteAgedItems(false); this.data.add(item); if(notify) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(true);  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove;  ,if(getItemCount() > this.maximumItemCount) { // deleteAgedItems(false); this.data.add(item); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.getItemCount())) { if(notify)) { fireSeriesChanged(); } ; }
patch is same with buggy,540,replace,, //  removedAgedItems(false);  item.addChangeListener(this);  if(notify)  {  fireSeriesChanged();  }    ,// removedAgedItems(false); item.addChangeListener(this); if(notify) { fireSeriesChanged(); }
patch is same with buggy,174,replace,, this.range  =  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION  +  1;  ,this.range = DEFAULT_DOMAIN_DESCRIPTION + DEFAULT_RANGE_DESCRIPTION + 1;
compilation error,174,replace,[CE] illegal start of expression, if(this.domain  ==  null)  {  this.domain  =  domain;  }  else  {  timePeriodClass  =  timePeriodClass;  }  ,if(timePeriodClass!= null) { this.domain = domain; if(this.range == null) { timePeriodClass = timePeriodClass; }
compilation error,174,replace,[CE] illegal start of expression, if(this.domain  ==  null)  {  this.domain  =  domain;  }  else  {  timePeriodClass  =  timePeriodClass;  }  ,if(timePeriodClass == null) { this.domain = domain; if(this.range == null) { timePeriodClass = timePeriodClass; }
compilation error,540,add,[CE] not a statement, ,this.data.add(item); bodied ;
compilation error,174,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = this.minimumItemCount * 2 + 1;
compilation error,174,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = Math.max(this.minimumItemCount * 2 + 1);
compilation error,540,add,[CE] cannot find symbol b, ,this.data.add(item); b.append('u');
compilation error,540,replace,[CE] cannot find symbol b, //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  slated  ,if(added) { this.data.add(item); b = new StringBuffer(this.data.size()); } else { this.data.add(item); }
compilation error,540,add,[CE] cannot find symbol, ,this.data.add(item); removedAllAgedItems(true);
patch is same with buggy,880,replace,, System.err.println( "Requires  end  <=  0   ");  ,System.err.println("Requires end <= 0 ");
patch is same with buggy,880,replace,, System.err.println( "Requires  end  <=  0   ");  ,System.err.println("Requires end <= 0");
compilation error,173,replace,[CE] cannot find symbol minimumItemCount, this.maximumItemCount  =  Integer.MIN_VALUE  /  2;  ,this.minimumItemCount = Integer.MIN_VALUE * 2;
compilation error,540,add,[CE] cannot find symbol, ,boolean bod = item.getPeriod().isAged();
compilation error,174,replace,[CE] cannot find symbol maximumItemAger, this.maximumItemAge  =  getMaximumItemAge()  +  1;  ,this.maximumItemAger = getMaximumItemAge();
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { // removedAllAgedItems(true, true); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriodType()!= this.data.size()) { // removedAllAgedItems(true, true); if(notify) { fireSeriesChanged(); }
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(true);  if(notify))  }  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  ,boolean!(item.getPeriod().equals(this.data.get(item)))) { fireSeriesChanged(); slated ; hopped ;
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(true);  if(notify))  }  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  ,boolean!(item.getPeriod().equals(this.data.get(i)))) { this.data.add(item); slated ; hopped ;
compilation error,880,add,[CE] unclosed string literal, ,System.err.println("Requires start % 2 == 0 ".".length());
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify)  induced  fireSeriesChanged();  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString()  ,// deleteAgedItems(false); if(notify) induced fireSeriesChanged(); figured && item.getDataItemCount() > this.maximumItemCount); b.append(item.getPeriod().toString()
compilation error,540,add,[CE] cannot find symbol b, ,this.data.add(item); b.append(" -");
compilation error,540,add,[CE] not a statement, ,boolean!(this.data.isEmpty() || getItemCount() > this.maximumItemCount);
compilation error,540,add,[CE] ';' expected, ,boolean hopped = item.getPeriod().getTime().equals(this.timePeriodClass.getName())) { this.data.remove;
compilation error,880,add,[CE] package system does not exist, ,System.err.println("Requires start % 2 == 0. "); system.err.println("Requires start % 2 == 0. ");
patch is same with buggy,540,replace,, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  ,// removeAgedItems(true, item); if(notify) { fireSeriesChanged(); } ; b.toString() : null; }
patch is same with buggy,540,replace,, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  ,// removeAgedItems(true, item); if(notify) { fireSeriesChanged(); } ; b.toString() : null; }
compilation error,540,replace,[CE] not a statement, //  this.data.addAgedItem(false);  ,boolean!(this.data.isEmpty() ||!b.toString().equals("")) { if(getItemCount() < this.maximumItemCount) { this.data.add(-1); }
patch is same with buggy,540,replace,, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  &  hopped  ;  boolean  alert  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  ,// removeAgedItems(true); if(notify) { fireSeriesChanged(); & hopped ; boolean alert = b.toString()!= this.data.get(item); b.toString(); b.toString();
patch is same with buggy,540,replace,, //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  &  hopped  ;  boolean  alert  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  , 
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ,// deleteAgedItems(false); if(notify)) { fireSeriesChanged(); bodied
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ,// deleteAgedItems(false); if(notify)) { fireSeriesChanged(); bodied
patch is same with buggy,540,replace,, //  addAgedItems(false);  if(added)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  ,// addAgedItems(false); if(added) { fireSeriesChanged(); bodied ; b.toString() : null; } ;
compilation error,174,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = Math.max(this.minimumItemCount, 4);
compilation error,174,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = Math.min(this.minimumItemCount, 4);
compilation error,540,add,[CE] cannot find symbol b, ,b.append(item.getPeriod()); b.setIndex(getItemIndex() - 1);
compilation error,174,add,[CE] illegal start of expression, ,if(name == null) { if(timePeriodClass == null) { this.domain = name; }
compilation error,174,add,[CE] illegal start of expression, ,if(timePeriodClass!= null) { if(!this.data.contains(name)) { this.data = new ArrayList(); }
patch is same with buggy,540,replace,, //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  bodied  ,// removedAgedItems(true); this.data.add(item); if(notify) { fireSeriesChanged(); bodied
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  fiance  ,boolean if(notify) { fireSeriesChanged(); bodied ; bodied? b.toString() : null; }
compilation error,540,replace,[CE] not a statement, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  fiance  ,boolean if(notify) { fireSeriesChanged(); bodied : b.toString(); }
compilation error,540,add,[CE] cannot find symbol b, ,boolean bod = getItemCount() > this.maximumItemCount; bod = b.toString();
compilation error,540,add,[CE] cannot find symbol b, ,boolean bod = getItemCount() > this.maximumItemCount; bod =!b.toString();
compilation error,540,add,[CE] cannot find symbol b, ,boolean bod = getItemCount() > this.maximumItemCount; b.toBooleanValue();
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))!=  this.data.  ,// deleteAgedItems(true); if(notify) { fireSeriesChanged(); && item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))!= this.data.
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false,  item);  if(notify)!=  fireSeriesChanged();  }  ;  ,if(added) { // this.data.add(item, null); if(notify) { fireSeriesChanged(); }
patch is same with buggy,174,replace,, this.maximumItemAge  =  getMaximumItemAge()  -  1;  ,this.maximumItemAge = getMaximumItemAge() - 1;
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  this.data.remove(item);  if(notify)  {  fireSeriesChanged();  bodied  ,// deleteAgedItems(true); this.data.remove(item); if(notify) { fireSeriesChanged(); bodied
patch is same with buggy,540,replace,, //  deleteAgedItems(true);  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))!=  this.data.remove;  ,// deleteAgedItems(true); rang && item.getPeriod().getTime().equals(this.timePeriodClass.getName()))!= this.data.remove;
compilation error,540,add,[CE] cannot find symbol b, ,b.setLength(0); b.add(item);
increase failing tests,540,add, [FE] AssertionFailedError, ,boolean removed = this.data.add(item);
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { // removedAgedItems(true, true); if(notify) { fireSeriesChanged(); }
patch is same with buggy,540,replace,, //  removeAgedItems(true);  this.data.add(item,  getItemCount()  -  1);  ,// removeAgedItems(true); this.data.add(item, getItemCount() - 1);
compilation error,540,replace,[CE] no suitable method found for getItemCount(int), //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  }  ;  &  ,boolean arg = getItemCount(this.data.size() - 1);
compilation error,540,add,[CE] not a statement, ,bodied ; bodied : b.toString(); bodied ; bodied : b.toString(); } ;
compilation error,540,add,[CE] not a statement, ,bodied ; bodied : b.toString(); bodied ; bodied : b.toString() : null; } ;
compilation error,540,add,[CE] not a statement, ,bodied : bodied ; bodied : b.toString(); } ;
compilation error,174,add,[CE] illegal start of expression, ,if(domain!= null && range!= null) { if(domain == null && range.getLength() > 0) { this.domain = domain; this.range = range; }
compilation error,174,add,[CE] illegal start of expression, ,if(domain!= null && range!= null) { if(domain == null && range.isLocal()) { this.domain = domain; this.range = range; }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { if(notify)) { fireSeriesChanged(); } ; bodied? b.toString() : null; bodied ; bodied : b.toString()
compilation error,540,replace,[CE] cannot find symbol b, //  removeAgedItems(true);  this.data.add(item,  getItemCount()  -  1);  ,b.setLength(0); this.data.add(item, getItemCount() - 1);
compilation error,540,add,[CE] not a statement, ,bodied ; b.toString() = null;
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify)  propag  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  ,// deleteAgedItems(false); if(notify) propag fireSeriesChanged(); hopped && item.getPeriod().getTime().equals(this.timePeriodClass.getName())) { this.data.remove
patch is same with buggy,540,replace,, //  deleteAgedItems(false);  if(notify)  propag  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  ,// deleteAgedItems(false); if(notify) propag fireSeriesChanged(); hopped && item.getPeriod().getTime().equals(this.timePeriodClass.getName())) { this.data.remove
patch is same with buggy,174,replace,, this.maximumItemAge  =  Math.max(0,  0);  ,this.maximumItemAge = Math.max(0, 0);
patch is same with buggy,880,replace,, System.err.println( "Requires  start  %  2  <=  0.   ");  ,System.err.println("Requires start % 2 <= 0. ");
patch is same with buggy,880,replace,, System.err.println( "Requires  start  %  2  <=  0.   ");  , 
compilation error,174,replace,[CE] illegal start of expression, if(timePeriodClass  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  timePeriodClass  =  timePeriodClass;  }  ,if(domain == null) { this.domain = domain; if(timePeriodClass == null) { this.range = range; timePeriodClass = timePeriodClass; }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getSeriesCount() > this.maximumItemCount) { // this.data.getAgedItems(false); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getAgedItems()!= null) { // this.data.getAgedItems(false); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getItemCount() > this.maximumItemCount) { // this.data.getAgedItems(false); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] cannot find symbol b, ,b.append(" for"); this.data.add(item);
compilation error,540,add,[CE] bad operand types for binary operator '+', ,b.setValue(item.getValue() + 1);
patch is same with buggy,173,replace,, this.maximumItemCount  =  Integer.MIN_VALUE  +  3;  , 
compilation error,540,add,[CE] illegal start of expression, ,if(added) { b.append('n'); if(getItemCount() > this.maximumItemCount) { this.data.add(item); }
patch is same with buggy,880,replace,, System.err.println( "Requires  end  constituted  start.   ");  ,System.err.println("Requires end constituted start. ");
patch is same with buggy,880,replace,, System.err.println( "Requires  end  constituted  start.   ");  ,System.err.println("Requires end constituted start.");
patch is same with buggy,540,replace,, //  removeAgedItems(true);  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  ,// removeAgedItems(true); && item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))
compilation error,540,add,[CE] not a statement, ,if(item!= null) { if(added) { fireSeriesChanged(); } ; hopped ; Added if(added) { fireSeriesChanged(); } ; }
compilation error,540,add,[CE] not a statement, ,if(item!= null) { if(added) { fireSeriesChanged(); } ; hopped ; Added if(added) { fireSeriesChanged(); } ; } ;
compilation error,540,add,[CE] not a statement, ,if(item!= null) { if(added) { fireSeriesChanged(); } ; hopped ; Added if(added) { fireSeriesChanged(); } ;
compilation error,540,replace,[CE] cannot find symbol b, //  this.data.add(item);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  b.toString();  ,this.data.add(item); b.add(this.data.size() - 1);
patch is same with buggy,540,replace,, //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString()  ,// removedAllAgedItems(false); if(notify) { fireSeriesChanged(); hopped && item.getDataItemCount() > this.maximumItemCount); b.append(item.getPeriod().toString()
patch is same with buggy,540,replace,, //  this.data.getAgedItems(false);  if(notify))  {  fireSeriesChanged();  }    ,// this.data.getAgedItems(false); if(notify)) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  &  ;  }  ,if(item!= null) { // removeAgedItems(true); this.data.add(item); if(notify) { fireSeriesChanged(); }
compilation error,540,replace,[CE] illegal start of expression, //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  &  ;  }  ,if(item.getPeriod().equals(this.data.size())) { // removeAgedItems(true); this.data.add(item); if(notify) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { if(!added) { fireSeriesChanged(); & b.toString() : null; } ; }
compilation error,540,add,[CE] cannot find symbol b, ,b.append(item.getPeriod().toString()); updateBounds(item.getPeriod(), item.getPeriod(), this.data.size());
compilation error,540,add,[CE] cannot find symbol b, ,b.append(item.getPeriod().toString()); updateBounds(item.getPeriod(), this.data.size() - 1);
compilation error,540,add,[CE] illegal start of expression, ,&& item.getPeriod().equals(getItemCount() - 1); b.toString();
compilation error,540,add,[CE] cannot find symbol, ,bod : Collections.singleton(this.data).get(item);
patch is same with buggy,540,replace,, //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  }  ,// removeAgedItems(true, item); if(notify) { fireSeriesChanged(); } ; bodied? b.toString() : null; }
compilation error,540,add,[CE] cannot find symbol Arrays, ,Arrays.sort(this.data); removedAgedItems(true, true);
patch is same with buggy,540,replace,, //  this.data.removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  slated  ;  }  ,// this.data.removeAgedItems(true); if(notify)) { fireSeriesChanged(); slated ; }
compilation error,540,add,[CE] method equals in class Object cannot be applied to given types;, ,if(item.getPeriod().equals(this.data.size())) { throw new SeriesException(""); } else if(getItemCount() > this.maximumItemCount) { this.data.add(item); }
compilation error,540,replace,[CE] ';' expected, //  removedAgedItems(true;  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  ,b.append(item.getPeriod()).append(','));
patch is same with buggy,540,replace,, //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ,// this.data.removeAgedItems(true); if(notify) { fireSeriesChanged(); bodied
patch is same with buggy,540,replace,, //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ,// this.data.removeAgedItems(true); if(notify) { fireSeriesChanged(); bodied
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); Afterward else if(getItemCount() > this.maximumItemCount) { this.data.remove(0); }
compilation error,540,add,[CE] not a statement, ,if(notify) { fireSeriesChanged(); meanwhile if(getItemCount() > this.maximumItemCount) { this.data.remove(0); }
compilation error,540,add,[CE] cannot find symbol items, ,this.data.add(item); items = null;
patch is same with buggy,880,replace,, System.err.println( "Requires  end  -  start.   ");  ,System.err.println("Requires end - start. ");
compilation error,540,add,[CE] illegal start of expression, ,if(item!= null) { // removeAgedItems(false, item); if(notify)) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriod().equals(this.data.size())) { // removeAgedItems(false, item); if(notify)) { fireSeriesChanged(); }
compilation error,540,add,[CE] illegal start of expression, ,if(item.getPeriodType() == this.data.size()) { // removeAgedItems(false, item); if(notify)) { fireSeriesChanged(); }
