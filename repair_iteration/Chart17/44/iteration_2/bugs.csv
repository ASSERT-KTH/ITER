bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ((  latest  -  getTimePeriod(0).getSerialIndex())  >=  this.maximumItemAge);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  ((  latest  -  getTimePeriod(0).getSerialIndex())  >=  this.maximumItemAge);  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  latest  -  getTimePeriod(0).getSerialIndex())  >=  this.maximumItemAge);	      ((    longest    -    getTimePeriod(0).getSerialIndex())    >=    this.maximumItemAge);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  ((  latest  -  getTimePeriod(0).getSerialIndex())  >>  this.maximumItemAge);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  ((  latest  -  getTimePeriod(0).getSerialIndex())  >>  this.maximumItemAge);  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  latest  -  getTimePeriod(0).getSerialIndex())  >>  this.maximumItemAge);	      ((    longest    -    getTimePeriod(0).getSerialIndex())    >=    this.maximumItemAge);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  ((  latest  -  getTimePeriod(0).getSerialIndex())  >=  this.maximumItemAge));  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  ((  latest  -  getTimePeriod(0).getSerialIndex())  >=  this.maximumItemAge));  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  latest  -  getTimePeriod(0).getSerialIndex())  >=  this.maximumItemAge));	      ((    longest    -    getTimePeriod(0).getSerialIndex())    >=    this.maximumItemAge));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  ((  latest  -  getTimePeriod(0).getSerialIndex())  >>  this.maximumItemAge));  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  ((  latest  -  getTimePeriod(0).getSerialIndex())  >>  this.maximumItemAge));  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  latest  -  getTimePeriod(0).getSerialIndex())  >>  this.maximumItemAge));	      ((    longest    -    getTimePeriod(0).getSerialIndex())    >=    this.maximumItemAge));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  &&(latest  -  getTimePeriod(0).getSerialIndex())  ==  0)  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  &&(latest  -  getTimePeriod(0).getSerialIndex())  ==  0)  {  this.data.remove(0);  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&(latest  -  getTimePeriod(0).getSerialIndex())  ==  0)  {  this.data.remove(0);	      &&(last    -    getTimePeriod(0).getSerialIndex())    ==    0)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
6	[BUG]  [BUGGY]  &&(last  -  getTimePeriod(0).getSerialIndex()  +  1)  ==  0)  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  &&(last  -  getTimePeriod(0).getSerialIndex()  +  1)  ==  0)  {  this.data.remove(0);  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&(last  -  getTimePeriod(0).getSerialIndex()  +  1)  ==  0)  {  this.data.remove(0);	      &&(last    -    getTimePeriod(0).getSerialIndex())    ==    0)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
7	[BUG]  [BUGGY]  >  this.maximumItemAge  &&(latest  -  getTimePeriod(0).getSerialIndex())>  this.data.size())  {  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  >  this.maximumItemAge  &&(latest  -  getTimePeriod(0).getSerialIndex())>  this.data.size())  {  [BUGGY]    this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	>  this.maximumItemAge  &&(latest  -  getTimePeriod(0).getSerialIndex())>  this.data.size())  {	  >    this.maximumItemAge    ||(latest    -    getTimePeriod(0).getSerialIndex())>    this.data.size())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
8	[BUG]  [BUGGY]  ||(latest  -  getTimePeriod(0).getSerialIndex())>  this.data.size())  {  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  ||(latest  -  getTimePeriod(0).getSerialIndex())>  this.data.size())  {  [BUGGY]    this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	||(latest  -  getTimePeriod(0).getSerialIndex())>  this.data.size())  {	  >    this.maximumItemAge    ||(latest    -    getTimePeriod(0).getSerialIndex())>    this.data.size())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
9	[BUG]  [BUGGY]  &&(latest  -  getTimePeriod(0).getSerialIndex())!=  this.maximumItemAge)  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  &&(latest  -  getTimePeriod(0).getSerialIndex())!=  this.maximumItemAge)  {  this.data.remove(0);  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&(latest  -  getTimePeriod(0).getSerialIndex())!=  this.maximumItemAge)  {  this.data.remove(0);	      &&(last    -    getTimePeriod(0).getSerialIndex())!=    this.maximumItemAge)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
10	[BUG]  [BUGGY]  &&(latest  -  getTimePeriod(0).getSerialIndex())!=  0)  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  &&(latest  -  getTimePeriod(0).getSerialIndex())!=  0)  {  this.data.remove(0);  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&(latest  -  getTimePeriod(0).getSerialIndex())!=  0)  {  this.data.remove(0);	      &&(last    -    getTimePeriod(0).getSerialIndex())!=    0)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
11	[BUG]  [BUGGY]  &&(last  -  getTimePeriod(0).getSerialIndex()  +  1)!=  0)  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  &&(last  -  getTimePeriod(0).getSerialIndex()  +  1)!=  0)  {  this.data.remove(0);  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&(last  -  getTimePeriod(0).getSerialIndex()  +  1)!=  0)  {  this.data.remove(0);	      &&(last    -    getTimePeriod(0).getSerialIndex())!=    0)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
12	[BUG]  [BUGGY]  &&(this.data.size()  >  latest  ||  this.maximumItemAge))  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  &&(this.data.size()  >  latest  ||  this.maximumItemAge))  {  this.data.remove(0);  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&(this.data.size()  >  latest  ||  this.maximumItemAge))  {  this.data.remove(0);	      &&(this.data.size()    >    latest))    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
13	[BUG]  [BUGGY]  &&  this.data.get(latest)  ==  null)  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  &&  this.data.get(latest)  ==  null)  {  this.data.remove(0);  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&  this.data.get(latest)  ==  null)  {  this.data.remove(0);	      &&    this.data.get(latest)!=    null)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
14	[BUG]  [BUGGY]  this.data.remove(latest);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  this.data.remove(latest);  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	this.data.remove(latest);	      this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
15	[BUG]  [BUGGY]  &&  this.data.size()  <  =  latest)  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  &&  this.data.size()  <  =  latest)  {  this.data.remove(0);  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&  this.data.size()  <  =  latest)  {  this.data.remove(0);	      &&    this.data.size()    >    latest)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
16	[BUG]  [BUGGY]  ((  longest  -  getTimePeriod(0).getSerialIndex())  >=  this.data.size());  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  ((  longest  -  getTimePeriod(0).getSerialIndex())  >=  this.data.size());  [BUGGY]    this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  longest  -  getTimePeriod(0).getSerialIndex())  >=  this.data.size());	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
17	[BUG]  [BUGGY]  >  this.maximumItemAge  &&(latest  -  getTimePeriod(0).getSerialIndex())>  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  >  this.maximumItemAge  &&(latest  -  getTimePeriod(0).getSerialIndex())>  this.data.remove(0);  [BUGGY]    this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	>  this.maximumItemAge  &&(latest  -  getTimePeriod(0).getSerialIndex())>  this.data.remove(0);	  >    this.maximumItemAge    ||(latest    -    getTimePeriod(0).getSerialIndex())>    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
18	[BUG]  [BUGGY]  >  this.maximumItemAge  &&(latest  -  getTimePeriod(0).getSerialIndex())>  this.data.remove(1);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  >  this.maximumItemAge  &&(latest  -  getTimePeriod(0).getSerialIndex())>  this.data.remove(1);  [BUGGY]    this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	>  this.maximumItemAge  &&(latest  -  getTimePeriod(0).getSerialIndex())>  this.data.remove(1);	  >    this.maximumItemAge    ||(latest    -    getTimePeriod(0).getSerialIndex())>    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
19	[BUG]  [BUGGY]  >  this.data.size()  -  1)  {  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  >  this.data.size()  -  1)  {  [BUGGY]    this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	>  this.data.size()  -  1)  {	  >    this.data.size())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
20	[BUG]  [BUGGY]  >  this.maximumItemAge  &&(latest  -  getTimePeriod(1).getSerialIndex())>  this.data.size())  {  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  >  this.maximumItemAge  &&(latest  -  getTimePeriod(1).getSerialIndex())>  this.data.size())  {  [BUGGY]    this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	>  this.maximumItemAge  &&(latest  -  getTimePeriod(1).getSerialIndex())>  this.data.size())  {	  >    this.maximumItemAge    ||(latest    -    getTimePeriod(0).getSerialIndex())>    this.data.size())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
21	[BUG]  [BUGGY]  ((  longest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  ((  longest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge);  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  longest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge);	      ((    longest    -    getTimePeriod(0).getSerialIndex())    >=    this.maximumItemAge);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
22	[BUG]  [BUGGY]  ((  longest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge));  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  ((  longest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge));  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  longest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge));	      ((    longest    -    getTimePeriod(0).getSerialIndex())    >=    this.maximumItemAge));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
23	[BUG]  [BUGGY]  ((  -  getTimePeriod(0).getSerialIndex())  >=  this.data.get(latest));  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  ((  -  getTimePeriod(0).getSerialIndex())  >=  this.data.get(latest));  [BUGGY]    this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  -  getTimePeriod(0).getSerialIndex())  >=  this.data.get(latest));	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
24	[BUG]  [BUGGY]  ((  -  getTimePeriod(0).getSerialIndex())  >=  data.getLength()));  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  ((  -  getTimePeriod(0).getSerialIndex())  >=  data.getLength()));  [BUGGY]    this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  -  getTimePeriod(0).getSerialIndex())  >=  data.getLength()));	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
25	[BUG]  [BUGGY]  &&(this.data.size()  >  latest)||(this.data.get(0).getItemCount()  >  this.maximumItemAge))  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  &&(this.data.size()  >  latest)||(this.data.get(0).getItemCount()  >  this.maximumItemAge))  {  this.data.remove(0);  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&(this.data.size()  >  latest)||(this.data.get(0).getItemCount()  >  this.maximumItemAge))  {  this.data.remove(0);	      &&(this.data.size()    >    latest))    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
26	[BUG]  [BUGGY]  &&  this.data.size()  ==  latest)  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  &&  this.data.size()  ==  latest)  {  this.data.remove(0);  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&  this.data.size()  ==  latest)  {  this.data.remove(0);	      &&    this.data.size()    >    latest)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
27	[BUG]  [BUGGY]  &&(latest  -  getTimePeriod(0).getSerialIndex())  ==  this.maximumItemAge)  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  &&(latest  -  getTimePeriod(0).getSerialIndex())  ==  this.maximumItemAge)  {  this.data.remove(0);  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&(latest  -  getTimePeriod(0).getSerialIndex())  ==  this.maximumItemAge)  {  this.data.remove(0);	      &&(last    -    getTimePeriod(0).getSerialIndex())!=    this.maximumItemAge)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
28	[BUG]  [BUGGY]  &&(this.data.size()  >  latest)&&  this.maximumItemAge  <  this.maximumItemAge)  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  &&(this.data.size()  >  latest)&&  this.maximumItemAge  <  this.maximumItemAge)  {  this.data.remove(0);  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&(this.data.size()  >  latest)&&  this.maximumItemAge  <  this.maximumItemAge)  {  this.data.remove(0);	      &&(this.data.size()    >    latest))    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
29	[BUG]  [BUGGY]  ((  latest  -  getTimePeriod(1).getSerialIndex())  >=  this.maximumItemAge);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  ((  latest  -  getTimePeriod(1).getSerialIndex())  >=  this.maximumItemAge);  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  latest  -  getTimePeriod(1).getSerialIndex())  >=  this.maximumItemAge);	      ((    longest    -    getTimePeriod(0).getSerialIndex())    >=    this.maximumItemAge);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
30	[BUG]  [BUGGY]  ((  latest  -  getTimePeriod(1).getSerialIndex())  >=  this.maximumItemAge));  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  ((  latest  -  getTimePeriod(1).getSerialIndex())  >=  this.maximumItemAge));  [BUGGY]    >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  latest  -  getTimePeriod(1).getSerialIndex())  >=  this.maximumItemAge));	      ((    longest    -    getTimePeriod(0).getSerialIndex())    >=    this.maximumItemAge));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
31	[BUG]  [BUGGY]  &&  this.data.size()  >  maximumItemAge)  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())    [BUGGY]  &&  this.data.size()  >  maximumItemAge)  {  this.data.remove(0);  [BUGGY]    this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&  this.data.size()  >  maximumItemAge)  {  this.data.remove(0);	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
