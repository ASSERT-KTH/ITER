bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge));  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  ((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge));  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge));	  ((    latest    -    getTimePeriod(0).getSerialIndex())    >=    this.maximumItemAge));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  ((  latest  -  getTimePeriod(0).getSerialIndex())/  this.maximumItemAge));  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  ((  latest  -  getTimePeriod(0).getSerialIndex())/  this.maximumItemAge));  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  latest  -  getTimePeriod(0).getSerialIndex())/  this.maximumItemAge));	  ((    latest    -    getTimePeriod(0).getSerialIndex())    >=    this.maximumItemAge));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  ((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  ((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge);  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  latest  -  getTimePeriod(0).getSerialIndex())>  this.maximumItemAge);	  ((    latest    -    getTimePeriod(1).getSerialIndex())    >=    this.maximumItemAge);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
4	[BUG]  [BUGGY]  ((  latest  -  getTimePeriod(1).getSerialIndex())/  this.maximumItemAge);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  ((  latest  -  getTimePeriod(1).getSerialIndex())/  this.maximumItemAge);  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  latest  -  getTimePeriod(1).getSerialIndex())/  this.maximumItemAge);	  ((    latest    -    getTimePeriod(1).getSerialIndex())    >=    this.maximumItemAge);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
5	[BUG]  [BUGGY]  ((  latest  -  getTimePeriod(0).getSerialIndex())/  this.maximumItemAge);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  ((  latest  -  getTimePeriod(0).getSerialIndex())/  this.maximumItemAge);  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  latest  -  getTimePeriod(0).getSerialIndex())/  this.maximumItemAge);	  ((    latest    -    getTimePeriod(0).getSerialIndex())    >>    this.maximumItemAge);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
6	[BUG]  [BUGGY]  this.data.remove(latest  -  1);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  this.data.remove(latest  -  1);  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	this.data.remove(latest  -  1);	  this.data.remove(latest);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
7	[BUG]  [BUGGY]  ((  -  getTimePeriod(0).getSerialIndex())>  this.data.get(latest));  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  ((  -  getTimePeriod(0).getSerialIndex())>  this.data.get(latest));  [BUGGY]      this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  -  getTimePeriod(0).getSerialIndex())>  this.data.get(latest));	  ((    -    getTimePeriod(0).getSerialIndex())    >=    this.data.get(latest));    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
8	[BUG]  [BUGGY]  ((  -  getTimePeriod(0).getSerialIndex())+  this.data.get(latest));  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  ((  -  getTimePeriod(0).getSerialIndex())+  this.data.get(latest));  [BUGGY]      this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  -  getTimePeriod(0).getSerialIndex())+  this.data.get(latest));	  ((    -    getTimePeriod(0).getSerialIndex())    >=    this.data.get(latest));    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
9	[BUG]  [BUGGY]  >  this.maximumItemAge  &&(last  -  getTimePeriod(1).getSerialIndex())>  this.data.size())  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  >  this.maximumItemAge  &&(last  -  getTimePeriod(1).getSerialIndex())>  this.data.size())  {  [BUGGY]      this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	>  this.maximumItemAge  &&(last  -  getTimePeriod(1).getSerialIndex())>  this.data.size())  {	  >    this.maximumItemAge    &&(latest    -    getTimePeriod(1).getSerialIndex())>    this.data.size())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
10	[BUG]  [BUGGY]  &&(this.data.size()  >  latest)||(this.data.get(0).getItemCount()  <  this.maximumItemAge))  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  &&(this.data.size()  >  latest)||(this.data.get(0).getItemCount()  <  this.maximumItemAge))  {  this.data.remove(0);  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&(this.data.size()  >  latest)||(this.data.get(0).getItemCount()  <  this.maximumItemAge))  {  this.data.remove(0);	  &&(this.data.size()    >    latest)||(this.data.get(0).getItemCount()    >    this.maximumItemAge))    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
11	[BUG]  [BUGGY]  &&(this.data.size()  >  latest)||(this.data.get(0).getItemCount()  >=  this.maximumItemAge))  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  &&(this.data.size()  >  latest)||(this.data.get(0).getItemCount()  >=  this.maximumItemAge))  {  this.data.remove(0);  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&(this.data.size()  >  latest)||(this.data.get(0).getItemCount()  >=  this.maximumItemAge))  {  this.data.remove(0);	  &&(this.data.size()    >    latest)||(this.data.get(0).getItemCount()    >    this.maximumItemAge))    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
12	[BUG]  [BUGGY]  ((  latest  -  getTimePeriod(1).getSerialIndex())>  this.maximumItemAge));  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  ((  latest  -  getTimePeriod(1).getSerialIndex())>  this.maximumItemAge));  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  latest  -  getTimePeriod(1).getSerialIndex())>  this.maximumItemAge));	  ((    latest    -    getTimePeriod(1).getSerialIndex())    >=    this.maximumItemAge));    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
13	[BUG]  [BUGGY]  >  this.maximumItemAge  &&(last  -  getTimePeriod(0).getSerialIndex())>  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  >  this.maximumItemAge  &&(last  -  getTimePeriod(0).getSerialIndex())>  this.data.remove(0);  [BUGGY]      this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	>  this.maximumItemAge  &&(last  -  getTimePeriod(0).getSerialIndex())>  this.data.remove(0);	  >    this.maximumItemAge    &&(latest    -    getTimePeriod(0).getSerialIndex())>    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
14	[BUG]  [BUGGY]  ((  latest  -  getTimePeriod(0).getSerialIndex())  >=  this.data.size());  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  ((  latest  -  getTimePeriod(0).getSerialIndex())  >=  this.data.size());  [BUGGY]      this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  latest  -  getTimePeriod(0).getSerialIndex())  >=  this.data.size());	  ((    longest    -    getTimePeriod(0).getSerialIndex())    >=    this.data.size());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
15	[BUG]  [BUGGY]  ((  longest  -  getTimePeriod(0).getSerialIndex())>  this.data.size());  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  ((  longest  -  getTimePeriod(0).getSerialIndex())>  this.data.size());  [BUGGY]      this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  longest  -  getTimePeriod(0).getSerialIndex())>  this.data.size());	  ((    longest    -    getTimePeriod(0).getSerialIndex())    >=    this.data.size());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
16	[BUG]  [BUGGY]  &&(latest  -  getTimePeriod(0).getSerialIndex()  +  1)!=  0)  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  &&(latest  -  getTimePeriod(0).getSerialIndex()  +  1)!=  0)  {  this.data.remove(0);  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&(latest  -  getTimePeriod(0).getSerialIndex()  +  1)!=  0)  {  this.data.remove(0);	  &&(latest    -    getTimePeriod(0).getSerialIndex())!=    0)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
17	[BUG]  [BUGGY]  >  this.maximumItemAge  &&(last  -  getTimePeriod(0).getSerialIndex())>  this.data.size())  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  >  this.maximumItemAge  &&(last  -  getTimePeriod(0).getSerialIndex())>  this.data.size())  {  [BUGGY]      this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	>  this.maximumItemAge  &&(last  -  getTimePeriod(0).getSerialIndex())>  this.data.size())  {	  >    this.maximumItemAge    &&(latest    -    getTimePeriod(0).getSerialIndex())>    this.data.size())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
18	[BUG]  [BUGGY]  &&(latest  -  getTimePeriod(0).getSerialIndex()  +  1)  ==  0)  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  &&(latest  -  getTimePeriod(0).getSerialIndex()  +  1)  ==  0)  {  this.data.remove(0);  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&(latest  -  getTimePeriod(0).getSerialIndex()  +  1)  ==  0)  {  this.data.remove(0);	  &&(latest    -    getTimePeriod(0).getSerialIndex())    ==    0)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
19	[BUG]  [BUGGY]  &&  this.data.size()  <  latest)  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  &&  this.data.size()  <  latest)  {  this.data.remove(0);  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&  this.data.size()  <  latest)  {  this.data.remove(0);	  &&    this.data.size()    <    =    latest)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
20	[BUG]  [BUGGY]  &&(this.data.size()  <  latest  ||  this.maximumItemAge))  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  &&(this.data.size()  <  latest  ||  this.maximumItemAge))  {  this.data.remove(0);  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&(this.data.size()  <  latest  ||  this.maximumItemAge))  {  this.data.remove(0);	  &&(this.data.size()    >    latest    ||    this.maximumItemAge))    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
21	[BUG]  [BUGGY]  &&  this.data.size()!=  latest)  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  &&  this.data.size()!=  latest)  {  this.data.remove(0);  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&  this.data.size()!=  latest)  {  this.data.remove(0);	  &&    this.data.size()    ==    latest)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
22	[BUG]  [BUGGY]  &&(last  -  getTimePeriod(0).getSerialIndex())  ==  this.maximumItemAge)  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  &&(last  -  getTimePeriod(0).getSerialIndex())  ==  this.maximumItemAge)  {  this.data.remove(0);  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&(last  -  getTimePeriod(0).getSerialIndex())  ==  this.maximumItemAge)  {  this.data.remove(0);	  &&(latest    -    getTimePeriod(0).getSerialIndex())    ==    this.maximumItemAge)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
23	[BUG]  [BUGGY]  &&(latest  -  getTimePeriod(0).getSerialIndex()  +  this.maximumItemAge)!=  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  &&(latest  -  getTimePeriod(0).getSerialIndex()  +  this.maximumItemAge)!=  this.data.remove(0);  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&(latest  -  getTimePeriod(0).getSerialIndex()  +  this.maximumItemAge)!=  this.data.remove(0);	  &&(latest    -    getTimePeriod(0).getSerialIndex())!=    this.maximumItemAge)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
24	[BUG]  [BUGGY]  >  this.data.size()  1)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  >  this.data.size()  1)  {  [BUGGY]      this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	>  this.data.size()  1)  {	  >    this.data.size()    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
25	[BUG]  [BUGGY]  ||(last  -  getTimePeriod(0).getSerialIndex())>  this.data.size())  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  ||(last  -  getTimePeriod(0).getSerialIndex())>  this.data.size())  {  [BUGGY]      this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	||(last  -  getTimePeriod(0).getSerialIndex())>  this.data.size())  {	  ||(latest    -    getTimePeriod(0).getSerialIndex())>    this.data.size())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
26	[BUG]  [BUGGY]  &&(this.data.size()  >  latest)&&  this.maximumItemAge  <  =  this.maximumItemAge)  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  &&(this.data.size()  >  latest)&&  this.maximumItemAge  <  =  this.maximumItemAge)  {  this.data.remove(0);  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&(this.data.size()  >  latest)&&  this.maximumItemAge  <  =  this.maximumItemAge)  {  this.data.remove(0);	  &&(this.data.size()    >    latest)&&    this.maximumItemAge    <    this.maximumItemAge)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
27	[BUG]  [BUGGY]  &&(this.data.size()  <  latest)&&  this.maximumItemAge  <  =  this.maximumItemAge)  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  &&(this.data.size()  <  latest)&&  this.maximumItemAge  <  =  this.maximumItemAge)  {  this.data.remove(0);  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&(this.data.size()  <  latest)&&  this.maximumItemAge  <  =  this.maximumItemAge)  {  this.data.remove(0);	  &&(this.data.size()    >    latest)&&    this.maximumItemAge    <    this.maximumItemAge)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
28	[BUG]  [BUGGY]  ((  -  getTimePeriod(0).getSerialIndex())+  this.data.getLength()));  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  ((  -  getTimePeriod(0).getSerialIndex())+  this.data.getLength()));  [BUGGY]      this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  -  getTimePeriod(0).getSerialIndex())+  this.data.getLength()));	  ((    -    getTimePeriod(0).getSerialIndex())    >=    data.getLength()));    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
29	[BUG]  [BUGGY]  ((  -  getTimePeriod(0).getSerialIndex())>  data.getLength()));  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  ((  -  getTimePeriod(0).getSerialIndex())>  data.getLength()));  [BUGGY]      this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  -  getTimePeriod(0).getSerialIndex())>  data.getLength()));	  ((    -    getTimePeriod(0).getSerialIndex())    >=    data.getLength()));    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
30	[BUG]  [BUGGY]  &&  this.data.size()  >=  maximumItemAge)  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  &&  this.data.size()  >=  maximumItemAge)  {  this.data.remove(0);  [BUGGY]      this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&  this.data.size()  >=  maximumItemAge)  {  this.data.remove(0);	  &&    this.data.size()    >    maximumItemAge)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
31	[BUG]  [BUGGY]  &&(this.data.size()  >=  latest)&&  this.maximumItemAge  <  this.maximumItemAge)  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  &&(this.data.size()  >=  latest)&&  this.maximumItemAge  <  this.maximumItemAge)  {  this.data.remove(0);  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&(this.data.size()  >=  latest)&&  this.maximumItemAge  <  this.maximumItemAge)  {  this.data.remove(0);	  &&(this.data.size()    >    latest)&&    this.maximumItemAge    <    this.maximumItemAge)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
32	[BUG]  [BUGGY]  ((  latest  -  getTimePeriod(1).getSerialIndex())>  this.maximumItemAge);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  ((  latest  -  getTimePeriod(1).getSerialIndex())>  this.maximumItemAge);  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  latest  -  getTimePeriod(1).getSerialIndex())>  this.maximumItemAge);	  ((    latest    -    getTimePeriod(0).getSerialIndex())    >=    this.maximumItemAge);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
33	[BUG]  [BUGGY]  ((  -  getTimePeriod(0).getSerialIndex())%  this.data.get(latest));  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  ((  -  getTimePeriod(0).getSerialIndex())%  this.data.get(latest));  [BUGGY]      this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  -  getTimePeriod(0).getSerialIndex())%  this.data.get(latest));	  ((    -    getTimePeriod(0).getSerialIndex())    >=    this.data.get(latest));    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
34	[BUG]  [BUGGY]  ((  latest  -  getTimePeriod(0).getSerialIndex())  <  this.maximumItemAge));  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  ((  latest  -  getTimePeriod(0).getSerialIndex())  <  this.maximumItemAge));  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  latest  -  getTimePeriod(0).getSerialIndex())  <  this.maximumItemAge));	  ((    latest    -    getTimePeriod(0).getSerialIndex())    >>    this.maximumItemAge));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
35	[BUG]  [BUGGY]  &&(this.data.size()  >  latest)&&(this.data.get(0).getItemCount()  >  this.maximumItemAge))  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  &&(this.data.size()  >  latest)&&(this.data.get(0).getItemCount()  >  this.maximumItemAge))  {  this.data.remove(0);  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&(this.data.size()  >  latest)&&(this.data.get(0).getItemCount()  >  this.maximumItemAge))  {  this.data.remove(0);	  &&(this.data.size()    >    latest)||(this.data.get(0).getItemCount()    >    this.maximumItemAge))    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
36	[BUG]  [BUGGY]  ((  latest  -  getTimePeriod(0).getSerialIndex())%  this.maximumItemAge);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  ((  latest  -  getTimePeriod(0).getSerialIndex())%  this.maximumItemAge);  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  latest  -  getTimePeriod(0).getSerialIndex())%  this.maximumItemAge);	  ((    latest    -    getTimePeriod(0).getSerialIndex())    >>    this.maximumItemAge);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
37	[BUG]  [BUGGY]  ((  -  getTimePeriod(0).getSerialIndex())>  this.data.getLength()));  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  ((  -  getTimePeriod(0).getSerialIndex())>  this.data.getLength()));  [BUGGY]      this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  -  getTimePeriod(0).getSerialIndex())>  this.data.getLength()));	  ((    -    getTimePeriod(0).getSerialIndex())    >=    data.getLength()));    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
38	[BUG]  [BUGGY]  ((  -  getTimePeriod(0).getSerialIndex())  <  this.data.getLength()));  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  ((  -  getTimePeriod(0).getSerialIndex())  <  this.data.getLength()));  [BUGGY]      this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  -  getTimePeriod(0).getSerialIndex())  <  this.data.getLength()));	  ((    -    getTimePeriod(0).getSerialIndex())    >=    data.getLength()));    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
39	[BUG]  [BUGGY]  &&(latest  -  getTimePeriod(0).getItemCount())  ==  0)  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  &&(latest  -  getTimePeriod(0).getItemCount())  ==  0)  {  this.data.remove(0);  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&(latest  -  getTimePeriod(0).getItemCount())  ==  0)  {  this.data.remove(0);	  &&(latest    -    getTimePeriod(0).getSerialIndex())    ==    0)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
40	[BUG]  [BUGGY]  >  this.maximumItemAge  &&(latest  -  getTimePeriod(1).getSerialIndex())>  this.data.remove(0))  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  >  this.maximumItemAge  &&(latest  -  getTimePeriod(1).getSerialIndex())>  this.data.remove(0))  {  [BUGGY]      this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	>  this.maximumItemAge  &&(latest  -  getTimePeriod(1).getSerialIndex())>  this.data.remove(0))  {	  >    this.maximumItemAge    &&(latest    -    getTimePeriod(1).getSerialIndex())>    this.data.size())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
41	[BUG]  [BUGGY]  &&(latest  *  getTimePeriod(0).getSerialIndex())  ==  this.maximumItemAge)  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  &&(latest  *  getTimePeriod(0).getSerialIndex())  ==  this.maximumItemAge)  {  this.data.remove(0);  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&(latest  *  getTimePeriod(0).getSerialIndex())  ==  this.maximumItemAge)  {  this.data.remove(0);	  &&(latest    -    getTimePeriod(0).getSerialIndex())    ==    this.maximumItemAge)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
42	[BUG]  [BUGGY]  >  this.data.remove(0))  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  >  this.data.remove(0))  {  [BUGGY]      this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	>  this.data.remove(0))  {	  >    this.data.size()    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
43	[BUG]  [BUGGY]  ||(latest  -  getTimePeriod(0).getSerialIndex())  >=  this.data.size())  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  ||(latest  -  getTimePeriod(0).getSerialIndex())  >=  this.data.size())  {  [BUGGY]      this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	||(latest  -  getTimePeriod(0).getSerialIndex())  >=  this.data.size())  {	  ||(latest    -    getTimePeriod(0).getSerialIndex())>    this.data.size())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
44	[BUG]  [BUGGY]  &&(this.data.size()  >=  latest  ||  this.maximumItemAge))  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  &&(this.data.size()  >=  latest  ||  this.maximumItemAge))  {  this.data.remove(0);  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&(this.data.size()  >=  latest  ||  this.maximumItemAge))  {  this.data.remove(0);	  &&(this.data.size()    >    latest    ||    this.maximumItemAge))    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
45	[BUG]  [BUGGY]  ((  latest  -  getTimePeriod(1).getSerialIndex())%  this.maximumItemAge));  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  ((  latest  -  getTimePeriod(1).getSerialIndex())%  this.maximumItemAge));  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  latest  -  getTimePeriod(1).getSerialIndex())%  this.maximumItemAge));	  ((    latest    -    getTimePeriod(1).getSerialIndex())    >=    this.maximumItemAge));    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
46	[BUG]  [BUGGY]  &&(this.data.size()  >  latest)&&  this.maximumItemAge  >=  this.maximumItemAge)  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  &&(this.data.size()  >  latest)&&  this.maximumItemAge  >=  this.maximumItemAge)  {  this.data.remove(0);  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&(this.data.size()  >  latest)&&  this.maximumItemAge  >=  this.maximumItemAge)  {  this.data.remove(0);	  &&(this.data.size()    >    latest)&&    this.maximumItemAge    <    this.maximumItemAge)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
47	[BUG]  [BUGGY]  ((  latest  -  getTimePeriod(1).getSerialIndex())%  this.maximumItemAge);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  ((  latest  -  getTimePeriod(1).getSerialIndex())%  this.maximumItemAge);  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  latest  -  getTimePeriod(1).getSerialIndex())%  this.maximumItemAge);	  ((    latest    -    getTimePeriod(1).getSerialIndex())    >=    this.maximumItemAge);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
48	[BUG]  [BUGGY]  &&(latest  -  getTimePeriod(0).getSerialIndex())  <  this.maximumItemAge)  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  &&(latest  -  getTimePeriod(0).getSerialIndex())  <  this.maximumItemAge)  {  this.data.remove(0);  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&(latest  -  getTimePeriod(0).getSerialIndex())  <  this.maximumItemAge)  {  this.data.remove(0);	  &&(latest    -    getTimePeriod(0).getSerialIndex())    ==    this.maximumItemAge)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
49	[BUG]  [BUGGY]  ((  latest  -  getTimePeriod(0).getSerialIndex())%  this.maximumItemAge));  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  ((  latest  -  getTimePeriod(0).getSerialIndex())%  this.maximumItemAge));  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  latest  -  getTimePeriod(0).getSerialIndex())%  this.maximumItemAge));	  ((    latest    -    getTimePeriod(0).getSerialIndex())    >=    this.maximumItemAge));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
50	[BUG]  [BUGGY]  ((  -  getTimePeriod(1).getSerialIndex())  >=  this.data.get(latest));  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  ((  -  getTimePeriod(1).getSerialIndex())  >=  this.data.get(latest));  [BUGGY]      this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	((  -  getTimePeriod(1).getSerialIndex())  >=  this.data.get(latest));	  ((    -    getTimePeriod(0).getSerialIndex())    >=    this.data.get(latest));    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
51	[BUG]  [BUGGY]  >  this.maximumItemAge  &&(latest  -  getTimePeriod(1).getSerialIndex())>  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  >  this.maximumItemAge  &&(latest  -  getTimePeriod(1).getSerialIndex())>  this.data.remove(0);  [BUGGY]      this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	>  this.maximumItemAge  &&(latest  -  getTimePeriod(1).getSerialIndex())>  this.data.remove(0);	  >    this.maximumItemAge    &&(latest    -    getTimePeriod(0).getSerialIndex())>    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
52	[BUG]  [BUGGY]  &&  this.data.size()  >  latest)  {  this.data.remove(0);  }  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  &&  this.data.size()  >  latest)  {  this.data.remove(0);  }  [BUGGY]      this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&  this.data.size()  >  latest)  {  this.data.remove(0);  }	  &&    this.data.size()    >    maximumItemAge)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
53	[BUG]  [BUGGY]  &&(latest  -  getTimePeriod(0).getSerialIndex())  >=  0)  {  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  &&(latest  -  getTimePeriod(0).getSerialIndex())  >=  0)  {  this.data.remove(0);  [BUGGY]      >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	&&(latest  -  getTimePeriod(0).getSerialIndex())  >=  0)  {  this.data.remove(0);	  &&(latest    -    getTimePeriod(0).getSerialIndex())    ==    0)    {    this.data.remove(0);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
54	[BUG]  [BUGGY]  >  this.maximumItemAge  &&(latest  -  getTimePeriod(0).getSerialIndex())>  this.data.remove(0))  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())      [BUGGY]  >  this.maximumItemAge  &&(latest  -  getTimePeriod(0).getSerialIndex())>  this.data.remove(0))  {  [BUGGY]      this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	replace	>  this.maximumItemAge  &&(latest  -  getTimePeriod(0).getSerialIndex())>  this.data.remove(0))  {	  >    this.maximumItemAge    &&(latest    -    getTimePeriod(0).getSerialIndex())>    this.data.size())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
