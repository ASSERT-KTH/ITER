compilation error,173,replace,[CE] cannot find symbol, this.domain  = "domain ";  ,this.domain = domain +"".equals(name.getDomain());
patch is same with buggy,175,replace,, this.maximumItemCount  =  Integer.MAX_VALUE;  ,this.maximumItemCount = Integer.MAX_VALUE;
compilation error,175,replace,[CE] possible loss of precision, this.maximumItemCount  =  Integer.MAX_VALUE;  ,this.maximumItemCount = Long.MAX_VALUE;
patch is same with buggy,740,replace,, long  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  ,long maximumItemAge = getTimePeriod(getItemCount() - 1).getSerialIndex();
compilation error,740,replace,[CE] cannot find symbol removed, long  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  ,long maximumItemAge = getTimePeriod(getItemCount() / 1).getSerialIndex();
patch is same with buggy,602,replace,, item.setValue(value);  fireSeriesChanged();  ,item.setValue(value); fireSeriesChanged();
patch is same with buggy,508,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,508,replace,[CE] cannot find symbol, fireSeriesChanged();  ,recalculateBounds();
patch is same with buggy,739,replace,, long  maximum  =  getTimePeriod(0).getSerialIndex();  ,long maximum = getTimePeriod(0).getSerialIndex();
compilation error,739,replace,[CE] cannot find symbol latest, long  maximum  =  getTimePeriod(0).getSerialIndex();  ,long maximum = getTimePeriod(1).getSerialIndex();
patch is same with buggy,543,replace,, if(!notify)  {  ,if(!notify) {
compilation error,543,replace,[CE] illegal start of expression, if(!notify)  {  ,if(!notify) }
compilation error,879,add,[CE] not a statement, ,if(end < start) { throw new IllegalArgumentException( " "); bodied
compilation error,174,replace,[CE] cannot find symbol, this.range  =  domain;  ,this.data = new java.util.ArrayListWithCapacity(2);
compilation error,586,add,[CE] cannot find symbol, ,setValue(period, value, false);
compilation error,512,replace,[CE] , RegularTimePeriod  first  =  getTimePeriod(getItemCount()  -  1);  ,RegularTimePeriod first = getTimePeriod(getItemCount());
patch is same with buggy,512,replace,, RegularTimePeriod  first  =  getTimePeriod(getItemCount()  -  1);  ,RegularTimePeriod first = getTimePeriod(getItemCount() - 1);
patch is same with buggy,172,replace,, super(name,  domain);  ,super(name, domain);
compilation error,172,replace,[CE] no suitable constructor found for Series(Comparable,String,String), super(name,  domain);  ,super(name, domain, range);
compilation error,174,add,[CE] cannot find symbol TimePeriodClass, ,this.TimePeriodClass = timePeriodClass;
compilation error,174,add,[CE] cannot find symbol timePeriodclass, ,this.timePeriodClass = timePeriodclass;
patch is same with buggy,238,replace,, int  maximumItemCount  =  this.data.size();  ,int maximumItemCount = this.data.size();
compilation error,238,replace,[CE] missing return statement, int  maximumItemCount  =  this.data.size();  ,int maximumItemCount = this.data.size() - 1;
compilation error,175,replace,[CE] cannot find symbol, this.domain  =  domain;  this.range  =  range;  ,this.data = new java.util.ArrayListWithCapacity(2);
patch is same with buggy,601,replace,, item.setValue(value);  ,item.setValue(value);
patch is same with buggy,534,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,534,replace,[CE] class or interface expected, fireSeriesChanged();  ,fireSeriesChanged("TimeSeriesDataItem");
patch is same with buggy,880,replace,, if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  ,if(end > start) { throw new IllegalArgumentException("Requires start <= end. "); }
patch is same with buggy,880,replace,, if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  ,if(end > start) { throw new IllegalArgumentException( "Requires start <= end. "); }
increase failing tests,514,replace, [FE] AssertionFailedError, added  =  false;  ,if(item.getPeriod().compareTo(last)> 0) { this.data.add(item); added = true; }
patch is same with buggy,238,replace,, int  maximumItemCount  =  getMaximumItemCount();  ,int maximumItemCount = getMaximumItemCount();
compilation error,238,replace,[CE] missing return statement, int  maximumItemCount  =  getMaximumItemCount();  ,int maximumItemCount = getMaximumItemCount() - 1;
compilation error,370,replace,[CE] missing return statement, this.data.get(index);  ,this.data.remove(index);
patch is same with buggy,370,replace,, this.data.get(index);  , 
patch is same with buggy,504,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,504,replace,[CE] cannot find symbol, fireSeriesChanged();  ,updateBounds(item.getPeriod());
increase failing tests,587,add, [FE] ClassCastException, ,this.data.add(period);
compilation error,587,add,[CE] no suitable method found for add(RegularTimePeriod,Number), ,this.data.add(period, value);
compilation error,587,add,[CE] no suitable constructor found for Long(Number), ,this.data.add(period, new Long(value));
compilation error,534,add,[CE] cannot find symbol b, ,fireSeriesChanged(); b.append(" but the series already contains an observation"); b.append(item.getPeriod().toString());
compilation error,534,add,[CE] cannot find symbol b, ,fireSeriesChanged(); b.append(item.getPeriod().toString());
compilation error,534,add,[CE] illegal start of expression, ,if(notify) }
compilation error,534,add,[CE] illegal start of expression, ,if(notify) >>
compilation error,504,add,[CE] cannot find symbol b, ,fireSeriesChanged(); b.append(" but the TimeSeries is expecting an instance of");
compilation error,504,add,[CE] cannot find symbol b, ,fireSeriesChanged(); b.append(", but the TimeSeries is expecting an instance of");
compilation error,738,replace,[CE] class or interface expected, int  count  =  getItemCount();  ,int count = getItemCount() - 1;
compilation error,738,replace,[CE] class or interface expected, int  count  =  getItemCount();  ,int count = getItemCount() / 2;
patch is same with buggy,739,replace,, long  maximumItemAge  =  getTimePeriod(0).getSerialIndex();  ,long maximumItemAge = getTimePeriod(0).getSerialIndex();
compilation error,739,replace,[CE] cannot find symbol latest, long  maximumItemAge  =  getTimePeriod(0).getSerialIndex();  ,long maximumItemAge = getTimePeriod(1).getSerialIndex();
patch is same with buggy,174,replace,, this.range  =  domain;  ,this.range = domain;
patch is same with buggy,880,replace,, throw  new  IllegalArgumentException( "Requires  start  >>  end. ");  , 
compilation error,601,replace,[CE] cannot find symbol, item.setValue(value);  ,item.setData(item); fireSeriesChanged();
patch is same with buggy,601,replace,, item.setValue(value);  , 
compilation error,536,add,[CE] cannot find symbol b, ,fireSeriesChanged(); b.append(item.getPeriod().toString());
compilation error,536,add,[CE] cannot find symbol b, ,fireSeriesChanged(); b.append(" but the series already contains an observation");
increase failing tests,544,replace, [FE] AssertionFailedError,   ,this.data.remove(0);
increase failing tests,879,add, [FE] IllegalArgumentException, ,if(end > start) { throw new IllegalArgumentException(" "); }
compilation error,739,replace,[CE] cannot find symbol latest, long  maximum  =  getTimePeriod(0).getSerialIndex();  ,long maximumItemAge = getTimePeriod(getItemCount() / 1).getSerialIndex();
compilation error,857,add,[CE] no suitable method found for createCopy(int), ,Object clone = createCopy(getItemCount() / 2);
compilation error,857,add,[CE] variable clone is already defined in method clone(), ,Object clone = getDataItem(getItemCount() / 2);
compilation error,880,replace,[CE] not a statement, if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  ,if(end < start) { throw new IllegalArgumentException( " "); bodied else if(end < start) { throw new IllegalArgumentException( " "); }
compilation error,175,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = Integer.MAX_VALUE;
compilation error,173,replace,[CE] cannot find symbol RANGE_DESCRIPTION, this.domain  = "domain ";  ,this.domain = domain + DEFAULT_DOMAIN_DESCRIPTION + RANGE_DESCRIPTION;
compilation error,540,add,[CE] illegal start of expression, ,if(notify) { fireSeriesChanged(); } ; &/ removeAgedItems(true);// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...
compilation error,540,add,[CE] illegal start of expression, ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(true);// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...
compilation error,540,add,[CE] illegal start of expression, ,if(notify) { fireSeriesChanged(); } ; &/ removeAgedItems(true);// remove old items if needed, but // don't notify anyone, because that // happens next anyway...
compilation error,602,replace,[CE] illegal start of expression, fireSeriesChanged();  ,item.setValue(value);
compilation error,738,add,[CE] illegal start of expression, ,if(getItemCount() > this.maximumItemAge || getTimePeriod(0).getSerialIndex() > this.maximumItemAge) {
compilation error,738,add,[CE] illegal start of expression, ,if(getItemCount() > this.maximumItemAge || getDataItemCount() > this.maximumItemAge) {
compilation error,489,add,[CE] <identifier> expected, ,if(item == null || item.getPeriod().getClass()!= this.timePeriodClass) { throw new IllegalArgumentException( "Null 'item' argument. "); } if(item.getPeriod().getClass().equals(this.
compilation error,489,add,[CE] <identifier> expected, ,if(item == null || item.getPeriod().getClass()!= this.timePeriodClass) { throw new IllegalArgumentException( "Null 'item' argument. "); } if(!item.getPeriod().getClass().
patch is same with buggy,536,replace,, if(getItemCount()  >  this.maximumItemCount  ||  getItemCount()  >  this.maximumItemCount)  {  ,if(getItemCount() > this.maximumItemCount || getItemCount() > this.maximumItemCount) {
patch is same with buggy,880,replace,, if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end. ");  }  ,if(end > start) { throw new IllegalArgumentException("Requires start >= end. "); }
patch is same with buggy,880,replace,, if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end. ");  }  ,if(end > start) { throw new IllegalArgumentException( "Requires start >= end. "); }
patch is same with buggy,540,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,540,replace,[CE] cannot find symbol, fireSeriesChanged();  ,recalculateBounds(item.getPeriod());
patch is same with buggy,514,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,514,replace,[CE] cannot find symbol, fireSeriesChanged();  ,updateSeriesChanged();
compilation error,514,add,[CE] cannot find symbol add, ,add = false;
compilation error,514,add,[CE] cannot find symbol adding, ,adding = false;
patch is same with buggy,489,replace,, if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  ,if(item == null || item.getPeriod().getClass()!= this.timePeriodClass) {
increase failing tests,489,replace, [FE] IllegalArgumentException, if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  ,if(item!= null || item.getPeriod().getClass()!= this.timePeriodClass) {
compilation error,508,add,[CE] cannot find symbol b, ,fireSeriesChanged(); b.append(",");
compilation error,508,add,[CE] cannot find symbol b, ,fireSeriesChanged(); b.append(":");
patch is same with buggy,508,replace,, added  =  false;  ,added = false;
compilation error,880,replace,[CE] illegal start of expression, if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  ,[Delete]
compilation error,880,replace,[CE] illegal start of expression, if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  ,if(end > start) { if(end > end) { throw new IllegalArgumentException(" "); }
compilation error,740,add,[CE] cannot find symbol last, ,boolean removed =(last == 0)&&(this.data.size() > this.maximumItemAge);
compilation error,740,add,[CE] variable removed is already defined in method removeAgedItems(boolean), ,boolean removed =(latest >= 0)&&(this.data.size() > this.maximumItemAge);
patch is same with buggy,504,replace,, boolean  added  =  true;  ,boolean added = true;
patch is same with buggy,514,replace,, added  =  false;  ,added = false;
patch is same with buggy,492,replace,, if(!item.getPeriod().getClass().isAssignableFrom(this.timePeriodClass))  {  ,if(!item.getPeriod().getClass().isAssignableFrom(this.timePeriodClass)) {
increase failing tests,492,replace, [FE] NullPointerException, if(!item.getPeriod().getClass().isAssignableFrom(this.timePeriodClass))  {  ,if(item.getPeriod().getClass().isAssignableFrom(this.timePeriodClass)) {
compilation error,173,add,[CE] cannot find symbol domino, ,this.domino = domain + DEFAULT_DOMAIN_DESCRIPTION;
compilation error,173,add,[CE] cannot find symbol domin, ,this.domin = domain + DEFAULT_DOMAIN_DESCRIPTION;
increase failing tests,175,replace, [FE] NullPointerException, this.maximumItemCount  =  0;  ,if(this.domain!= null) { this.data = new java.util.ArrayList(); } else { this.data = new java.util.ArrayList(); }
compilation error,172,add,[CE] call to super must be first statement in constructor, ,super(name, range);
compilation error,880,replace,[CE] not a statement, if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  ,if(end > start) { throw new IllegalArgumentException( "Requires start >= end. "); bodied
patch is same with buggy,857,replace,, Object  clone  =  createCopy(0,  getItemCount()  /  2);  ,Object clone = createCopy(0, getItemCount() / 2);
compilation error,879,add,[CE] not a statement, ,if(start > end) { throw new IllegalArgumentException( " "); bodied
patch is same with buggy,175,replace,, this.domain  =  domain;  this.range  =  range;  ,this.domain = domain; this.range = range;
increase failing tests,175,replace, [FE] NullPointerException, this.domain  =  domain;  this.range  =  range;  ,if(domain!= null) { this.domain = domain; this.range = range; } else { this.domain = domain; this.range = range; }
compilation error,511,add,[CE] illegal start of expression, ,if(item.getPeriod().compareTo(last) > 0) { this.data.add(item); added = true; } else {
compilation error,511,add,[CE] cannot find symbol, ,regularTimePeriod last = getTimePeriod(getItemCount() / 2);
patch is same with buggy,586,replace,, add(period,  value,  false);  , 
patch is same with buggy,740,replace,, long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  ,long maximum = getTimePeriod(getItemCount() - 1).getSerialIndex();
compilation error,740,replace,[CE] cannot find symbol removed, long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  ,long maximum = getTimePeriod(getItemCount() / 1).getSerialIndex();
compilation error,238,add,[CE] incompatible types, ,int maximumItemCount = this.data.get(this.maximumItemCount);
compilation error,238,add,[CE] method get in interface List cannot be applied to given types;, ,int maximumItemCount = this.data.get(this.timePeriodClass);
patch is same with buggy,536,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,536,replace,[CE] class or interface expected, fireSeriesChanged();  ,addSeriesChanged();
compilation error,339,add,[CE] no suitable method found for add(int), ,this.data.add(index);
patch is same with buggy,177,replace,, this.domain  =  domain;  this.range  =  range;  ,this.domain = domain; this.range = range;
increase failing tests,177,replace, [FE] AssertionFailedError, this.domain  =  domain;  this.range  =  range;  ,if(domain!= null) { this.domain = domain; this.range = range; } else { throw new IllegalArgumentException(""); }
compilation error,534,add,[CE] illegal start of expression, ,if(!added) }
compilation error,534,add,[CE] illegal start of expression, ,if(!added) >>
patch is same with buggy,173,replace,, this.domain  =  domain;  this.range  =  range;  ,this.domain = domain; this.range = range;
compilation error,540,add,[CE] method get in interface List cannot be applied to given types;, ,fireSeriesChanged(); b.append(item.getPeriod()).append(this.data.get(item.getPeriod()));
compilation error,540,add,[CE] method get in interface List cannot be applied to given types;, ,fireSeriesChanged(); b.append(item.getPeriod()).append(this.data.get(item.getValue()));
compilation error,540,add,[CE] illegal start of expression, ,if(notify) { fireSeriesChanged(); } ; &/ removeAgedItems(true);// remove old items if necessary, // don't notify anyone, because that // happens next anyway...
compilation error,540,add,[CE] illegal start of expression, ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(true);// remove old items if necessary, // don't notify anyone, because that // happens next anyway...
compilation error,540,add,[CE] illegal start of expression, ,if(notify) { fireSeriesChanged(); } ; &/ removeAgedItems(true);// remove old items if needed, // don't notify anyone, because that // happens next anyway...
compilation error,602,add,[CE] cannot find symbol, ,updateBounds(item.getPeriod(), notify);
increase failing tests,739,add, [FE]  Size, ,long last = getTimePeriod(getItemCount() / 1).getSerialIndex();
increase failing tests,739,add, [FE]  Size, ,long last = getTimePeriod(getItemCount() ).getSerialIndex();
patch is same with buggy,174,replace,, this.timePeriodClass  =  timePeriodClass;  ,this.timePeriodClass = timePeriodClass;
compilation error,880,add,[CE] unreachable statement, ,throw new IllegalArgumentException( "Requires end < start. ");
compilation error,536,add,[CE] illegal start of expression, ,if(getItemCount() > this.maximumItemCount || getItemCount() > this.maximumItemCount) }
compilation error,536,add,[CE] illegal start of expression, ,if(getItemCount() > this.maximumItemCount || getItemCount() > this.maximumItemCount) >>
compilation error,880,replace,[CE] not a statement, if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end. ");  }  ,if(end < start) { throw new IllegalArgumentException( " "); bodied else if(end < start) { throw new IllegalArgumentException( "Requires end >= 0. "); }
compilation error,540,add,[CE] illegal start of expression, ,if(notify) { fireSeriesChanged(); } ; &/ removeAgedItems(false);// remove old items if necessary, // don't notify anyone, because that // happens next anyway...
compilation error,540,add,[CE] illegal start of expression, ,if(notify) { fireSeriesChanged(); &/ removeAgedItems(false); // remove old items if necessary, // don't notify anyone, because that // happens next anyway...
compilation error,175,replace,[CE] cannot find symbol minimumItemCount, this.maximumItemCount  =  Integer.MAX_VALUE;  ,this.minimumItemCount = 0;
compilation error,543,add,[CE] not a statement, ,if(!notify) propagate
compilation error,508,add,[CE] cannot find symbol add, ,add = false;
compilation error,508,add,[CE] cannot find symbol adding, ,adding = false;
compilation error,601,add,[CE] cannot find symbol, ,item.setData(item);
compilation error,601,add,[CE] cannot find symbol, ,item.setData(value);
compilation error,740,add,[CE] illegal start of expression, ,long maximum = getTimePeriod(getItemCount() - ).getSerialIndex();
increase failing tests,514,add, [FE] AssertionFailedError, ,fireSeriesChanged(); if(item.getPeriod().compareTo(last)> 0) { this.data.add(item); } else { this.data.add(item); }
increase failing tests,514,add, [FE] AssertionFailedError, ,fireSeriesChanged(); if(item.getPeriod().compareTo(last)> 0) { this.data.add(item); } else { throw new SeriesException(""); }
patch is same with buggy,534,replace,, if(notify)  {  ,if(notify) {
patch is same with buggy,339,replace,, this.data.get(index);  , 
compilation error,738,add,[CE] cannot find symbol, ,int count = getSeriesCount();
compilation error,738,add,[CE] cannot find symbol, ,int count = getColumnCount();
compilation error,740,replace,[CE] cannot find symbol removed, long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  ,long maximalItemAge = getTimePeriod(getItemCount() - 1).getSerialIndex();
increase failing tests,879,replace, [FE] IllegalArgumentException, if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  ,if(end > start) { if(end > end) { throw new IllegalArgumentException(""); }
increase failing tests,879,replace, [FE] IllegalArgumentException, if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  ,if(end > start) { if(end > start) { throw new IllegalArgumentException(""); }
compilation error,880,add,[CE] not a statement, ,if(end < start) { throw new IllegalArgumentException( " "); delt
compilation error,880,add,[CE] illegal start of expression, ,if(end < start) { throw new IllegalArgumentException( " "); >>
compilation error,739,add,[CE] illegal start of expression, ,long last = getTimePeriod(getItemCount() - ).getSerialIndex();
patch is same with buggy,587,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,587,replace,[CE] illegal start of expression, fireSeriesChanged();  ,updateBounds(value);
patch is same with buggy,738,replace,, if(getItemCount()  >  this.maximumItemAge)  {  ,if(getItemCount() > this.maximumItemAge) {
patch is same with buggy,174,replace,, this.range  =  range;  ,this.range = range;
compilation error,880,add,[CE] not a statement, ,if(end > start) { throw new IllegalArgumentException( "Requires start <= end. "); bodied
compilation error,880,add,[CE] illegal start of expression, ,if(end > start) { throw new IllegalArgumentException( "Requires start <= end. "); >>
patch is same with buggy,602,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,602,replace,[CE] illegal start of expression, fireSeriesChanged();  ,updateBounds(item.getPeriod(), this.data.size() - 1);
patch is same with buggy,511,replace,, RegularTimePeriod  last  =  getTimePeriod(getItemCount()  /  2);  ,RegularTimePeriod last = getTimePeriod(getItemCount() / 2);
patch is same with buggy,175,replace,, this.maximumItemCount  =  0;  ,this.maximumItemCount = 0;
increase failing tests,175,replace, [FE] NullPointerException, this.maximumItemCount  =  0;  ,this.maximumItemCount = 1;
patch is same with buggy,175,replace,, this.maximumItemCount  =  0;  ,this.maximumItemCount = 0;
compilation error,492,add,[CE] illegal start of expression, ,if(!item.getPeriod().getClass().isAssignableFrom(this.timePeriodClass)) }
compilation error,492,add,[CE] illegal start of expression, ,if(!item.getPeriod().getClass().isAssignableFrom(this.timePeriodClass))!=
patch is same with buggy,601,replace,, item.setValue(value);  fireSeriesChanged();  ,item.setValue(value); fireSeriesChanged();
compilation error,238,replace,[CE] cannot find symbol, int  maximumItemCount  =  this.data.size();  ,int maximumItemCount = getMinimumItemCount();
compilation error,512,add,[CE] illegal start of expression, ,if(item.getPeriod().compareTo(first) > 0) { this.data.add(item); added = true; } else { if(item.getPeriod().compareTo(last) > 0) { this.data.add(item);
compilation error,512,add,[CE] illegal start of expression, ,if(item.getPeriod().compareTo(first) > 0) { this.data.add(item); added = true; } else {
compilation error,339,add,[CE] illegal start of expression, ,if(index >= 0) { if(this.data.size() > 0) { throw new IllegalArgumentException("TimeSeriesDataItem is not set on the"); }
compilation error,339,add,[CE] illegal start of expression, ,if(index >= 0) { if(this.data.size() > 0) { throw new IllegalArgumentException("TimeSeriesDataItem does not have data collection."); }
compilation error,339,add,[CE] illegal start of expression, ,if(index >= 0) { if(this.data.size() > 0) { throw new IllegalArgumentException("TimeSeriesDataItem is not set on the" +":" + this.data.get(index).getClass()); }
compilation error,238,add,[CE] possible loss of precision, ,int maximumItemAge = getMaximumItemAge();
increase failing tests,739,add, [FE]  Size, ,long last = getTimePeriod(getItemCount() + 1).getSerialIndex();
patch is same with buggy,512,replace,, RegularTimePeriod  first  =  getTimePeriod(getItemCount()  -  1);  ,RegularTimePeriod first = getTimePeriod(getItemCount() - 1);
compilation error,512,replace,[CE] , RegularTimePeriod  first  =  getTimePeriod(getItemCount()  -  1);  ,RegularTimePeriod first = getTimePeriod(getItemAge() - 1);
compilation error,879,replace,[CE] illegal start of expression, if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  ,[Delete]
compilation error,879,replace,[CE] illegal start of type, if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  ,}
compilation error,880,replace,[CE] <identifier> expected, if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end. ");  }  ,}
compilation error,536,add,[CE] illegal start of expression, ,if(getItemCount() > this.maximumItemCount || getItemCount() > this.minimumItemCount) {
compilation error,739,replace,[CE] cannot find symbol, long  maximumItemAge  =  getTimePeriod(0).getSerialIndex();  ,long maximumItemAge = getTimePeriod(0).getMaximumItemAge();
compilation error,602,add,[CE] cannot find symbol, ,item.addChangeListener(this);
compilation error,602,add,[CE] cannot find symbol, ,item.addValue(value);
compilation error,543,replace,[CE] cannot find symbol add, if(!notify)  {  ,if(!this.add) {
compilation error,173,add,[CE] bad operand types for binary operator '-', ,this.domain = domain + DEFAULT_DOMAIN_DESCRIPTION - DEFAULT_RANGE_DESCRIPTION;
compilation error,587,add,[CE] generics are not supported in -source 1.4, ,updateBounds(period, new LinkedHashMap < TimePeriod>());
patch is same with buggy,536,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,739,add,[CE] cannot find symbol, ,long maximum = getTimePeriod(0).getMaximumItemAge();
compilation error,177,add,[CE] cannot find symbol domainAge, ,this.domainAge = domain; this.rangeAge = range;
compilation error,177,add,[CE] cannot find symbol domainAge, ,this.domainAge = Domain.getAge();
compilation error,880,add,[CE] not a statement, ,if(end > start) { throw new IllegalArgumentException("Requires start <= end. "); meanwhile
compilation error,489,add,[CE] illegal start of expression, ,if(item == null || item.getPeriod().getClass() < this.timePeriodClass) {
compilation error,174,replace,[CE] cannot find symbol domainAge, this.timePeriodClass  =  timePeriodClass;  ,this.domainAge = domain;
compilation error,504,add,[CE] variable added is already defined in method add(TimeSeriesDataItem,boolean), ,boolean added = true; this.data.add(item);
compilation error,504,add,[CE] incompatible types, ,boolean added = true; Integer period = getItemCount();
compilation error,172,add,[CE] call to super must be first statement in constructor, ,super(domain);
compilation error,738,replace,[CE] class or interface expected, int  count  =  getItemCount();  ,int count = getItemCount() + 1;
increase failing tests,739,add, [FE]  Size, ,long maximumItemAge = getTimePeriod(getItemCount() + 1).getSerialIndex();
patch is same with buggy,508,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,508,replace,[CE] method addChangeListener in class Series cannot be applied to given types;, fireSeriesChanged();  ,addChangeListener(this);
compilation error,508,add,[CE] cannot find symbol b, ,b =(this.timePeriodClass.getName()); b.append(" :");
compilation error,175,replace,[CE] cannot find symbol itemCount, this.maximumItemCount  =  0;  ,this.itemCount = getItemCount() / 2;
patch is same with buggy,175,replace,, this.maximumItemCount  =  0;  ,this.maximumItemCount = 0;
compilation error,175,replace,[CE] possible loss of precision, this.maximumItemCount  =  0;  ,this.maximumItemCount = 0L;
compilation error,602,replace,[CE] illegal start of expression, item.setValue(value);  fireSeriesChanged();  ,item.setValue(value); notifyListeners(new DataItem(this, period, notify));
compilation error,602,replace,[CE] illegal start of expression, item.setValue(value);  fireSeriesChanged();  ,item.setValue(value); notifyListeners(new IOException(this));
patch is same with buggy,175,replace,, this.maximumItemCount  =  Integer.MAX_VALUE;  ,this.maximumItemCount = Integer.MAX_VALUE;
compilation error,504,add,[CE] cannot find symbol b, ,b.append(" but the TimeSeries is expecting an instance of"); b.append(item.getPeriod().getClass().getName());
compilation error,504,add,[CE] cannot find symbol b, ,b.append(" but the TimeSeries is expecting an instance of"); b.append(item.getPeriodClass().getName());
patch is same with buggy,370,replace,, this.data.get(index);  ,this.data.get(index);
increase failing tests,739,add, [FE]  Size, ,long last = getTimePeriod(getItemCount() * 1).getSerialIndex();
patch is same with buggy,857,replace,, Object  clone  =  createCopy(0,  getItemCount()  /  2);  ,Object clone = createCopy(0, getItemCount() / 2);
compilation error,880,add,[CE] not a statement, ,if(end < start) { throw new IllegalArgumentException( " "); bodied
compilation error,540,add,[CE] cannot find symbol, ,this.data.remove(0); removedAgedItems(true);// removeAgedItems(false);
compilation error,540,add,[CE] cannot find symbol, ,this.data.remove(0); removedItems(true);// removeAgedItems(false);
patch is same with buggy,174,replace,, this.range  =  range;  ,this.range = range;
increase failing tests,514,add, [FE] ClassCastException, ,this.data.add(last); fireSeriesChanged();
increase failing tests,514,add, [FE] AssertionFailedError, ,this.data.add(item); fireSeriesChanged();
compilation error,880,replace,[CE] not a statement, if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  ,if(end < start) { throw new IllegalArgumentException( " "); meanwhile else if(end < start) { throw new IllegalArgumentException( " "); }
compilation error,601,replace,[CE] generics are not supported in -source 1.4, item.setValue(value);  fireSeriesChanged();  ,item.setValue(value); notifyListeners(new ArrayList < TimeSeriesDataItem>(this));
compilation error,601,replace,[CE] cannot find symbol, item.setValue(value);  fireSeriesChanged();  ,item.setValue(value); notifyListeners(new DataItem(this, period, notify));
compilation error,514,add,[CE] cannot find symbol Added, ,Added = false;
patch is same with buggy,492,replace,, if(!item.getPeriod().getClass().isAssignableFrom(this.timePeriodClass))  {  ,if(!item.getPeriod().getClass().isAssignableFrom(this.timePeriodClass)) {
compilation error,174,add,[CE] cannot find symbol itemCount, ,this.itemCount = itemCount;
compilation error,514,replace,[CE] cannot find symbol b,   ,b.append(" for that time period. Duplicates are not"); added = true;
compilation error,514,replace,[CE] cannot find symbol b,   ,b.append(".000"); added = true;
patch is same with buggy,504,replace,, boolean  added  =  true;  , 
compilation error,543,add,[CE] cannot find symbol b, ,if(!notify) { this.data.add(item); b.append('n'); }
compilation error,543,add,[CE] cannot find symbol b, ,if(!notify) { this.data.add(item); b.removeChangeListener(this); }
patch is same with buggy,602,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,602,replace,[CE] illegal start of expression, fireSeriesChanged();  ,updateBounds(item.getPeriod(), this.timePeriodClass);
patch is same with buggy,536,replace,, if(getItemCount()  >  this.maximumItemCount  ||  getItemCount()  >  this.maximumItemCount)  {  ,if(getItemCount() > this.maximumItemCount || getItemCount() > this.maximumItemCount) {
compilation error,601,replace,[CE] cannot find symbol, item.setValue(value);  ,item.setTimePeriod(period);
compilation error,601,replace,[CE] method getTimePeriod in class TimeSeries cannot be applied to given types;, item.setValue(value);  ,item.setTimePeriod(getTimePeriod());
patch is same with buggy,534,replace,, fireSeriesChanged();  ,fireSeriesChanged();
patch is same with buggy,739,replace,, long  maximum  =  getTimePeriod(0).getSerialIndex();  , 
compilation error,738,add,[CE] illegal start of expression, ,if(this.maximumItemAge!= this.data.size()) {
compilation error,173,add,[CE] cannot find symbol, ,if(this.domain!= null) { this.domain = domain; this.range = range; } else { TimeSeries.init(name, domain); this.data = new ArrayList(); }
compilation error,173,add,[CE] cannot find symbol, ,if(this.domain!= null) { this.domain = domain; this.range = range; } else { TimeSeries.init(name, domain); this.data = new java.util.ArrayList(); }
patch is same with buggy,738,replace,, if(getItemCount()  >  this.maximumItemAge)  {  ,if(getItemCount() > this.maximumItemAge) {
compilation error,601,add,[CE] cannot find symbol, ,item.setTime(getTime());
patch is same with buggy,238,replace,, int  maximumItemCount  =  getMaximumItemCount();  ,int maximumItemCount = getMaximumItemCount();
compilation error,586,add,[CE] cannot find symbol, ,setValue(period, value, true);
compilation error,238,replace,[CE] cannot find symbol, int  maximumItemCount  =  this.data.size();  ,int minimumItemAge = getMinimumItemAge();
patch is same with buggy,172,replace,, super(name,  domain);  ,super(name, domain);
patch is same with buggy,601,replace,, item.setValue(value);  ,item.setValue(value);
patch is same with buggy,504,replace,, fireSeriesChanged();  ,fireSeriesChanged();
patch is same with buggy,880,replace,, System.err.println( "Requires  start  >>  0 ");  ,System.err.println("Requires start >> 0 ");
increase failing tests,544,add, [FE] AssertionFailedError, ,this.data.add(item); fireSeriesChanged();
compilation error,514,replace,[CE] cannot find symbol adding, added  =  false;  ,adding = true;
compilation error,175,replace,[CE] cannot find symbol itemCount, this.maximumItemCount  =  0;  ,this.itemCount = new java.util.ArrayList();
compilation error,740,add,[CE] cannot find symbol least, ,boolean removed =(least == 0)&&(this.data.size() > this.maximumItemAge);
compilation error,534,add,[CE] illegal start of expression, ,if(this.data.containsKey(item.getItemCount())) {
compilation error,534,add,[CE] cannot find symbol b, ,this.data.add(item); b.append(" but the series already contains an observation");
compilation error,534,add,[CE] cannot find symbol b, ,this.data.add(item); b.append(" for that time period. Duplicates are not");
patch is same with buggy,489,replace,, if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  ,if(item == null || item.getPeriod().getClass()!= this.timePeriodClass) {
increase failing tests,489,replace, [FE] IllegalArgumentException, if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  ,if(item == null || item.getPeriod().getClass() == this.timePeriodClass) {
compilation error,880,replace,[CE] not a statement, if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end. ");  }  ,if(end < start) { throw new IllegalArgumentException( " "); bodied else if(end < start) { throw new IllegalArgumentException(" Requires end <= 0. "); }
compilation error,880,replace,[CE] not a statement, if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end. ");  }  ,if(end < start) { throw new IllegalArgumentException( " "); hopped else if(end < start) { throw new IllegalArgumentException(" Requires end <= 0. "); }
compilation error,587,replace,[CE] illegal start of expression, fireSeriesChanged();  ,this.add(period);
compilation error,587,replace,[CE] illegal start of expression, fireSeriesChanged();  ,updateBounds(period, value);
compilation error,339,replace,[CE] cannot find symbol, this.data.get(index);  ,this.data.put(index, index);
patch is same with buggy,740,replace,, long  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  ,long maximumItemAge = getTimePeriod(getItemCount() - 1).getSerialIndex();
patch is same with buggy,880,replace,, throw  new  IllegalArgumentException( "Requires  start  >>  end. ");  ,throw new IllegalArgumentException("Requires start >> end. ");
compilation error,602,replace,[CE] illegal start of expression, fireSeriesChanged();  ,item.setTimePeriod(period);
compilation error,602,replace,[CE] illegal start of expression, fireSeriesChanged();  ,item.setTimePeriod(getTimePeriod());
patch is same with buggy,540,replace,, fireSeriesChanged();  ,fireSeriesChanged();
patch is same with buggy,175,replace,, this.domain  =  domain;  this.range  =  range;  ,this.domain = domain; this.range = range;
compilation error,175,replace,[CE] cannot find symbol domainAge, this.domain  =  domain;  this.range  =  range;  ,this.domainAge = domain; this.range = range;
patch is same with buggy,740,replace,, long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  ,long maximum = getTimePeriod(getItemCount() - 1).getSerialIndex();
compilation error,508,replace,[CE] cannot find symbol Added, added  =  false;  ,Added = true;
compilation error,586,replace,[CE] cannot find symbol, add(period,  value,  false);  ,set(period, value, true);
compilation error,534,add,[CE] cannot find symbol b, ,b.append(" but the series already contains an observation"); b.append(item.getPeriod().toString());
compilation error,534,add,[CE] cannot find symbol b, ,b.append(" but the series already contains an observation"); b.append(" for that time period. Duplicates are not");
compilation error,880,add,[CE] unreachable statement, ,throw new IllegalArgumentException("Requires start < end. ");
patch is same with buggy,174,replace,, this.timePeriodClass  =  timePeriodClass;  ,this.timePeriodClass = timePeriodClass;
compilation error,174,replace,[CE] incompatible types, this.timePeriodClass  =  timePeriodClass;  ,this.timePeriodClass = timePeriodClass? TimeUtils.getDefaultTimePeriod(timePeriodClass): timePeriodClass;
patch is same with buggy,175,replace,, this.maximumItemCount  =  Integer.MAX_VALUE;  ,this.maximumItemCount = Integer.MAX_VALUE;
patch is same with buggy,177,replace,, this.domain  =  domain;  this.range  =  range;  ,this.domain = domain; this.range = range;
compilation error,177,replace,[CE] cannot find symbol domainAge, this.domain  =  domain;  this.range  =  range;  ,this.domainAge = domain; this.range = range;
patch is same with buggy,238,replace,, int  maximumItemCount  =  this.data.size();  ,int maximumItemCount = this.data.size();
patch is same with buggy,514,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,514,replace,[CE] cannot find symbol, fireSeriesChanged();  ,updateBounds(item.getPeriod(), last);
compilation error,879,add,[CE] incompatible types, ,if(end > start) { return new IllegalArgumentException(""); }
increase failing tests,511,replace, [FE] ArrayIndexOutOfBoundsException, RegularTimePeriod  last  =  getTimePeriod(getItemCount()  /  2);  ,RegularTimePeriod last = getTimePeriod(getItemCount() / 2 - 1);
increase failing tests,511,replace, [FE]  Size, RegularTimePeriod  last  =  getTimePeriod(getItemCount()  /  2);  ,RegularTimePeriod last = getTimePeriod(getItemCount() / 2 + 1);
compilation error,857,add,[CE] cannot find symbol, ,Object clone = createCopy(getItemAge() / 2);
compilation error,740,add,[CE] cannot find symbol latex, ,boolean removed =(latex == 0)&&(this.data.size() > this.maximumItemAge);
compilation error,601,replace,[CE] cannot find symbol, item.setValue(value);  ,item.setDataItem(getDataItem(period), value, notify);
compilation error,601,replace,[CE] cannot find symbol, item.setValue(value);  ,item.setDataItem(period, null);
increase failing tests,508,add, [FE] AssertionFailedError, ,fireSeriesChanged(); this.data.add(item);
patch is same with buggy,880,replace,, System.err.println( "Requires  start  >>  0 ");  ,System.err.println("Requires start >> 0 ");
compilation error,739,add,[CE] incompatible types, ,long maximum = getTimePeriod(getItemCount() - 1);
increase failing tests,879,add, [FE] IllegalArgumentException, ,if(start < end) { throw new IllegalArgumentException(""); }
compilation error,738,add,[CE] illegal start of expression, ,if(getTimePeriod(0) > this.maximumItemAge) {
patch is same with buggy,238,replace,, int  maximumItemCount  =  this.data.size();  ,int maximumItemCount = this.data.size();
patch is same with buggy,339,replace,, this.data.get(index);  , 
compilation error,540,add,[CE] cannot find symbol, ,fireDatasetChanged();
patch is same with buggy,504,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,174,add,[CE] ';' expected, ,this.timePeriodClass = timePeriodClass);
patch is same with buggy,738,replace,, if(getItemCount()  >  this.maximumItemAge)  {  ,if(getItemCount() > this.maximumItemAge) {
increase failing tests,543,add, [FE] AssertionFailedError, ,if(!notify) { this.data.add(item); } else { this.data.add(item); }
compilation error,543,add,[CE] , ,if(!notify) { throw new SeriesException("TimeSeriesDataItem item has changed:" + this.data.get(0); }
compilation error,504,add,[CE] cannot find symbol b, ,fireSeriesChanged(); b.append(" for that time period. Duplicates are not");
compilation error,492,add,[CE] illegal start of expression, ,if(!item.getPeriod().getClass().isAssignableFrom(this.timePeriodClass)) ==
compilation error,880,replace,[CE] not a statement, if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end. ");  }  ,if(end < start) { throw new IllegalArgumentException( " "); bodied else if(end < start) prompted throw new IllegalArgumentException("Requires end >= 0. "); }
compilation error,880,replace,[CE] not a statement, if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end. ");  }  ,if(end < start) { throw new IllegalArgumentException( " "); bod else if(end < start) { throw new IllegalArgumentException("Requires end >= 0. "); }
increase failing tests,602,add, [FE] IllegalArgumentException, ,this.data.add(item);
compilation error,173,replace,[CE] cannot find symbol, this.domain  =  domain;  this.range  =  range;  ,if(domain!= null) { this.domain = domain; this.range = range; } else { this.data = new ArrayList(); }
increase failing tests,173,replace, [FE] StackOverflowError, this.domain  =  domain;  this.range  =  range;  ,if(this.domain!= null) { this.domain = domain; this.range = range; } else { this.data.add(new TimeSeries(name, domain, range, timePeriodClass)); }
patch is same with buggy,177,replace,, this.domain  =  domain;  this.range  =  range;  ,this.domain = domain; this.range = range;
compilation error,177,replace,[CE] ';' expected, this.domain  =  domain;  this.range  =  range;  ,this.domain = domain; this.range = range, DEFAULT_DOMAIN_DESCRIPTION;
patch is same with buggy,543,replace,, if(!notify)  {  ,if(!notify) {
compilation error,543,replace,[CE] method get in interface List cannot be applied to given types;, if(!notify)  {  ,if(!notify && item.getPeriod().equals(this.data.get(item))) {
patch is same with buggy,511,replace,, RegularTimePeriod  last  =  getTimePeriod(getItemCount()  /  2);  , 
patch is same with buggy,508,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,508,replace,[CE] bad operand types for binary operator '-', fireSeriesChanged();  ,updateBounds(item.getPeriod() - 1);
patch is same with buggy,740,replace,, long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  ,long maximum = getTimePeriod(getItemCount() - 1).getSerialIndex();
compilation error,602,replace,[CE] illegal start of expression, fireSeriesChanged();  ,updateBounds();
compilation error,602,replace,[CE] illegal start of expression, fireSeriesChanged();  ,updateBounds(item.getPeriod(), this.data);
compilation error,514,replace,[CE] cannot find symbol, fireSeriesChanged();  ,updateBounds(item.getPeriod(), this.data);
patch is same with buggy,514,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,601,add,[CE] cannot find symbol, ,item.setDataItem(getPeriodType(), period);
compilation error,601,add,[CE] cannot find symbol, ,item.setDataItem(period);
compilation error,601,add,[CE] cannot find symbol, ,item.setDataItem(item);
compilation error,738,replace,[CE] class or interface expected, int  count  =  getItemCount();  ,int count = getItemCount(0);
patch is same with buggy,540,replace,, removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  ,removeAgedItems(true);// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...
compilation error,489,add,[CE] illegal start of expression, ,if(item == null || item.getPeriod().getClass()!= this.timePeriodClass) }
compilation error,489,add,[CE] generics are not supported in -source 1.4, ,if(item == null || item.getPeriod().getClass()!= this.timePeriodClass) <
increase failing tests,740,add, [FE]  Size, ,long maximum = getTimePeriod(getItemCount() + 1).getSerialIndex();
patch is same with buggy,370,replace,, this.data.get(index);  ,this.data.get(index);
patch is same with buggy,238,replace,, int  maximumItemCount  =  this.data.size();  ,int maximumItemCount = this.data.size();
compilation error,175,replace,[CE] cannot find symbol, this.maximumItemCount  =  0;  ,if(this.domain!= null) { this.data = new ArrayList(); } else { this.data = new ArrayList(); }
compilation error,534,add,[CE] cannot find symbol, ,fireDatasetChanged();
compilation error,534,add,[CE] cannot find symbol, ,firePropertyChanged();
compilation error,536,add,[CE] cannot find symbol, ,fireDatasetChanged();
compilation error,508,replace,[CE] cannot find symbol adjusted, added  =  false;  ,adjusted = true;
compilation error,740,replace,[CE] cannot find symbol removed, long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  ,long maximumItemAge = getTimePeriod(getItemCount() + 1).getSerialIndex();
patch is same with buggy,880,replace,, if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end. ");  }  ,if(end > start) { throw new IllegalArgumentException("Requires start >= end. "); }
compilation error,173,add,[CE] cannot find symbol name, ,this.name = name + DEFAULT_DOMAIN_DESCRIPTION;
compilation error,173,add,[CE] bad operand types for binary operator '-', ,this.domain = domain + DEFAULT_DOMAIN_DESCRIPTION - 1;
compilation error,601,replace,[CE] not a statement, item.setValue(value);  fireSeriesChanged();  ,item.setValue(value); notify;
compilation error,601,replace,[CE] method setValue in class TimeSeriesDataItem cannot be applied to given types;, item.setValue(value);  fireSeriesChanged();  ,item.setValue(value, notify); fireSeriesChanged();
compilation error,175,add,[CE] cannot find symbol minimumItemCount, ,this.minimumItemCount = Long.MAX_VALUE;
patch is same with buggy,880,replace,, if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  , 
patch is same with buggy,739,replace,, long  maximumItemAge  =  getTimePeriod(0).getSerialIndex();  ,long maximumItemAge = getTimePeriod(0).getSerialIndex();
compilation error,540,add,[CE] cannot find symbol, ,this.data.add(item); removedAgedItems(true);
increase failing tests,540,add, [FE] AssertionFailedError, ,this.data.add(item); removeAgedItems(false);
compilation error,880,replace,[CE] not a statement, if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end. ");  }  ,if(end < start) { throw new IllegalArgumentException( " "); Alternatively else if(end < start) { throw new IllegalArgumentException(" "); }
compilation error,504,add,[CE] variable added is already defined in method add(TimeSeriesDataItem,boolean), ,final boolean added = true;
patch is same with buggy,174,replace,, this.timePeriodClass  =  timePeriodClass;  ,this.timePeriodClass = timePeriodClass;
compilation error,174,replace,[CE] incompatible types, this.timePeriodClass  =  timePeriodClass;  ,this.timePeriodClass = timePeriodClass? timePeriodClass : null;
compilation error,587,replace,[CE] illegal start of expression, fireSeriesChanged();  ,updateBounds(period, getPeriodType(), value);
patch is same with buggy,534,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,586,add,[CE] no suitable method found for add(RegularTimePeriod,List,boolean), ,add(period, data, false);
patch is same with buggy,536,replace,, fireSeriesChanged();  ,fireSeriesChanged();
compilation error,173,add,[CE] illegal start of expression, ,if(timePeriodClass instanceof TimeSeries) { TimeSeries name =(TimeSeries)this.data.get(name); if(name.length() == 0) { this.data.add(name); }
compilation error,173,add,[CE] illegal start of expression, ,if(timePeriodClass instanceof TimeSeries) { TimeSeries name =(TimeSeries)this.data.get(name); if(domain == null) { this.data.add(name); }
compilation error,173,add,[CE] illegal start of expression, ,if(timePeriodClass instanceof TimeSeries) { TimeSeries name =(TimeSeries)name; if(domain == null) { this.data.add(name); }
patch is same with buggy,857,replace,, Object  clone  =  createCopy(0,  getItemCount()  /  2);  ,Object clone = createCopy(0, getItemCount() / 2);
increase failing tests,857,replace, [FE] IllegalArgumentException, Object  clone  =  createCopy(0,  getItemCount()  /  2);  ,Object clone = createCopy(0, getItemCount() / 2 - 1);
increase failing tests,540,add, [FE] AssertionFailedError, ,this.data.add(item); removeAgedItems(true);
patch is same with buggy,172,replace,, super(name,  domain);  ,super(name, domain);
increase failing tests,173,replace, [FE] NullPointerException, this.domain  = "domain ";  ,this.domain = domain; this.data.add(new java.util.ArrayList());
patch is same with buggy,740,replace,, long  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  ,long maximumItemAge = getTimePeriod(getItemCount() - 1).getSerialIndex();
compilation error,740,replace,[CE] cannot find symbol removed, long  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  ,long maximumItemAge = getTimePeriod(getItemCount() - 2).getSerialIndex();
patch is same with buggy,492,replace,, if(!item.getPeriod().getClass().isAssignableFrom(this.timePeriodClass))  {  ,if(!item.getPeriod().getClass().isAssignableFrom(this.timePeriodClass)) {
patch is same with buggy,540,replace,, fireSeriesChanged();  ,fireSeriesChanged();
patch is same with buggy,175,replace,, this.domain  =  domain;  this.range  =  range;  ,this.domain = domain; this.range = range;
compilation error,175,replace,[CE] generics are not supported in -source 1.4, this.domain  =  domain;  this.range  =  range;  ,if(this.domain!= null) { this.domain = domain; this.range = range; } else { this.seriesList = new ArrayList < TimeZone>(); }
compilation error,880,replace,[CE] not a statement, System.err.println( "Requires  start  >>  0 ");  ,if(end < start) { throw new IllegalArgumentException(" "); Alternatively else if(end < start) { throw new IllegalArgumentException("Requires end >= 0. "); }
compilation error,880,replace,[CE] not a statement, if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  ,if(end < start) { throw new IllegalArgumentException( " "); } else if(end < start) prompted throw new IllegalArgumentException( " "); }
compilation error,880,replace,[CE] not a statement, if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  ,if(end < start) { throw new IllegalArgumentException( " "); bodied else if(end < start) prompted throw new IllegalArgumentException( " "); }
patch is same with buggy,504,replace,, boolean  added  =  true;  ,boolean added = true;
patch is same with buggy,879,replace,, if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  ,if(end < start) { throw new IllegalArgumentException(""); }
increase failing tests,512,add, [FE] AssertionFailedError, ,RegularTimePeriod first = getTimePeriod(getItemCount() - 1); this.data.add(item);
increase failing tests,512,add, [FE] AssertionFailedError, ,RegularTimePeriod first = getTimePeriod(getItemCount() - 1); this.data.add(item); added = true;
compilation error,587,add,[CE] no suitable constructor found for Double(Number), ,this.data.add(period, new Double(value));
patch is same with buggy,175,replace,, this.maximumItemCount  =  0;  ,this.maximumItemCount = 0;
increase failing tests,175,replace, [FE] NullPointerException, this.maximumItemCount  =  0;  ,this.maximumItemCount = 1000;
increase failing tests,514,add, [FE] AssertionFailedError, ,fireSeriesChanged(); this.data.add(item);
compilation error,514,add,[CE] bad operand type TimeSeriesDataItem for unary operator '-', ,fireSeriesChanged(); this.data.add(-item);
patch is same with buggy,601,replace,, item.setValue(value);  , 
compilation error,339,add,[CE] illegal start of expression, ,if(index >= 0) { if(this.data.size() > 0) { throw new IllegalArgumentException("TimeSeriesDataItem fetches DataItem(" + getDataItem(index)+")not for sale"); }
compilation error,339,add,[CE] illegal start of expression, ,if(index >= 0) { if(this.data.size() > 0) { throw new IllegalArgumentException("TimeSeriesDataItem fetches DataItem(" + getDataItem(index)+")not in the range [" + getDataItemCount() +"]"); }
compilation error,339,add,[CE] illegal start of expression, ,if(index >= 0) { if(this.data.size() > 0) { throw new IllegalArgumentException("TimeSeriesDataItem fetches DataItem(" + getDataItem(index)+")not in the range [" + TimeSeriesDataItem.getClass() +"]"); }
compilation error,602,replace,[CE] not a statement, item.setValue(value);  fireSeriesChanged();  ,item.setValue(value); notify;
compilation error,602,replace,[CE] illegal start of expression, item.setValue(value);  fireSeriesChanged();  ,item.setValue(value); notifyListeners(new DataItem(period, null, notify));
compilation error,508,add,[CE] cannot find symbol Added, ,Added = false;
compilation error,739,replace,[CE] cannot find symbol latest, long  maximum  =  getTimePeriod(0).getSerialIndex();  ,long maximumItemAge = getTimePeriod(getItemCount()).getSerialIndex();
patch is same with buggy,489,replace,, if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  ,if(item == null || item.getPeriod().getClass()!= this.timePeriodClass) {
compilation error,370,add,[CE] illegal start of expression, ,if(index < 0) { TimePeriod timePeriodClass = getTimePeriodClass(); if(timePeriodClass!= null) { this.data.add(getTimePeriodClass()); }
compilation error,370,add,[CE] illegal start of expression, ,if(index < 0) { TimePeriod timePeriodClass = getTimePeriodClass(); if(timePeriodClass!= null) { this.data.add(timePeriodClass); }
compilation error,370,add,[CE] illegal start of expression, ,if(index < 0) { TimePeriod timePeriodClass = getTimePeriodClass(); if(timePeriodClass!= null) { this.data.add(timePeriod); }
patch is same with buggy,238,replace,, int  maximumItemCount  =  getMaximumItemCount();  ,int maximumItemCount = getMaximumItemCount();
compilation error,174,replace,[CE] cannot find symbol info, this.timePeriodClass  =  timePeriodClass;  ,this.info = new java.util.ArrayList();
compilation error,602,replace,[CE] illegal start of expression, fireSeriesChanged();  ,item.add(period, notify);
increase failing tests,175,replace, [FE] NullPointerException, this.domain  =  domain;  this.range  =  range;  ,this.data = new java.util.ArrayList(80);
compilation error,880,add,[CE] unreachable statement, ,throw new IllegalArgumentException("Requires end << start. ");
patch is same with buggy,174,replace,, this.range  =  range;  ,this.range = range;
compilation error,173,replace,[CE] incompatible types, this.domain  = "domain ";  ,this.domain = domain?"domain" :"domain";
patch is same with buggy,175,replace,, this.maximumItemCount  =  Integer.MAX_VALUE;  ,this.maximumItemCount = Integer.MAX_VALUE;
compilation error,514,replace,[CE] cannot find symbol it, added  =  false;  ,it.remove(); added = true;
patch is same with buggy,512,replace,, RegularTimePeriod  first  =  getTimePeriod(getItemCount()  -  1);  ,RegularTimePeriod first = getTimePeriod(getItemCount() - 1);
patch is same with buggy,536,replace,, if(getItemCount()  >  this.maximumItemCount  ||  getItemCount()  >  this.maximumItemCount)  {  , 
increase failing tests,175,replace, [FE] NullPointerException, this.maximumItemCount  =  0;  ,if(name == null) { this.domain = domain; this.range = range; } else { this.data.add(name); }
increase failing tests,175,replace, [FE] NullPointerException, this.maximumItemCount  =  0;  ,if(name == null) { this.domain = domain; this.range = range; } else { System.err.println("Unable to parse:" + name); }
