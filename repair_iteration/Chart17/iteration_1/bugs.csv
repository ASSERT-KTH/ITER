bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
411	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  [BUGGY]    [BUGGY]  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	544	544	1	add	  	fireSeriesChanged();  	compilable	  [FE]  IllegalArgumentException	69	1
412	[BUG]  [BUGGY]    [FE]  IllegalArgumentException  [CONTEXT]  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  [BUGGY]    [BUGGY]  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	544	544	1	replace	  	fireSeriesChanged();  	compilable	  [FE]  IllegalArgumentException	69	1
242	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  [BUGGY]  if(!item.getPeriod().getClass().isAssignableFrom(this.timePeriodClass))  {  [BUGGY]  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	492	492	1	add	if(!item.getPeriod().getClass().isAssignableFrom(this.timePeriodClass))  {	if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  	compilable	  [FE]  IllegalArgumentException	41	1
243	[BUG]  [BUGGY]  if(!item.getPeriod().getClass().isAssignableFrom(this.timePeriodClass))  {  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  if  (item  ==  null)  {  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  [BUGGY]  if(!item.getPeriod().getClass().isAssignableFrom(this.timePeriodClass))  {  [BUGGY]  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	492	492	1	replace	if(!item.getPeriod().getClass().isAssignableFrom(this.timePeriodClass))  {	if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  	compilable	  [FE]  IllegalArgumentException	41	1
469	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  [BUGGY]  item.setValue(value);  [BUGGY]  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	601	601	1	add	item.setValue(value);		compilable	  [FE]  IllegalArgumentException	79	1
470	[BUG]  [BUGGY]  item.setValue(value);  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  [BUGGY]  item.setValue(value);  [BUGGY]  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	601	601	1	replace	item.setValue(value);		compilable	  [FE]  IllegalArgumentException	79	1
470	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  [BUGGY]  item.setValue(value);  fireSeriesChanged();  [BUGGY]  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	601	601	1	add	item.setValue(value);  fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	79	1
471	[BUG]  [BUGGY]  item.setValue(value);  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  [BUGGY]  item.setValue(value);  fireSeriesChanged();  [BUGGY]  add(item,  notify);  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	601	601	1	replace	item.setValue(value);  fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	79	1
127	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  [BUGGY]  this.timePeriodClass  =  timePeriodClass;  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.timePeriodClass  =  timePeriodClass;		compilable	  [FE]  IllegalArgumentException	22	1
128	[BUG]  [BUGGY]  this.timePeriodClass  =  timePeriodClass;  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  [BUGGY]  this.timePeriodClass  =  timePeriodClass;  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.timePeriodClass  =  timePeriodClass;		compilable	  [FE]  IllegalArgumentException	22	1
128	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  [BUGGY]  this.range  =  domain;  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.range  =  domain;		compilable	  [FE]  IllegalArgumentException	22	1
129	[BUG]  [BUGGY]  this.range  =  domain;  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  [BUGGY]  this.range  =  domain;  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.range  =  domain;		compilable	  [FE]  IllegalArgumentException	22	1
129	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  [BUGGY]  this.range  =  range;  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.range  =  range;		compilable	  [FE]  IllegalArgumentException	22	1
130	[BUG]  [BUGGY]  this.range  =  range;  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  [BUGGY]  this.range  =  range;  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.range  =  range;		compilable	  [FE]  IllegalArgumentException	22	1
427	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value)  {    [BUGGY]  add(period,  value,  false);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	586	586	1	add	add(period,  value,  false);	add(period,  value,  true);  	compilable	  [FE]  IllegalArgumentException	72	1
428	[BUG]  [BUGGY]  add(period,  value,  false);  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value)  {    [BUGGY]  add(period,  value,  false);  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	586	586	1	replace	add(period,  value,  false);	add(period,  value,  true);  	compilable	  [FE]  IllegalArgumentException	72	1
302	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  [BUGGY]  added  =  false;  [BUGGY]  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	508	508	1	add	added  =  false;	added  =  true;  	compilable	  [FE]  IllegalArgumentException	51	1
303	[BUG]  [BUGGY]  added  =  false;  [FE]  IllegalArgumentException  [CONTEXT]  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  [BUGGY]  added  =  false;  [BUGGY]  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	508	508	1	replace	added  =  false;	added  =  true;  	compilable	  [FE]  IllegalArgumentException	51	1
481	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  [BUGGY]  fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	602	602	1	add	fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	81	1
482	[BUG]  [BUGGY]  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  [BUGGY]  fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	602	602	1	replace	fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	81	1
110	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  [BUGGY]  this.domain  = "domain ";  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	this.domain  = "domain ";	this.domain  =  domain;  	compilable	  [FE]  IllegalArgumentException	19	1
111	[BUG]  [BUGGY]  this.domain  = "domain ";  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  [BUGGY]  this.domain  = "domain ";  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	this.domain  = "domain ";	this.domain  =  domain;  	compilable	  [FE]  IllegalArgumentException	19	1
111	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  [BUGGY]    [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	  	this.domain  =  domain;  	compilable	  [FE]  IllegalArgumentException	19	1
112	[BUG]  [BUGGY]    [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  [BUGGY]    [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	  	this.domain  =  domain;  	compilable	  [FE]  IllegalArgumentException	19	1
253	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }    [BUGGY]  boolean  added  =  true;  [BUGGY]  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	504	504	1	add	boolean  added  =  true;	boolean  added  =  false;  	compilable	  [FE]  IllegalArgumentException	43	1
254	[BUG]  [BUGGY]  boolean  added  =  true;  [FE]  IllegalArgumentException  [CONTEXT]  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }    [BUGGY]  boolean  added  =  true;  [BUGGY]  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	504	504	1	replace	boolean  added  =  true;	boolean  added  =  false;  	compilable	  [FE]  IllegalArgumentException	43	1
212	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeriesDataItem  getDataItem(int  index)  {  [BUGGY]  this.data.get(index);  [BUGGY]  return  (TimeSeriesDataItem)  this.data.get(index);  }  [CLASS]  TimeSeries  [METHOD]  getDataItem  [RETURN_TYPE]  TimeSeriesDataItem  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	339	339	1	add	this.data.get(index);		compilable	  [FE]  IllegalArgumentException	36	1
213	[BUG]  [BUGGY]  this.data.get(index);  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeriesDataItem  getDataItem(int  index)  {  [BUGGY]  this.data.get(index);  [BUGGY]  return  (TimeSeriesDataItem)  this.data.get(index);  }  [CLASS]  TimeSeries  [METHOD]  getDataItem  [RETURN_TYPE]  TimeSeriesDataItem  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	339	339	1	replace	this.data.get(index);		compilable	  [FE]  IllegalArgumentException	36	1
362	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  b.append( "You  are  attempting  to  add  an  observation  for   ");  b.append( "the  time  period   ");  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  [BUGGY]  if(notify)  {  [BUGGY]    if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	534	534	1	add	if(notify)  {	if  (added)  {  	compilable	  [FE]  IllegalArgumentException	61	1
363	[BUG]  [BUGGY]  if(notify)  {  [FE]  IllegalArgumentException  [CONTEXT]  b.append( "You  are  attempting  to  add  an  observation  for   ");  b.append( "the  time  period   ");  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  [BUGGY]  if(notify)  {  [BUGGY]    if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	534	534	1	replace	if(notify)  {	if  (added)  {  	compilable	  [FE]  IllegalArgumentException	61	1
115	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  [BUGGY]  this.domain  =  domain;  this.range  =  range;  [BUGGY]  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	this.domain  =  domain;  this.range  =  range;		compilable	  [FE]  IllegalArgumentException	20	1
116	[BUG]  [BUGGY]  this.domain  =  domain;  this.range  =  range;  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  [BUGGY]  this.domain  =  domain;  this.range  =  range;  [BUGGY]  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	this.domain  =  domain;  this.range  =  range;		compilable	  [FE]  IllegalArgumentException	20	1
386	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [BUGGY]    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...	removeAgedItems(false);//  remove  old  items  if  necessary,  but      //  don't  notify  anyone,  because  that          //  happens  next  anyway...  	compilable	  [FE]  IllegalArgumentException	65	1
387	[BUG]  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [FE]  IllegalArgumentException  [CONTEXT]  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [BUGGY]    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	removeAgedItems(true);//  remove  old  items  if  necessary,  but  //  don't  notify  anyone,  because  that  //  happens  next  anyway...	removeAgedItems(false);//  remove  old  items  if  necessary,  but      //  don't  notify  anyone,  because  that          //  happens  next  anyway...  	compilable	  [FE]  IllegalArgumentException	65	1
445	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value)  {  add(period,  value,  true);  [BUGGY]  fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	587	587	1	add	fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	75	1
446	[BUG]  [BUGGY]  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value)  {  add(period,  value,  true);  [BUGGY]  fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  [VARIABLES]  boolean  Number  value  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	587	587	1	replace	fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	75	1
163	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  [BUGGY]  this.domain  =  domain;  this.range  =  range;  [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	177	177	1	add	this.domain  =  domain;  this.range  =  range;		compilable	  [FE]  IllegalArgumentException	28	1
164	[BUG]  [BUGGY]  this.domain  =  domain;  this.range  =  range;  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  [BUGGY]  this.domain  =  domain;  this.range  =  range;  [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	177	177	1	replace	this.domain  =  domain;  this.range  =  range;		compilable	  [FE]  IllegalArgumentException	28	1
97	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  [BUGGY]  super(name,  domain);  [BUGGY]  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	172	172	1	add	super(name,  domain);	super(name);  	compilable	  [FE]  IllegalArgumentException	17	1
98	[BUG]  [BUGGY]  super(name,  domain);  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  [BUGGY]  super(name,  domain);  [BUGGY]  this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	172	172	1	replace	super(name,  domain);	super(name);  	compilable	  [FE]  IllegalArgumentException	17	1
380	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {    [BUGGY]  fireSeriesChanged();  [BUGGY]  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	536	536	1	add	fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	64	1
381	[BUG]  [BUGGY]  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {    [BUGGY]  fireSeriesChanged();  [BUGGY]  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	536	536	1	replace	fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	64	1
223	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  RegularTimePeriod  getTimePeriod(int  index)  {  [BUGGY]  this.data.get(index);  [BUGGY]  return  getDataItem(index).getPeriod();  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	370	370	1	add	this.data.get(index);		compilable	  [FE]  IllegalArgumentException	38	1
224	[BUG]  [BUGGY]  this.data.get(index);  [FE]  IllegalArgumentException  [CONTEXT]  public  RegularTimePeriod  getTimePeriod(int  index)  {  [BUGGY]  this.data.get(index);  [BUGGY]  return  getDataItem(index).getPeriod();  }  [CLASS]  TimeSeries  [METHOD]  getTimePeriod  [RETURN_TYPE]  RegularTimePeriod  int  index  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  periods  serialVersionUID  int  count  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	370	370	1	replace	this.data.get(index);		compilable	  [FE]  IllegalArgumentException	38	1
350	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  [BUGGY]  added  =  false;  [BUGGY]  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  attempting  to  add  an  observation  for   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	514	514	1	add	added  =  false;	added  =  true;  	compilable	  [FE]  IllegalArgumentException	59	1
351	[BUG]  [BUGGY]  added  =  false;  [FE]  IllegalArgumentException  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  [BUGGY]  added  =  false;  [BUGGY]  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  attempting  to  add  an  observation  for   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	514	514	1	replace	added  =  false;	added  =  true;  	compilable	  [FE]  IllegalArgumentException	59	1
351	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  [BUGGY]    [BUGGY]  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  attempting  to  add  an  observation  for   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	514	514	1	add	  	added  =  true;  	compilable	  [FE]  IllegalArgumentException	59	1
352	[BUG]  [BUGGY]    [FE]  IllegalArgumentException  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  [BUGGY]    [BUGGY]  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  attempting  to  add  an  observation  for   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	514	514	1	replace	  	added  =  true;  	compilable	  [FE]  IllegalArgumentException	59	1
488	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    [BUGGY]  if(getItemCount()  >  this.maximumItemAge)  {  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	738	738	1	add	if(getItemCount()  >  this.maximumItemAge)  {	if  (getItemCount()  >  1)  {  	compilable	  [FE]  IllegalArgumentException	82	1
489	[BUG]  [BUGGY]  if(getItemCount()  >  this.maximumItemAge)  {  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    [BUGGY]  if(getItemCount()  >  this.maximumItemAge)  {  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	738	738	1	replace	if(getItemCount()  >  this.maximumItemAge)  {	if  (getItemCount()  >  1)  {  	compilable	  [FE]  IllegalArgumentException	82	1
139	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE;  [BUGGY]  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	175	175	1	add	this.maximumItemCount  =  Integer.MAX_VALUE;		compilable	  [FE]  IllegalArgumentException	24	1
140	[BUG]  [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE;  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE;  [BUGGY]  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	175	175	1	replace	this.maximumItemCount  =  Integer.MAX_VALUE;		compilable	  [FE]  IllegalArgumentException	24	1
140	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  [BUGGY]  this.maximumItemCount  =  0;  [BUGGY]  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	175	175	1	add	this.maximumItemCount  =  0;		compilable	  [FE]  IllegalArgumentException	24	1
141	[BUG]  [BUGGY]  this.maximumItemCount  =  0;  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  [BUGGY]  this.maximumItemCount  =  0;  [BUGGY]  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	175	175	1	replace	this.maximumItemCount  =  0;		compilable	  [FE]  IllegalArgumentException	24	1
141	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  [BUGGY]  this.domain  =  domain;  this.range  =  range;  [BUGGY]  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	175	175	1	add	this.domain  =  domain;  this.range  =  range;		compilable	  [FE]  IllegalArgumentException	24	1
142	[BUG]  [BUGGY]  this.domain  =  domain;  this.range  =  range;  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  [BUGGY]  this.domain  =  domain;  this.range  =  range;  [BUGGY]  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	175	175	1	replace	this.domain  =  domain;  this.range  =  range;		compilable	  [FE]  IllegalArgumentException	24	1
2	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  >>  end. ");  [BUGGY]  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	throw  new  IllegalArgumentException( "Requires  start  >>  end. ");	throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  	compilable	  [FE]  IllegalArgumentException	1	1
3	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  >>  end. ");  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  >>  end. ");  [BUGGY]  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	throw  new  IllegalArgumentException( "Requires  start  >>  end. ");	throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  	compilable	  [FE]  IllegalArgumentException	1	1
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]    [BUGGY]  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	  	throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  	compilable	  [FE]  AssertionFailedError	1	1
4	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]    [BUGGY]  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	  	throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  	compilable	  [FE]  AssertionFailedError	1	1
7	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]  if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }		compilable	  [FE]  IllegalArgumentException	2	1
8	[BUG]  [BUGGY]  if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]  if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }		compilable	  [FE]  IllegalArgumentException	2	1
8	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]  if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end. ");  }  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end. ");  }		compilable	  [FE]  IllegalArgumentException	2	1
9	[BUG]  [BUGGY]  if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end. ");  }  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]  if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end. ");  }  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	if(end  >  start)  {  throw  new  IllegalArgumentException( "Requires  start  >=  end. ");  }		compilable	  [FE]  IllegalArgumentException	2	1
9	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]  System.err.println( "Requires  start  >>  0 ");  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  start  >>  0 ");		compilable	  [FE]  IllegalArgumentException	2	1
10	[BUG]  [BUGGY]  System.err.println( "Requires  start  >>  0 ");  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]  System.err.println( "Requires  start  >>  0 ");  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  start  >>  0 ");		compilable	  [FE]  IllegalArgumentException	2	1
506	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  [BUGGY]  long  maximum  =  getTimePeriod(0).getSerialIndex();  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	739	739	1	add	long  maximum  =  getTimePeriod(0).getSerialIndex();		compilable	  [FE]  IllegalArgumentException	85	1
507	[BUG]  [BUGGY]  long  maximum  =  getTimePeriod(0).getSerialIndex();  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  [BUGGY]  long  maximum  =  getTimePeriod(0).getSerialIndex();  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	739	739	1	replace	long  maximum  =  getTimePeriod(0).getSerialIndex();		compilable	  [FE]  IllegalArgumentException	85	1
493	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    [BUGGY]  int  count  =  getItemCount();  [BUGGY]  if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	738	738	1	add	int  count  =  getItemCount();		compilable	  [FE]  IllegalArgumentException	83	1
494	[BUG]  [BUGGY]  int  count  =  getItemCount();  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    [BUGGY]  int  count  =  getItemCount();  [BUGGY]  if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	738	738	1	replace	int  count  =  getItemCount();		compilable	  [FE]  IllegalArgumentException	83	1
314	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  [BUGGY]  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  /  2);  [BUGGY]  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	511	511	1	add	RegularTimePeriod  last  =  getTimePeriod(getItemCount()  /  2);	RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  	compilable	  [FE]  IllegalArgumentException	53	1
315	[BUG]  [BUGGY]  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  /  2);  [FE]  IllegalArgumentException  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  [BUGGY]  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  /  2);  [BUGGY]  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	511	511	1	replace	RegularTimePeriod  last  =  getTimePeriod(getItemCount()  /  2);	RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  	compilable	  [FE]  IllegalArgumentException	53	1
110	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;	this.domain  =  domain;  	compilable	  [FE]  IllegalArgumentException	19	1
111	[BUG]  [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;	this.domain  =  domain;  	compilable	  [FE]  IllegalArgumentException	19	1
512	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  boolean  removed  =(latest  ==  0)&&(this.data.size()  >  this.maximumItemAge);  [BUGGY]  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	740	740	1	add	boolean  removed  =(latest  ==  0)&&(this.data.size()  >  this.maximumItemAge);	boolean  removed  =  false;  	compilable	  [FE]  IllegalArgumentException	86	1
513	[BUG]  [BUGGY]  boolean  removed  =(latest  ==  0)&&(this.data.size()  >  this.maximumItemAge);  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  boolean  removed  =(latest  ==  0)&&(this.data.size()  >  this.maximumItemAge);  [BUGGY]  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	740	740	1	replace	boolean  removed  =(latest  ==  0)&&(this.data.size()  >  this.maximumItemAge);	boolean  removed  =  false;  	compilable	  [FE]  IllegalArgumentException	86	1
309	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  [BUGGY]  fireSeriesChanged();  [BUGGY]  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	508	508	1	add	fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	52	1
310	[BUG]  [BUGGY]  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  [BUGGY]  fireSeriesChanged();  [BUGGY]  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	508	508	1	replace	fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	52	1
374	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {    [BUGGY]  if(getItemCount()  >  this.maximumItemCount  ||  getItemCount()  >  this.maximumItemCount)  {  [BUGGY]  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	536	536	1	add	if(getItemCount()  >  this.maximumItemCount  ||  getItemCount()  >  this.maximumItemCount)  {	if  (getItemCount()  >  this.maximumItemCount)  {  	compilable	  [FE]  IllegalArgumentException	63	1
375	[BUG]  [BUGGY]  if(getItemCount()  >  this.maximumItemCount  ||  getItemCount()  >  this.maximumItemCount)  {  [FE]  IllegalArgumentException  [CONTEXT]  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {    [BUGGY]  if(getItemCount()  >  this.maximumItemCount  ||  getItemCount()  >  this.maximumItemCount)  {  [BUGGY]  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	536	536	1	replace	if(getItemCount()  >  this.maximumItemCount  ||  getItemCount()  >  this.maximumItemCount)  {	if  (getItemCount()  >  this.maximumItemCount)  {  	compilable	  [FE]  IllegalArgumentException	63	1
7	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]  System.err.println( "Requires  start  >=  end. ");  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  start  >=  end. ");		compilable	  [FE]  IllegalArgumentException	2	1
8	[BUG]  [BUGGY]  System.err.println( "Requires  start  >=  end. ");  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]  System.err.println( "Requires  start  >=  end. ");  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  start  >=  end. ");		compilable	  [FE]  IllegalArgumentException	2	1
8	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]  System.err.println( "Failed  to  add  end-of-string  value ");  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Failed  to  add  end-of-string  value ");		compilable	  [FE]  IllegalArgumentException	2	1
9	[BUG]  [BUGGY]  System.err.println( "Failed  to  add  end-of-string  value ");  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]  System.err.println( "Failed  to  add  end-of-string  value ");  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Failed  to  add  end-of-string  value ");		compilable	  [FE]  IllegalArgumentException	2	1
69	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  [BUGGY]  if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.4472135954999579	879	879	1	add	if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  IllegalArgumentException	12	1
70	[BUG]  [BUGGY]  if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  [BUGGY]  if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.4472135954999579	879	879	1	replace	if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  IllegalArgumentException	12	1
398	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    [BUGGY]  if(!notify)  {  [BUGGY]  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	543	543	1	add	if(!notify)  {	if  (notify)  {  	compilable	  [FE]  IllegalArgumentException	67	1
399	[BUG]  [BUGGY]  if(!notify)  {  [FE]  IllegalArgumentException  [CONTEXT]  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    [BUGGY]  if(!notify)  {  [BUGGY]  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	543	543	1	replace	if(!notify)  {	if  (notify)  {  	compilable	  [FE]  IllegalArgumentException	67	1
2	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]  throw  new  IllegalArgumentException( "Requires  end  <=  start. ");  [BUGGY]  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	throw  new  IllegalArgumentException( "Requires  end  <=  start. ");	throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  	compilable	  [FE]  IllegalArgumentException	1	1
3	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Requires  end  <=  start. ");  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]  throw  new  IllegalArgumentException( "Requires  end  <=  start. ");  [BUGGY]  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	throw  new  IllegalArgumentException( "Requires  end  <=  start. ");	throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  	compilable	  [FE]  IllegalArgumentException	1	1
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]  public  Object  clone()  throws  CloneNotSupportedException  {  [BUGGY]  Object  clone  =  createCopy(0,  getItemCount()  /  2);  [BUGGY]  return  clone;  }  [CLASS]  TimeSeries  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  Class  timePeriodClass  List  data  Object  clone  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	857	857	1	add	Object  clone  =  createCopy(0,  getItemCount()  /  2);	Object  clone  =  createCopy(0,  getItemCount()  -  1);  	compilable	  [FE]  AssertionFailedError	3	1
15	[BUG]  [BUGGY]  Object  clone  =  createCopy(0,  getItemCount()  /  2);  [FE]  AssertionFailedError  [CONTEXT]  public  Object  clone()  throws  CloneNotSupportedException  {  [BUGGY]  Object  clone  =  createCopy(0,  getItemCount()  /  2);  [BUGGY]  return  clone;  }  [CLASS]  TimeSeries  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  Class  timePeriodClass  List  data  Object  clone  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	857	857	1	replace	Object  clone  =  createCopy(0,  getItemCount()  /  2);	Object  clone  =  createCopy(0,  getItemCount()  -  1);  	compilable	  [FE]  AssertionFailedError	3	1
385	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [BUGGY]    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	removeAgedItems(true);//  remove  old  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...	removeAgedItems(false);//  remove  old  items  if  necessary,  but      //  don't  notify  anyone,  because  that          //  happens  next  anyway...  	compilable	  [FE]  IllegalArgumentException	65	1
386	[BUG]  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [FE]  IllegalArgumentException  [CONTEXT]  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [BUGGY]    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	removeAgedItems(true);//  remove  old  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...	removeAgedItems(false);//  remove  old  items  if  necessary,  but      //  don't  notify  anyone,  because  that          //  happens  next  anyway...  	compilable	  [FE]  IllegalArgumentException	65	1
386	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [BUGGY]    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	removeAgedItems(false);//  remove  old  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...	removeAgedItems(false);//  remove  old  items  if  necessary,  but      //  don't  notify  anyone,  because  that          //  happens  next  anyway...  	compilable	  [FE]  IllegalArgumentException	65	1
387	[BUG]  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [FE]  IllegalArgumentException  [CONTEXT]  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...  [BUGGY]    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	removeAgedItems(false);//  remove  old  items  if  necessary,  //  don't  notify  anyone,  because  that  //  happens  next  anyway...	removeAgedItems(false);//  remove  old  items  if  necessary,  but      //  don't  notify  anyone,  because  that          //  happens  next  anyway...  	compilable	  [FE]  IllegalArgumentException	65	1
199	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  int  getItemCount()  {  [BUGGY]  int  maximumItemCount  =  this.data.size();  [BUGGY]  return  this.data.size();  }  [CLASS]  TimeSeries  [METHOD]  getItemCount  [RETURN_TYPE]  int  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	238	238	1	add	int  maximumItemCount  =  this.data.size();		compilable	  [FE]  IllegalArgumentException	34	1
200	[BUG]  [BUGGY]  int  maximumItemCount  =  this.data.size();  [FE]  IllegalArgumentException  [CONTEXT]  public  int  getItemCount()  {  [BUGGY]  int  maximumItemCount  =  this.data.size();  [BUGGY]  return  this.data.size();  }  [CLASS]  TimeSeries  [METHOD]  getItemCount  [RETURN_TYPE]  int  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	238	238	1	replace	int  maximumItemCount  =  this.data.size();		compilable	  [FE]  IllegalArgumentException	34	1
200	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  int  getItemCount()  {  [BUGGY]  int  maximumItemCount  =  getMaximumItemCount();  [BUGGY]  return  this.data.size();  }  [CLASS]  TimeSeries  [METHOD]  getItemCount  [RETURN_TYPE]  int  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	238	238	1	add	int  maximumItemCount  =  getMaximumItemCount();		compilable	  [FE]  IllegalArgumentException	34	1
201	[BUG]  [BUGGY]  int  maximumItemCount  =  getMaximumItemCount();  [FE]  IllegalArgumentException  [CONTEXT]  public  int  getItemCount()  {  [BUGGY]  int  maximumItemCount  =  getMaximumItemCount();  [BUGGY]  return  this.data.size();  }  [CLASS]  TimeSeries  [METHOD]  getItemCount  [RETURN_TYPE]  int  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	238	238	1	replace	int  maximumItemCount  =  getMaximumItemCount();		compilable	  [FE]  IllegalArgumentException	34	1
230	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  [BUGGY]  if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  [BUGGY]  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	489	489	1	add	if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {	if  (item  ==  null)  {  	compilable	  [FE]  IllegalArgumentException	39	1
231	[BUG]  [BUGGY]  if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(TimeSeriesDataItem  item,  boolean  notify)  {  [BUGGY]  if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {  [BUGGY]  throw  new  IllegalArgumentException( "Null  'item'  argument. ");  }  if  (!item.getPeriod().getClass().equals(this.timePeriodClass))  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	489	489	1	replace	if(item  ==  null  ||  item.getPeriod().getClass()!=  this.timePeriodClass)  {	if  (item  ==  null)  {  	compilable	  [FE]  IllegalArgumentException	39	1
362	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  b.append( "You  are  attempting  to  add  an  observation  for   ");  b.append( "the  time  period   ");  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  [BUGGY]  if(!added)  {  [BUGGY]    if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	534	534	1	add	if(!added)  {	if  (added)  {  	compilable	  [FE]  IllegalArgumentException	61	1
363	[BUG]  [BUGGY]  if(!added)  {  [FE]  IllegalArgumentException  [CONTEXT]  b.append( "You  are  attempting  to  add  an  observation  for   ");  b.append( "the  time  period   ");  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  [BUGGY]  if(!added)  {  [BUGGY]    if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	534	534	1	replace	if(!added)  {	if  (added)  {  	compilable	  [FE]  IllegalArgumentException	61	1
355	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  [BUGGY]  fireSeriesChanged();  [BUGGY]  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  attempting  to  add  an  observation  for   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	514	514	1	add	fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	60	1
356	[BUG]  [BUGGY]  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  [BUGGY]  fireSeriesChanged();  [BUGGY]  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  StringBuffer  b  =  new  StringBuffer();  b.append( "You  are  attempting  to  add  an  observation  for   ");  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	514	514	1	replace	fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	60	1
505	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  [BUGGY]  long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	739	739	1	add	long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();		compilable	  [FE]  IllegalArgumentException	85	1
506	[BUG]  [BUGGY]  long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  [BUGGY]  long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	739	739	1	replace	long  last  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();		compilable	  [FE]  IllegalArgumentException	85	1
506	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  [BUGGY]  long  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	739	739	1	add	long  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();		compilable	  [FE]  IllegalArgumentException	85	1
507	[BUG]  [BUGGY]  long  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  [BUGGY]  long  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	739	739	1	replace	long  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();		compilable	  [FE]  IllegalArgumentException	85	1
507	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  [BUGGY]  long  maximumItemAge  =  getTimePeriod(0).getSerialIndex();  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	739	739	1	add	long  maximumItemAge  =  getTimePeriod(0).getSerialIndex();		compilable	  [FE]  IllegalArgumentException	85	1
508	[BUG]  [BUGGY]  long  maximumItemAge  =  getTimePeriod(0).getSerialIndex();  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  [BUGGY]  long  maximumItemAge  =  getTimePeriod(0).getSerialIndex();  [BUGGY]  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	739	739	1	replace	long  maximumItemAge  =  getTimePeriod(0).getSerialIndex();		compilable	  [FE]  IllegalArgumentException	85	1
7	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]  if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  IllegalArgumentException	2	1
8	[BUG]  [BUGGY]  if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]  if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  IllegalArgumentException	2	1
8	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]  if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  else  if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  else  if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  IllegalArgumentException	2	1
9	[BUG]  [BUGGY]  if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  else  if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]  if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  else  if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  else  if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  IllegalArgumentException	2	1
9	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]  if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  else  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  end  >=  0. ");  }  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  else  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  end  >=  0. ");  }		compilable	  [FE]  IllegalArgumentException	2	1
10	[BUG]  [BUGGY]  if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  else  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  end  >=  0. ");  }  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  if  (end  <  start)  {  [BUGGY]  if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  else  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  end  >=  0. ");  }  [BUGGY]  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	if(end  <  start)  {  throw  new  IllegalArgumentException( " ");  }  else  if(end  <  start)  {  throw  new  IllegalArgumentException( "Requires  end  >=  0. ");  }		compilable	  [FE]  IllegalArgumentException	2	1
141	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  [BUGGY]  this.data  =  new  java.util.ArrayList();  [BUGGY]  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	175	175	1	add	this.data  =  new  java.util.ArrayList();		compilable	  [FE]  IllegalArgumentException	24	1
142	[BUG]  [BUGGY]  this.data  =  new  java.util.ArrayList();  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  this.range  =  range;  [BUGGY]  this.data  =  new  java.util.ArrayList();  [BUGGY]  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	175	175	1	replace	this.data  =  new  java.util.ArrayList();		compilable	  [FE]  IllegalArgumentException	24	1
128	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  [BUGGY]  this.data  =  new  java.util.ArrayList();  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.data  =  new  java.util.ArrayList();		compilable	  [FE]  IllegalArgumentException	22	1
129	[BUG]  [BUGGY]  this.data  =  new  java.util.ArrayList();  [FE]  IllegalArgumentException  [CONTEXT]  public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;  [BUGGY]  this.data  =  new  java.util.ArrayList();  [BUGGY]  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.data  =  new  java.util.ArrayList();		compilable	  [FE]  IllegalArgumentException	22	1
332	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  [BUGGY]  RegularTimePeriod  first  =  getTimePeriod(getItemCount()  -  1);  [BUGGY]  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	512	512	1	add	RegularTimePeriod  first  =  getTimePeriod(getItemCount()  -  1);		compilable	  [FE]  IllegalArgumentException	56	1
333	[BUG]  [BUGGY]  RegularTimePeriod  first  =  getTimePeriod(getItemCount()  -  1);  [FE]  IllegalArgumentException  [CONTEXT]  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  [BUGGY]  RegularTimePeriod  first  =  getTimePeriod(getItemCount()  -  1);  [BUGGY]  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  else  {  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	512	512	1	replace	RegularTimePeriod  first  =  getTimePeriod(getItemCount()  -  1);		compilable	  [FE]  IllegalArgumentException	56	1
482	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  [BUGGY]  item.setValue(value);  fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	602	602	1	add	item.setValue(value);  fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	81	1
483	[BUG]  [BUGGY]  item.setValue(value);  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]  public  void  add(RegularTimePeriod  period,  Number  value,  boolean  notify)  {  TimeSeriesDataItem  item  =  new  TimeSeriesDataItem(period,  value);  add(item,  notify);  [BUGGY]  item.setValue(value);  fireSeriesChanged();  [BUGGY]  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  RegularTimePeriod  period  Number  value  boolean  notify  [VARIABLES]  boolean  notify  Number  value  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  period  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	602	602	1	replace	item.setValue(value);  fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	81	1
392	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  [BUGGY]  fireSeriesChanged();  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  necessary,  but          //  don't  notify  anyone,  because  that                    //  happens  next  anyway...    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	66	1
393	[BUG]  [BUGGY]  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  [BUGGY]  fireSeriesChanged();  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  necessary,  but          //  don't  notify  anyone,  because  that                    //  happens  next  anyway...    if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	66	1
518	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	740	740	1	add	long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();		compilable	  [FE]  IllegalArgumentException	87	1
519	[BUG]  [BUGGY]  long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	740	740	1	replace	long  maximum  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();		compilable	  [FE]  IllegalArgumentException	87	1
519	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  long  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	740	740	1	add	long  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();		compilable	  [FE]  IllegalArgumentException	87	1
520	[BUG]  [BUGGY]  long  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [FE]  IllegalArgumentException  [CONTEXT]  public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  long  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();  [BUGGY]  boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	740	740	1	replace	long  maximumItemAge  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();		compilable	  [FE]  IllegalArgumentException	87	1
68	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  [BUGGY]  if(start  >  end)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.4472135954999579	879	879	1	add	if(start  >  end)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  IllegalArgumentException	12	1
69	[BUG]  [BUGGY]  if(start  >  end)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [CONTEXT]  throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException( "Requires  start  >=  0. ");  }  [BUGGY]  if(start  >  end)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (end  <  start)  {  throw  new  IllegalArgumentException( "Requires  start  <=  end. ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.4472135954999579	879	879	1	replace	if(start  >  end)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  IllegalArgumentException	12	1
369	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  b.append( "You  are  attempting  to  add  an  observation  for   ");  b.append( "the  time  period   ");  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  [BUGGY]  fireSeriesChanged();  [BUGGY]  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	534	534	1	add	fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	62	1
370	[BUG]  [BUGGY]  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]  b.append( "You  are  attempting  to  add  an  observation  for   ");  b.append( "the  time  period   ");  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  [BUGGY]  fireSeriesChanged();  [BUGGY]  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	534	534	1	replace	fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	62	1
261	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }    [BUGGY]  fireSeriesChanged();  [BUGGY]  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	504	504	1	add	fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	44	1
262	[BUG]  [BUGGY]  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]  b.append( "You  are  trying  to  add  data  where  the  time  period  class   ");  b.append( "is   ");  b.append(item.getPeriod().getClass().getName());  b.append( ",  but  the  TimeSeries  is  expecting  an  instance  of   ");  b.append(this.timePeriodClass.getName());  b.append( ". ");  throw  new  SeriesException(b.toString());  }    [BUGGY]  fireSeriesChanged();  [BUGGY]  boolean  added  =  false;  int  count  =  getItemCount();  if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {  RegularTimePeriod  last  =  getTimePeriod(getItemCount()  -  1);  if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	504	504	1	replace	fireSeriesChanged();		compilable	  [FE]  IllegalArgumentException	44	1
