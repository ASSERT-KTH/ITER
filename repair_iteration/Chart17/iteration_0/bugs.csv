bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	patch
1	[BUG] [BUGGY] throw new IllegalArgumentException("Requires start <= end."); [FE] IllegalArgumentException [CONTEXT] throws CloneNotSupportedException { if (start < 0) { throw new IllegalArgumentException("Requires start >= 0."); } if (end < start) { [BUGGY] throw new IllegalArgumentException("Requires start <= end."); [BUGGY] } TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); if (this.data.size() > 0) { for (int index = start; index <= end; index++) { TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index); TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone(); try { [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  int start int end [VARIABLES] TimeSeries copy boolean TimeSeriesDataItem clone item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range SeriesException e long index latest maximumItemAge periods serialVersionUID int count end i index maximum maximumItemCount start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	
2	[BUG] [BUGGY] Object clone = createCopy(0, getItemCount() - 1); [FE] IllegalArgumentException [CONTEXT] public Object clone() throws CloneNotSupportedException { [BUGGY] Object clone = createCopy(0, getItemCount() - 1); [BUGGY] return clone; } [CLASS] TimeSeries [METHOD] clone [RETURN_TYPE] Object  [VARIABLES] boolean Class timePeriodClass List data Object clone String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range long index latest maximumItemAge periods serialVersionUID int count end i index maximum maximumItemCount start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.5773502691896258	857	857	1	
3	[BUG] [BUGGY] this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION,  Day.class); } [FE] IllegalArgumentException [CONTEXT] public TimeSeries(Comparable name) { [BUGGY] this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION,        Day.class);  } [BUGGY] Day.class); } [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] Comparable)  Comparable name [VARIABLES] Comparable name boolean Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.4472135954999579	140	142	1	
4	[BUG] [BUGGY] } [FE] IllegalArgumentException [CONTEXT] public TimeSeries(Comparable name) { this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION, Day.class); [BUGGY] } [BUGGY]  [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] Comparable)  Comparable name [VARIABLES] Comparable name boolean Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.4472135954999579	142	142	1	
5	[BUG] [BUGGY] if (start < 0) { [FE] IllegalArgumentException [CONTEXT] throws CloneNotSupportedException { [BUGGY] if (start < 0) { [BUGGY] throw new IllegalArgumentException("Requires start >= 0."); } if (end < start) { throw new IllegalArgumentException("Requires start <= end."); } TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); if (this.data.size() > 0) { for (int index = start; index <= end; index++) { [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  int start int end [VARIABLES] TimeSeries copy boolean TimeSeriesDataItem clone item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range SeriesException e long index latest maximumItemAge periods serialVersionUID int count end i index maximum maximumItemCount start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.4472135954999579	876	876	1	
6	[BUG] [BUGGY] if (end < start) { [FE] IllegalArgumentException [CONTEXT] throws CloneNotSupportedException { if (start < 0) { throw new IllegalArgumentException("Requires start >= 0."); } [BUGGY] if (end < start) { [BUGGY] throw new IllegalArgumentException("Requires start <= end."); } TimeSeries copy = (TimeSeries) super.clone(); copy.data = new java.util.ArrayList(); if (this.data.size() > 0) { for (int index = start; index <= end; index++) { TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index); TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone(); [CLASS] TimeSeries [METHOD] createCopy [RETURN_TYPE] TimeSeries  int start int end [VARIABLES] TimeSeries copy boolean TimeSeriesDataItem clone item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range SeriesException e long index latest maximumItemAge periods serialVersionUID int count end i index maximum maximumItemCount start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.4472135954999579	879	879	1	
7	[BUG] [BUGGY] this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION,  timePeriodClass); } [FE] IllegalArgumentException [CONTEXT] public TimeSeries(Comparable name, Class timePeriodClass) { [BUGGY] this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION,        timePeriodClass);  } [BUGGY] timePeriodClass); } [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] Class)  Comparable name Class timePeriodClass [VARIABLES] Comparable name boolean Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	153	155	1	
8	[BUG] [BUGGY] } [FE] IllegalArgumentException [CONTEXT] public TimeSeries(Comparable name, Class timePeriodClass) { this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION, timePeriodClass); [BUGGY] } [BUGGY]  [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] Class)  Comparable name Class timePeriodClass [VARIABLES] Comparable name boolean Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	155	155	1	
9	[BUG] [BUGGY] super(name); [FE] IllegalArgumentException [CONTEXT] public TimeSeries(Comparable name, String domain, String range, Class timePeriodClass) { [BUGGY] super(name); [BUGGY] this.domain = domain; this.range = range; this.timePeriodClass = timePeriodClass; this.data = new java.util.ArrayList(); this.maximumItemCount = Integer.MAX_VALUE; this.maximumItemAge = Long.MAX_VALUE; } [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] Class)  Comparable name String domain String range Class timePeriodClass [VARIABLES] Comparable name boolean Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	172	172	1	
10	[BUG] [BUGGY] this.domain = domain; [FE] IllegalArgumentException [CONTEXT] public TimeSeries(Comparable name, String domain, String range, Class timePeriodClass) { super(name); [BUGGY] this.domain = domain; [BUGGY] this.range = range; this.timePeriodClass = timePeriodClass; this.data = new java.util.ArrayList(); this.maximumItemCount = Integer.MAX_VALUE; this.maximumItemAge = Long.MAX_VALUE; } [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] Class)  Comparable name String domain String range Class timePeriodClass [VARIABLES] Comparable name boolean Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	
11	[BUG] [BUGGY] this.range = range; [FE] IllegalArgumentException [CONTEXT] public TimeSeries(Comparable name, String domain, String range, Class timePeriodClass) { super(name); this.domain = domain; [BUGGY] this.range = range; [BUGGY] this.timePeriodClass = timePeriodClass; this.data = new java.util.ArrayList(); this.maximumItemCount = Integer.MAX_VALUE; this.maximumItemAge = Long.MAX_VALUE; } [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] Class)  Comparable name String domain String range Class timePeriodClass [VARIABLES] Comparable name boolean Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	
12	[BUG] [BUGGY] this.timePeriodClass = timePeriodClass; [FE] IllegalArgumentException [CONTEXT] public TimeSeries(Comparable name, String domain, String range, Class timePeriodClass) { super(name); this.domain = domain; this.range = range; [BUGGY] this.timePeriodClass = timePeriodClass; [BUGGY] this.data = new java.util.ArrayList(); this.maximumItemCount = Integer.MAX_VALUE; this.maximumItemAge = Long.MAX_VALUE; } [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] Class)  Comparable name String domain String range Class timePeriodClass [VARIABLES] Comparable name boolean Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	175	175	1	
13	[BUG] [BUGGY] this.data = new java.util.ArrayList(); [FE] IllegalArgumentException [CONTEXT] public TimeSeries(Comparable name, String domain, String range, Class timePeriodClass) { super(name); this.domain = domain; this.range = range; this.timePeriodClass = timePeriodClass; [BUGGY] this.data = new java.util.ArrayList(); [BUGGY] this.maximumItemCount = Integer.MAX_VALUE; this.maximumItemAge = Long.MAX_VALUE; } [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] Class)  Comparable name String domain String range Class timePeriodClass [VARIABLES] Comparable name boolean Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	176	176	1	
14	[BUG] [BUGGY] this.maximumItemCount = Integer.MAX_VALUE; [FE] IllegalArgumentException [CONTEXT] public TimeSeries(Comparable name, String domain, String range, Class timePeriodClass) { super(name); this.domain = domain; this.range = range; this.timePeriodClass = timePeriodClass; this.data = new java.util.ArrayList(); [BUGGY] this.maximumItemCount = Integer.MAX_VALUE; [BUGGY] this.maximumItemAge = Long.MAX_VALUE; } [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] Class)  Comparable name String domain String range Class timePeriodClass [VARIABLES] Comparable name boolean Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	177	177	1	
15	[BUG] [BUGGY] this.maximumItemAge = Long.MAX_VALUE; [FE] IllegalArgumentException [CONTEXT] public TimeSeries(Comparable name, String domain, String range, Class timePeriodClass) { super(name); this.domain = domain; this.range = range; this.timePeriodClass = timePeriodClass; this.data = new java.util.ArrayList(); this.maximumItemCount = Integer.MAX_VALUE; [BUGGY] this.maximumItemAge = Long.MAX_VALUE; [BUGGY] } [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] Class)  Comparable name String domain String range Class timePeriodClass [VARIABLES] Comparable name boolean Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	178	178	1	
16	[BUG] [BUGGY] } [FE] IllegalArgumentException [CONTEXT] public TimeSeries(Comparable name, String domain, String range, Class timePeriodClass) { super(name); this.domain = domain; this.range = range; this.timePeriodClass = timePeriodClass; this.data = new java.util.ArrayList(); this.maximumItemCount = Integer.MAX_VALUE; this.maximumItemAge = Long.MAX_VALUE; [BUGGY] } [BUGGY]  [CLASS] TimeSeries [METHOD] <init> [RETURN_TYPE] Class)  Comparable name String domain String range Class timePeriodClass [VARIABLES] Comparable name boolean Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION domain range long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	179	179	1	
17	[BUG] [BUGGY] return this.data.size(); [FE] IllegalArgumentException [CONTEXT] public int getItemCount() { [BUGGY] return this.data.size(); [BUGGY] } [CLASS] TimeSeries [METHOD] getItemCount [RETURN_TYPE] int  [VARIABLES] Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range boolean long maximumItemAge serialVersionUID int maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	238	238	1	
18	[BUG] [BUGGY] return (TimeSeriesDataItem) this.data.get(index); [FE] IllegalArgumentException [CONTEXT] public TimeSeriesDataItem getDataItem(int index) { [BUGGY] return (TimeSeriesDataItem) this.data.get(index); [BUGGY] } [CLASS] TimeSeries [METHOD] getDataItem [RETURN_TYPE] TimeSeriesDataItem  int index [VARIABLES] Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range boolean long maximumItemAge periods serialVersionUID int count index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	339	339	1	
19	[BUG] [BUGGY] return getDataItem(index).getPeriod(); [FE] IllegalArgumentException [CONTEXT] public RegularTimePeriod getTimePeriod(int index) { [BUGGY] return getDataItem(index).getPeriod(); [BUGGY] } [CLASS] TimeSeries [METHOD] getTimePeriod [RETURN_TYPE] RegularTimePeriod  int index [VARIABLES] Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range boolean long maximumItemAge periods serialVersionUID int count index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	370	370	1	
20	[BUG] [BUGGY] if (item == null) { [FE] IllegalArgumentException [CONTEXT] public void add(TimeSeriesDataItem item, boolean notify) { [BUGGY] if (item == null) { [BUGGY] throw new IllegalArgumentException("Null 'item' argument."); } if (!item.getPeriod().getClass().equals(this.timePeriodClass)) { StringBuffer b = new StringBuffer(); b.append("You are trying to add data where the time period class "); b.append("is "); b.append(item.getPeriod().getClass().getName()); b.append(", but the TimeSeries is expecting an instance of "); b.append(this.timePeriodClass.getName()); b.append("."); [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify TimeSeriesDataItem item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	489	489	1	
21	[BUG] [BUGGY] if (!item.getPeriod().getClass().equals(this.timePeriodClass)) { [FE] IllegalArgumentException [CONTEXT] public void add(TimeSeriesDataItem item, boolean notify) { if (item == null) { throw new IllegalArgumentException("Null 'item' argument."); } [BUGGY] if (!item.getPeriod().getClass().equals(this.timePeriodClass)) { [BUGGY] StringBuffer b = new StringBuffer(); b.append("You are trying to add data where the time period class "); b.append("is "); b.append(item.getPeriod().getClass().getName()); b.append(", but the TimeSeries is expecting an instance of "); b.append(this.timePeriodClass.getName()); b.append("."); throw new SeriesException(b.toString()); }  [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify TimeSeriesDataItem item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	492	492	1	
22	[BUG] [BUGGY] boolean added = false; [FE] IllegalArgumentException [CONTEXT] b.append("You are trying to add data where the time period class "); b.append("is "); b.append(item.getPeriod().getClass().getName()); b.append(", but the TimeSeries is expecting an instance of "); b.append(this.timePeriodClass.getName()); b.append("."); throw new SeriesException(b.toString()); }  [BUGGY] boolean added = false; [BUGGY] int count = getItemCount(); if (count == 0) { this.data.add(item); added = true; } else { RegularTimePeriod last = getTimePeriod(getItemCount() - 1); if (item.getPeriod().compareTo(last) > 0) { this.data.add(item); added = true; [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify TimeSeriesDataItem item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	504	504	1	
23	[BUG] [BUGGY] int count = getItemCount(); [FE] IllegalArgumentException [CONTEXT] b.append("is "); b.append(item.getPeriod().getClass().getName()); b.append(", but the TimeSeries is expecting an instance of "); b.append(this.timePeriodClass.getName()); b.append("."); throw new SeriesException(b.toString()); }  boolean added = false; [BUGGY] int count = getItemCount(); [BUGGY] if (count == 0) { this.data.add(item); added = true; } else { RegularTimePeriod last = getTimePeriod(getItemCount() - 1); if (item.getPeriod().compareTo(last) > 0) { this.data.add(item); added = true; } [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify TimeSeriesDataItem item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	505	505	1	
24	[BUG] [BUGGY] if (count == 0) { [FE] IllegalArgumentException [CONTEXT] b.append(item.getPeriod().getClass().getName()); b.append(", but the TimeSeries is expecting an instance of "); b.append(this.timePeriodClass.getName()); b.append("."); throw new SeriesException(b.toString()); }  boolean added = false; int count = getItemCount(); [BUGGY] if (count == 0) { [BUGGY] this.data.add(item); added = true; } else { RegularTimePeriod last = getTimePeriod(getItemCount() - 1); if (item.getPeriod().compareTo(last) > 0) { this.data.add(item); added = true; } else { [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify TimeSeriesDataItem item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	506	506	1	
25	[BUG] [BUGGY] this.data.add(item); [FE] IllegalArgumentException [CONTEXT] b.append(", but the TimeSeries is expecting an instance of "); b.append(this.timePeriodClass.getName()); b.append("."); throw new SeriesException(b.toString()); }  boolean added = false; int count = getItemCount(); if (count == 0) { [BUGGY] this.data.add(item); [BUGGY] added = true; } else { RegularTimePeriod last = getTimePeriod(getItemCount() - 1); if (item.getPeriod().compareTo(last) > 0) { this.data.add(item); added = true; } else { int index = Collections.binarySearch(this.data, item); [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify TimeSeriesDataItem item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	507	507	1	
26	[BUG] [BUGGY] added = true; [FE] IllegalArgumentException [CONTEXT] b.append(this.timePeriodClass.getName()); b.append("."); throw new SeriesException(b.toString()); }  boolean added = false; int count = getItemCount(); if (count == 0) { this.data.add(item); [BUGGY] added = true; [BUGGY] } else { RegularTimePeriod last = getTimePeriod(getItemCount() - 1); if (item.getPeriod().compareTo(last) > 0) { this.data.add(item); added = true; } else { int index = Collections.binarySearch(this.data, item); if (index < 0) { [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify TimeSeriesDataItem item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	508	508	1	
27	[BUG] [BUGGY] RegularTimePeriod last = getTimePeriod(getItemCount() - 1); [FE] IllegalArgumentException [CONTEXT] if (count == 0) { this.data.add(item); added = true; } else { [BUGGY] RegularTimePeriod last = getTimePeriod(getItemCount() - 1); [BUGGY] if (item.getPeriod().compareTo(last) > 0) { this.data.add(item); added = true; } else { int index = Collections.binarySearch(this.data, item); if (index < 0) { this.data.add(-index - 1, item); added = true; } [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify TimeSeriesDataItem item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	511	511	1	
28	[BUG] [BUGGY] if (item.getPeriod().compareTo(last) > 0) { [FE] IllegalArgumentException [CONTEXT] if (count == 0) { this.data.add(item); added = true; } else { RegularTimePeriod last = getTimePeriod(getItemCount() - 1); [BUGGY] if (item.getPeriod().compareTo(last) > 0) { [BUGGY] this.data.add(item); added = true; } else { int index = Collections.binarySearch(this.data, item); if (index < 0) { this.data.add(-index - 1, item); added = true; } else { [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify TimeSeriesDataItem item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	512	512	1	
29	[BUG] [BUGGY] this.data.add(item); [FE] IllegalArgumentException [CONTEXT] if (count == 0) { this.data.add(item); added = true; } else { RegularTimePeriod last = getTimePeriod(getItemCount() - 1); if (item.getPeriod().compareTo(last) > 0) { [BUGGY] this.data.add(item); [BUGGY] added = true; } else { int index = Collections.binarySearch(this.data, item); if (index < 0) { this.data.add(-index - 1, item); added = true; } else { StringBuffer b = new StringBuffer(); [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify TimeSeriesDataItem item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	513	513	1	
30	[BUG] [BUGGY] added = true; [FE] IllegalArgumentException [CONTEXT] if (count == 0) { this.data.add(item); added = true; } else { RegularTimePeriod last = getTimePeriod(getItemCount() - 1); if (item.getPeriod().compareTo(last) > 0) { this.data.add(item); [BUGGY] added = true; [BUGGY] } else { int index = Collections.binarySearch(this.data, item); if (index < 0) { this.data.add(-index - 1, item); added = true; } else { StringBuffer b = new StringBuffer(); b.append("You are attempting to add an observation for "); [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify TimeSeriesDataItem item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	514	514	1	
31	[BUG] [BUGGY] if (added) { [FE] IllegalArgumentException [CONTEXT] b.append("You are attempting to add an observation for "); b.append("the time period "); b.append(item.getPeriod().toString()); b.append(" but the series already contains an observation"); b.append(" for that time period. Duplicates are not "); b.append("permitted.Try using the addOrUpdate() method."); throw new SeriesException(b.toString()); } } } [BUGGY] if (added) { [BUGGY]  if (getItemCount() > this.maximumItemCount) { this.data.remove(0); } removeAgedItems(false);// remove old items if necessary, but   if (notify) { fireSeriesChanged(); [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify TimeSeriesDataItem item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	534	534	1	
32	[BUG] [BUGGY] if (getItemCount() > this.maximumItemCount) { [FE] IllegalArgumentException [CONTEXT] b.append(item.getPeriod().toString()); b.append(" but the series already contains an observation"); b.append(" for that time period. Duplicates are not "); b.append("permitted.Try using the addOrUpdate() method."); throw new SeriesException(b.toString()); } } } if (added) {  [BUGGY] if (getItemCount() > this.maximumItemCount) { [BUGGY] this.data.remove(0); } removeAgedItems(false);// remove old items if necessary, but   if (notify) { fireSeriesChanged(); } } [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify TimeSeriesDataItem item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	536	536	1	
33	[BUG] [BUGGY] removeAgedItems(false);// remove old items if necessary, but     // don't notify anyone, because that     // happens next anyway... [FE] IllegalArgumentException [CONTEXT] throw new SeriesException(b.toString()); } } } if (added) {  if (getItemCount() > this.maximumItemCount) { this.data.remove(0); } [BUGGY] removeAgedItems(false);// remove old items if necessary, but                   // don't notify anyone, because that                   // happens next anyway... [BUGGY]   if (notify) { fireSeriesChanged(); } } } [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify TimeSeriesDataItem item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	
34	[BUG] [BUGGY] if (notify) { [FE] IllegalArgumentException [CONTEXT] } if (added) {  if (getItemCount() > this.maximumItemCount) { this.data.remove(0); } removeAgedItems(false);// remove old items if necessary, but   [BUGGY] if (notify) { [BUGGY] fireSeriesChanged(); } } } [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify TimeSeriesDataItem item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	543	543	1	
35	[BUG] [BUGGY] fireSeriesChanged(); [FE] IllegalArgumentException [CONTEXT] if (added) {  if (getItemCount() > this.maximumItemCount) { this.data.remove(0); } removeAgedItems(false);// remove old items if necessary, but   if (notify) { [BUGGY] fireSeriesChanged(); [BUGGY] } } } [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  TimeSeriesDataItem item boolean notify [VARIABLES] StringBuffer b boolean added notify TimeSeriesDataItem item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod last long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	544	544	1	
37	[BUG] [BUGGY] add(period, value, true); [FE] IllegalArgumentException [CONTEXT] public void add(RegularTimePeriod period, Number value) {  [BUGGY] add(period, value, true); [BUGGY] } [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  RegularTimePeriod period Number value [VARIABLES] boolean Number value Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod period long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	586	586	1	
38	[BUG] [BUGGY] } [FE] IllegalArgumentException [CONTEXT] public void add(RegularTimePeriod period, Number value) {  add(period, value, true); [BUGGY] } [BUGGY]  [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  RegularTimePeriod period Number value [VARIABLES] boolean Number value Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod period long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	587	587	1	
39	[BUG] [BUGGY] TimeSeriesDataItem item = new TimeSeriesDataItem(period, value); [FE] IllegalArgumentException [CONTEXT] public void add(RegularTimePeriod period, Number value, boolean notify) {  [BUGGY] TimeSeriesDataItem item = new TimeSeriesDataItem(period, value); [BUGGY] add(item, notify); } [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  RegularTimePeriod period Number value boolean notify [VARIABLES] boolean notify Number value TimeSeriesDataItem item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod period long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	600	600	1	
40	[BUG] [BUGGY] add(item, notify); [FE] IllegalArgumentException [CONTEXT] public void add(RegularTimePeriod period, Number value, boolean notify) {  TimeSeriesDataItem item = new TimeSeriesDataItem(period, value); [BUGGY] add(item, notify); [BUGGY] } [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  RegularTimePeriod period Number value boolean notify [VARIABLES] boolean notify Number value TimeSeriesDataItem item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod period long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	601	601	1	
41	[BUG] [BUGGY] } [FE] IllegalArgumentException [CONTEXT] public void add(RegularTimePeriod period, Number value, boolean notify) {  TimeSeriesDataItem item = new TimeSeriesDataItem(period, value); add(item, notify); [BUGGY] } [BUGGY]  [CLASS] TimeSeries [METHOD] add [RETURN_TYPE] void  RegularTimePeriod period Number value boolean notify [VARIABLES] boolean notify Number value TimeSeriesDataItem item Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range RegularTimePeriod period long maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	602	602	1	
42	[BUG] [BUGGY] if (getItemCount() > 1) { [FE] IllegalArgumentException [CONTEXT] public void removeAgedItems(boolean notify) {   [BUGGY] if (getItemCount() > 1) { [BUGGY] long latest = getTimePeriod(getItemCount() - 1).getSerialIndex(); boolean removed = false; while ((latest - getTimePeriod(0).getSerialIndex()) > this.maximumItemAge) { this.data.remove(0); removed = true; } if (removed && notify) { fireSeriesChanged(); } [CLASS] TimeSeries [METHOD] removeAgedItems [RETURN_TYPE] void  boolean notify [VARIABLES] Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range boolean notify removed long latest maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	738	738	1	
43	[BUG] [BUGGY] long latest = getTimePeriod(getItemCount() - 1).getSerialIndex(); [FE] IllegalArgumentException [CONTEXT] public void removeAgedItems(boolean notify) {   if (getItemCount() > 1) { [BUGGY] long latest = getTimePeriod(getItemCount() - 1).getSerialIndex(); [BUGGY] boolean removed = false; while ((latest - getTimePeriod(0).getSerialIndex()) > this.maximumItemAge) { this.data.remove(0); removed = true; } if (removed && notify) { fireSeriesChanged(); } } [CLASS] TimeSeries [METHOD] removeAgedItems [RETURN_TYPE] void  boolean notify [VARIABLES] Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range boolean notify removed long latest maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	739	739	1	
44	[BUG] [BUGGY] boolean removed = false; [FE] IllegalArgumentException [CONTEXT] public void removeAgedItems(boolean notify) {   if (getItemCount() > 1) { long latest = getTimePeriod(getItemCount() - 1).getSerialIndex(); [BUGGY] boolean removed = false; [BUGGY] while ((latest - getTimePeriod(0).getSerialIndex()) > this.maximumItemAge) { this.data.remove(0); removed = true; } if (removed && notify) { fireSeriesChanged(); } } } [CLASS] TimeSeries [METHOD] removeAgedItems [RETURN_TYPE] void  boolean notify [VARIABLES] Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range boolean notify removed long latest maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	740	740	1	
45	[BUG] [BUGGY] > this.maximumItemAge) { [FE] IllegalArgumentException [CONTEXT] public void removeAgedItems(boolean notify) {   if (getItemCount() > 1) { long latest = getTimePeriod(getItemCount() - 1).getSerialIndex(); boolean removed = false; while ((latest - getTimePeriod(0).getSerialIndex()) [BUGGY] > this.maximumItemAge) { [BUGGY] this.data.remove(0); removed = true; } if (removed && notify) { fireSeriesChanged(); } } } [CLASS] TimeSeries [METHOD] removeAgedItems [RETURN_TYPE] void  boolean notify [VARIABLES] Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range boolean notify removed long latest maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	742	742	1	
46	[BUG] [BUGGY] if (removed && notify) { [FE] IllegalArgumentException [CONTEXT]   if (getItemCount() > 1) { long latest = getTimePeriod(getItemCount() - 1).getSerialIndex(); boolean removed = false; while ((latest - getTimePeriod(0).getSerialIndex()) > this.maximumItemAge) { this.data.remove(0); removed = true; } [BUGGY] if (removed && notify) { [BUGGY] fireSeriesChanged(); } } } [CLASS] TimeSeries [METHOD] removeAgedItems [RETURN_TYPE] void  boolean notify [VARIABLES] Class timePeriodClass List data String DEFAULT_DOMAIN_DESCRIPTION DEFAULT_RANGE_DESCRIPTION description domain old range boolean notify removed long latest maximumItemAge periods serialVersionUID int count i index maximum maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	746	746	1	
